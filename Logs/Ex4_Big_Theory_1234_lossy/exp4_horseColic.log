 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: '6453d16c-40dd-456f-8c60-18605a9c7813_convertdb.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Database :: 
 * Type:		FIMI database
 * File:		horseColic.dat
 * Scanning file:	in progress... * Scanning file: done                       
 * Database:	368 rows, maximal 23 columns
 * 		has bin sizes: no
 * 		has transaction id's: no
 * Reading database:	in progress... * Reading database:	done          

 * Processing Data:  * Processing Data: Translating Forward * Processing Data: Sorting within Rows * Processing Data: Writing Data              ** Writing FIC database to file
 * File:		/home/arcchitjain/Documents/Mistle/Data/horseColic.db
** Finished writing database.

 * Processing Data: Finished                  

 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/

Task `datatrans`, command `convertdb` finished. This took 0 seconds.

 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: '9c994667-5894-4a33-a3eb-3173c4e3c357_analysedb.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Database :: 
 * File:		horseColic.db
 * Database:		368t 368r, 6539i, 37880.73bits
 * 			pruned below support 0, maximum set length 23
 * Alphabet:		83 items
 * Internal datatype:	uint16 value arrays

** Analysing database
 * Output File:	horseColic.db.analysis.txt
 * Writing analysis:	in progress... * Writing analysis:	done          


 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/analysedb/

Task `main`, command `analysedb` finished. This took 0 seconds.

 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: '4a81f7fb-f74a-48cc-8f7a-47184bc8ec90_classifycompress.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Database :: 
 * File:		horseColic.db
 * Database:		368t 368r, 6539i, 37880.73bits
 * 			pruned below support 0, maximum set length 23
 * Alphabet:		83 items
 * Internal datatype:	32bit bitmap array

** Classification ::
 * Seed:				1234
 * numFolds:			10
 * Split database:		creating 10 partitions
 * Creating:			fold 1
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 1
** Writing FIC database to file
 * File:		train5.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-12d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		28026
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(81a,0u,3587,20395,1176,21570)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (281) ? c/s  		 | Progress:		2% (561) ? c/s  		 / Progress:		3% (841) ? c/s  		 - Progress:		4% (1122) ? c/s  		 \ Progress:		5% (1402) ? c/s  		 | Progress:		6% (1682) ? c/s  		 / Progress:		7% (1962) ? c/s  		 - Progress:		8% (2243) ? c/s  		 \ Progress:		9% (2523) ? c/s  		 | Progress:		10% (2803) ? c/s  		 / Progress:		11% (3083) ? c/s  		 - Progress:		12% (3364) ? c/s  		 \ Progress:		13% (3644) ? c/s  		 | Progress:		14% (3924) ? c/s  		 / Progress:		15% (4204) ? c/s  		 - Progress:		16% (4485) ? c/s  		 \ Progress:		17% (4765) ? c/s  		 \ Progress:		17% (5000) 5000 c/s (0s +/- 4s)                        | Progress:		18% (5045) 5000 c/s (0s +/- 4s)                        / Progress:		19% (5325) 5000 c/s (0s +/- 4s)                        - Progress:		20% (5606) 5000 c/s (0s +/- 4s)                        \ Progress:		21% (5886) 5000 c/s (0s +/- 4s)                        | Progress:		22% (6166) 5000 c/s (0s +/- 4s)                        / Progress:		23% (6446) 5000 c/s (0s +/- 4s)                        - Progress:		24% (6727) 5000 c/s (0s +/- 4s)                        \ Progress:		25% (7007) 5000 c/s (0s +/- 4s)                        | Progress:		26% (7287) 5000 c/s (0s +/- 4s)                        / Progress:		27% (7568) 5000 c/s (0s +/- 4s)                        - Progress:		28% (7848) 5000 c/s (0s +/- 4s)                        \ Progress:		29% (8128) 5000 c/s (0s +/- 3s)                        | Progress:		30% (8408) 5000 c/s (0s +/- 3s)                        / Progress:		31% (8689) 5000 c/s (0s +/- 3s)                        - Progress:		32% (8969) 5000 c/s (0s +/- 3s)                        \ Progress:		33% (9249) 5000 c/s (0s +/- 3s)                        | Progress:		34% (9529) 5000 c/s (0s +/- 3s)                        / Progress:		35% (9810) 5000 c/s (0s +/- 3s)                        - Progress:		36% (10090) 5000 c/s (0s +/- 3s)                       \ Progress:		37% (10370) 5000 c/s (0s +/- 3s)                       | Progress:		38% (10650) 5000 c/s (0s +/- 3s)                       / Progress:		39% (10931) 5000 c/s (0s +/- 3s)                       - Progress:		40% (11211) 5000 c/s (0s +/- 3s)                       \ Progress:		41% (11491) 5000 c/s (0s +/- 3s)                       | Progress:		42% (11771) 5000 c/s (0s +/- 3s)                       / Progress:		43% (12052) 5000 c/s (0s +/- 3s)                       - Progress:		44% (12332) 5000 c/s (0s +/- 3s)                       \ Progress:		45% (12612) 5000 c/s (0s +/- 3s)                       | Progress:		46% (12892) 5000 c/s (0s +/- 3s)                       / Progress:		47% (13173) 5000 c/s (0s +/- 2s)                       - Progress:		48% (13453) 5000 c/s (0s +/- 2s)                       \ Progress:		49% (13733) 5000 c/s (0s +/- 2s)                       | Progress:		50% (14013) 5000 c/s (0s +/- 2s)                       / Progress:		51% (14294) 5000 c/s (0s +/- 2s)                       - Progress:		52% (14574) 5000 c/s (0s +/- 2s)                       \ Progress:		53% (14854) 5000 c/s (0s +/- 2s)                       | Progress:		54% (15135) 5000 c/s (0s +/- 2s)                       / Progress:		55% (15415) 5000 c/s (0s +/- 2s)                       - Progress:		56% (15695) 5000 c/s (0s +/- 2s)                       \ Progress:		57% (15975) 5000 c/s (0s +/- 2s)                       | Progress:		58% (16256) 5000 c/s (0s +/- 2s)                       / Progress:		59% (16536) 5000 c/s (0s +/- 2s)                       - Progress:		60% (16816) 5000 c/s (0s +/- 2s)                       \ Progress:		61% (17096) 5000 c/s (0s +/- 2s)                       | Progress:		62% (17377) 5000 c/s (0s +/- 2s)                       / Progress:		63% (17657) 5000 c/s (0s +/- 2s)                       - Progress:		64% (17937) 5000 c/s (0s +/- 2s)                       \ Progress:		65% (18217) 5000 c/s (0s +/- 1s)                       | Progress:		66% (18498) 5000 c/s (0s +/- 1s)                       / Progress:		67% (18778) 5000 c/s (0s +/- 1s)                       - Progress:		68% (19058) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (19338) 5000 c/s (0s +/- 1s)                       | Progress:		70% (19619) 5000 c/s (0s +/- 1s)                       / Progress:		71% (19899) 5000 c/s (0s +/- 1s)                       - Progress:		72% (20179) 5000 c/s (0s +/- 1s)                       \ Progress:		73% (20459) 5000 c/s (0s +/- 1s)                       | Progress:		74% (20740) 5000 c/s (0s +/- 1s)                       / Progress:		75% (21020) 5000 c/s (0s +/- 1s)                       - Progress:		76% (21300) 5000 c/s (0s +/- 1s)                       \ Progress:		77% (21581) 5000 c/s (0s +/- 1s)                       | Progress:		78% (21861) 5000 c/s (0s +/- 1s)                       / Progress:		79% (22141) 5000 c/s (0s +/- 1s)                       - Progress:		80% (22421) 5000 c/s (0s +/- 1s)                       \ Progress:		81% (22702) 5000 c/s (0s +/- 1s)                       | Progress:		82% (22982) 5000 c/s (0s +/- 1s)                       / Progress:		83% (23262) 5000 c/s (0s +/- <1s)                      - Progress:		84% (23542) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (23823) 5000 c/s (0s +/- <1s)                      | Progress:		86% (24103) 5000 c/s (0s +/- <1s)                      / Progress:		87% (24383) 5000 c/s (0s +/- <1s)                      - Progress:		88% (24663) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (24944) 5000 c/s (0s +/- <1s)                      | Progress:		90% (25224) 5000 c/s (0s +/- <1s)                      / Progress:		91% (25504) 5000 c/s (0s +/- <1s)                      - Progress:		92% (25784) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (26065) 5000 c/s (0s +/- <1s)                      | Progress:		94% (26345) 5000 c/s (0s +/- <1s)                      / Progress:		95% (26625) 5000 c/s (0s +/- <1s)                      - Progress:		96% (26905) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (27186) 5000 c/s (0s +/- <1s)                      | Progress:		98% (27466) 5000 c/s (0s +/- <1s)                      / Progress:		99% (27746) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.193029 seconds.		
 * Result:		(80a,70u,1868,13025,2842,15867)
** Writing FIC database to file
 * File:		train14.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-12d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		9813
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(80a,0u,1994,11283,1148,12431)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (99) ? c/s  		 | Progress:		2% (197) ? c/s  		 / Progress:		3% (295) ? c/s  		 - Progress:		4% (393) ? c/s  		 \ Progress:		5% (491) ? c/s  		 | Progress:		6% (589) ? c/s  		 / Progress:		7% (687) ? c/s  		 - Progress:		8% (786) ? c/s  		 \ Progress:		9% (884) ? c/s  		 | Progress:		10% (982) ? c/s  		 / Progress:		11% (1080) ? c/s  		 - Progress:		12% (1178) ? c/s  		 \ Progress:		13% (1276) ? c/s  		 | Progress:		14% (1374) ? c/s  		 / Progress:		15% (1472) ? c/s  		 - Progress:		16% (1571) ? c/s  		 \ Progress:		17% (1669) ? c/s  		 | Progress:		18% (1767) ? c/s  		 / Progress:		19% (1865) ? c/s  		 - Progress:		20% (1963) ? c/s  		 \ Progress:		21% (2061) ? c/s  		 | Progress:		22% (2159) ? c/s  		 / Progress:		23% (2257) ? c/s  		 - Progress:		24% (2356) ? c/s  		 \ Progress:		25% (2454) ? c/s  		 | Progress:		26% (2552) ? c/s  		 / Progress:		27% (2650) ? c/s  		 - Progress:		28% (2748) ? c/s  		 \ Progress:		29% (2846) ? c/s  		 | Progress:		30% (2944) ? c/s  		 / Progress:		31% (3043) ? c/s  		 - Progress:		32% (3141) ? c/s  		 \ Progress:		33% (3239) ? c/s  		 | Progress:		34% (3337) ? c/s  		 / Progress:		35% (3435) ? c/s  		 - Progress:		36% (3533) ? c/s  		 \ Progress:		37% (3631) ? c/s  		 | Progress:		38% (3729) ? c/s  		 / Progress:		39% (3828) ? c/s  		 - Progress:		40% (3926) ? c/s  		 \ Progress:		41% (4024) ? c/s  		 | Progress:		42% (4122) ? c/s  		 / Progress:		43% (4220) ? c/s  		 - Progress:		44% (4318) ? c/s  		 \ Progress:		45% (4416) ? c/s  		 | Progress:		46% (4514) ? c/s  		 / Progress:		47% (4613) ? c/s  		 - Progress:		48% (4711) ? c/s  		 \ Progress:		49% (4809) ? c/s  		 | Progress:		50% (4907) ? c/s  		 | Progress:		50% (5000) 5000 c/s (0s +/- <1s)                       / Progress:		51% (5005) 5000 c/s (0s +/- <1s)                       - Progress:		52% (5103) 5000 c/s (0s +/- <1s)                       \ Progress:		53% (5201) 5000 c/s (0s +/- <1s)                       | Progress:		54% (5300) 5000 c/s (0s +/- <1s)                       / Progress:		55% (5398) 5000 c/s (0s +/- <1s)                       - Progress:		56% (5496) 5000 c/s (0s +/- <1s)                       \ Progress:		57% (5594) 5000 c/s (0s +/- <1s)                       | Progress:		58% (5692) 5000 c/s (0s +/- <1s)                       / Progress:		59% (5790) 5000 c/s (0s +/- <1s)                       - Progress:		60% (5888) 5000 c/s (0s +/- <1s)                       \ Progress:		61% (5986) 5000 c/s (0s +/- <1s)                       | Progress:		62% (6085) 5000 c/s (0s +/- <1s)                       / Progress:		63% (6183) 5000 c/s (0s +/- <1s)                       - Progress:		64% (6281) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (6379) 5000 c/s (0s +/- <1s)                       | Progress:		66% (6477) 5000 c/s (0s +/- <1s)                       / Progress:		67% (6575) 5000 c/s (0s +/- <1s)                       - Progress:		68% (6673) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (6771) 5000 c/s (0s +/- <1s)                       | Progress:		70% (6870) 5000 c/s (0s +/- <1s)                       / Progress:		71% (6968) 5000 c/s (0s +/- <1s)                       - Progress:		72% (7066) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (7164) 5000 c/s (0s +/- <1s)                       | Progress:		74% (7262) 5000 c/s (0s +/- <1s)                       / Progress:		75% (7360) 5000 c/s (0s +/- <1s)                       - Progress:		76% (7458) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (7557) 5000 c/s (0s +/- <1s)                       | Progress:		78% (7655) 5000 c/s (0s +/- <1s)                       / Progress:		79% (7753) 5000 c/s (0s +/- <1s)                       - Progress:		80% (7851) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (7949) 5000 c/s (0s +/- <1s)                       | Progress:		82% (8047) 5000 c/s (0s +/- <1s)                       / Progress:		83% (8145) 5000 c/s (0s +/- <1s)                       - Progress:		84% (8243) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (8342) 5000 c/s (0s +/- <1s)                       | Progress:		86% (8440) 5000 c/s (0s +/- <1s)                       / Progress:		87% (8538) 5000 c/s (0s +/- <1s)                       - Progress:		88% (8636) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (8734) 5000 c/s (0s +/- <1s)                       | Progress:		90% (8832) 5000 c/s (0s +/- <1s)                       / Progress:		91% (8930) 5000 c/s (0s +/- <1s)                       - Progress:		92% (9028) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (9127) 5000 c/s (0s +/- <1s)                       | Progress:		94% (9225) 5000 c/s (0s +/- <1s)                       / Progress:		95% (9323) 5000 c/s (0s +/- <1s)                       - Progress:		96% (9421) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (9519) 5000 c/s (0s +/- <1s)                       | Progress:		98% (9617) 5000 c/s (0s +/- <1s)                       / Progress:		99% (9715) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.044589 seconds.		
 * Result:		(78a,38u,1146,7540,2047,9587)
 * Creating:			fold 2
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 2
** Writing FIC database to file
 * File:		train5.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-12d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		27341
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(81a,0u,3491,19858,1175,21033)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (274) ? c/s  		 | Progress:		2% (547) ? c/s  		 / Progress:		3% (821) ? c/s  		 - Progress:		4% (1094) ? c/s  		 \ Progress:		5% (1368) ? c/s  		 | Progress:		6% (1641) ? c/s  		 / Progress:		7% (1914) ? c/s  		 - Progress:		8% (2188) ? c/s  		 \ Progress:		9% (2461) ? c/s  		 | Progress:		10% (2735) ? c/s  		 / Progress:		11% (3008) ? c/s  		 - Progress:		12% (3281) ? c/s  		 \ Progress:		13% (3555) ? c/s  		 | Progress:		14% (3828) ? c/s  		 / Progress:		15% (4102) ? c/s  		 - Progress:		16% (4375) ? c/s  		 \ Progress:		17% (4648) ? c/s  		 | Progress:		18% (4922) ? c/s  		 | Progress:		18% (5000) 5000 c/s (0s +/- 4s)                        / Progress:		19% (5195) 5000 c/s (0s +/- 4s)                        - Progress:		20% (5469) 5000 c/s (0s +/- 4s)                        \ Progress:		21% (5742) 5000 c/s (0s +/- 4s)                        | Progress:		22% (6016) 5000 c/s (0s +/- 4s)                        / Progress:		23% (6289) 5000 c/s (0s +/- 4s)                        - Progress:		24% (6562) 5000 c/s (0s +/- 4s)                        \ Progress:		25% (6836) 5000 c/s (0s +/- 4s)                        | Progress:		26% (7109) 5000 c/s (0s +/- 4s)                        / Progress:		27% (7383) 5000 c/s (0s +/- 3s)                        - Progress:		28% (7656) 5000 c/s (0s +/- 3s)                        \ Progress:		29% (7929) 5000 c/s (0s +/- 3s)                        | Progress:		30% (8203) 5000 c/s (0s +/- 3s)                        / Progress:		31% (8476) 5000 c/s (0s +/- 3s)                        - Progress:		32% (8750) 5000 c/s (0s +/- 3s)                        \ Progress:		33% (9023) 5000 c/s (0s +/- 3s)                        | Progress:		34% (9296) 5000 c/s (0s +/- 3s)                        / Progress:		35% (9570) 5000 c/s (0s +/- 3s)                        - Progress:		36% (9843) 5000 c/s (0s +/- 3s)                        \ Progress:		37% (10117) 5000 c/s (0s +/- 3s)                       | Progress:		38% (10390) 5000 c/s (0s +/- 3s)                       / Progress:		39% (10663) 5000 c/s (0s +/- 3s)                       - Progress:		40% (10937) 5000 c/s (0s +/- 3s)                       \ Progress:		41% (11210) 5000 c/s (0s +/- 3s)                       | Progress:		42% (11484) 5000 c/s (0s +/- 3s)                       / Progress:		43% (11757) 5000 c/s (0s +/- 3s)                       - Progress:		44% (12031) 5000 c/s (0s +/- 3s)                       \ Progress:		45% (12304) 5000 c/s (0s +/- 3s)                       | Progress:		46% (12577) 5000 c/s (0s +/- 2s)                       / Progress:		47% (12851) 5000 c/s (0s +/- 2s)                       - Progress:		48% (13124) 5000 c/s (0s +/- 2s)                       \ Progress:		49% (13398) 5000 c/s (0s +/- 2s)                       | Progress:		50% (13671) 5000 c/s (0s +/- 2s)                       / Progress:		51% (13944) 5000 c/s (0s +/- 2s)                       - Progress:		52% (14218) 5000 c/s (0s +/- 2s)                       \ Progress:		53% (14491) 5000 c/s (0s +/- 2s)                       | Progress:		54% (14765) 5000 c/s (0s +/- 2s)                       / Progress:		55% (15038) 5000 c/s (0s +/- 2s)                       - Progress:		56% (15311) 5000 c/s (0s +/- 2s)                       \ Progress:		57% (15585) 5000 c/s (0s +/- 2s)                       | Progress:		58% (15858) 5000 c/s (0s +/- 2s)                       / Progress:		59% (16132) 5000 c/s (0s +/- 2s)                       - Progress:		60% (16405) 5000 c/s (0s +/- 2s)                       \ Progress:		61% (16679) 5000 c/s (0s +/- 2s)                       | Progress:		62% (16952) 5000 c/s (0s +/- 2s)                       / Progress:		63% (17225) 5000 c/s (0s +/- 2s)                       - Progress:		64% (17499) 5000 c/s (0s +/- 1s)                       \ Progress:		65% (17772) 5000 c/s (0s +/- 1s)                       | Progress:		66% (18046) 5000 c/s (0s +/- 1s)                       / Progress:		67% (18319) 5000 c/s (0s +/- 1s)                       - Progress:		68% (18592) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (18866) 5000 c/s (0s +/- 1s)                       | Progress:		70% (19139) 5000 c/s (0s +/- 1s)                       / Progress:		71% (19413) 5000 c/s (0s +/- 1s)                       - Progress:		72% (19686) 5000 c/s (0s +/- 1s)                       \ Progress:		73% (19959) 5000 c/s (0s +/- 1s)                       | Progress:		74% (20233) 5000 c/s (0s +/- 1s)                       / Progress:		75% (20506) 5000 c/s (0s +/- 1s)                       - Progress:		76% (20780) 5000 c/s (0s +/- 1s)                       \ Progress:		77% (21053) 5000 c/s (0s +/- 1s)                       | Progress:		78% (21326) 5000 c/s (0s +/- 1s)                       / Progress:		79% (21600) 5000 c/s (0s +/- 1s)                       - Progress:		80% (21873) 5000 c/s (0s +/- 1s)                       \ Progress:		81% (22147) 5000 c/s (0s +/- 1s)                       | Progress:		82% (22420) 5000 c/s (0s +/- <1s)                      / Progress:		83% (22694) 5000 c/s (0s +/- <1s)                      - Progress:		84% (22967) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (23240) 5000 c/s (0s +/- <1s)                      | Progress:		86% (23514) 5000 c/s (0s +/- <1s)                      / Progress:		87% (23787) 5000 c/s (0s +/- <1s)                      - Progress:		88% (24061) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (24334) 5000 c/s (0s +/- <1s)                      | Progress:		90% (24607) 5000 c/s (0s +/- <1s)                      / Progress:		91% (24881) 5000 c/s (0s +/- <1s)                      - Progress:		92% (25154) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (25428) 5000 c/s (0s +/- <1s)                      | Progress:		94% (25701) 5000 c/s (0s +/- <1s)                      / Progress:		95% (25974) 5000 c/s (0s +/- <1s)                      - Progress:		96% (26248) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (26521) 5000 c/s (0s +/- <1s)                      | Progress:		98% (26795) 5000 c/s (0s +/- <1s)                      / Progress:		99% (27068) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.223857 seconds.		
 * Result:		(78a,72u,1837,12793,2903,15695)
** Writing FIC database to file
 * File:		train14.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-12d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		9342
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(79a,0u,2085,11849,1120,12969)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (94) ? c/s  		 | Progress:		2% (187) ? c/s  		 / Progress:		3% (281) ? c/s  		 - Progress:		4% (374) ? c/s  		 \ Progress:		5% (468) ? c/s  		 | Progress:		6% (561) ? c/s  		 / Progress:		7% (654) ? c/s  		 - Progress:		8% (748) ? c/s  		 \ Progress:		9% (841) ? c/s  		 | Progress:		10% (935) ? c/s  		 / Progress:		11% (1028) ? c/s  		 - Progress:		12% (1122) ? c/s  		 \ Progress:		13% (1215) ? c/s  		 | Progress:		14% (1308) ? c/s  		 / Progress:		15% (1402) ? c/s  		 - Progress:		16% (1495) ? c/s  		 \ Progress:		17% (1589) ? c/s  		 | Progress:		18% (1682) ? c/s  		 / Progress:		19% (1775) ? c/s  		 - Progress:		20% (1869) ? c/s  		 \ Progress:		21% (1962) ? c/s  		 | Progress:		22% (2056) ? c/s  		 / Progress:		23% (2149) ? c/s  		 - Progress:		24% (2243) ? c/s  		 \ Progress:		25% (2336) ? c/s  		 | Progress:		26% (2429) ? c/s  		 / Progress:		27% (2523) ? c/s  		 - Progress:		28% (2616) ? c/s  		 \ Progress:		29% (2710) ? c/s  		 | Progress:		30% (2803) ? c/s  		 / Progress:		31% (2897) ? c/s  		 - Progress:		32% (2990) ? c/s  		 \ Progress:		33% (3083) ? c/s  		 | Progress:		34% (3177) ? c/s  		 / Progress:		35% (3270) ? c/s  		 - Progress:		36% (3364) ? c/s  		 \ Progress:		37% (3457) ? c/s  		 | Progress:		38% (3550) ? c/s  		 / Progress:		39% (3644) ? c/s  		 - Progress:		40% (3737) ? c/s  		 \ Progress:		41% (3831) ? c/s  		 | Progress:		42% (3924) ? c/s  		 / Progress:		43% (4018) ? c/s  		 - Progress:		44% (4111) ? c/s  		 \ Progress:		45% (4204) ? c/s  		 | Progress:		46% (4298) ? c/s  		 / Progress:		47% (4391) ? c/s  		 - Progress:		48% (4485) ? c/s  		 \ Progress:		49% (4578) ? c/s  		 | Progress:		50% (4671) ? c/s  		 / Progress:		51% (4765) ? c/s  		 - Progress:		52% (4858) ? c/s  		 \ Progress:		53% (4952) ? c/s  		 \ Progress:		53% (5000) 5000 c/s (0s +/- <1s)                       | Progress:		54% (5045) 5000 c/s (0s +/- <1s)                       / Progress:		55% (5139) 5000 c/s (0s +/- <1s)                       - Progress:		56% (5232) 5000 c/s (0s +/- <1s)                       \ Progress:		57% (5325) 5000 c/s (0s +/- <1s)                       | Progress:		58% (5419) 5000 c/s (0s +/- <1s)                       / Progress:		59% (5512) 5000 c/s (0s +/- <1s)                       - Progress:		60% (5606) 5000 c/s (0s +/- <1s)                       \ Progress:		61% (5699) 5000 c/s (0s +/- <1s)                       | Progress:		62% (5793) 5000 c/s (0s +/- <1s)                       / Progress:		63% (5886) 5000 c/s (0s +/- <1s)                       - Progress:		64% (5979) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (6073) 5000 c/s (0s +/- <1s)                       | Progress:		66% (6166) 5000 c/s (0s +/- <1s)                       / Progress:		67% (6260) 5000 c/s (0s +/- <1s)                       - Progress:		68% (6353) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (6446) 5000 c/s (0s +/- <1s)                       | Progress:		70% (6540) 5000 c/s (0s +/- <1s)                       / Progress:		71% (6633) 5000 c/s (0s +/- <1s)                       - Progress:		72% (6727) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (6820) 5000 c/s (0s +/- <1s)                       | Progress:		74% (6914) 5000 c/s (0s +/- <1s)                       / Progress:		75% (7007) 5000 c/s (0s +/- <1s)                       - Progress:		76% (7100) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (7194) 5000 c/s (0s +/- <1s)                       | Progress:		78% (7287) 5000 c/s (0s +/- <1s)                       / Progress:		79% (7381) 5000 c/s (0s +/- <1s)                       - Progress:		80% (7474) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (7568) 5000 c/s (0s +/- <1s)                       | Progress:		82% (7661) 5000 c/s (0s +/- <1s)                       / Progress:		83% (7754) 5000 c/s (0s +/- <1s)                       - Progress:		84% (7848) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (7941) 5000 c/s (0s +/- <1s)                       | Progress:		86% (8035) 5000 c/s (0s +/- <1s)                       / Progress:		87% (8128) 5000 c/s (0s +/- <1s)                       - Progress:		88% (8221) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (8315) 5000 c/s (0s +/- <1s)                       | Progress:		90% (8408) 5000 c/s (0s +/- <1s)                       / Progress:		91% (8502) 5000 c/s (0s +/- <1s)                       - Progress:		92% (8595) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (8689) 5000 c/s (0s +/- <1s)                       | Progress:		94% (8782) 5000 c/s (0s +/- <1s)                       / Progress:		95% (8875) 5000 c/s (0s +/- <1s)                       - Progress:		96% (8969) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (9062) 5000 c/s (0s +/- <1s)                       | Progress:		98% (9156) 5000 c/s (0s +/- <1s)                       / Progress:		99% (9249) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.048453 seconds.		
 * Result:		(78a,38u,1236,8174,2007,10181)
 * Creating:			fold 3
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 3
** Writing FIC database to file
 * File:		train5.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-12d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		28018
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(80a,0u,3520,19984,1153,21137)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (281) ? c/s  		 | Progress:		2% (561) ? c/s  		 / Progress:		3% (841) ? c/s  		 - Progress:		4% (1121) ? c/s  		 \ Progress:		5% (1401) ? c/s  		 | Progress:		6% (1682) ? c/s  		 / Progress:		7% (1962) ? c/s  		 - Progress:		8% (2242) ? c/s  		 \ Progress:		9% (2522) ? c/s  		 | Progress:		10% (2802) ? c/s  		 / Progress:		11% (3082) ? c/s  		 - Progress:		12% (3363) ? c/s  		 \ Progress:		13% (3643) ? c/s  		 | Progress:		14% (3923) ? c/s  		 / Progress:		15% (4203) ? c/s  		 - Progress:		16% (4483) ? c/s  		 \ Progress:		17% (4764) ? c/s  		 \ Progress:		17% (5000) 5000 c/s (0s +/- 4s)                        | Progress:		18% (5044) 5000 c/s (0s +/- 4s)                        / Progress:		19% (5324) 5000 c/s (0s +/- 4s)                        - Progress:		20% (5604) 5000 c/s (0s +/- 4s)                        \ Progress:		21% (5884) 5000 c/s (0s +/- 4s)                        | Progress:		22% (6164) 5000 c/s (0s +/- 4s)                        / Progress:		23% (6445) 5000 c/s (0s +/- 4s)                        - Progress:		24% (6725) 5000 c/s (0s +/- 4s)                        \ Progress:		25% (7005) 5000 c/s (0s +/- 4s)                        | Progress:		26% (7285) 5000 c/s (0s +/- 4s)                        / Progress:		27% (7565) 5000 c/s (0s +/- 4s)                        - Progress:		28% (7846) 5000 c/s (0s +/- 4s)                        \ Progress:		29% (8126) 5000 c/s (0s +/- 3s)                        | Progress:		30% (8406) 5000 c/s (0s +/- 3s)                        / Progress:		31% (8686) 5000 c/s (0s +/- 3s)                        - Progress:		32% (8966) 5000 c/s (0s +/- 3s)                        \ Progress:		33% (9246) 5000 c/s (0s +/- 3s)                        | Progress:		34% (9527) 5000 c/s (0s +/- 3s)                        / Progress:		35% (9807) 5000 c/s (0s +/- 3s)                        - Progress:		36% (10087) 5000 c/s (0s +/- 3s)                       \ Progress:		37% (10367) 5000 c/s (0s +/- 3s)                       | Progress:		38% (10647) 5000 c/s (0s +/- 3s)                       / Progress:		39% (10928) 5000 c/s (0s +/- 3s)                       - Progress:		40% (11208) 5000 c/s (0s +/- 3s)                       \ Progress:		41% (11488) 5000 c/s (0s +/- 3s)                       | Progress:		42% (11768) 5000 c/s (0s +/- 3s)                       / Progress:		43% (12048) 5000 c/s (0s +/- 3s)                       - Progress:		44% (12328) 5000 c/s (0s +/- 3s)                       \ Progress:		45% (12609) 5000 c/s (0s +/- 3s)                       | Progress:		46% (12889) 5000 c/s (0s +/- 3s)                       / Progress:		47% (13169) 5000 c/s (0s +/- 2s)                       - Progress:		48% (13449) 5000 c/s (0s +/- 2s)                       \ Progress:		49% (13729) 5000 c/s (0s +/- 2s)                       | Progress:		50% (14009) 5000 c/s (0s +/- 2s)                       / Progress:		51% (14290) 5000 c/s (0s +/- 2s)                       - Progress:		52% (14570) 5000 c/s (0s +/- 2s)                       \ Progress:		53% (14850) 5000 c/s (0s +/- 2s)                       | Progress:		54% (15130) 5000 c/s (0s +/- 2s)                       / Progress:		55% (15410) 5000 c/s (0s +/- 2s)                       - Progress:		56% (15691) 5000 c/s (0s +/- 2s)                       \ Progress:		57% (15971) 5000 c/s (0s +/- 2s)                       | Progress:		58% (16251) 5000 c/s (0s +/- 2s)                       / Progress:		59% (16531) 5000 c/s (0s +/- 2s)                       - Progress:		60% (16811) 5000 c/s (0s +/- 2s)                       \ Progress:		61% (17091) 5000 c/s (0s +/- 2s)                       | Progress:		62% (17372) 5000 c/s (0s +/- 2s)                       / Progress:		63% (17652) 5000 c/s (0s +/- 2s)                       - Progress:		64% (17932) 5000 c/s (0s +/- 2s)                       \ Progress:		65% (18212) 5000 c/s (0s +/- 1s)                       | Progress:		66% (18492) 5000 c/s (0s +/- 1s)                       / Progress:		67% (18773) 5000 c/s (0s +/- 1s)                       - Progress:		68% (19053) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (19333) 5000 c/s (0s +/- 1s)                       | Progress:		70% (19613) 5000 c/s (0s +/- 1s)                       / Progress:		71% (19893) 5000 c/s (0s +/- 1s)                       - Progress:		72% (20173) 5000 c/s (0s +/- 1s)                       \ Progress:		73% (20454) 5000 c/s (0s +/- 1s)                       | Progress:		74% (20734) 5000 c/s (0s +/- 1s)                       / Progress:		75% (21014) 5000 c/s (0s +/- 1s)                       - Progress:		76% (21294) 5000 c/s (0s +/- 1s)                       \ Progress:		77% (21574) 5000 c/s (0s +/- 1s)                       | Progress:		78% (21855) 5000 c/s (0s +/- 1s)                       / Progress:		79% (22135) 5000 c/s (0s +/- 1s)                       - Progress:		80% (22415) 5000 c/s (0s +/- 1s)                       \ Progress:		81% (22695) 5000 c/s (0s +/- 1s)                       | Progress:		82% (22975) 5000 c/s (0s +/- 1s)                       / Progress:		83% (23255) 5000 c/s (0s +/- <1s)                      - Progress:		84% (23536) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (23816) 5000 c/s (0s +/- <1s)                      | Progress:		86% (24096) 5000 c/s (0s +/- <1s)                      / Progress:		87% (24376) 5000 c/s (0s +/- <1s)                      - Progress:		88% (24656) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (24937) 5000 c/s (0s +/- <1s)                      | Progress:		90% (25217) 5000 c/s (0s +/- <1s)                      / Progress:		91% (25497) 5000 c/s (0s +/- <1s)                      - Progress:		92% (25777) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (26057) 5000 c/s (0s +/- <1s)                      | Progress:		94% (26337) 5000 c/s (0s +/- <1s)                      / Progress:		95% (26618) 5000 c/s (0s +/- <1s)                      - Progress:		96% (26898) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (27178) 5000 c/s (0s +/- <1s)                      | Progress:		98% (27458) 5000 c/s (0s +/- <1s)                      / Progress:		99% (27738) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.209450 seconds.		
 * Result:		(76a,73u,1803,12495,2878,15373)
** Writing FIC database to file
 * File:		train14.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-12d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		8300
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(80a,0u,2066,11759,1140,12898)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (83) ? c/s  		 | Progress:		2% (166) ? c/s  		 / Progress:		3% (249) ? c/s  		 - Progress:		4% (332) ? c/s  		 \ Progress:		5% (415) ? c/s  		 | Progress:		6% (498) ? c/s  		 / Progress:		7% (581) ? c/s  		 - Progress:		8% (664) ? c/s  		 \ Progress:		9% (747) ? c/s  		 | Progress:		10% (830) ? c/s  		 / Progress:		11% (913) ? c/s  		 - Progress:		12% (996) ? c/s  		 \ Progress:		13% (1079) ? c/s  		 | Progress:		14% (1162) ? c/s  		 / Progress:		15% (1245) ? c/s  		 - Progress:		16% (1328) ? c/s  		 \ Progress:		17% (1411) ? c/s  		 | Progress:		18% (1494) ? c/s  		 / Progress:		19% (1577) ? c/s  		 - Progress:		20% (1660) ? c/s  		 \ Progress:		21% (1743) ? c/s  		 | Progress:		22% (1826) ? c/s  		 / Progress:		23% (1909) ? c/s  		 - Progress:		24% (1992) ? c/s  		 \ Progress:		25% (2075) ? c/s  		 | Progress:		26% (2158) ? c/s  		 / Progress:		27% (2241) ? c/s  		 - Progress:		28% (2324) ? c/s  		 \ Progress:		29% (2407) ? c/s  		 | Progress:		30% (2490) ? c/s  		 / Progress:		31% (2573) ? c/s  		 - Progress:		32% (2656) ? c/s  		 \ Progress:		33% (2739) ? c/s  		 | Progress:		34% (2822) ? c/s  		 / Progress:		35% (2905) ? c/s  		 - Progress:		36% (2988) ? c/s  		 \ Progress:		37% (3071) ? c/s  		 | Progress:		38% (3154) ? c/s  		 / Progress:		39% (3237) ? c/s  		 - Progress:		40% (3320) ? c/s  		 \ Progress:		41% (3403) ? c/s  		 | Progress:		42% (3486) ? c/s  		 / Progress:		43% (3569) ? c/s  		 - Progress:		44% (3652) ? c/s  		 \ Progress:		45% (3735) ? c/s  		 | Progress:		46% (3818) ? c/s  		 / Progress:		47% (3901) ? c/s  		 - Progress:		48% (3984) ? c/s  		 \ Progress:		49% (4067) ? c/s  		 | Progress:		50% (4150) ? c/s  		 / Progress:		51% (4233) ? c/s  		 - Progress:		52% (4316) ? c/s  		 \ Progress:		53% (4399) ? c/s  		 | Progress:		54% (4482) ? c/s  		 / Progress:		55% (4565) ? c/s  		 - Progress:		56% (4648) ? c/s  		 \ Progress:		57% (4731) ? c/s  		 | Progress:		58% (4814) ? c/s  		 / Progress:		59% (4897) ? c/s  		 - Progress:		60% (4980) ? c/s  		 - Progress:		60% (5000) 5000 c/s (0s +/- <1s)                       \ Progress:		61% (5063) 5000 c/s (0s +/- <1s)                       | Progress:		62% (5146) 5000 c/s (0s +/- <1s)                       / Progress:		63% (5229) 5000 c/s (0s +/- <1s)                       - Progress:		64% (5312) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (5395) 5000 c/s (0s +/- <1s)                       | Progress:		66% (5478) 5000 c/s (0s +/- <1s)                       / Progress:		67% (5561) 5000 c/s (0s +/- <1s)                       - Progress:		68% (5644) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (5727) 5000 c/s (0s +/- <1s)                       | Progress:		70% (5810) 5000 c/s (0s +/- <1s)                       / Progress:		71% (5893) 5000 c/s (0s +/- <1s)                       - Progress:		72% (5976) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (6059) 5000 c/s (0s +/- <1s)                       | Progress:		74% (6142) 5000 c/s (0s +/- <1s)                       / Progress:		75% (6225) 5000 c/s (0s +/- <1s)                       - Progress:		76% (6308) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (6391) 5000 c/s (0s +/- <1s)                       | Progress:		78% (6474) 5000 c/s (0s +/- <1s)                       / Progress:		79% (6557) 5000 c/s (0s +/- <1s)                       - Progress:		80% (6640) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (6723) 5000 c/s (0s +/- <1s)                       | Progress:		82% (6806) 5000 c/s (0s +/- <1s)                       / Progress:		83% (6889) 5000 c/s (0s +/- <1s)                       - Progress:		84% (6972) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (7055) 5000 c/s (0s +/- <1s)                       | Progress:		86% (7138) 5000 c/s (0s +/- <1s)                       / Progress:		87% (7221) 5000 c/s (0s +/- <1s)                       - Progress:		88% (7304) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (7387) 5000 c/s (0s +/- <1s)                       | Progress:		90% (7470) 5000 c/s (0s +/- <1s)                       / Progress:		91% (7553) 5000 c/s (0s +/- <1s)                       - Progress:		92% (7636) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (7719) 5000 c/s (0s +/- <1s)                       | Progress:		94% (7802) 5000 c/s (0s +/- <1s)                       / Progress:		95% (7885) 5000 c/s (0s +/- <1s)                       - Progress:		96% (7968) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (8051) 5000 c/s (0s +/- <1s)                       | Progress:		98% (8134) 5000 c/s (0s +/- <1s)                       / Progress:		99% (8217) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.060656 seconds.		
 * Result:		(77a,43u,1208,8010,2141,10151)
 * Creating:			fold 4
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 4
** Writing FIC database to file
 * File:		train5.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-12d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		25330
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(81a,0u,3423,19452,1177,20630)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (254) ? c/s  		 | Progress:		2% (507) ? c/s  		 / Progress:		3% (760) ? c/s  		 - Progress:		4% (1014) ? c/s  		 \ Progress:		5% (1267) ? c/s  		 | Progress:		6% (1520) ? c/s  		 / Progress:		7% (1774) ? c/s  		 - Progress:		8% (2027) ? c/s  		 \ Progress:		9% (2280) ? c/s  		 | Progress:		10% (2533) ? c/s  		 / Progress:		11% (2787) ? c/s  		 - Progress:		12% (3040) ? c/s  		 \ Progress:		13% (3293) ? c/s  		 | Progress:		14% (3547) ? c/s  		 / Progress:		15% (3800) ? c/s  		 - Progress:		16% (4053) ? c/s  		 \ Progress:		17% (4307) ? c/s  		 | Progress:		18% (4560) ? c/s  		 / Progress:		19% (4813) ? c/s  		 / Progress:		19% (5000) 5000 c/s (0s +/- 4s)                        - Progress:		20% (5066) 5000 c/s (0s +/- 4s)                        \ Progress:		21% (5320) 5000 c/s (0s +/- 4s)                        | Progress:		22% (5573) 5000 c/s (0s +/- 3s)                        / Progress:		23% (5826) 5000 c/s (0s +/- 3s)                        - Progress:		24% (6080) 5000 c/s (0s +/- 3s)                        \ Progress:		25% (6333) 5000 c/s (0s +/- 3s)                        | Progress:		26% (6586) 5000 c/s (0s +/- 3s)                        / Progress:		27% (6840) 5000 c/s (0s +/- 3s)                        - Progress:		28% (7093) 5000 c/s (0s +/- 3s)                        \ Progress:		29% (7346) 5000 c/s (0s +/- 3s)                        | Progress:		30% (7599) 5000 c/s (0s +/- 3s)                        / Progress:		31% (7853) 5000 c/s (0s +/- 3s)                        - Progress:		32% (8106) 5000 c/s (0s +/- 3s)                        \ Progress:		33% (8359) 5000 c/s (0s +/- 3s)                        | Progress:		34% (8613) 5000 c/s (0s +/- 3s)                        / Progress:		35% (8866) 5000 c/s (0s +/- 3s)                        - Progress:		36% (9119) 5000 c/s (0s +/- 3s)                        \ Progress:		37% (9373) 5000 c/s (0s +/- 3s)                        | Progress:		38% (9626) 5000 c/s (0s +/- 3s)                        / Progress:		39% (9879) 5000 c/s (0s +/- 3s)                        - Progress:		40% (10132) 5000 c/s (0s +/- 3s)                       \ Progress:		41% (10386) 5000 c/s (0s +/- 2s)                       | Progress:		42% (10639) 5000 c/s (0s +/- 2s)                       / Progress:		43% (10892) 5000 c/s (0s +/- 2s)                       - Progress:		44% (11146) 5000 c/s (0s +/- 2s)                       \ Progress:		45% (11399) 5000 c/s (0s +/- 2s)                       | Progress:		46% (11652) 5000 c/s (0s +/- 2s)                       / Progress:		47% (11906) 5000 c/s (0s +/- 2s)                       - Progress:		48% (12159) 5000 c/s (0s +/- 2s)                       \ Progress:		49% (12412) 5000 c/s (0s +/- 2s)                       | Progress:		50% (12665) 5000 c/s (0s +/- 2s)                       / Progress:		51% (12919) 5000 c/s (0s +/- 2s)                       - Progress:		52% (13172) 5000 c/s (0s +/- 2s)                       \ Progress:		53% (13425) 5000 c/s (0s +/- 2s)                       | Progress:		54% (13679) 5000 c/s (0s +/- 2s)                       / Progress:		55% (13932) 5000 c/s (0s +/- 2s)                       - Progress:		56% (14185) 5000 c/s (0s +/- 2s)                       \ Progress:		57% (14439) 5000 c/s (0s +/- 2s)                       | Progress:		58% (14692) 5000 c/s (0s +/- 2s)                       / Progress:		59% (14945) 5000 c/s (0s +/- 2s)                       - Progress:		60% (15198) 5000 c/s (0s +/- 2s)                       \ Progress:		61% (15452) 5000 c/s (0s +/- 1s)                       | Progress:		62% (15705) 5000 c/s (0s +/- 1s)                       / Progress:		63% (15958) 5000 c/s (0s +/- 1s)                       - Progress:		64% (16212) 5000 c/s (0s +/- 1s)                       \ Progress:		65% (16465) 5000 c/s (0s +/- 1s)                       | Progress:		66% (16718) 5000 c/s (0s +/- 1s)                       / Progress:		67% (16972) 5000 c/s (0s +/- 1s)                       - Progress:		68% (17225) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (17478) 5000 c/s (0s +/- 1s)                       | Progress:		70% (17731) 5000 c/s (0s +/- 1s)                       / Progress:		71% (17985) 5000 c/s (0s +/- 1s)                       - Progress:		72% (18238) 5000 c/s (0s +/- 1s)                       \ Progress:		73% (18491) 5000 c/s (0s +/- 1s)                       | Progress:		74% (18745) 5000 c/s (0s +/- 1s)                       / Progress:		75% (18998) 5000 c/s (0s +/- 1s)                       - Progress:		76% (19251) 5000 c/s (0s +/- 1s)                       \ Progress:		77% (19505) 5000 c/s (0s +/- 1s)                       | Progress:		78% (19758) 5000 c/s (0s +/- 1s)                       / Progress:		79% (20011) 5000 c/s (0s +/- 1s)                       - Progress:		80% (20264) 5000 c/s (0s +/- 1s)                       \ Progress:		81% (20518) 5000 c/s (0s +/- <1s)                      | Progress:		82% (20771) 5000 c/s (0s +/- <1s)                      / Progress:		83% (21024) 5000 c/s (0s +/- <1s)                      - Progress:		84% (21278) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (21531) 5000 c/s (0s +/- <1s)                      | Progress:		86% (21784) 5000 c/s (0s +/- <1s)                      / Progress:		87% (22038) 5000 c/s (0s +/- <1s)                      - Progress:		88% (22291) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (22544) 5000 c/s (0s +/- <1s)                      | Progress:		90% (22797) 5000 c/s (0s +/- <1s)                      / Progress:		91% (23051) 5000 c/s (0s +/- <1s)                      - Progress:		92% (23304) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (23557) 5000 c/s (0s +/- <1s)                      | Progress:		94% (23811) 5000 c/s (0s +/- <1s)                      / Progress:		95% (24064) 5000 c/s (0s +/- <1s)                      - Progress:		96% (24317) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (24571) 5000 c/s (0s +/- <1s)                      | Progress:		98% (24824) 5000 c/s (0s +/- <1s)                      / Progress:		99% (25077) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.166018 seconds.		
 * Result:		(79a,64u,1815,12517,2730,15247)
** Writing FIC database to file
 * File:		train14.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-12d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		10477
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(80a,0u,2082,11766,1150,12916)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (105) ? c/s  		 | Progress:		2% (210) ? c/s  		 / Progress:		3% (315) ? c/s  		 - Progress:		4% (420) ? c/s  		 \ Progress:		5% (524) ? c/s  		 | Progress:		6% (629) ? c/s  		 / Progress:		7% (734) ? c/s  		 - Progress:		8% (839) ? c/s  		 \ Progress:		9% (943) ? c/s  		 | Progress:		10% (1048) ? c/s  		 / Progress:		11% (1153) ? c/s  		 - Progress:		12% (1258) ? c/s  		 \ Progress:		13% (1363) ? c/s  		 | Progress:		14% (1467) ? c/s  		 / Progress:		15% (1572) ? c/s  		 - Progress:		16% (1677) ? c/s  		 \ Progress:		17% (1782) ? c/s  		 | Progress:		18% (1886) ? c/s  		 / Progress:		19% (1991) ? c/s  		 - Progress:		20% (2096) ? c/s  		 \ Progress:		21% (2201) ? c/s  		 | Progress:		22% (2305) ? c/s  		 / Progress:		23% (2410) ? c/s  		 - Progress:		24% (2515) ? c/s  		 \ Progress:		25% (2620) ? c/s  		 | Progress:		26% (2725) ? c/s  		 / Progress:		27% (2829) ? c/s  		 - Progress:		28% (2934) ? c/s  		 \ Progress:		29% (3039) ? c/s  		 | Progress:		30% (3144) ? c/s  		 / Progress:		31% (3248) ? c/s  		 - Progress:		32% (3353) ? c/s  		 \ Progress:		33% (3458) ? c/s  		 | Progress:		34% (3563) ? c/s  		 / Progress:		35% (3667) ? c/s  		 - Progress:		36% (3772) ? c/s  		 \ Progress:		37% (3877) ? c/s  		 | Progress:		38% (3982) ? c/s  		 / Progress:		39% (4087) ? c/s  		 - Progress:		40% (4191) ? c/s  		 \ Progress:		41% (4296) ? c/s  		 | Progress:		42% (4401) ? c/s  		 / Progress:		43% (4506) ? c/s  		 - Progress:		44% (4610) ? c/s  		 \ Progress:		45% (4715) ? c/s  		 | Progress:		46% (4820) ? c/s  		 / Progress:		47% (4925) ? c/s  		 / Progress:		47% (5000) 5000 c/s (0s +/- 1s)                        - Progress:		48% (5029) 5000 c/s (0s +/- 1s)                        \ Progress:		49% (5134) 5000 c/s (0s +/- 1s)                        | Progress:		50% (5239) 5000 c/s (0s +/- 1s)                        / Progress:		51% (5344) 5000 c/s (0s +/- 1s)                        - Progress:		52% (5449) 5000 c/s (0s +/- 1s)                        \ Progress:		53% (5553) 5000 c/s (0s +/- <1s)                       | Progress:		54% (5658) 5000 c/s (0s +/- <1s)                       / Progress:		55% (5763) 5000 c/s (0s +/- <1s)                       - Progress:		56% (5868) 5000 c/s (0s +/- <1s)                       \ Progress:		57% (5972) 5000 c/s (0s +/- <1s)                       | Progress:		58% (6077) 5000 c/s (0s +/- <1s)                       / Progress:		59% (6182) 5000 c/s (0s +/- <1s)                       - Progress:		60% (6287) 5000 c/s (0s +/- <1s)                       \ Progress:		61% (6391) 5000 c/s (0s +/- <1s)                       | Progress:		62% (6496) 5000 c/s (0s +/- <1s)                       / Progress:		63% (6601) 5000 c/s (0s +/- <1s)                       - Progress:		64% (6706) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (6811) 5000 c/s (0s +/- <1s)                       | Progress:		66% (6915) 5000 c/s (0s +/- <1s)                       / Progress:		67% (7020) 5000 c/s (0s +/- <1s)                       - Progress:		68% (7125) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (7230) 5000 c/s (0s +/- <1s)                       | Progress:		70% (7334) 5000 c/s (0s +/- <1s)                       / Progress:		71% (7439) 5000 c/s (0s +/- <1s)                       - Progress:		72% (7544) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (7649) 5000 c/s (0s +/- <1s)                       | Progress:		74% (7753) 5000 c/s (0s +/- <1s)                       / Progress:		75% (7858) 5000 c/s (0s +/- <1s)                       - Progress:		76% (7963) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (8068) 5000 c/s (0s +/- <1s)                       | Progress:		78% (8173) 5000 c/s (0s +/- <1s)                       / Progress:		79% (8277) 5000 c/s (0s +/- <1s)                       - Progress:		80% (8382) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (8487) 5000 c/s (0s +/- <1s)                       | Progress:		82% (8592) 5000 c/s (0s +/- <1s)                       / Progress:		83% (8696) 5000 c/s (0s +/- <1s)                       - Progress:		84% (8801) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (8906) 5000 c/s (0s +/- <1s)                       | Progress:		86% (9011) 5000 c/s (0s +/- <1s)                       / Progress:		87% (9115) 5000 c/s (0s +/- <1s)                       - Progress:		88% (9220) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (9325) 5000 c/s (0s +/- <1s)                       | Progress:		90% (9430) 5000 c/s (0s +/- <1s)                       / Progress:		91% (9535) 5000 c/s (0s +/- <1s)                       - Progress:		92% (9639) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (9744) 5000 c/s (0s +/- <1s)                       | Progress:		94% (9849) 5000 c/s (0s +/- <1s)                       / Progress:		95% (9954) 5000 c/s (0s +/- <1s)                       - Progress:		96% (10058) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (10163) 5000 c/s (0s +/- <1s)                      | Progress:		98% (10268) 5000 c/s (0s +/- <1s)                      / Progress:		99% (10373) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.060864 seconds.		
 * Result:		(77a,42u,1186,7837,2109,9945)
 * Creating:			fold 5
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 5
** Writing FIC database to file
 * File:		train5.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-12d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		25866
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(81a,0u,3506,19925,1174,21100)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (259) ? c/s  		 | Progress:		2% (518) ? c/s  		 / Progress:		3% (776) ? c/s  		 - Progress:		4% (1035) ? c/s  		 \ Progress:		5% (1294) ? c/s  		 | Progress:		6% (1552) ? c/s  		 / Progress:		7% (1811) ? c/s  		 - Progress:		8% (2070) ? c/s  		 \ Progress:		9% (2328) ? c/s  		 | Progress:		10% (2587) ? c/s  		 / Progress:		11% (2846) ? c/s  		 - Progress:		12% (3104) ? c/s  		 \ Progress:		13% (3363) ? c/s  		 | Progress:		14% (3622) ? c/s  		 / Progress:		15% (3880) ? c/s  		 - Progress:		16% (4139) ? c/s  		 \ Progress:		17% (4398) ? c/s  		 | Progress:		18% (4656) ? c/s  		 / Progress:		19% (4915) ? c/s  		 / Progress:		19% (5000) 5000 c/s (0s +/- 4s)                        - Progress:		20% (5174) 5000 c/s (0s +/- 4s)                        \ Progress:		21% (5432) 5000 c/s (0s +/- 4s)                        | Progress:		22% (5691) 5000 c/s (0s +/- 4s)                        / Progress:		23% (5950) 5000 c/s (0s +/- 3s)                        - Progress:		24% (6208) 5000 c/s (0s +/- 3s)                        \ Progress:		25% (6467) 5000 c/s (0s +/- 3s)                        | Progress:		26% (6726) 5000 c/s (0s +/- 3s)                        / Progress:		27% (6984) 5000 c/s (0s +/- 3s)                        - Progress:		28% (7243) 5000 c/s (0s +/- 3s)                        \ Progress:		29% (7502) 5000 c/s (0s +/- 3s)                        | Progress:		30% (7760) 5000 c/s (0s +/- 3s)                        / Progress:		31% (8019) 5000 c/s (0s +/- 3s)                        - Progress:		32% (8278) 5000 c/s (0s +/- 3s)                        \ Progress:		33% (8536) 5000 c/s (0s +/- 3s)                        | Progress:		34% (8795) 5000 c/s (0s +/- 3s)                        / Progress:		35% (9054) 5000 c/s (0s +/- 3s)                        - Progress:		36% (9312) 5000 c/s (0s +/- 3s)                        \ Progress:		37% (9571) 5000 c/s (0s +/- 3s)                        | Progress:		38% (9830) 5000 c/s (0s +/- 3s)                        / Progress:		39% (10088) 5000 c/s (0s +/- 3s)                       - Progress:		40% (10347) 5000 c/s (0s +/- 3s)                       \ Progress:		41% (10606) 5000 c/s (0s +/- 3s)                       | Progress:		42% (10864) 5000 c/s (0s +/- 3s)                       / Progress:		43% (11123) 5000 c/s (0s +/- 2s)                       - Progress:		44% (11382) 5000 c/s (0s +/- 2s)                       \ Progress:		45% (11640) 5000 c/s (0s +/- 2s)                       | Progress:		46% (11899) 5000 c/s (0s +/- 2s)                       / Progress:		47% (12158) 5000 c/s (0s +/- 2s)                       - Progress:		48% (12416) 5000 c/s (0s +/- 2s)                       \ Progress:		49% (12675) 5000 c/s (0s +/- 2s)                       | Progress:		50% (12933) 5000 c/s (0s +/- 2s)                       / Progress:		51% (13192) 5000 c/s (0s +/- 2s)                       - Progress:		52% (13451) 5000 c/s (0s +/- 2s)                       \ Progress:		53% (13709) 5000 c/s (0s +/- 2s)                       | Progress:		54% (13968) 5000 c/s (0s +/- 2s)                       / Progress:		55% (14227) 5000 c/s (0s +/- 2s)                       - Progress:		56% (14485) 5000 c/s (0s +/- 2s)                       \ Progress:		57% (14744) 5000 c/s (0s +/- 2s)                       | Progress:		58% (15003) 5000 c/s (0s +/- 2s)                       / Progress:		59% (15261) 5000 c/s (0s +/- 2s)                       - Progress:		60% (15520) 5000 c/s (0s +/- 2s)                       \ Progress:		61% (15779) 5000 c/s (0s +/- 2s)                       | Progress:		62% (16037) 5000 c/s (0s +/- 1s)                       / Progress:		63% (16296) 5000 c/s (0s +/- 1s)                       - Progress:		64% (16555) 5000 c/s (0s +/- 1s)                       \ Progress:		65% (16813) 5000 c/s (0s +/- 1s)                       | Progress:		66% (17072) 5000 c/s (0s +/- 1s)                       / Progress:		67% (17331) 5000 c/s (0s +/- 1s)                       - Progress:		68% (17589) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (17848) 5000 c/s (0s +/- 1s)                       | Progress:		70% (18107) 5000 c/s (0s +/- 1s)                       / Progress:		71% (18365) 5000 c/s (0s +/- 1s)                       - Progress:		72% (18624) 5000 c/s (0s +/- 1s)                       \ Progress:		73% (18883) 5000 c/s (0s +/- 1s)                       | Progress:		74% (19141) 5000 c/s (0s +/- 1s)                       / Progress:		75% (19400) 5000 c/s (0s +/- 1s)                       - Progress:		76% (19659) 5000 c/s (0s +/- 1s)                       \ Progress:		77% (19917) 5000 c/s (0s +/- 1s)                       | Progress:		78% (20176) 5000 c/s (0s +/- 1s)                       / Progress:		79% (20435) 5000 c/s (0s +/- 1s)                       - Progress:		80% (20693) 5000 c/s (0s +/- 1s)                       \ Progress:		81% (20952) 5000 c/s (0s +/- <1s)                      | Progress:		82% (21211) 5000 c/s (0s +/- <1s)                      / Progress:		83% (21469) 5000 c/s (0s +/- <1s)                      - Progress:		84% (21728) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (21987) 5000 c/s (0s +/- <1s)                      | Progress:		86% (22245) 5000 c/s (0s +/- <1s)                      / Progress:		87% (22504) 5000 c/s (0s +/- <1s)                      - Progress:		88% (22763) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (23021) 5000 c/s (0s +/- <1s)                      | Progress:		90% (23280) 5000 c/s (0s +/- <1s)                      / Progress:		91% (23539) 5000 c/s (0s +/- <1s)                      - Progress:		92% (23797) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (24056) 5000 c/s (0s +/- <1s)                      | Progress:		94% (24315) 5000 c/s (0s +/- <1s)                      / Progress:		95% (24573) 5000 c/s (0s +/- <1s)                      - Progress:		96% (24832) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (25091) 5000 c/s (0s +/- <1s)                      | Progress:		98% (25349) 5000 c/s (0s +/- <1s)                      / Progress:		99% (25608) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.188489 seconds.		
 * Result:		(77a,72u,1853,12886,2863,15750)
** Writing FIC database to file
 * File:		train14.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-12d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		8693
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(80a,0u,2030,11528,1142,12669)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (87) ? c/s  		 | Progress:		2% (174) ? c/s  		 / Progress:		3% (261) ? c/s  		 - Progress:		4% (348) ? c/s  		 \ Progress:		5% (435) ? c/s  		 | Progress:		6% (522) ? c/s  		 / Progress:		7% (609) ? c/s  		 - Progress:		8% (696) ? c/s  		 \ Progress:		9% (783) ? c/s  		 | Progress:		10% (870) ? c/s  		 / Progress:		11% (957) ? c/s  		 - Progress:		12% (1044) ? c/s  		 \ Progress:		13% (1131) ? c/s  		 | Progress:		14% (1218) ? c/s  		 / Progress:		15% (1304) ? c/s  		 - Progress:		16% (1391) ? c/s  		 \ Progress:		17% (1478) ? c/s  		 | Progress:		18% (1565) ? c/s  		 / Progress:		19% (1652) ? c/s  		 - Progress:		20% (1739) ? c/s  		 \ Progress:		21% (1826) ? c/s  		 | Progress:		22% (1913) ? c/s  		 / Progress:		23% (2000) ? c/s  		 - Progress:		24% (2087) ? c/s  		 \ Progress:		25% (2174) ? c/s  		 | Progress:		26% (2261) ? c/s  		 / Progress:		27% (2348) ? c/s  		 - Progress:		28% (2435) ? c/s  		 \ Progress:		29% (2521) ? c/s  		 | Progress:		30% (2608) ? c/s  		 / Progress:		31% (2695) ? c/s  		 - Progress:		32% (2782) ? c/s  		 \ Progress:		33% (2869) ? c/s  		 | Progress:		34% (2956) ? c/s  		 / Progress:		35% (3043) ? c/s  		 - Progress:		36% (3130) ? c/s  		 \ Progress:		37% (3217) ? c/s  		 | Progress:		38% (3304) ? c/s  		 / Progress:		39% (3391) ? c/s  		 - Progress:		40% (3478) ? c/s  		 \ Progress:		41% (3565) ? c/s  		 | Progress:		42% (3652) ? c/s  		 / Progress:		43% (3738) ? c/s  		 - Progress:		44% (3825) ? c/s  		 \ Progress:		45% (3912) ? c/s  		 | Progress:		46% (3999) ? c/s  		 / Progress:		47% (4086) ? c/s  		 - Progress:		48% (4173) ? c/s  		 \ Progress:		49% (4260) ? c/s  		 | Progress:		50% (4347) ? c/s  		 / Progress:		51% (4434) ? c/s  		 - Progress:		52% (4521) ? c/s  		 \ Progress:		53% (4608) ? c/s  		 | Progress:		54% (4695) ? c/s  		 / Progress:		55% (4782) ? c/s  		 - Progress:		56% (4869) ? c/s  		 \ Progress:		57% (4956) ? c/s  		 \ Progress:		57% (5000) 5000 c/s (1s +/- <1s)                       | Progress:		58% (5042) 5000 c/s (1s +/- <1s)                       / Progress:		59% (5129) 5000 c/s (1s +/- <1s)                       - Progress:		60% (5216) 5000 c/s (1s +/- <1s)                       \ Progress:		61% (5303) 5000 c/s (1s +/- <1s)                       | Progress:		62% (5390) 5000 c/s (1s +/- <1s)                       / Progress:		63% (5477) 5000 c/s (1s +/- <1s)                       - Progress:		64% (5564) 5000 c/s (1s +/- <1s)                       \ Progress:		65% (5651) 5000 c/s (1s +/- <1s)                       | Progress:		66% (5738) 5000 c/s (1s +/- <1s)                       / Progress:		67% (5825) 5000 c/s (1s +/- <1s)                       - Progress:		68% (5912) 5000 c/s (1s +/- <1s)                       \ Progress:		69% (5999) 5000 c/s (1s +/- <1s)                       | Progress:		70% (6086) 5000 c/s (1s +/- <1s)                       / Progress:		71% (6173) 5000 c/s (1s +/- <1s)                       - Progress:		72% (6259) 5000 c/s (1s +/- <1s)                       \ Progress:		73% (6346) 5000 c/s (1s +/- <1s)                       | Progress:		74% (6433) 5000 c/s (1s +/- <1s)                       / Progress:		75% (6520) 5000 c/s (1s +/- <1s)                       - Progress:		76% (6607) 5000 c/s (1s +/- <1s)                       \ Progress:		77% (6694) 5000 c/s (1s +/- <1s)                       | Progress:		78% (6781) 5000 c/s (1s +/- <1s)                       / Progress:		79% (6868) 5000 c/s (1s +/- <1s)                       - Progress:		80% (6955) 5000 c/s (1s +/- <1s)                       \ Progress:		81% (7042) 5000 c/s (1s +/- <1s)                       | Progress:		82% (7129) 5000 c/s (1s +/- <1s)                       / Progress:		83% (7216) 5000 c/s (1s +/- <1s)                       - Progress:		84% (7303) 5000 c/s (1s +/- <1s)                       \ Progress:		85% (7390) 5000 c/s (1s +/- <1s)                       | Progress:		86% (7476) 5000 c/s (1s +/- <1s)                       / Progress:		87% (7563) 5000 c/s (1s +/- <1s)                       - Progress:		88% (7650) 5000 c/s (1s +/- <1s)                       \ Progress:		89% (7737) 5000 c/s (1s +/- <1s)                       | Progress:		90% (7824) 5000 c/s (1s +/- <1s)                       / Progress:		91% (7911) 5000 c/s (1s +/- <1s)                       - Progress:		92% (7998) 5000 c/s (1s +/- <1s)                       \ Progress:		93% (8085) 5000 c/s (1s +/- <1s)                       | Progress:		94% (8172) 5000 c/s (1s +/- <1s)                       / Progress:		95% (8259) 5000 c/s (1s +/- <1s)                       - Progress:		96% (8346) 5000 c/s (1s +/- <1s)                       \ Progress:		97% (8433) 5000 c/s (1s +/- <1s)                       | Progress:		98% (8520) 5000 c/s (1s +/- <1s)                       / Progress:		99% (8607) 5000 c/s (1s +/- <1s)                       * Time:    		Compressing the database took 0.056873 seconds.		
 * Result:		(77a,41u,1158,7674,2092,9766)
 * Creating:			fold 6
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 6
** Writing FIC database to file
 * File:		train5.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-12d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		28390
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(81a,0u,3529,20076,1172,21247)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (284) ? c/s  		 | Progress:		2% (568) ? c/s  		 / Progress:		3% (852) ? c/s  		 - Progress:		4% (1136) ? c/s  		 \ Progress:		5% (1420) ? c/s  		 | Progress:		6% (1704) ? c/s  		 / Progress:		7% (1988) ? c/s  		 - Progress:		8% (2272) ? c/s  		 \ Progress:		9% (2556) ? c/s  		 | Progress:		10% (2839) ? c/s  		 / Progress:		11% (3123) ? c/s  		 - Progress:		12% (3407) ? c/s  		 \ Progress:		13% (3691) ? c/s  		 | Progress:		14% (3975) ? c/s  		 / Progress:		15% (4259) ? c/s  		 - Progress:		16% (4543) ? c/s  		 \ Progress:		17% (4827) ? c/s  		 \ Progress:		17% (5000) 5000 c/s (0s +/- 4s)                        | Progress:		18% (5111) 5000 c/s (0s +/- 4s)                        / Progress:		19% (5395) 5000 c/s (0s +/- 4s)                        - Progress:		20% (5678) 5000 c/s (0s +/- 4s)                        \ Progress:		21% (5962) 5000 c/s (0s +/- 4s)                        | Progress:		22% (6246) 5000 c/s (0s +/- 4s)                        / Progress:		23% (6530) 5000 c/s (0s +/- 4s)                        - Progress:		24% (6814) 5000 c/s (0s +/- 4s)                        \ Progress:		25% (7098) 5000 c/s (0s +/- 4s)                        | Progress:		26% (7382) 5000 c/s (0s +/- 4s)                        / Progress:		27% (7666) 5000 c/s (0s +/- 4s)                        - Progress:		28% (7950) 5000 c/s (0s +/- 4s)                        \ Progress:		29% (8234) 5000 c/s (0s +/- 4s)                        | Progress:		30% (8517) 5000 c/s (0s +/- 3s)                        / Progress:		31% (8801) 5000 c/s (0s +/- 3s)                        - Progress:		32% (9085) 5000 c/s (0s +/- 3s)                        \ Progress:		33% (9369) 5000 c/s (0s +/- 3s)                        | Progress:		34% (9653) 5000 c/s (0s +/- 3s)                        / Progress:		35% (9937) 5000 c/s (0s +/- 3s)                        - Progress:		36% (10221) 5000 c/s (0s +/- 3s)                       \ Progress:		37% (10505) 5000 c/s (0s +/- 3s)                       | Progress:		38% (10789) 5000 c/s (0s +/- 3s)                       / Progress:		39% (11073) 5000 c/s (0s +/- 3s)                       - Progress:		40% (11356) 5000 c/s (0s +/- 3s)                       \ Progress:		41% (11640) 5000 c/s (0s +/- 3s)                       | Progress:		42% (11924) 5000 c/s (0s +/- 3s)                       / Progress:		43% (12208) 5000 c/s (0s +/- 3s)                       - Progress:		44% (12492) 5000 c/s (0s +/- 3s)                       \ Progress:		45% (12776) 5000 c/s (0s +/- 3s)                       | Progress:		46% (13060) 5000 c/s (0s +/- 3s)                       / Progress:		47% (13344) 5000 c/s (0s +/- 3s)                       - Progress:		48% (13628) 5000 c/s (0s +/- 2s)                       \ Progress:		49% (13912) 5000 c/s (0s +/- 2s)                       | Progress:		50% (14195) 5000 c/s (0s +/- 2s)                       / Progress:		51% (14479) 5000 c/s (0s +/- 2s)                       - Progress:		52% (14763) 5000 c/s (0s +/- 2s)                       \ Progress:		53% (15047) 5000 c/s (0s +/- 2s)                       | Progress:		54% (15331) 5000 c/s (0s +/- 2s)                       / Progress:		55% (15615) 5000 c/s (0s +/- 2s)                       - Progress:		56% (15899) 5000 c/s (0s +/- 2s)                       \ Progress:		57% (16183) 5000 c/s (0s +/- 2s)                       | Progress:		58% (16467) 5000 c/s (0s +/- 2s)                       / Progress:		59% (16751) 5000 c/s (0s +/- 2s)                       - Progress:		60% (17034) 5000 c/s (0s +/- 2s)                       \ Progress:		61% (17318) 5000 c/s (0s +/- 2s)                       | Progress:		62% (17602) 5000 c/s (0s +/- 2s)                       / Progress:		63% (17886) 5000 c/s (0s +/- 2s)                       - Progress:		64% (18170) 5000 c/s (0s +/- 2s)                       \ Progress:		65% (18454) 5000 c/s (0s +/- 1s)                       | Progress:		66% (18738) 5000 c/s (0s +/- 1s)                       / Progress:		67% (19022) 5000 c/s (0s +/- 1s)                       - Progress:		68% (19306) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (19590) 5000 c/s (0s +/- 1s)                       | Progress:		70% (19873) 5000 c/s (0s +/- 1s)                       / Progress:		71% (20157) 5000 c/s (0s +/- 1s)                       - Progress:		72% (20441) 5000 c/s (0s +/- 1s)                       \ Progress:		73% (20725) 5000 c/s (0s +/- 1s)                       | Progress:		74% (21009) 5000 c/s (0s +/- 1s)                       / Progress:		75% (21293) 5000 c/s (0s +/- 1s)                       - Progress:		76% (21577) 5000 c/s (0s +/- 1s)                       \ Progress:		77% (21861) 5000 c/s (0s +/- 1s)                       | Progress:		78% (22145) 5000 c/s (0s +/- 1s)                       / Progress:		79% (22429) 5000 c/s (0s +/- 1s)                       - Progress:		80% (22712) 5000 c/s (0s +/- 1s)                       \ Progress:		81% (22996) 5000 c/s (0s +/- 1s)                       | Progress:		82% (23280) 5000 c/s (0s +/- 1s)                       / Progress:		83% (23564) 5000 c/s (0s +/- <1s)                      - Progress:		84% (23848) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (24132) 5000 c/s (0s +/- <1s)                      | Progress:		86% (24416) 5000 c/s (0s +/- <1s)                      / Progress:		87% (24700) 5000 c/s (0s +/- <1s)                      - Progress:		88% (24984) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (25268) 5000 c/s (0s +/- <1s)                      | Progress:		90% (25551) 5000 c/s (0s +/- <1s)                      / Progress:		91% (25835) 5000 c/s (0s +/- <1s)                      - Progress:		92% (26119) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (26403) 5000 c/s (0s +/- <1s)                      | Progress:		94% (26687) 5000 c/s (0s +/- <1s)                      / Progress:		95% (26971) 5000 c/s (0s +/- <1s)                      - Progress:		96% (27255) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (27539) 5000 c/s (0s +/- <1s)                      | Progress:		98% (27823) 5000 c/s (0s +/- <1s)                      / Progress:		99% (28107) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.202779 seconds.		
 * Result:		(77a,72u,1849,12823,2892,15715)
** Writing FIC database to file
 * File:		train14.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-12d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		8082
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(78a,0u,2001,11317,1101,12418)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (81) ? c/s  		 | Progress:		2% (162) ? c/s  		 / Progress:		3% (243) ? c/s  		 - Progress:		4% (324) ? c/s  		 \ Progress:		5% (405) ? c/s  		 | Progress:		6% (485) ? c/s  		 / Progress:		7% (566) ? c/s  		 - Progress:		8% (647) ? c/s  		 \ Progress:		9% (728) ? c/s  		 | Progress:		10% (809) ? c/s  		 / Progress:		11% (890) ? c/s  		 - Progress:		12% (970) ? c/s  		 \ Progress:		13% (1051) ? c/s  		 | Progress:		14% (1132) ? c/s  		 / Progress:		15% (1213) ? c/s  		 - Progress:		16% (1294) ? c/s  		 \ Progress:		17% (1374) ? c/s  		 | Progress:		18% (1455) ? c/s  		 / Progress:		19% (1536) ? c/s  		 - Progress:		20% (1617) ? c/s  		 \ Progress:		21% (1698) ? c/s  		 | Progress:		22% (1779) ? c/s  		 / Progress:		23% (1859) ? c/s  		 - Progress:		24% (1940) ? c/s  		 \ Progress:		25% (2021) ? c/s  		 | Progress:		26% (2102) ? c/s  		 / Progress:		27% (2183) ? c/s  		 - Progress:		28% (2263) ? c/s  		 \ Progress:		29% (2344) ? c/s  		 | Progress:		30% (2425) ? c/s  		 / Progress:		31% (2506) ? c/s  		 - Progress:		32% (2587) ? c/s  		 \ Progress:		33% (2668) ? c/s  		 | Progress:		34% (2748) ? c/s  		 / Progress:		35% (2829) ? c/s  		 - Progress:		36% (2910) ? c/s  		 \ Progress:		37% (2991) ? c/s  		 | Progress:		38% (3072) ? c/s  		 / Progress:		39% (3152) ? c/s  		 - Progress:		40% (3233) ? c/s  		 \ Progress:		41% (3314) ? c/s  		 | Progress:		42% (3395) ? c/s  		 / Progress:		43% (3476) ? c/s  		 - Progress:		44% (3557) ? c/s  		 \ Progress:		45% (3637) ? c/s  		 | Progress:		46% (3718) ? c/s  		 / Progress:		47% (3799) ? c/s  		 - Progress:		48% (3880) ? c/s  		 \ Progress:		49% (3961) ? c/s  		 | Progress:		50% (4041) ? c/s  		 / Progress:		51% (4122) ? c/s  		 - Progress:		52% (4203) ? c/s  		 \ Progress:		53% (4284) ? c/s  		 | Progress:		54% (4365) ? c/s  		 / Progress:		55% (4446) ? c/s  		 - Progress:		56% (4526) ? c/s  		 \ Progress:		57% (4607) ? c/s  		 | Progress:		58% (4688) ? c/s  		 / Progress:		59% (4769) ? c/s  		 - Progress:		60% (4850) ? c/s  		 \ Progress:		61% (4931) ? c/s  		 \ Progress:		61% (5000) 5000 c/s (0s +/- <1s)                       | Progress:		62% (5011) 5000 c/s (0s +/- <1s)                       / Progress:		63% (5092) 5000 c/s (0s +/- <1s)                       - Progress:		64% (5173) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (5254) 5000 c/s (0s +/- <1s)                       | Progress:		66% (5335) 5000 c/s (0s +/- <1s)                       / Progress:		67% (5415) 5000 c/s (0s +/- <1s)                       - Progress:		68% (5496) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (5577) 5000 c/s (0s +/- <1s)                       | Progress:		70% (5658) 5000 c/s (0s +/- <1s)                       / Progress:		71% (5739) 5000 c/s (0s +/- <1s)                       - Progress:		72% (5820) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (5900) 5000 c/s (0s +/- <1s)                       | Progress:		74% (5981) 5000 c/s (0s +/- <1s)                       / Progress:		75% (6062) 5000 c/s (0s +/- <1s)                       - Progress:		76% (6143) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (6224) 5000 c/s (0s +/- <1s)                       | Progress:		78% (6304) 5000 c/s (0s +/- <1s)                       / Progress:		79% (6385) 5000 c/s (0s +/- <1s)                       - Progress:		80% (6466) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (6547) 5000 c/s (0s +/- <1s)                       | Progress:		82% (6628) 5000 c/s (0s +/- <1s)                       / Progress:		83% (6709) 5000 c/s (0s +/- <1s)                       - Progress:		84% (6789) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (6870) 5000 c/s (0s +/- <1s)                       | Progress:		86% (6951) 5000 c/s (0s +/- <1s)                       / Progress:		87% (7032) 5000 c/s (0s +/- <1s)                       - Progress:		88% (7113) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (7193) 5000 c/s (0s +/- <1s)                       | Progress:		90% (7274) 5000 c/s (0s +/- <1s)                       / Progress:		91% (7355) 5000 c/s (0s +/- <1s)                       - Progress:		92% (7436) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (7517) 5000 c/s (0s +/- <1s)                       | Progress:		94% (7598) 5000 c/s (0s +/- <1s)                       / Progress:		95% (7678) 5000 c/s (0s +/- <1s)                       - Progress:		96% (7759) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (7840) 5000 c/s (0s +/- <1s)                       | Progress:		98% (7921) 5000 c/s (0s +/- <1s)                       / Progress:		99% (8002) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.044311 seconds.		
 * Result:		(75a,38u,1155,7588,2019,9606)
 * Creating:			fold 7
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 7
** Writing FIC database to file
 * File:		train5.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-12d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		31078
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(81a,0u,3555,20173,1178,21351)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (311) ? c/s  		 | Progress:		2% (622) ? c/s  		 / Progress:		3% (933) ? c/s  		 - Progress:		4% (1244) ? c/s  		 \ Progress:		5% (1554) ? c/s  		 | Progress:		6% (1865) ? c/s  		 / Progress:		7% (2176) ? c/s  		 - Progress:		8% (2487) ? c/s  		 \ Progress:		9% (2798) ? c/s  		 | Progress:		10% (3108) ? c/s  		 / Progress:		11% (3419) ? c/s  		 - Progress:		12% (3730) ? c/s  		 \ Progress:		13% (4041) ? c/s  		 | Progress:		14% (4351) ? c/s  		 / Progress:		15% (4662) ? c/s  		 - Progress:		16% (4973) ? c/s  		 - Progress:		16% (5000) 5000 c/s (0s +/- 5s)                        \ Progress:		17% (5284) 5000 c/s (0s +/- 5s)                        | Progress:		18% (5595) 5000 c/s (0s +/- 5s)                        / Progress:		19% (5905) 5000 c/s (0s +/- 5s)                        - Progress:		20% (6216) 5000 c/s (0s +/- 4s)                        \ Progress:		21% (6527) 5000 c/s (0s +/- 4s)                        | Progress:		22% (6838) 5000 c/s (0s +/- 4s)                        / Progress:		23% (7148) 5000 c/s (0s +/- 4s)                        - Progress:		24% (7459) 5000 c/s (0s +/- 4s)                        \ Progress:		25% (7770) 5000 c/s (0s +/- 4s)                        | Progress:		26% (8081) 5000 c/s (0s +/- 4s)                        / Progress:		27% (8392) 5000 c/s (0s +/- 4s)                        - Progress:		28% (8702) 5000 c/s (0s +/- 4s)                        \ Progress:		29% (9013) 5000 c/s (0s +/- 4s)                        | Progress:		30% (9324) 5000 c/s (0s +/- 4s)                        / Progress:		31% (9635) 5000 c/s (0s +/- 4s)                        - Progress:		32% (9945) 5000 c/s (0s +/- 4s)                        \ Progress:		33% (10256) 5000 c/s (0s +/- 4s)                       | Progress:		34% (10567) 5000 c/s (1s +/- 4s)                       / Progress:		35% (10878) 5000 c/s (1s +/- 4s)                       - Progress:		36% (11189) 5000 c/s (1s +/- 3s)                       \ Progress:		37% (11499) 5000 c/s (1s +/- 3s)                       | Progress:		38% (11810) 5000 c/s (1s +/- 3s)                       / Progress:		39% (12121) 5000 c/s (1s +/- 3s)                       - Progress:		40% (12432) 5000 c/s (1s +/- 3s)                       \ Progress:		41% (12742) 5000 c/s (1s +/- 3s)                       | Progress:		42% (13053) 5000 c/s (1s +/- 3s)                       / Progress:		43% (13364) 5000 c/s (1s +/- 3s)                       - Progress:		44% (13675) 5000 c/s (1s +/- 3s)                       \ Progress:		45% (13986) 5000 c/s (1s +/- 3s)                       | Progress:		46% (14296) 5000 c/s (1s +/- 3s)                       / Progress:		47% (14607) 5000 c/s (1s +/- 3s)                       - Progress:		48% (14918) 5000 c/s (1s +/- 3s)                       \ Progress:		49% (15229) 5000 c/s (1s +/- 3s)                       | Progress:		50% (15539) 5000 c/s (1s +/- 3s)                       / Progress:		51% (15850) 5000 c/s (1s +/- 3s)                       - Progress:		52% (16161) 5000 c/s (1s +/- 2s)                       \ Progress:		53% (16472) 5000 c/s (1s +/- 2s)                       | Progress:		54% (16783) 5000 c/s (1s +/- 2s)                       / Progress:		55% (17093) 5000 c/s (1s +/- 2s)                       - Progress:		56% (17404) 5000 c/s (1s +/- 2s)                       \ Progress:		57% (17715) 5000 c/s (1s +/- 2s)                       | Progress:		58% (18026) 5000 c/s (1s +/- 2s)                       / Progress:		59% (18337) 5000 c/s (1s +/- 2s)                       - Progress:		60% (18647) 5000 c/s (1s +/- 2s)                       \ Progress:		61% (18958) 5000 c/s (1s +/- 2s)                       | Progress:		62% (19269) 5000 c/s (1s +/- 2s)                       / Progress:		63% (19580) 5000 c/s (1s +/- 2s)                       - Progress:		64% (19890) 5000 c/s (1s +/- 2s)                       \ Progress:		65% (20201) 5000 c/s (1s +/- 2s)                       | Progress:		66% (20512) 5000 c/s (1s +/- 2s)                       / Progress:		67% (20823) 5000 c/s (1s +/- 2s)                       - Progress:		68% (21134) 5000 c/s (1s +/- 1s)                       \ Progress:		69% (21444) 5000 c/s (1s +/- 1s)                       | Progress:		70% (21755) 5000 c/s (1s +/- 1s)                       / Progress:		71% (22066) 5000 c/s (1s +/- 1s)                       - Progress:		72% (22377) 5000 c/s (1s +/- 1s)                       \ Progress:		73% (22687) 5000 c/s (1s +/- 1s)                       | Progress:		74% (22998) 5000 c/s (1s +/- 1s)                       / Progress:		75% (23309) 5000 c/s (1s +/- 1s)                       - Progress:		76% (23620) 5000 c/s (1s +/- 1s)                       \ Progress:		77% (23931) 5000 c/s (1s +/- 1s)                       | Progress:		78% (24241) 5000 c/s (1s +/- 1s)                       / Progress:		79% (24552) 5000 c/s (1s +/- 1s)                       - Progress:		80% (24863) 5000 c/s (1s +/- 1s)                       \ Progress:		81% (25174) 5000 c/s (1s +/- 1s)                       | Progress:		82% (25484) 5000 c/s (1s +/- 1s)                       / Progress:		83% (25795) 5000 c/s (1s +/- 1s)                       - Progress:		84% (26106) 5000 c/s (1s +/- <1s)                      \ Progress:		85% (26417) 5000 c/s (1s +/- <1s)                      | Progress:		86% (26728) 5000 c/s (1s +/- <1s)                      / Progress:		87% (27038) 5000 c/s (1s +/- <1s)                      - Progress:		88% (27349) 5000 c/s (1s +/- <1s)                      \ Progress:		89% (27660) 5000 c/s (1s +/- <1s)                      | Progress:		90% (27971) 5000 c/s (1s +/- <1s)                      / Progress:		91% (28281) 5000 c/s (1s +/- <1s)                      - Progress:		92% (28592) 5000 c/s (1s +/- <1s)                      \ Progress:		93% (28903) 5000 c/s (1s +/- <1s)                      | Progress:		94% (29214) 5000 c/s (1s +/- <1s)                      / Progress:		95% (29525) 5000 c/s (1s +/- <1s)                      - Progress:		96% (29835) 5000 c/s (1s +/- <1s)                      \ Progress:		97% (30146) 5000 c/s (1s +/- <1s)                      | Progress:		98% (30457) 5000 c/s (1s +/- <1s)                      / Progress:		99% (30768) 5000 c/s (1s +/- <1s)                      * Time:    		Compressing the database took 0.222316 seconds.		
 * Result:		(78a,70u,1834,12763,2857,15621)
** Writing FIC database to file
 * File:		train14.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-12d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		8506
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(80a,0u,2016,11444,1143,12586)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (86) ? c/s  		 | Progress:		2% (171) ? c/s  		 / Progress:		3% (256) ? c/s  		 - Progress:		4% (341) ? c/s  		 \ Progress:		5% (426) ? c/s  		 | Progress:		6% (511) ? c/s  		 / Progress:		7% (596) ? c/s  		 - Progress:		8% (681) ? c/s  		 \ Progress:		9% (766) ? c/s  		 | Progress:		10% (851) ? c/s  		 / Progress:		11% (936) ? c/s  		 - Progress:		12% (1021) ? c/s  		 \ Progress:		13% (1106) ? c/s  		 | Progress:		14% (1191) ? c/s  		 / Progress:		15% (1276) ? c/s  		 - Progress:		16% (1361) ? c/s  		 \ Progress:		17% (1447) ? c/s  		 | Progress:		18% (1532) ? c/s  		 / Progress:		19% (1617) ? c/s  		 - Progress:		20% (1702) ? c/s  		 \ Progress:		21% (1787) ? c/s  		 | Progress:		22% (1872) ? c/s  		 / Progress:		23% (1957) ? c/s  		 - Progress:		24% (2042) ? c/s  		 \ Progress:		25% (2127) ? c/s  		 | Progress:		26% (2212) ? c/s  		 / Progress:		27% (2297) ? c/s  		 - Progress:		28% (2382) ? c/s  		 \ Progress:		29% (2467) ? c/s  		 | Progress:		30% (2552) ? c/s  		 / Progress:		31% (2637) ? c/s  		 - Progress:		32% (2722) ? c/s  		 \ Progress:		33% (2807) ? c/s  		 | Progress:		34% (2893) ? c/s  		 / Progress:		35% (2978) ? c/s  		 - Progress:		36% (3063) ? c/s  		 \ Progress:		37% (3148) ? c/s  		 | Progress:		38% (3233) ? c/s  		 / Progress:		39% (3318) ? c/s  		 - Progress:		40% (3403) ? c/s  		 \ Progress:		41% (3488) ? c/s  		 | Progress:		42% (3573) ? c/s  		 / Progress:		43% (3658) ? c/s  		 - Progress:		44% (3743) ? c/s  		 \ Progress:		45% (3828) ? c/s  		 | Progress:		46% (3913) ? c/s  		 / Progress:		47% (3998) ? c/s  		 - Progress:		48% (4083) ? c/s  		 \ Progress:		49% (4168) ? c/s  		 | Progress:		50% (4253) ? c/s  		 / Progress:		51% (4339) ? c/s  		 - Progress:		52% (4424) ? c/s  		 \ Progress:		53% (4509) ? c/s  		 | Progress:		54% (4594) ? c/s  		 / Progress:		55% (4679) ? c/s  		 - Progress:		56% (4764) ? c/s  		 \ Progress:		57% (4849) ? c/s  		 | Progress:		58% (4934) ? c/s  		 | Progress:		58% (5000) 5000 c/s (0s +/- <1s)                       / Progress:		59% (5019) 5000 c/s (0s +/- <1s)                       - Progress:		60% (5104) 5000 c/s (0s +/- <1s)                       \ Progress:		61% (5189) 5000 c/s (0s +/- <1s)                       | Progress:		62% (5274) 5000 c/s (0s +/- <1s)                       / Progress:		63% (5359) 5000 c/s (0s +/- <1s)                       - Progress:		64% (5444) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (5529) 5000 c/s (0s +/- <1s)                       | Progress:		66% (5614) 5000 c/s (0s +/- <1s)                       / Progress:		67% (5700) 5000 c/s (0s +/- <1s)                       - Progress:		68% (5785) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (5870) 5000 c/s (0s +/- <1s)                       | Progress:		70% (5955) 5000 c/s (0s +/- <1s)                       / Progress:		71% (6040) 5000 c/s (0s +/- <1s)                       - Progress:		72% (6125) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (6210) 5000 c/s (0s +/- <1s)                       | Progress:		74% (6295) 5000 c/s (0s +/- <1s)                       / Progress:		75% (6380) 5000 c/s (0s +/- <1s)                       - Progress:		76% (6465) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (6550) 5000 c/s (0s +/- <1s)                       | Progress:		78% (6635) 5000 c/s (0s +/- <1s)                       / Progress:		79% (6720) 5000 c/s (0s +/- <1s)                       - Progress:		80% (6805) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (6890) 5000 c/s (0s +/- <1s)                       | Progress:		82% (6975) 5000 c/s (0s +/- <1s)                       / Progress:		83% (7060) 5000 c/s (0s +/- <1s)                       - Progress:		84% (7146) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (7231) 5000 c/s (0s +/- <1s)                       | Progress:		86% (7316) 5000 c/s (0s +/- <1s)                       / Progress:		87% (7401) 5000 c/s (0s +/- <1s)                       - Progress:		88% (7486) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (7571) 5000 c/s (0s +/- <1s)                       | Progress:		90% (7656) 5000 c/s (0s +/- <1s)                       / Progress:		91% (7741) 5000 c/s (0s +/- <1s)                       - Progress:		92% (7826) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (7911) 5000 c/s (0s +/- <1s)                       | Progress:		94% (7996) 5000 c/s (0s +/- <1s)                       / Progress:		95% (8081) 5000 c/s (0s +/- <1s)                       - Progress:		96% (8166) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (8251) 5000 c/s (0s +/- <1s)                       | Progress:		98% (8336) 5000 c/s (0s +/- <1s)                       / Progress:		99% (8421) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.049714 seconds.		
 * Result:		(76a,41u,1138,7522,2101,9623)
 * Creating:			fold 8
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 8
** Writing FIC database to file
 * File:		train5.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-12d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		28844
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(80a,0u,3516,19959,1154,21113)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (289) ? c/s  		 | Progress:		2% (577) ? c/s  		 / Progress:		3% (866) ? c/s  		 - Progress:		4% (1154) ? c/s  		 \ Progress:		5% (1443) ? c/s  		 | Progress:		6% (1731) ? c/s  		 / Progress:		7% (2020) ? c/s  		 - Progress:		8% (2308) ? c/s  		 \ Progress:		9% (2596) ? c/s  		 | Progress:		10% (2885) ? c/s  		 / Progress:		11% (3173) ? c/s  		 - Progress:		12% (3462) ? c/s  		 \ Progress:		13% (3750) ? c/s  		 | Progress:		14% (4039) ? c/s  		 / Progress:		15% (4327) ? c/s  		 - Progress:		16% (4616) ? c/s  		 \ Progress:		17% (4904) ? c/s  		 \ Progress:		17% (5000) 5000 c/s (0s +/- 4s)                        | Progress:		18% (5192) 5000 c/s (0s +/- 4s)                        / Progress:		19% (5481) 5000 c/s (0s +/- 4s)                        - Progress:		20% (5769) 5000 c/s (0s +/- 4s)                        \ Progress:		21% (6058) 5000 c/s (0s +/- 4s)                        | Progress:		22% (6346) 5000 c/s (0s +/- 4s)                        / Progress:		23% (6635) 5000 c/s (0s +/- 4s)                        - Progress:		24% (6923) 5000 c/s (0s +/- 4s)                        \ Progress:		25% (7211) 5000 c/s (0s +/- 4s)                        | Progress:		26% (7500) 5000 c/s (0s +/- 4s)                        / Progress:		27% (7788) 5000 c/s (0s +/- 4s)                        - Progress:		28% (8077) 5000 c/s (0s +/- 4s)                        \ Progress:		29% (8365) 5000 c/s (0s +/- 4s)                        | Progress:		30% (8654) 5000 c/s (0s +/- 4s)                        / Progress:		31% (8942) 5000 c/s (0s +/- 3s)                        - Progress:		32% (9231) 5000 c/s (0s +/- 3s)                        \ Progress:		33% (9519) 5000 c/s (0s +/- 3s)                        | Progress:		34% (9807) 5000 c/s (0s +/- 3s)                        / Progress:		35% (10096) 5000 c/s (0s +/- 3s)                       - Progress:		36% (10384) 5000 c/s (0s +/- 3s)                       \ Progress:		37% (10673) 5000 c/s (0s +/- 3s)                       | Progress:		38% (10961) 5000 c/s (0s +/- 3s)                       / Progress:		39% (11250) 5000 c/s (0s +/- 3s)                       - Progress:		40% (11538) 5000 c/s (0s +/- 3s)                       \ Progress:		41% (11827) 5000 c/s (0s +/- 3s)                       | Progress:		42% (12115) 5000 c/s (0s +/- 3s)                       / Progress:		43% (12403) 5000 c/s (0s +/- 3s)                       - Progress:		44% (12692) 5000 c/s (0s +/- 3s)                       \ Progress:		45% (12980) 5000 c/s (0s +/- 3s)                       | Progress:		46% (13269) 5000 c/s (0s +/- 3s)                       / Progress:		47% (13557) 5000 c/s (0s +/- 3s)                       - Progress:		48% (13846) 5000 c/s (0s +/- 2s)                       \ Progress:		49% (14134) 5000 c/s (0s +/- 2s)                       | Progress:		50% (14422) 5000 c/s (0s +/- 2s)                       / Progress:		51% (14711) 5000 c/s (0s +/- 2s)                       - Progress:		52% (14999) 5000 c/s (0s +/- 2s)                       \ Progress:		53% (15288) 5000 c/s (0s +/- 2s)                       | Progress:		54% (15576) 5000 c/s (0s +/- 2s)                       / Progress:		55% (15865) 5000 c/s (0s +/- 2s)                       - Progress:		56% (16153) 5000 c/s (0s +/- 2s)                       \ Progress:		57% (16442) 5000 c/s (0s +/- 2s)                       | Progress:		58% (16730) 5000 c/s (0s +/- 2s)                       / Progress:		59% (17018) 5000 c/s (0s +/- 2s)                       - Progress:		60% (17307) 5000 c/s (0s +/- 2s)                       \ Progress:		61% (17595) 5000 c/s (0s +/- 2s)                       | Progress:		62% (17884) 5000 c/s (0s +/- 2s)                       / Progress:		63% (18172) 5000 c/s (0s +/- 2s)                       - Progress:		64% (18461) 5000 c/s (0s +/- 2s)                       \ Progress:		65% (18749) 5000 c/s (0s +/- 2s)                       | Progress:		66% (19038) 5000 c/s (0s +/- 1s)                       / Progress:		67% (19326) 5000 c/s (0s +/- 1s)                       - Progress:		68% (19614) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (19903) 5000 c/s (0s +/- 1s)                       | Progress:		70% (20191) 5000 c/s (0s +/- 1s)                       / Progress:		71% (20480) 5000 c/s (0s +/- 1s)                       - Progress:		72% (20768) 5000 c/s (0s +/- 1s)                       \ Progress:		73% (21057) 5000 c/s (0s +/- 1s)                       | Progress:		74% (21345) 5000 c/s (0s +/- 1s)                       / Progress:		75% (21633) 5000 c/s (0s +/- 1s)                       - Progress:		76% (21922) 5000 c/s (0s +/- 1s)                       \ Progress:		77% (22210) 5000 c/s (0s +/- 1s)                       | Progress:		78% (22499) 5000 c/s (0s +/- 1s)                       / Progress:		79% (22787) 5000 c/s (0s +/- 1s)                       - Progress:		80% (23076) 5000 c/s (0s +/- 1s)                       \ Progress:		81% (23364) 5000 c/s (0s +/- 1s)                       | Progress:		82% (23653) 5000 c/s (0s +/- 1s)                       / Progress:		83% (23941) 5000 c/s (0s +/- <1s)                      - Progress:		84% (24229) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (24518) 5000 c/s (0s +/- <1s)                      | Progress:		86% (24806) 5000 c/s (0s +/- <1s)                      / Progress:		87% (25095) 5000 c/s (0s +/- <1s)                      - Progress:		88% (25383) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (25672) 5000 c/s (0s +/- <1s)                      | Progress:		90% (25960) 5000 c/s (0s +/- <1s)                      / Progress:		91% (26249) 5000 c/s (0s +/- <1s)                      - Progress:		92% (26537) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (26825) 5000 c/s (0s +/- <1s)                      | Progress:		94% (27114) 5000 c/s (0s +/- <1s)                      / Progress:		95% (27402) 5000 c/s (0s +/- <1s)                      - Progress:		96% (27691) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (27979) 5000 c/s (0s +/- <1s)                      | Progress:		98% (28268) 5000 c/s (0s +/- <1s)                      / Progress:		99% (28556) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.203773 seconds.		
 * Result:		(78a,69u,1818,12581,2843,15424)
** Writing FIC database to file
 * File:		train14.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-12d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		9323
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(80a,0u,2041,11571,1147,12717)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (94) ? c/s  		 | Progress:		2% (187) ? c/s  		 / Progress:		3% (280) ? c/s  		 - Progress:		4% (373) ? c/s  		 \ Progress:		5% (467) ? c/s  		 | Progress:		6% (560) ? c/s  		 / Progress:		7% (653) ? c/s  		 - Progress:		8% (746) ? c/s  		 \ Progress:		9% (840) ? c/s  		 | Progress:		10% (933) ? c/s  		 / Progress:		11% (1026) ? c/s  		 - Progress:		12% (1119) ? c/s  		 \ Progress:		13% (1212) ? c/s  		 | Progress:		14% (1306) ? c/s  		 / Progress:		15% (1399) ? c/s  		 - Progress:		16% (1492) ? c/s  		 \ Progress:		17% (1585) ? c/s  		 | Progress:		18% (1679) ? c/s  		 / Progress:		19% (1772) ? c/s  		 - Progress:		20% (1865) ? c/s  		 \ Progress:		21% (1958) ? c/s  		 | Progress:		22% (2052) ? c/s  		 / Progress:		23% (2145) ? c/s  		 - Progress:		24% (2238) ? c/s  		 \ Progress:		25% (2331) ? c/s  		 | Progress:		26% (2424) ? c/s  		 / Progress:		27% (2518) ? c/s  		 - Progress:		28% (2611) ? c/s  		 \ Progress:		29% (2704) ? c/s  		 | Progress:		30% (2797) ? c/s  		 / Progress:		31% (2891) ? c/s  		 - Progress:		32% (2984) ? c/s  		 \ Progress:		33% (3077) ? c/s  		 | Progress:		34% (3170) ? c/s  		 / Progress:		35% (3264) ? c/s  		 - Progress:		36% (3357) ? c/s  		 \ Progress:		37% (3450) ? c/s  		 | Progress:		38% (3543) ? c/s  		 / Progress:		39% (3636) ? c/s  		 - Progress:		40% (3730) ? c/s  		 \ Progress:		41% (3823) ? c/s  		 | Progress:		42% (3916) ? c/s  		 / Progress:		43% (4009) ? c/s  		 - Progress:		44% (4103) ? c/s  		 \ Progress:		45% (4196) ? c/s  		 | Progress:		46% (4289) ? c/s  		 / Progress:		47% (4382) ? c/s  		 - Progress:		48% (4476) ? c/s  		 \ Progress:		49% (4569) ? c/s  		 | Progress:		50% (4662) ? c/s  		 / Progress:		51% (4755) ? c/s  		 - Progress:		52% (4848) ? c/s  		 \ Progress:		53% (4942) ? c/s  		 \ Progress:		53% (5000) 5000 c/s (0s +/- <1s)                       | Progress:		54% (5035) 5000 c/s (0s +/- <1s)                       / Progress:		55% (5128) 5000 c/s (0s +/- <1s)                       - Progress:		56% (5221) 5000 c/s (0s +/- <1s)                       \ Progress:		57% (5315) 5000 c/s (0s +/- <1s)                       | Progress:		58% (5408) 5000 c/s (0s +/- <1s)                       / Progress:		59% (5501) 5000 c/s (0s +/- <1s)                       - Progress:		60% (5594) 5000 c/s (0s +/- <1s)                       \ Progress:		61% (5688) 5000 c/s (0s +/- <1s)                       | Progress:		62% (5781) 5000 c/s (0s +/- <1s)                       / Progress:		63% (5874) 5000 c/s (0s +/- <1s)                       - Progress:		64% (5967) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (6060) 5000 c/s (0s +/- <1s)                       | Progress:		66% (6154) 5000 c/s (0s +/- <1s)                       / Progress:		67% (6247) 5000 c/s (0s +/- <1s)                       - Progress:		68% (6340) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (6433) 5000 c/s (0s +/- <1s)                       | Progress:		70% (6527) 5000 c/s (0s +/- <1s)                       / Progress:		71% (6620) 5000 c/s (0s +/- <1s)                       - Progress:		72% (6713) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (6806) 5000 c/s (0s +/- <1s)                       | Progress:		74% (6900) 5000 c/s (0s +/- <1s)                       / Progress:		75% (6993) 5000 c/s (0s +/- <1s)                       - Progress:		76% (7086) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (7179) 5000 c/s (0s +/- <1s)                       | Progress:		78% (7272) 5000 c/s (0s +/- <1s)                       / Progress:		79% (7366) 5000 c/s (0s +/- <1s)                       - Progress:		80% (7459) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (7552) 5000 c/s (0s +/- <1s)                       | Progress:		82% (7645) 5000 c/s (0s +/- <1s)                       / Progress:		83% (7739) 5000 c/s (0s +/- <1s)                       - Progress:		84% (7832) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (7925) 5000 c/s (0s +/- <1s)                       | Progress:		86% (8018) 5000 c/s (0s +/- <1s)                       / Progress:		87% (8112) 5000 c/s (0s +/- <1s)                       - Progress:		88% (8205) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (8298) 5000 c/s (0s +/- <1s)                       | Progress:		90% (8391) 5000 c/s (0s +/- <1s)                       / Progress:		91% (8484) 5000 c/s (0s +/- <1s)                       - Progress:		92% (8578) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (8671) 5000 c/s (0s +/- <1s)                       | Progress:		94% (8764) 5000 c/s (0s +/- <1s)                       / Progress:		95% (8857) 5000 c/s (0s +/- <1s)                       - Progress:		96% (8951) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (9044) 5000 c/s (0s +/- <1s)                       | Progress:		98% (9137) 5000 c/s (0s +/- <1s)                       / Progress:		99% (9230) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.049943 seconds.		
 * Result:		(78a,43u,1167,7736,2143,9879)
 * Creating:			fold 9
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 9
** Writing FIC database to file
 * File:		train5.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-12d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		29884
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(81a,0u,3558,20227,1173,21400)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (299) ? c/s  		 | Progress:		2% (598) ? c/s  		 / Progress:		3% (897) ? c/s  		 - Progress:		4% (1196) ? c/s  		 \ Progress:		5% (1495) ? c/s  		 | Progress:		6% (1794) ? c/s  		 / Progress:		7% (2092) ? c/s  		 - Progress:		8% (2391) ? c/s  		 \ Progress:		9% (2690) ? c/s  		 | Progress:		10% (2989) ? c/s  		 / Progress:		11% (3288) ? c/s  		 - Progress:		12% (3587) ? c/s  		 \ Progress:		13% (3885) ? c/s  		 | Progress:		14% (4184) ? c/s  		 / Progress:		15% (4483) ? c/s  		 - Progress:		16% (4782) ? c/s  		 - Progress:		16% (5000) 5000 c/s (0s +/- 4s)                        \ Progress:		17% (5081) 5000 c/s (0s +/- 4s)                        | Progress:		18% (5380) 5000 c/s (0s +/- 4s)                        / Progress:		19% (5678) 5000 c/s (0s +/- 4s)                        - Progress:		20% (5977) 5000 c/s (0s +/- 4s)                        \ Progress:		21% (6276) 5000 c/s (0s +/- 4s)                        | Progress:		22% (6575) 5000 c/s (0s +/- 4s)                        / Progress:		23% (6874) 5000 c/s (0s +/- 4s)                        - Progress:		24% (7173) 5000 c/s (0s +/- 4s)                        \ Progress:		25% (7471) 5000 c/s (0s +/- 4s)                        | Progress:		26% (7770) 5000 c/s (0s +/- 4s)                        / Progress:		27% (8069) 5000 c/s (0s +/- 4s)                        - Progress:		28% (8368) 5000 c/s (0s +/- 4s)                        \ Progress:		29% (8667) 5000 c/s (0s +/- 4s)                        | Progress:		30% (8966) 5000 c/s (0s +/- 4s)                        / Progress:		31% (9265) 5000 c/s (0s +/- 4s)                        - Progress:		32% (9563) 5000 c/s (0s +/- 4s)                        \ Progress:		33% (9862) 5000 c/s (0s +/- 4s)                        | Progress:		34% (10161) 5000 c/s (0s +/- 3s)                       / Progress:		35% (10460) 5000 c/s (0s +/- 3s)                       - Progress:		36% (10759) 5000 c/s (0s +/- 3s)                       \ Progress:		37% (11058) 5000 c/s (0s +/- 3s)                       | Progress:		38% (11356) 5000 c/s (0s +/- 3s)                       / Progress:		39% (11655) 5000 c/s (0s +/- 3s)                       - Progress:		40% (11954) 5000 c/s (0s +/- 3s)                       \ Progress:		41% (12253) 5000 c/s (0s +/- 3s)                       | Progress:		42% (12552) 5000 c/s (0s +/- 3s)                       / Progress:		43% (12851) 5000 c/s (0s +/- 3s)                       - Progress:		44% (13149) 5000 c/s (0s +/- 3s)                       \ Progress:		45% (13448) 5000 c/s (0s +/- 3s)                       | Progress:		46% (13747) 5000 c/s (0s +/- 3s)                       / Progress:		47% (14046) 5000 c/s (0s +/- 3s)                       - Progress:		48% (14345) 5000 c/s (0s +/- 3s)                       \ Progress:		49% (14644) 5000 c/s (0s +/- 3s)                       | Progress:		50% (14942) 5000 c/s (0s +/- 2s)                       / Progress:		51% (15241) 5000 c/s (0s +/- 2s)                       - Progress:		52% (15540) 5000 c/s (0s +/- 2s)                       \ Progress:		53% (15839) 5000 c/s (0s +/- 2s)                       | Progress:		54% (16138) 5000 c/s (0s +/- 2s)                       / Progress:		55% (16437) 5000 c/s (0s +/- 2s)                       - Progress:		56% (16736) 5000 c/s (0s +/- 2s)                       \ Progress:		57% (17034) 5000 c/s (0s +/- 2s)                       | Progress:		58% (17333) 5000 c/s (0s +/- 2s)                       / Progress:		59% (17632) 5000 c/s (0s +/- 2s)                       - Progress:		60% (17931) 5000 c/s (0s +/- 2s)                       \ Progress:		61% (18230) 5000 c/s (0s +/- 2s)                       | Progress:		62% (18529) 5000 c/s (0s +/- 2s)                       / Progress:		63% (18827) 5000 c/s (0s +/- 2s)                       - Progress:		64% (19126) 5000 c/s (0s +/- 2s)                       \ Progress:		65% (19425) 5000 c/s (0s +/- 2s)                       | Progress:		66% (19724) 5000 c/s (0s +/- 2s)                       / Progress:		67% (20023) 5000 c/s (0s +/- 1s)                       - Progress:		68% (20322) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (20620) 5000 c/s (0s +/- 1s)                       | Progress:		70% (20919) 5000 c/s (0s +/- 1s)                       / Progress:		71% (21218) 5000 c/s (0s +/- 1s)                       - Progress:		72% (21517) 5000 c/s (0s +/- 1s)                       \ Progress:		73% (21816) 5000 c/s (0s +/- 1s)                       | Progress:		74% (22115) 5000 c/s (0s +/- 1s)                       / Progress:		75% (22413) 5000 c/s (0s +/- 1s)                       - Progress:		76% (22712) 5000 c/s (0s +/- 1s)                       \ Progress:		77% (23011) 5000 c/s (0s +/- 1s)                       | Progress:		78% (23310) 5000 c/s (0s +/- 1s)                       / Progress:		79% (23609) 5000 c/s (0s +/- 1s)                       - Progress:		80% (23908) 5000 c/s (0s +/- 1s)                       \ Progress:		81% (24207) 5000 c/s (0s +/- 1s)                       | Progress:		82% (24505) 5000 c/s (0s +/- 1s)                       / Progress:		83% (24804) 5000 c/s (0s +/- 1s)                       - Progress:		84% (25103) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (25402) 5000 c/s (0s +/- <1s)                      | Progress:		86% (25701) 5000 c/s (0s +/- <1s)                      / Progress:		87% (26000) 5000 c/s (0s +/- <1s)                      - Progress:		88% (26298) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (26597) 5000 c/s (0s +/- <1s)                      | Progress:		90% (26896) 5000 c/s (0s +/- <1s)                      / Progress:		91% (27195) 5000 c/s (0s +/- <1s)                      - Progress:		92% (27494) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (27793) 5000 c/s (0s +/- <1s)                      | Progress:		94% (28091) 5000 c/s (0s +/- <1s)                      / Progress:		95% (28390) 5000 c/s (0s +/- <1s)                      - Progress:		96% (28689) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (28988) 5000 c/s (0s +/- <1s)                      | Progress:		98% (29287) 5000 c/s (0s +/- <1s)                      / Progress:		99% (29586) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.176740 seconds.		
 * Result:		(79a,70u,1861,12870,2922,15791)
** Writing FIC database to file
 * File:		train14.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-12d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		8782
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(79a,0u,1984,11204,1128,12333)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (88) ? c/s  		 | Progress:		2% (176) ? c/s  		 / Progress:		3% (264) ? c/s  		 - Progress:		4% (352) ? c/s  		 \ Progress:		5% (440) ? c/s  		 | Progress:		6% (527) ? c/s  		 / Progress:		7% (615) ? c/s  		 - Progress:		8% (703) ? c/s  		 \ Progress:		9% (791) ? c/s  		 | Progress:		10% (879) ? c/s  		 / Progress:		11% (967) ? c/s  		 - Progress:		12% (1054) ? c/s  		 \ Progress:		13% (1142) ? c/s  		 | Progress:		14% (1230) ? c/s  		 / Progress:		15% (1318) ? c/s  		 - Progress:		16% (1406) ? c/s  		 \ Progress:		17% (1493) ? c/s  		 | Progress:		18% (1581) ? c/s  		 / Progress:		19% (1669) ? c/s  		 - Progress:		20% (1757) ? c/s  		 \ Progress:		21% (1845) ? c/s  		 | Progress:		22% (1933) ? c/s  		 / Progress:		23% (2020) ? c/s  		 - Progress:		24% (2108) ? c/s  		 \ Progress:		25% (2196) ? c/s  		 | Progress:		26% (2284) ? c/s  		 / Progress:		27% (2372) ? c/s  		 - Progress:		28% (2459) ? c/s  		 \ Progress:		29% (2547) ? c/s  		 | Progress:		30% (2635) ? c/s  		 / Progress:		31% (2723) ? c/s  		 - Progress:		32% (2811) ? c/s  		 \ Progress:		33% (2899) ? c/s  		 | Progress:		34% (2986) ? c/s  		 / Progress:		35% (3074) ? c/s  		 - Progress:		36% (3162) ? c/s  		 \ Progress:		37% (3250) ? c/s  		 | Progress:		38% (3338) ? c/s  		 / Progress:		39% (3425) ? c/s  		 - Progress:		40% (3513) ? c/s  		 \ Progress:		41% (3601) ? c/s  		 | Progress:		42% (3689) ? c/s  		 / Progress:		43% (3777) ? c/s  		 - Progress:		44% (3865) ? c/s  		 \ Progress:		45% (3952) ? c/s  		 | Progress:		46% (4040) ? c/s  		 / Progress:		47% (4128) ? c/s  		 - Progress:		48% (4216) ? c/s  		 \ Progress:		49% (4304) ? c/s  		 | Progress:		50% (4391) ? c/s  		 / Progress:		51% (4479) ? c/s  		 - Progress:		52% (4567) ? c/s  		 \ Progress:		53% (4655) ? c/s  		 | Progress:		54% (4743) ? c/s  		 / Progress:		55% (4831) ? c/s  		 - Progress:		56% (4918) ? c/s  		 - Progress:		56% (5000) 5000 c/s (0s +/- <1s)                       \ Progress:		57% (5006) 5000 c/s (0s +/- <1s)                       | Progress:		58% (5094) 5000 c/s (0s +/- <1s)                       / Progress:		59% (5182) 5000 c/s (0s +/- <1s)                       - Progress:		60% (5270) 5000 c/s (0s +/- <1s)                       \ Progress:		61% (5358) 5000 c/s (0s +/- <1s)                       | Progress:		62% (5445) 5000 c/s (0s +/- <1s)                       / Progress:		63% (5533) 5000 c/s (0s +/- <1s)                       - Progress:		64% (5621) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (5709) 5000 c/s (0s +/- <1s)                       | Progress:		66% (5797) 5000 c/s (0s +/- <1s)                       / Progress:		67% (5884) 5000 c/s (0s +/- <1s)                       - Progress:		68% (5972) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (6060) 5000 c/s (0s +/- <1s)                       | Progress:		70% (6148) 5000 c/s (0s +/- <1s)                       / Progress:		71% (6236) 5000 c/s (0s +/- <1s)                       - Progress:		72% (6324) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (6411) 5000 c/s (0s +/- <1s)                       | Progress:		74% (6499) 5000 c/s (0s +/- <1s)                       / Progress:		75% (6587) 5000 c/s (0s +/- <1s)                       - Progress:		76% (6675) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (6763) 5000 c/s (0s +/- <1s)                       | Progress:		78% (6850) 5000 c/s (0s +/- <1s)                       / Progress:		79% (6938) 5000 c/s (0s +/- <1s)                       - Progress:		80% (7026) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (7114) 5000 c/s (0s +/- <1s)                       | Progress:		82% (7202) 5000 c/s (0s +/- <1s)                       / Progress:		83% (7290) 5000 c/s (0s +/- <1s)                       - Progress:		84% (7377) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (7465) 5000 c/s (0s +/- <1s)                       | Progress:		86% (7553) 5000 c/s (0s +/- <1s)                       / Progress:		87% (7641) 5000 c/s (0s +/- <1s)                       - Progress:		88% (7729) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (7816) 5000 c/s (0s +/- <1s)                       | Progress:		90% (7904) 5000 c/s (0s +/- <1s)                       / Progress:		91% (7992) 5000 c/s (0s +/- <1s)                       - Progress:		92% (8080) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (8168) 5000 c/s (0s +/- <1s)                       | Progress:		94% (8256) 5000 c/s (0s +/- <1s)                       / Progress:		95% (8343) 5000 c/s (0s +/- <1s)                       - Progress:		96% (8431) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (8519) 5000 c/s (0s +/- <1s)                       | Progress:		98% (8607) 5000 c/s (0s +/- <1s)                       / Progress:		99% (8695) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.047589 seconds.		
 * Result:		(74a,43u,1106,7296,2129,9424)
 * Creating:			fold 10
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 10
** Writing FIC database to file
 * File:		train5.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-12d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		26904
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(81a,0u,3469,19692,1180,20872)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (270) ? c/s  		 | Progress:		2% (539) ? c/s  		 / Progress:		3% (808) ? c/s  		 - Progress:		4% (1077) ? c/s  		 \ Progress:		5% (1346) ? c/s  		 | Progress:		6% (1615) ? c/s  		 / Progress:		7% (1884) ? c/s  		 - Progress:		8% (2153) ? c/s  		 \ Progress:		9% (2422) ? c/s  		 | Progress:		10% (2691) ? c/s  		 / Progress:		11% (2960) ? c/s  		 - Progress:		12% (3229) ? c/s  		 \ Progress:		13% (3498) ? c/s  		 | Progress:		14% (3767) ? c/s  		 / Progress:		15% (4036) ? c/s  		 - Progress:		16% (4305) ? c/s  		 \ Progress:		17% (4574) ? c/s  		 | Progress:		18% (4843) ? c/s  		 | Progress:		18% (5000) 5000 c/s (0s +/- 4s)                        / Progress:		19% (5112) 5000 c/s (0s +/- 4s)                        - Progress:		20% (5381) 5000 c/s (0s +/- 4s)                        \ Progress:		21% (5650) 5000 c/s (0s +/- 4s)                        | Progress:		22% (5919) 5000 c/s (0s +/- 4s)                        / Progress:		23% (6188) 5000 c/s (0s +/- 4s)                        - Progress:		24% (6457) 5000 c/s (0s +/- 4s)                        \ Progress:		25% (6726) 5000 c/s (0s +/- 4s)                        | Progress:		26% (6996) 5000 c/s (0s +/- 3s)                        / Progress:		27% (7265) 5000 c/s (0s +/- 3s)                        - Progress:		28% (7534) 5000 c/s (0s +/- 3s)                        \ Progress:		29% (7803) 5000 c/s (0s +/- 3s)                        | Progress:		30% (8072) 5000 c/s (0s +/- 3s)                        / Progress:		31% (8341) 5000 c/s (0s +/- 3s)                        - Progress:		32% (8610) 5000 c/s (0s +/- 3s)                        \ Progress:		33% (8879) 5000 c/s (0s +/- 3s)                        | Progress:		34% (9148) 5000 c/s (0s +/- 3s)                        / Progress:		35% (9417) 5000 c/s (0s +/- 3s)                        - Progress:		36% (9686) 5000 c/s (0s +/- 3s)                        \ Progress:		37% (9955) 5000 c/s (0s +/- 3s)                        | Progress:		38% (10224) 5000 c/s (0s +/- 3s)                       / Progress:		39% (10493) 5000 c/s (0s +/- 3s)                       - Progress:		40% (10762) 5000 c/s (0s +/- 3s)                       \ Progress:		41% (11031) 5000 c/s (0s +/- 3s)                       | Progress:		42% (11300) 5000 c/s (0s +/- 3s)                       / Progress:		43% (11569) 5000 c/s (0s +/- 3s)                       - Progress:		44% (11838) 5000 c/s (0s +/- 3s)                       \ Progress:		45% (12107) 5000 c/s (0s +/- 2s)                       | Progress:		46% (12376) 5000 c/s (0s +/- 2s)                       / Progress:		47% (12645) 5000 c/s (0s +/- 2s)                       - Progress:		48% (12914) 5000 c/s (0s +/- 2s)                       \ Progress:		49% (13183) 5000 c/s (0s +/- 2s)                       | Progress:		50% (13452) 5000 c/s (0s +/- 2s)                       / Progress:		51% (13722) 5000 c/s (0s +/- 2s)                       - Progress:		52% (13991) 5000 c/s (0s +/- 2s)                       \ Progress:		53% (14260) 5000 c/s (0s +/- 2s)                       | Progress:		54% (14529) 5000 c/s (0s +/- 2s)                       / Progress:		55% (14798) 5000 c/s (0s +/- 2s)                       - Progress:		56% (15067) 5000 c/s (0s +/- 2s)                       \ Progress:		57% (15336) 5000 c/s (0s +/- 2s)                       | Progress:		58% (15605) 5000 c/s (0s +/- 2s)                       / Progress:		59% (15874) 5000 c/s (0s +/- 2s)                       - Progress:		60% (16143) 5000 c/s (0s +/- 2s)                       \ Progress:		61% (16412) 5000 c/s (0s +/- 2s)                       | Progress:		62% (16681) 5000 c/s (0s +/- 2s)                       / Progress:		63% (16950) 5000 c/s (0s +/- 1s)                       - Progress:		64% (17219) 5000 c/s (0s +/- 1s)                       \ Progress:		65% (17488) 5000 c/s (0s +/- 1s)                       | Progress:		66% (17757) 5000 c/s (0s +/- 1s)                       / Progress:		67% (18026) 5000 c/s (0s +/- 1s)                       - Progress:		68% (18295) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (18564) 5000 c/s (1s +/- 1s)                       | Progress:		70% (18833) 5000 c/s (1s +/- 1s)                       / Progress:		71% (19102) 5000 c/s (1s +/- 1s)                       - Progress:		72% (19371) 5000 c/s (1s +/- 1s)                       \ Progress:		73% (19640) 5000 c/s (1s +/- 1s)                       | Progress:		74% (19909) 5000 c/s (1s +/- 1s)                       / Progress:		75% (20178) 5000 c/s (1s +/- 1s)                       - Progress:		76% (20448) 5000 c/s (1s +/- 1s)                       \ Progress:		77% (20717) 5000 c/s (1s +/- 1s)                       | Progress:		78% (20986) 5000 c/s (1s +/- 1s)                       / Progress:		79% (21255) 5000 c/s (1s +/- 1s)                       - Progress:		80% (21524) 5000 c/s (1s +/- 1s)                       \ Progress:		81% (21793) 5000 c/s (1s +/- 1s)                       | Progress:		82% (22062) 5000 c/s (1s +/- <1s)                      / Progress:		83% (22331) 5000 c/s (1s +/- <1s)                      - Progress:		84% (22600) 5000 c/s (1s +/- <1s)                      \ Progress:		85% (22869) 5000 c/s (1s +/- <1s)                      | Progress:		86% (23138) 5000 c/s (1s +/- <1s)                      / Progress:		87% (23407) 5000 c/s (1s +/- <1s)                      - Progress:		88% (23676) 5000 c/s (1s +/- <1s)                      \ Progress:		89% (23945) 5000 c/s (1s +/- <1s)                      | Progress:		90% (24214) 5000 c/s (1s +/- <1s)                      / Progress:		91% (24483) 5000 c/s (1s +/- <1s)                      - Progress:		92% (24752) 5000 c/s (1s +/- <1s)                      \ Progress:		93% (25021) 5000 c/s (1s +/- <1s)                      | Progress:		94% (25290) 5000 c/s (1s +/- <1s)                      / Progress:		95% (25559) 5000 c/s (1s +/- <1s)                      - Progress:		96% (25828) 5000 c/s (1s +/- <1s)                      \ Progress:		97% (26097) 5000 c/s (1s +/- <1s)                      | Progress:		98% (26366) 5000 c/s (1s +/- <1s)                      / Progress:		99% (26635) 5000 c/s (1s +/- <1s)                      * Time:    		Compressing the database took 0.191756 seconds.		
 * Result:		(80a,66u,1829,12672,2768,15440)
** Writing FIC database to file
 * File:		train14.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-12d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		9608
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(80a,0u,2086,11820,1146,12966)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (97) ? c/s  		 | Progress:		2% (193) ? c/s  		 / Progress:		3% (289) ? c/s  		 - Progress:		4% (385) ? c/s  		 \ Progress:		5% (481) ? c/s  		 | Progress:		6% (577) ? c/s  		 / Progress:		7% (673) ? c/s  		 - Progress:		8% (769) ? c/s  		 \ Progress:		9% (865) ? c/s  		 | Progress:		10% (961) ? c/s  		 / Progress:		11% (1057) ? c/s  		 - Progress:		12% (1153) ? c/s  		 \ Progress:		13% (1250) ? c/s  		 | Progress:		14% (1346) ? c/s  		 / Progress:		15% (1442) ? c/s  		 - Progress:		16% (1538) ? c/s  		 \ Progress:		17% (1634) ? c/s  		 | Progress:		18% (1730) ? c/s  		 / Progress:		19% (1826) ? c/s  		 - Progress:		20% (1922) ? c/s  		 \ Progress:		21% (2018) ? c/s  		 | Progress:		22% (2114) ? c/s  		 / Progress:		23% (2210) ? c/s  		 - Progress:		24% (2306) ? c/s  		 \ Progress:		25% (2402) ? c/s  		 | Progress:		26% (2499) ? c/s  		 / Progress:		27% (2595) ? c/s  		 - Progress:		28% (2691) ? c/s  		 \ Progress:		29% (2787) ? c/s  		 | Progress:		30% (2883) ? c/s  		 / Progress:		31% (2979) ? c/s  		 - Progress:		32% (3075) ? c/s  		 \ Progress:		33% (3171) ? c/s  		 | Progress:		34% (3267) ? c/s  		 / Progress:		35% (3363) ? c/s  		 - Progress:		36% (3459) ? c/s  		 \ Progress:		37% (3555) ? c/s  		 | Progress:		38% (3652) ? c/s  		 / Progress:		39% (3748) ? c/s  		 - Progress:		40% (3844) ? c/s  		 \ Progress:		41% (3940) ? c/s  		 | Progress:		42% (4036) ? c/s  		 / Progress:		43% (4132) ? c/s  		 - Progress:		44% (4228) ? c/s  		 \ Progress:		45% (4324) ? c/s  		 | Progress:		46% (4420) ? c/s  		 / Progress:		47% (4516) ? c/s  		 - Progress:		48% (4612) ? c/s  		 \ Progress:		49% (4708) ? c/s  		 | Progress:		50% (4804) ? c/s  		 / Progress:		51% (4901) ? c/s  		 - Progress:		52% (4997) ? c/s  		 - Progress:		52% (5000) 5000 c/s (0s +/- <1s)                       \ Progress:		53% (5093) 5000 c/s (0s +/- <1s)                       | Progress:		54% (5189) 5000 c/s (0s +/- <1s)                       / Progress:		55% (5285) 5000 c/s (0s +/- <1s)                       - Progress:		56% (5381) 5000 c/s (0s +/- <1s)                       \ Progress:		57% (5477) 5000 c/s (0s +/- <1s)                       | Progress:		58% (5573) 5000 c/s (0s +/- <1s)                       / Progress:		59% (5669) 5000 c/s (0s +/- <1s)                       - Progress:		60% (5765) 5000 c/s (0s +/- <1s)                       \ Progress:		61% (5861) 5000 c/s (0s +/- <1s)                       | Progress:		62% (5957) 5000 c/s (0s +/- <1s)                       / Progress:		63% (6054) 5000 c/s (0s +/- <1s)                       - Progress:		64% (6150) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (6246) 5000 c/s (0s +/- <1s)                       | Progress:		66% (6342) 5000 c/s (0s +/- <1s)                       / Progress:		67% (6438) 5000 c/s (0s +/- <1s)                       - Progress:		68% (6534) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (6630) 5000 c/s (0s +/- <1s)                       | Progress:		70% (6726) 5000 c/s (0s +/- <1s)                       / Progress:		71% (6822) 5000 c/s (0s +/- <1s)                       - Progress:		72% (6918) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (7014) 5000 c/s (0s +/- <1s)                       | Progress:		74% (7110) 5000 c/s (0s +/- <1s)                       / Progress:		75% (7206) 5000 c/s (0s +/- <1s)                       - Progress:		76% (7303) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (7399) 5000 c/s (0s +/- <1s)                       | Progress:		78% (7495) 5000 c/s (0s +/- <1s)                       / Progress:		79% (7591) 5000 c/s (0s +/- <1s)                       - Progress:		80% (7687) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (7783) 5000 c/s (0s +/- <1s)                       | Progress:		82% (7879) 5000 c/s (0s +/- <1s)                       / Progress:		83% (7975) 5000 c/s (0s +/- <1s)                       - Progress:		84% (8071) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (8167) 5000 c/s (0s +/- <1s)                       | Progress:		86% (8263) 5000 c/s (0s +/- <1s)                       / Progress:		87% (8359) 5000 c/s (0s +/- <1s)                       - Progress:		88% (8456) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (8552) 5000 c/s (0s +/- <1s)                       | Progress:		90% (8648) 5000 c/s (0s +/- <1s)                       / Progress:		91% (8744) 5000 c/s (0s +/- <1s)                       - Progress:		92% (8840) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (8936) 5000 c/s (0s +/- <1s)                       | Progress:		94% (9032) 5000 c/s (0s +/- <1s)                       / Progress:		95% (9128) 5000 c/s (0s +/- <1s)                       - Progress:		96% (9224) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (9320) 5000 c/s (0s +/- <1s)                       | Progress:		98% (9416) 5000 c/s (0s +/- <1s)                       / Progress:		99% (9512) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.056193 seconds.		
 * Result:		(78a,39u,1198,7922,2057,9979)

 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/classify/horseColic-all-12d-pop-cccp-20210121082619/

Task `classify`, command `classifycompress` finished. This took 7 seconds.

 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: 'classify.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Classification ::
 * Processing Fold:	1
Starting classification
 * Classifying ct sup:	12     * Classifying:		done
 * Processing Fold:	2
Starting classification
 * Classifying ct sup:	12     * Classifying:		done
 * Processing Fold:	3
Starting classification
 * Classifying ct sup:	12     * Classifying:		done
 * Processing Fold:	4
Starting classification
 * Classifying ct sup:	12     * Classifying:		done
 * Processing Fold:	5
Starting classification
 * Classifying ct sup:	12     * Classifying:		done
 * Processing Fold:	6
Starting classification
 * Classifying ct sup:	12     * Classifying:		done
 * Processing Fold:	7
Starting classification
 * Classifying ct sup:	12     * Classifying:		done
 * Processing Fold:	8
Starting classification
 * Classifying ct sup:	12     * Classifying:		done
 * Processing Fold:	9
Starting classification
 * Classifying ct sup:	12     * Classifying:		done
 * Processing Fold:	10
Starting classification
 * Classifying ct sup:	12     * Classifying:		done
 * Processing Fold:	1
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	2
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	3
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	4
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	5
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	6
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	7
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	8
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	9
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	10
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done


 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/classify/horseColic-all-12d-pop-cccp-20210121082619/

Task `classify`, command `classifyanalyse` finished. This took 5 seconds.



Comparing on horseColic.dat with nb_rows = 368 and minsup = 0.03125
Running	: ./Resources/Krimp/bin/krimp	6453d16c-40dd-456f-8c60-18605a9c7813_convertdb.conf
Running	: ./Resources/Krimp/bin/krimp	9c994667-5894-4a33-a3eb-3173c4e3c357_analysedb.conf
Running	: ./Resources/Krimp/bin/krimp	4a81f7fb-f74a-48cc-8f7a-47184bc8ec90_classifycompress.conf
res_path = /home/arcchitjain/Documents/Mistle/Output/xps/classify/horseColic-all-12d-pop-cccp-20210121082619
krimp_item_dict = {0: 3, 1: 5, 2: 71, 3: 20, 4: 72, 5: 84, 6: 35, 7: 1, 8: 16, 9: 45, 10: 2, 11: 25, 12: 54, 13: 9, 14: 85, 15: 23, 16: 52, 17: 27, 18: 81, 19: 47, 20: 29, 21: 61, 22: 66, 23: 36, 24: 21, 25: 46, 26: 51, 27: 49, 28: 40, 29: 31, 30: 39, 31: 48, 32: 57, 33: 58, 34: 15, 35: 11, 36: 7, 37: 78, 38: 60, 39: 79, 40: 13, 41: 74, 42: 65, 43: 77, 44: 42, 45: 32, 46: 56, 47: 43, 48: 38, 49: 41, 50: 55, 51: 6, 52: 70, 53: 50, 54: 22, 55: 30, 56: 24, 57: 18, 58: 62, 59: 33, 60: 4, 61: 53, 62: 34, 63: 63, 64: 44, 65: 10, 66: 64, 67: 73, 68: 59, 69: 83, 70: 28, 71: 8, 72: 82, 73: 69, 74: 67, 75: 12, 76: 26, 77: 75, 78: 19, 79: 76, 80: 68, 81: 37, 82: 17}
# of frequent itemsets	: 31581
Time of DCI Closed		: 0.8605527877807617
19  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-73, -72, -7, -5, -2}), frozenset({-6, -4, -2}), frozenset({-21, -17, -12, -7, -5, -2}), frozenset({-73, -72, -6, -4, -2}), frozenset({-28, -51, -17, -47, -6, -4, -67, -2})}
DL of initial theory	: 41078.23723673925
24442	itemsets left after T operation 	: [frozenset({-72, -6, -4, -2})]
14229	itemsets left after T operation 	: [frozenset({-6, -4, -17})]
7972	itemsets left after T operation 	: [frozenset({-21, -17, -73, -7, -2})]
2913	itemsets left after W operation 	: [frozenset({-6, 85, -36, -4}), frozenset({-31, -27, -22, -21, -85, -14, -45, -10, -40, -2}), frozenset({-32, -23, -21, -85, -82, -46, -13, -12, -75, -40, -71, -2}), frozenset({-55, -52, -48, -47, -8, -39, -31, -28, -24, -21, -85, -3, -14, -73, -72, -67}), frozenset({-32, -26, -24, -85, -49, -47, -79, -12, -43, -73, -71, -2}), frozenset({-32, -26, -24, -53, -21, -85, -82, -49, -47, -78, -12, -42, -73, -71, -2}), frozenset({-63, -59, -55, -53, -50, -44, -8, -39, -33, -26, -24, -21, -85, -16, -73, -72, -3}), frozenset({-31, -62, -58, -57, -26, -23, -21, -85, -50, -16, -46, -9, -40, -67, -2}), frozenset({-55, -53, -50, -45, -41, -32, -26, -24, -21, -85, -82, -3, -14, -78, -73, -8, -70, -67}), frozenset({-85, -21, -82, -79, -14, -73, -72, -3}), frozenset({-30, -85, -21, -14, -10, -73, -68, -3}), frozenset({-59, -58, -56, -52, -50, -47, -41, -32, -26, -23, -85, -19, -14, -10, -73, -71, -3, -66}), frozenset({-62, -30, -58, -57, -26, -24, -85, -52, -50, -79, -46, -66, -40, -2}), frozenset({-61, -55, -52, -48, -46, -41, -33, -26, -85, -18, -80, -14, -73, -8, -68, -2, -65}), frozenset({-32, -26, -24, -55, -21, -52, -85, -48, -16, -44, -42, -73, -8, -68, -2}), frozenset({-61, -55, -53, -48, -46, -42, -32, -26, -24, -21, -85, -82, -16, -79, -75, -10, -72, -67}), frozenset({-62, -30, -26, -56, -22, -53, -85, -51, -16, -45, -10, -39, -67, -2}), frozenset({-30, -26, -22, -21, -85, -48, -46, -14, -10, -73, -40, -72, -3, -65}), frozenset({-62, -56, -53, -50, -47, -41, -30, -24, -21, -85, -16, -79, -3, -73, -8, -69, -67}), frozenset({-61, -55, -54, -49, -46, -40, -30, -28, -85, -82, -80, -14, -8, -71, -67, -2}), frozenset({-62, -30, -28, -24, -55, -85, -52, -50, -3, -46, -43, -73, -72, -67}), frozenset({-32, -26, -22, -53, -21, -51, -85, -16, -3, -46, -12, -75, -41, -72, -67})]
1187	itemsets left after T operation 	: [frozenset({-72, -7, -4, -73})]
930	itemsets left after W operation 	: [frozenset({-21, -3, 86, -73}), frozenset({-61, -55, -53, -48, -46, -40, -37, -7, -32, -28, -24, -86, -80, -14, -10, -71, -4}), frozenset({-30, -26, -22, -85, -86, -48, -46, -14, -10, -40, -72, -65}), frozenset({-62, -30, -56, -24, -86, -53, -85, -50, -16, -47, -79, -41, -8, -69, -67}), frozenset({-12, -72, -7, -86, -5, -82, -17}), frozenset({-31, -28, -24, -55, -86, -85, -52, -8, -48, -47, -14, -72, -39, -67}), frozenset({-63, -59, -26, -24, -55, -86, -53, -85, -8, -50, -16, -44, -72, -39, -33}), frozenset({-55, -53, -50, -45, -41, -32, -26, -24, -86, -85, -82, -14, -78, -8, -70, -67}), frozenset({-79, -14, -72, -86, -85, -82}), frozenset({-30, -14, -10, -86, -85, -68})]
613	itemsets left after T operation 	: [frozenset({-21, -2, -17})]
583	itemsets left after S operation 	: [frozenset({-6, -4, -2})]
402	itemsets left after T operation 	: [frozenset({-40, -46, -2})]
278	itemsets left after T operation 	: [frozenset({-24, -2, -26, -73})]
129	itemsets left after T operation 	: [frozenset({-24, -55})]
89	itemsets left after T operation 	: [frozenset({-26, -2})]
51	itemsets left after T operation 	: [frozenset({-24, -62, -41})]
46	itemsets left after V operation 	: [frozenset({-5, 4, -2}), frozenset({-72, -7, -4, -73})]
29	itemsets left after V operation 	: [frozenset({-40, -46, -2}), frozenset({-30, 2, -26, -22, -85, -86, -48, -14, -10, -72, -65})]
24	itemsets left after T operation 	: [frozenset({-21, -2})]
18	itemsets left after T operation 	: [frozenset({-2})]
0	itemsets left after T operation 	: [frozenset({-51})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.1794273853302002
Initial DL				: 42190.925897308116
Final DL				: 7908.431819070538
Compression (wrt me)	: 0.8125560970546248
Operator Counters		: {'D': 0, 'W': 2, 'V': 2, 'S': 1, 'R': 0, 'T': 13}
Misle Learning Runtime	: 2.1825766563415527

# of frequent itemsets	: 39940
Time of DCI Closed		: 1.0215208530426025
24  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-73, -72, -7, -5, -2}), frozenset({-6, -4, -2}), frozenset({-21, -17, -12, -7, -5, -2}), frozenset({-73, -72, -6, -4, -2}), frozenset({-28, -51, -17, -47, -6, -4, -67, -2})}
DL of initial theory	: 41370.780931032015
27201	itemsets left after T operation 	: [frozenset({-72, -6, -4, -2})]
15878	itemsets left after W operation 	: [frozenset({-6, -21, -4, 85}), frozenset({-32, -64, -61, -55, -53, -85, -17, -48, -46, -73, -72, -36, -3}), frozenset({-31, -27, -22, -85, -14, -45, -10, -40, -36, -2}), frozenset({-32, -23, -85, -82, -46, -13, -12, -75, -40, -71, -36, -2}), frozenset({-62, -58, -56, -54, -51, -47, -9, -43, -37, -33, -28, -24, -85, -17, -3, -73, -72, -67}), frozenset({-28, -56, -24, -85, -84, -50, -17, -80, -46, -41, -12, -73, -72, -3, -34}), frozenset({-62, -55, -52, -49, -44, -40, -36, -31, -23, -85, -17, -12, -73, -72, -3, -66}), frozenset({-55, -52, -48, -47, -8, -39, -36, -31, -28, -24, -85, -3, -14, -73, -72, -67}), frozenset({-62, -55, -54, -50, -46, -42, -8, -37, -33, -27, -24, -85, -82, -17, -80, -72, -3, -66}), frozenset({-62, -28, -25, -55, -85, -17, -47, -43, -37, -67, -2, -33}), frozenset({-30, -55, -22, -85, -82, -17, -48, -79, -46, -43, -75, -8, -71, -36, -2}), frozenset({-32, -62, -22, -85, -17, -80, -49, -46, -41, -8, -37, -67, -2}), frozenset({-28, -24, -85, -51, -17, -46, -11, -42, -36, -2}), frozenset({-32, -26, -24, -53, -85, -82, -49, -47, -78, -12, -42, -73, -71, -36, -2}), frozenset({-31, -61, -28, -24, -55, -53, -85, -50, -17, -46, -76, -40, -72, -36, -3}), frozenset({-63, -59, -55, -53, -50, -44, -8, -39, -36, -33, -26, -24, -85, -16, -73, -72, -3}), frozenset({-26, -85, -17, -46, -43, -10, -75, -71, -36, -67, -2}), frozenset({-31, -62, -58, -57, -26, -23, -85, -50, -16, -46, -9, -40, -36, -67, -2}), frozenset({-55, -53, -50, -45, -41, -36, -32, -26, -24, -85, -82, -3, -14, -78, -73, -8, -70, -67}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -85, -82, -17, -80, -3, -12, -73, -72, -67}), frozenset({-85, -82, -79, -14, -73, -72, -36, -3}), frozenset({-62, -58, -56, -24, -8, -53, -85, -50, -17, -41, -73, -72, -36, -3, -66}), frozenset({-10, -73, -71, -85, -2, -17}), frozenset({-30, -68, -85, -14, -10, -73, -36, -3}), frozenset({-62, -56, -52, -49, -47, -40, -37, -28, -24, -85, -17, -3, -11, -73, -72, -67}), frozenset({-61, -55, -52, -49, -46, -41, -36, -32, -26, -24, -85, -82, -17, -79, -66, -75, -68, -2}), frozenset({-62, -57, -54, -50, -46, -41, -36, -30, -28, -25, -85, -82, -17, -80, -10, -73, -70, -67, -2}), frozenset({-32, -26, -24, -55, -85, -52, -36, -48, -16, -44, -42, -73, -8, -68, -2}), frozenset({-61, -55, -53, -48, -46, -42, -36, -32, -26, -24, -85, -82, -16, -79, -75, -10, -72, -67}), frozenset({-55, -52, -49, -45, -42, -36, -32, -26, -22, -85, -17, -78, -12, -73, -72, -3}), frozenset({-61, -28, -23, -53, -85, -50, -17, -80, -46, -66, -42, -10, -36, -2, -33}), frozenset({-32, -28, -23, -85, -50, -17, -46, -78, -42, -73, -8, -71, -36, -2}), frozenset({-26, -85, -17, -10, -40, -37, -67, -33}), frozenset({-59, -52, -50, -46, -42, -36, -31, -28, -22, -85, -17, -79, -73, -8, -71, -67, -2}), frozenset({-62, -55, -52, -50, -47, -40, -8, -37, -35, -28, -25, -85, -82, -17, -79, -3, -73, -72, -67}), frozenset({-30, -26, -22, -85, -48, -46, -14, -10, -73, -40, -72, -36, -3, -65}), frozenset({-62, -56, -53, -50, -47, -41, -36, -30, -24, -85, -16, -79, -3, -73, -8, -69, -67}), frozenset({-58, -57, -52, -49, -46, -41, -8, -36, -30, -26, -24, -85, -17, -73, -72, -3}), frozenset({-8, -85, -84, -2, -17}), frozenset({-55, -54, -85, -51, -17, -43, -37, -67, -2}), frozenset({-63, -59, -58, -57, -85, -16, -77, -10, -72, -40, -3}), frozenset({-32, -26, -22, -53, -85, -51, -16, -3, -46, -12, -75, -41, -72, -36, -67}), frozenset({-64, -32, -28, -57, -25, -85, -50, -17, -47, -42, -73, -72, -37, -3})]
10300	itemsets left after W operation 	: [frozenset({-72, -73, 86, -17}), frozenset({-63, -62, -55, -52, -48, -46, -40, -36, -34, -28, -24, -86, -12, -6, -4, -3}), frozenset({-61, -58, -56, -52, -51, -47, -40, -37, -35, -26, -25, -86, -21, -83, -80, -12, -7, -5, -2}), frozenset({-63, -30, -60, -26, -22, -21, -86, -49, -46, -10, -41, -7, -5, -36, -2}), frozenset({-29, -59, -25, -86, -21, -50, -82, -80, -46, -10, -41, -7, -5, -35, -2}), frozenset({-30, -28, -56, -23, -86, -21, -52, -36, -48, -46, -12, -7, -4, -2}), frozenset({-62, -55, -52, -51, -47, -43, -37, -33, -28, -25, -86, -80, -3, -6, -4, -67}), frozenset({-30, -26, -57, -24, -86, -52, -19, -50, -42, -10, -7, -37, -4, -3}), frozenset({-62, -55, -52, -51, -46, -40, -36, -31, -26, -24, -86, -21, -80, -12, -66, -7, -5, -2}), frozenset({-28, -37, -55, -22, -21, -52, -86, -49, -46, -12, -43, -7, -5, -35, -2}), frozenset({-28, -37, -24, -86, -82, -79, -46, -12, -2, -40, -6, -5, -34}), frozenset({-62, -55, -53, -48, -46, -41, -36, -30, -26, -22, -21, -86, -78, -11, -7, -4, -67, -2}), frozenset({-10, -21, -7, -86, -37, -4, -2}), frozenset({-31, -28, -22, -21, -86, -51, -46, -78, -10, -40, -7, -5, -36, -2}), frozenset({-57, -53, -49, -46, -41, -36, -32, -28, -24, -86, -82, -80, -8, -6, -4, -3, -66}), frozenset({-58, -56, -52, -49, -47, -40, -36, -34, -26, -24, -86, -19, -82, -79, -12, -7, -4, -3, -66}), frozenset({-12, -21, -7, -86, -5, -3, -82}), frozenset({-32, -64, -61, -55, -86, -53, -85, -48, -46, -36, -3}), frozenset({-62, -58, -56, -54, -51, -47, -43, -37, -33, -28, -24, -86, -85, -3, -9, -67}), frozenset({-28, -56, -24, -86, -85, -84, -50, -80, -46, -12, -41, -3, -34}), frozenset({-31, -62, -55, -23, -85, -52, -86, -49, -44, -12, -40, -36, -3, -66}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -86, -85, -82, -80, -3, -12, -67}), frozenset({-62, -58, -56, -24, -86, -53, -85, -50, -41, -8, -36, -3, -66}), frozenset({-62, -28, -56, -24, -86, -85, -52, -49, -47, -3, -11, -40, -37, -67}), frozenset({-32, -26, -55, -22, -85, -52, -86, -49, -78, -45, -12, -42, -36, -3}), frozenset({-62, -55, -52, -50, -47, -40, -37, -35, -28, -25, -86, -85, -82, -79, -3, -8, -67}), frozenset({-30, -58, -57, -26, -24, -86, -85, -52, -49, -46, -41, -8, -36, -3}), frozenset({-64, -32, -28, -25, -57, -86, -85, -50, -47, -42, -37, -3})]
6506	itemsets left after T operation 	: [frozenset({-46, -36, -2})]
3464	itemsets left after T operation 	: [frozenset({-7, -21, -2})]
2426	itemsets left after T operation 	: [frozenset({-62, -28, -67, -47, -37, -4, -3})]
1648	itemsets left after S operation 	: [frozenset({-6, -4, -2})]
1273	itemsets left after T operation 	: [frozenset({-24, -53, -36})]
695	itemsets left after T operation 	: [frozenset({-24, -46, -28})]
523	itemsets left after T operation 	: [frozenset({-2, -17})]
403	itemsets left after T operation 	: [frozenset({-72, -7, -2, -73})]
288	itemsets left after T operation 	: [frozenset({-24, -36, -52, -26})]
186	itemsets left after W operation 	: [frozenset({-46, -26, 87, -72, -22}), frozenset({-61, -58, -57, -52, -48, -41, -37, -34, -87, -82, -17, -78, -75, -10, -6, -4, -3, -66}), frozenset({-30, -87, -85, -48, -14, -10, -73, -40, -36, -3, -65}), frozenset({-32, -87, -53, -85, -51, -16, -3, -12, -75, -41, -36, -67})]
147	itemsets left after V operation 	: [frozenset({-35, -3, 2, -29, -42, -24, -51}), frozenset({2, -21, 85}), frozenset({2, -61, -58, -57, -52, -48, -41, -37, -34, -87, -82, -17, -78, -75, -10, -3, -66}), frozenset({-6, -4, -2})]
131	itemsets left after T operation 	: [frozenset({-24, -36, -52})]
98	itemsets left after T operation 	: [frozenset({-7, -4, -26})]
85	itemsets left after T operation 	: [frozenset({-47, -37, -25})]
70	itemsets left after V operation 	: [frozenset({-32, -64, -61, -55, -86, -85, -48, -46, 24, -3}), frozenset({-32, -87, -85, -51, -67, -16, -12, -75, -41, 24, -3}), frozenset({-24, -53, -36})]
55	itemsets left after T operation 	: [frozenset({-17, -33})]
53	itemsets left after V operation 	: [frozenset({-3, -62, -28, 25, -4, -67}), frozenset({-47, -37, -25})]
52	itemsets left after V operation 	: [frozenset({-7, -21, -2}), frozenset({2, -12, -86, -5, -3, -82})]
48	itemsets left after T operation 	: [frozenset({-3, -51})]
42	itemsets left after T operation 	: [frozenset({-36, -2})]
39	itemsets left after T operation 	: [frozenset({-7, -2})]
37	itemsets left after V operation 	: [frozenset({-24, -53, -36}), frozenset({-52, 53})]
23	itemsets left after T operation 	: [frozenset({-52, -66})]
17	itemsets left after T operation 	: [frozenset({-2})]
Unpacking W operator applied earlier using 86 on frozenset({-72, -17, -73})
# of frequent itemsets	: 4
Time of DCI Closed		: 0.1718456745147705
Initial DL				: 42154.18312133132
Final DL				: 5932.359470139004
Compression (wrt me)	: 0.8592699696477561
Operator Counters		: {'D': 0, 'W': 2, 'V': 5, 'S': 1, 'R': 0, 'T': 18}
Misle Learning Runtime	: 3.174921751022339

# of frequent itemsets	: 40003
Time of DCI Closed		: 0.9826185703277588
9  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-73, -72, -7, -5, -2}), frozenset({-21, -17, -12, -7, -5, -2}), frozenset({-73, -72, -6, -4, -2}), frozenset({-28, -51, -17, -47, -6, -4, -67, -2}), frozenset({-21, -4, -14, -10, -73, -72, -6, -36, -2})}
DL of initial theory	: 41618.99408196772
28108	itemsets left after T operation 	: [frozenset({-72, -6, -4, -2})]
18739	itemsets left after W operation 	: [frozenset({85, -6, -21, -4, -17}), frozenset({-32, -64, -61, -55, -53, -85, -48, -46, -73, -72, -36, -3}), frozenset({-62, -58, -56, -54, -51, -47, -9, -43, -37, -33, -28, -24, -85, -3, -73, -72, -67}), frozenset({-30, -59, -26, -24, -55, -53, -85, -48, -73, -46, -41, -72, -36, -3}), frozenset({-28, -24, -56, -85, -84, -50, -80, -73, -46, -12, -41, -72, -3, -34}), frozenset({-31, -62, -55, -23, -85, -52, -49, -12, -44, -72, -73, -40, -36, -3, -66}), frozenset({-62, -55, -54, -50, -46, -42, -8, -37, -33, -27, -24, -85, -82, -80, -72, -3, -66}), frozenset({-62, -28, -25, -55, -85, -47, -43, -37, -67, -2, -33}), frozenset({-32, -62, -22, -85, -49, -80, -46, -41, -8, -37, -67, -2}), frozenset({-28, -24, -85, -51, -46, -11, -42, -36, -2}), frozenset({-31, -61, -28, -24, -55, -53, -85, -50, -46, -76, -72, -40, -36, -3}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -85, -82, -80, -3, -12, -73, -72, -67}), frozenset({-62, -58, -24, -56, -53, -85, -50, -73, -72, -41, -8, -36, -3, -66}), frozenset({-10, -73, -71, -85, -2}), frozenset({-62, -28, -24, -56, -85, -52, -49, -67, -47, -11, -72, -73, -40, -37, -3}), frozenset({-32, -61, -29, -24, -55, -53, -85, -51, -67, -47, -42, -73, -72, -36, -3}), frozenset({-61, -55, -52, -49, -46, -41, -36, -32, -26, -24, -85, -82, -79, -66, -75, -68, -2}), frozenset({-62, -57, -54, -50, -46, -41, -36, -30, -28, -25, -85, -82, -80, -10, -73, -70, -67, -2}), frozenset({-32, -26, -55, -22, -85, -52, -49, -78, -45, -12, -42, -73, -72, -36, -3}), frozenset({-32, -62, -22, -53, -85, -49, -46, -73, -40, -71, -37, -67, -2}), frozenset({-61, -28, -23, -53, -85, -50, -80, -46, -10, -42, -2, -36, -66, -33}), frozenset({-32, -28, -23, -85, -50, -46, -78, -42, -73, -8, -71, -36, -2}), frozenset({-26, -10, -40, -37, -85, -67, -33}), frozenset({-59, -52, -50, -46, -42, -36, -31, -28, -22, -85, -79, -73, -8, -71, -67, -2}), frozenset({-62, -55, -52, -50, -47, -40, -8, -37, -35, -28, -25, -85, -82, -79, -3, -73, -72, -67}), frozenset({-61, -58, -56, -53, -49, -46, -41, -36, -30, -28, -24, -85, -66, -73, -8, -71, -2}), frozenset({-30, -26, -58, -24, -57, -85, -52, -49, -73, -46, -72, -41, -8, -36, -3}), frozenset({-8, -85, -84, -2}), frozenset({-55, -54, -85, -51, -43, -37, -67, -2}), frozenset({-32, -64, -28, -57, -25, -85, -50, -47, -42, -73, -72, -37, -3})]
13097	itemsets left after T operation 	: [frozenset({-21, -17, -73, -7, -2})]
6115	itemsets left after W operation 	: [frozenset({-6, -36, -4, 86}), frozenset({-31, -27, -22, -21, -86, -14, -45, -10, -40, -2}), frozenset({-32, -23, -86, -21, -82, -46, -13, -12, -75, -40, -71, -2}), frozenset({-55, -52, -48, -47, -8, -39, -31, -28, -24, -86, -21, -3, -14, -73, -72, -67}), frozenset({-32, -26, -24, -86, -49, -47, -79, -12, -43, -73, -71, -2}), frozenset({-32, -26, -24, -86, -53, -21, -82, -49, -47, -78, -12, -42, -73, -71, -2}), frozenset({-63, -59, -55, -53, -50, -44, -8, -39, -33, -26, -24, -86, -21, -16, -73, -72, -3}), frozenset({-31, -62, -58, -57, -26, -23, -86, -21, -50, -16, -46, -9, -40, -67, -2}), frozenset({-55, -53, -50, -45, -41, -32, -26, -24, -86, -21, -82, -3, -14, -78, -73, -8, -70, -67}), frozenset({-86, -21, -82, -79, -14, -73, -72, -3}), frozenset({-30, -86, -21, -14, -10, -73, -68, -3}), frozenset({-59, -58, -56, -52, -50, -47, -41, -32, -26, -23, -86, -19, -14, -10, -73, -71, -3, -66}), frozenset({-62, -30, -58, -57, -26, -24, -86, -52, -50, -79, -46, -66, -40, -2}), frozenset({-58, -55, -86, -20, -82, -17, -79, -42, -2, -33}), frozenset({-61, -55, -53, -48, -46, -42, -32, -26, -24, -86, -21, -82, -16, -79, -75, -10, -72, -67}), frozenset({-59, -58, -56, -52, -50, -46, -43, -31, -28, -23, -86, -82, -17, -79, -10, -73, -71, -67, -2}), frozenset({-57, -53, -49, -46, -41, -8, -32, -28, -24, -86, -82, -17, -80, -73, -72, -3, -66}), frozenset({-62, -53, -49, -46, -9, -41, -32, -26, -22, -86, -19, -82, -17, -79, -66, -73, -70, -2}), frozenset({-30, -26, -22, -21, -86, -48, -46, -14, -10, -73, -40, -72, -3, -65}), frozenset({-62, -56, -53, -50, -47, -41, -30, -24, -86, -21, -16, -79, -3, -73, -8, -69, -67}), frozenset({-59, -55, -52, -48, -44, -40, -30, -26, -23, -86, -82, -17, -79, -75, -8, -71, -2}), frozenset({-61, -55, -54, -49, -46, -40, -30, -28, -86, -82, -80, -14, -8, -71, -67, -2}), frozenset({-62, -30, -28, -24, -55, -86, -52, -50, -3, -46, -43, -73, -72, -67}), frozenset({-32, -26, -22, -53, -21, -51, -86, -16, -3, -46, -12, -75, -41, -72, -67})]
3983	itemsets left after W operation 	: [frozenset({-24, -72, 87, -73}), frozenset({-59, -55, -53, -48, -47, -42, -36, -28, -87, -21, -82, -16, -79, -8, -7, -4, -2}), frozenset({-61, -58, -57, -49, -47, -40, -37, -33, -28, -87, -84, -19, -17, -80, -8, -6, -4, -3, -65}), frozenset({-62, -28, -58, -56, -87, -54, -85, -51, -47, -3, -43, -9, -37, -67, -33}), frozenset({-30, -59, -26, -55, -87, -53, -85, -48, -46, -41, -36, -3}), frozenset({-28, -56, -87, -85, -84, -50, -80, -46, -12, -41, -3, -34}), frozenset({-31, -28, -55, -86, -21, -52, -87, -48, -47, -14, -3, -8, -39, -67}), frozenset({-63, -59, -26, -55, -86, -53, -21, -87, -50, -16, -44, -8, -39, -3, -33}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -87, -85, -82, -80, -3, -12, -67}), frozenset({-62, -58, -56, -87, -53, -85, -50, -41, -8, -36, -3, -66}), frozenset({-30, -26, -57, -87, -52, -19, -50, -17, -42, -10, -7, -37, -4, -3}), frozenset({-62, -28, -56, -87, -85, -52, -49, -67, -47, -11, -40, -37, -3}), frozenset({-32, -61, -29, -55, -87, -53, -85, -51, -67, -47, -42, -36, -3}), frozenset({-32, -28, -57, -87, -86, -53, -82, -49, -17, -80, -46, -41, -8, -3, -66}), frozenset({-28, -37, -87, -82, -17, -79, -46, -12, -2, -40, -6, -5, -34}), frozenset({-28, -55, -87, -21, -52, -51, -43, -10, -7, -37, -4, -35, -2}), frozenset({-62, -30, -28, -55, -86, -87, -52, -50, -3, -46, -43, -67}), frozenset({-30, -58, -26, -57, -87, -85, -52, -49, -46, -41, -8, -36, -3}), frozenset({-58, -56, -52, -49, -47, -40, -36, -34, -26, -87, -19, -82, -17, -79, -12, -7, -4, -3, -66}), frozenset({-64, -62, -48, -44, -39, -37, -30, -26, -87, -84, -19, -80, -14, -8, -7, -4, -2})]
2879	itemsets left after T operation 	: [frozenset({-62, -28, -51, -17, -47, -43, -72, -6, -37, -4, -67})]
2032	itemsets left after T operation 	: [frozenset({-46, -2})]
1459	itemsets left after T operation 	: [frozenset({-7, -4, -2})]
1311	itemsets left after W operation 	: [frozenset({88, -47, -37, -3}), frozenset({-29, -25, -88, -21, -51, -17, -43, -7, -5, -33}), frozenset({-62, -28, -58, -57, -24, -88, -50, -78, -41, -12, -73, -7, -4, -67, -33}), frozenset({-61, -58, -57, -49, -40, -33, -28, -88, -87, -84, -19, -17, -80, -8, -6, -4, -65}), frozenset({-62, -28, -56, -87, -88, -85, -52, -49, -11, -40, -67}), frozenset({-62, -55, -52, -50, -72, -40, -35, -28, -25, -88, -85, -82, -79, -73, -8, -67}), frozenset({-32, -64, -28, -57, -25, -88, -85, -50, -42, -73, -72})]
1043	itemsets left after W operation 	: [frozenset({89, -6, -4}), frozenset({-73, -68, -2, -89}), frozenset({-51, -47, -28, -89, -67, -2, -17}), frozenset({-61, -58, -57, -52, -48, -46, -41, -37, -34, -26, -89, -22, -82, -17, -78, -75, -10, -72, -3, -66}), frozenset({-51, -3, -29, -42, -89, -24, -35}), frozenset({-13, -10, -89, -19, -2}), frozenset({-63, -59, -58, -57, -89, -21, -16, -77, -10, -72, -40, -3}), frozenset({-72, -2, -89}), frozenset({-21, -17, 85, -89}), frozenset({-62, -28, -89, -51, -17, -47, -43, -72, -37, -67}), frozenset({-36, 86, -89}), frozenset({-61, -58, -57, -49, -40, -33, -28, -89, -88, -87, -84, -19, -17, -80, -8, -65})]
819	itemsets left after W operation 	: [frozenset({-53, -73, -24, 90, -21}), frozenset({-61, -55, -48, -46, -40, -37, -7, -32, -28, -90, -80, -14, -10, -71, -4, -3}), frozenset({-62, -30, -90, -56, -86, -50, -16, -47, -79, -3, -41, -8, -69, -67}), frozenset({-32, -26, -90, -86, -82, -49, -47, -78, -12, -42, -71, -2}), frozenset({-32, -26, -90, -55, -86, -50, -82, -3, -14, -45, -78, -41, -8, -70, -67})]
671	itemsets left after W operation 	: [frozenset({-72, 91, -73}), frozenset({-7, -5, -91, -2}), frozenset({-79, -91, -7, -5, -2}), frozenset({-32, -64, -61, -91, -55, -53, -85, -48, -46, -36, -3}), frozenset({-31, -62, -91, -55, -23, -85, -52, -49, -12, -44, -40, -36, -3, -66}), frozenset({-32, -91, -26, -55, -22, -85, -52, -49, -78, -45, -12, -42, -36, -3}), frozenset({-62, -28, -91, -25, -88, -55, -85, -52, -50, -82, -35, -79, -40, -8, -67}), frozenset({-32, -64, -28, -91, -57, -25, -88, -85, -50, -42}), frozenset({-79, -14, -91, -86, -21, -3, -82}), frozenset({-30, -91, -26, -22, -21, -86, -48, -46, -14, -10, -40, -3, -65}), frozenset({-24, -91, 87})]
604	itemsets left after W operation 	: [frozenset({-55, -46, 92}), frozenset({-62, -54, -50, -42, -8, -37, -33, -92, -27, -24, -85, -82, -80, -72, -3, -66}), frozenset({-31, -61, -28, -92, -24, -53, -85, -50, -76, -72, -40, -36, -3}), frozenset({-61, -53, -48, -42, -32, -92, -26, -24, -86, -21, -82, -16, -79, -75, -10, -72, -67}), frozenset({-32, -61, -28, -92, -90, -48, -80, -14, -3, -10, -40, -71, -37, -4, -7}), frozenset({-30, -92, -59, -26, -87, -53, -85, -48, -41, -36, -3}), frozenset({-59, -58, -53, -50, -40, -37, -30, -28, -92, -87, -85, -82, -80, -3, -12, -67}), frozenset({-32, -64, -61, -92, -91, -53, -85, -48, -36, -3}), frozenset({-62, -30, -28, -92, -87, -86, -52, -50, -3, -43, -67})]
527	itemsets left after T operation 	: [frozenset({-5, -17, -2, -21})]
366	itemsets left after T operation 	: [frozenset({-52, -58, -26})]
337	itemsets left after W operation 	: [frozenset({-3, -21, 93}), frozenset({-30, -14, -93, -10, -73, -86, -68}), frozenset({-32, -93, -26, -22, -53, -86, -51, -16, -46, -12, -75, -41, -72, -67}), frozenset({-31, -93, -28, -55, -86, -87, -52, -48, -47, -14, -8, -39, -67}), frozenset({-63, -93, -59, -26, -55, -86, -53, -87, -50, -16, -44, -8, -39, -33}), frozenset({-79, -14, -93, -91, -86, -82}), frozenset({-30, -93, -91, -26, -22, -86, -48, -46, -14, -10, -40, -65}), frozenset({-63, -93, -59, -58, -57, -89, -16, -77, -10, -72, -40})]
274	itemsets left after T operation 	: [frozenset({-28, -50})]
239	itemsets left after T operation 	: [frozenset({-55, -82, -17, -79, -2})]
217	itemsets left after T operation 	: [frozenset({-55, -37, -43, -2})]
170	itemsets left after T operation 	: [frozenset({-2, -73})]
152	itemsets left after W operation 	: [frozenset({-28, 94, -17}), frozenset({-62, -94, -89, -51, -47, -43, -72, -37, -67}), frozenset({-94, -61, -58, -57, -89, -88, -87, -84, -19, -49, -80, -40, -8, -33, -65}), frozenset({-47, -94, -89, -51, -2, -67}), frozenset({-32, -94, -57, -87, -86, -53, -82, -49, -80, -46, -41, -8, -3, -66})]
135	itemsets left after T operation 	: [frozenset({-40, -62, -52})]
129	itemsets left after V operation 	: [frozenset({2, -29, -25, -88, -51, -43, -7, -33}), frozenset({-5, -17, -2, -21})]
108	itemsets left after T operation 	: [frozenset({-7, -37, -4})]
90	itemsets left after T operation 	: [frozenset({-50, -41})]
82	itemsets left after V operation 	: [frozenset({-52, -58, -26}), frozenset({-32, -91, -55, -22, -85, -49, -78, -45, -12, -42, 58, -36, -3})]
80	itemsets left after V operation 	: [frozenset({-7, -37, -4}), frozenset({37, -2})]
71	itemsets left after T operation 	: [frozenset({-10, -2})]
60	itemsets left after T operation 	: [frozenset({-40, -58})]
40	itemsets left after T operation 	: [frozenset({-80, -66})]
27	itemsets left after T operation 	: [frozenset({-51})]
Unpacking W operator applied earlier using 91 on frozenset({-72, -73})
Unpacking W operator applied earlier using 90 on frozenset({-24, -21, -53, -73})
Unpacking W operator applied earlier using 87 on frozenset({-24, -72, -73})
Unpacking W operator applied earlier using 85 on frozenset({-6, -21, -4, -17})
# of frequent itemsets	: 12
Time of DCI Closed		: 0.22756242752075195
Clause Pruned	: frozenset({88, -47, -37, -3})
Clause Pruned	: frozenset({-28, 94, -17})
Initial DL				: 42111.5865135386
Final DL				: 5640.6210633211085
Compression (wrt me)	: 0.8660553655106846
Operator Counters		: {'D': 0, 'W': 6, 'V': 3, 'S': 0, 'R': 0, 'T': 18}
Misle Learning Runtime	: 3.9054129123687744

# of frequent itemsets	: 33795
Time of DCI Closed		: 0.8667352199554443
23  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-73, -72, -7, -5, -2}), frozenset({-6, -4, -2}), frozenset({-21, -17, -12, -7, -5, -2}), frozenset({-73, -72, -6, -4, -2}), frozenset({-28, -51, -17, -47, -6, -4, -67, -2}), frozenset({-21, -4, -14, -10, -73, -72, -6, -36, -2})}
DL of initial theory	: 40707.59809129701
24011	itemsets left after T operation 	: [frozenset({-72, -6, -4, -2})]
12191	itemsets left after T operation 	: [frozenset({-6, -4, -17})]
5921	itemsets left after T operation 	: [frozenset({-21, -73, -72, -7, -2})]
1454	itemsets left after W operation 	: [frozenset({-6, 85, -36, -4}), frozenset({-31, -27, -22, -21, -85, -14, -45, -10, -40, -2}), frozenset({-32, -23, -21, -85, -82, -46, -13, -12, -75, -40, -71, -2}), frozenset({-61, -55, -54, -49, -46, -40, -30, -28, -85, -82, -80, -14, -8, -71, -67, -2}), frozenset({-62, -30, -28, -24, -55, -85, -52, -50, -3, -46, -43, -73, -72, -67}), frozenset({-55, -52, -48, -47, -8, -39, -31, -28, -24, -21, -85, -3, -14, -73, -72, -67}), frozenset({-32, -26, -24, -85, -49, -47, -79, -12, -43, -73, -71, -2}), frozenset({-32, -26, -22, -53, -21, -51, -85, -16, -3, -46, -12, -75, -41, -72, -67}), frozenset({-63, -59, -55, -53, -50, -44, -8, -39, -33, -26, -24, -21, -85, -16, -73, -72, -3}), frozenset({-31, -62, -58, -57, -26, -23, -21, -85, -50, -16, -46, -9, -40, -67, -2}), frozenset({-55, -53, -50, -45, -41, -32, -26, -24, -21, -85, -82, -3, -14, -78, -73, -8, -70, -67}), frozenset({-85, -21, -82, -79, -14, -73, -72, -3}), frozenset({-30, -85, -21, -14, -10, -73, -68, -3}), frozenset({-59, -58, -56, -52, -50, -47, -41, -32, -26, -23, -85, -19, -14, -10, -73, -71, -3, -66}), frozenset({-62, -30, -58, -57, -26, -24, -85, -52, -50, -79, -46, -66, -40, -2}), frozenset({-61, -55, -52, -48, -46, -41, -33, -26, -85, -18, -80, -14, -73, -8, -68, -2, -65}), frozenset({-32, -26, -24, -55, -21, -52, -85, -48, -16, -44, -42, -73, -8, -68, -2}), frozenset({-61, -55, -53, -48, -46, -42, -32, -26, -24, -21, -85, -82, -16, -79, -75, -10, -72, -67}), frozenset({-62, -30, -26, -56, -22, -53, -85, -51, -16, -45, -10, -39, -67, -2}), frozenset({-62, -56, -53, -50, -47, -41, -30, -24, -21, -85, -16, -79, -3, -73, -8, -69, -67})]
735	itemsets left after T operation 	: [frozenset({-24, -26, -73})]
579	itemsets left after W operation 	: [frozenset({-21, -3, 86, -73}), frozenset({-61, -55, -53, -48, -46, -40, -37, -7, -32, -28, -24, -86, -80, -14, -10, -71, -4}), frozenset({-62, -30, -56, -24, -86, -53, -85, -50, -16, -47, -79, -41, -8, -69, -67}), frozenset({-12, -72, -7, -86, -5, -82, -17}), frozenset({-31, -28, -24, -55, -86, -85, -52, -8, -48, -47, -14, -72, -39, -67}), frozenset({-79, -14, -72, -86, -85, -82}), frozenset({-30, -14, -10, -86, -85, -68})]
399	itemsets left after T operation 	: [frozenset({-21, -5, -2, -17})]
378	itemsets left after S operation 	: [frozenset({-6, -4, -2})]
358	itemsets left after T operation 	: [frozenset({-72, -7, -2, -73})]
272	itemsets left after T operation 	: [frozenset({-40, -46, -2})]
165	itemsets left after T operation 	: [frozenset({-7, -37, -4})]
105	itemsets left after T operation 	: [frozenset({-24, -55, -72})]
98	itemsets left after V operation 	: [frozenset({-35, -3, 17, -29, -42, -24, -51}), frozenset({-63, -59, -58, -57, -21, -16, 17, -77, -10, -40, -72, -3}), frozenset({-6, -4, -17}), frozenset({17, -36, 85}), frozenset({17, -2})]
82	itemsets left after T operation 	: [frozenset({-7, -4, -2})]
65	itemsets left after T operation 	: [frozenset({-22, -10, -2})]
60	itemsets left after V operation 	: [frozenset({2, -29, -25, -51, -47, -43, -7, -37, -3, -33}), frozenset({-21, -5, -2, -17})]
48	itemsets left after V operation 	: [frozenset({-59, -58, -56, -52, -50, -47, -41, 24, -32, -23, -85, -19, -14, -10, -71, -3, -66}), frozenset({-61, -55, -52, -48, -46, -41, 24, -33, -85, -18, -80, -14, -8, -68, -2, -65}), frozenset({-24, -26, -73})]
33	itemsets left after T operation 	: [frozenset({-3, -51})]
30	itemsets left after T operation 	: [frozenset({-7, -2})]
24	itemsets left after T operation 	: [frozenset({-46, -2})]
12	itemsets left after T operation 	: [frozenset({-50, -41})]
10	itemsets left after T operation 	: [frozenset({-2})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.16352605819702148
Initial DL				: 41653.21806892551
Final DL				: 8117.229596597492
Compression (wrt me)	: 0.8051235901349678
Operator Counters		: {'D': 0, 'W': 2, 'V': 3, 'S': 1, 'R': 0, 'T': 16}
Misle Learning Runtime	: 2.1639747619628906

# of frequent itemsets	: 29572
Time of DCI Closed		: 0.820519208908081
23  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-73, -72, -7, -5, -2}), frozenset({-6, -4, -2}), frozenset({-21, -17, -12, -7, -5, -2}), frozenset({-73, -72, -6, -4, -2}), frozenset({-28, -51, -17, -47, -6, -4, -67, -2}), frozenset({-21, -4, -14, -10, -73, -72, -6, -36, -2})}
DL of initial theory	: 40901.08214099919
22376	itemsets left after T operation 	: [frozenset({-72, -6, -4, -2})]
13325	itemsets left after W operation 	: [frozenset({-6, -21, -4, 85}), frozenset({-32, -64, -61, -55, -53, -85, -17, -48, -46, -73, -72, -36, -3}), frozenset({-31, -27, -22, -85, -14, -45, -10, -40, -36, -2}), frozenset({-32, -23, -85, -82, -46, -13, -12, -75, -40, -71, -36, -2}), frozenset({-62, -58, -56, -54, -51, -47, -9, -43, -37, -33, -28, -24, -85, -17, -3, -73, -72, -67}), frozenset({-30, -59, -26, -24, -55, -53, -85, -17, -48, -46, -41, -73, -72, -36, -3}), frozenset({-62, -55, -52, -49, -44, -40, -36, -31, -23, -85, -17, -12, -73, -72, -3, -66}), frozenset({-28, -56, -24, -85, -84, -50, -17, -80, -46, -41, -12, -73, -72, -3, -34}), frozenset({-55, -52, -48, -47, -8, -39, -36, -31, -28, -24, -85, -3, -14, -73, -72, -67}), frozenset({-62, -55, -54, -50, -46, -42, -8, -37, -33, -27, -24, -85, -82, -17, -80, -72, -3, -66}), frozenset({-62, -28, -25, -55, -85, -17, -47, -43, -37, -67, -2, -33}), frozenset({-30, -55, -22, -85, -82, -17, -48, -79, -46, -43, -75, -8, -71, -36, -2}), frozenset({-32, -62, -22, -85, -17, -80, -49, -46, -41, -8, -37, -67, -2}), frozenset({-28, -24, -85, -51, -17, -46, -11, -42, -36, -2}), frozenset({-32, -26, -24, -53, -85, -82, -49, -47, -78, -12, -42, -73, -71, -36, -2}), frozenset({-31, -61, -28, -24, -55, -53, -85, -50, -17, -46, -76, -40, -72, -36, -3}), frozenset({-63, -59, -55, -53, -50, -44, -8, -39, -36, -33, -26, -24, -85, -16, -73, -72, -3}), frozenset({-26, -85, -17, -46, -43, -10, -75, -71, -36, -67, -2}), frozenset({-31, -62, -58, -57, -26, -23, -85, -50, -16, -46, -9, -40, -36, -67, -2}), frozenset({-55, -53, -50, -45, -41, -36, -32, -26, -24, -85, -82, -3, -14, -78, -73, -8, -70, -67}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -85, -82, -17, -80, -3, -12, -73, -72, -67}), frozenset({-85, -82, -79, -14, -73, -72, -36, -3}), frozenset({-62, -58, -56, -24, -8, -53, -85, -50, -17, -41, -73, -72, -36, -3, -66}), frozenset({-10, -73, -71, -85, -2, -17}), frozenset({-30, -68, -85, -14, -10, -73, -36, -3}), frozenset({-62, -56, -52, -49, -47, -40, -37, -28, -24, -85, -17, -3, -11, -73, -72, -67}), frozenset({-61, -55, -53, -51, -47, -42, -36, -32, -29, -24, -85, -17, -3, -73, -72, -67}), frozenset({-61, -55, -52, -49, -46, -41, -36, -32, -26, -24, -85, -82, -17, -79, -66, -75, -68, -2}), frozenset({-62, -57, -54, -50, -46, -41, -36, -30, -28, -25, -85, -82, -17, -80, -10, -73, -70, -67, -2}), frozenset({-32, -26, -24, -55, -85, -52, -36, -48, -16, -44, -42, -73, -8, -68, -2}), frozenset({-61, -55, -53, -48, -46, -42, -36, -32, -26, -24, -85, -82, -16, -79, -75, -10, -72, -67}), frozenset({-32, -62, -22, -53, -85, -49, -17, -46, -73, -40, -71, -37, -67, -2}), frozenset({-32, -28, -23, -85, -50, -17, -46, -78, -42, -73, -8, -71, -36, -2}), frozenset({-26, -85, -17, -10, -40, -37, -67, -33}), frozenset({-62, -55, -52, -50, -47, -40, -8, -37, -35, -28, -25, -85, -82, -17, -79, -3, -73, -72, -67}), frozenset({-61, -58, -56, -53, -49, -46, -41, -36, -30, -28, -24, -85, -17, -66, -73, -8, -71, -2}), frozenset({-30, -26, -22, -85, -48, -46, -14, -10, -73, -40, -72, -36, -3, -65}), frozenset({-62, -56, -53, -50, -47, -41, -36, -30, -24, -85, -16, -79, -3, -73, -8, -69, -67}), frozenset({-58, -57, -52, -49, -46, -41, -8, -36, -30, -26, -24, -85, -17, -73, -72, -3}), frozenset({-55, -54, -85, -51, -17, -43, -37, -67, -2}), frozenset({-63, -59, -58, -57, -85, -16, -77, -10, -72, -40, -3}), frozenset({-32, -26, -22, -53, -85, -51, -16, -3, -46, -12, -75, -41, -72, -36, -67}), frozenset({-64, -32, -28, -57, -25, -85, -50, -17, -47, -42, -73, -72, -37, -3})]
8037	itemsets left after W operation 	: [frozenset({-72, -73, 86, -17}), frozenset({-63, -62, -55, -52, -48, -46, -40, -36, -34, -28, -24, -86, -12, -6, -4, -3}), frozenset({-61, -58, -57, -49, -47, -40, -37, -33, -28, -24, -86, -84, -19, -80, -8, -6, -4, -3, -65}), frozenset({-61, -58, -56, -52, -51, -47, -40, -37, -35, -26, -25, -86, -21, -83, -80, -12, -7, -5, -2}), frozenset({-63, -30, -60, -26, -22, -21, -86, -49, -46, -10, -41, -7, -5, -36, -2}), frozenset({-60, -55, -52, -48, -46, -40, -36, -31, -26, -22, -21, -86, -78, -8, -7, -4, -67, -2}), frozenset({-29, -59, -25, -86, -21, -50, -82, -80, -46, -10, -41, -7, -5, -35, -2}), frozenset({-30, -28, -56, -23, -86, -21, -52, -36, -48, -46, -12, -7, -4, -2}), frozenset({-62, -55, -52, -51, -47, -43, -37, -33, -28, -25, -86, -80, -3, -6, -4, -67}), frozenset({-30, -26, -57, -24, -86, -52, -19, -50, -42, -10, -7, -37, -4, -3}), frozenset({-62, -55, -52, -51, -46, -40, -36, -31, -26, -24, -86, -21, -80, -12, -66, -7, -5, -2}), frozenset({-28, -37, -55, -22, -21, -52, -86, -49, -46, -12, -43, -7, -5, -35, -2}), frozenset({-28, -37, -24, -86, -82, -79, -46, -12, -2, -40, -6, -5, -34}), frozenset({-62, -55, -53, -48, -46, -41, -36, -30, -26, -22, -21, -86, -78, -11, -7, -4, -67, -2}), frozenset({-10, -21, -7, -86, -37, -4, -2}), frozenset({-58, -56, -52, -49, -47, -40, -36, -34, -26, -24, -86, -19, -82, -79, -12, -7, -4, -3, -66}), frozenset({-12, -21, -7, -86, -5, -3, -82}), frozenset({-32, -64, -61, -55, -86, -53, -85, -48, -46, -36, -3}), frozenset({-62, -58, -56, -54, -51, -47, -43, -37, -33, -28, -24, -86, -85, -3, -9, -67}), frozenset({-30, -59, -26, -24, -55, -86, -53, -85, -48, -46, -41, -36, -3}), frozenset({-31, -62, -55, -23, -85, -52, -86, -49, -44, -12, -40, -36, -3, -66}), frozenset({-28, -56, -24, -86, -85, -84, -50, -80, -46, -12, -41, -3, -34}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -86, -85, -82, -80, -3, -12, -67}), frozenset({-62, -58, -56, -24, -86, -53, -85, -50, -41, -8, -36, -3, -66}), frozenset({-62, -28, -56, -24, -86, -85, -52, -49, -47, -3, -11, -40, -37, -67}), frozenset({-32, -61, -29, -24, -55, -86, -53, -85, -51, -47, -3, -42, -36, -67}), frozenset({-62, -55, -52, -50, -47, -40, -37, -35, -28, -25, -86, -85, -82, -79, -3, -8, -67}), frozenset({-30, -58, -57, -26, -24, -86, -85, -52, -49, -46, -41, -8, -36, -3}), frozenset({-64, -32, -28, -25, -57, -86, -85, -50, -47, -42, -37, -3})]
4725	itemsets left after T operation 	: [frozenset({-36, -26, -2})]
2717	itemsets left after T operation 	: [frozenset({-71, -73, -2, -17})]
2151	itemsets left after T operation 	: [frozenset({-7, -21, -2})]
1531	itemsets left after T operation 	: [frozenset({-24, -55, -36})]
1014	itemsets left after T operation 	: [frozenset({-47, -37, -3})]
892	itemsets left after S operation 	: [frozenset({-6, -4, -2})]
599	itemsets left after T operation 	: [frozenset({-2, -17})]
524	itemsets left after T operation 	: [frozenset({-72, -7, -2, -73})]
251	itemsets left after T operation 	: [frozenset({-66, -4, -58, -26})]
127	itemsets left after T operation 	: [frozenset({-24, -50})]
74	itemsets left after V operation 	: [frozenset({-32, 2, -22, -53, -85, -51, -67, -16, -46, -12, -75, -41, -72, -3}), frozenset({-36, -26, -2}), frozenset({-30, 2, -58, -57, -24, -86, -85, -52, -49, -46, -41, -8, -3}), frozenset({-30, 2, -22, -85, -48, -46, -14, -10, -73, -40, -72, -3, -65})]
54	itemsets left after T operation 	: [frozenset({-40, -36, -12})]
48	itemsets left after V operation 	: [frozenset({-35, -3, 2, -29, -42, -24, -51}), frozenset({2, -21, 85}), frozenset({-6, -4, -2})]
45	itemsets left after V operation 	: [frozenset({-31, -27, -22, -85, 12, -14, -45, -10, -2}), frozenset({-40, -36, -12})]
42	itemsets left after V operation 	: [frozenset({-24, -55, -36}), frozenset({-32, -64, -61, -86, -53, -85, -48, -46, 24, -3})]
28	itemsets left after T operation 	: [frozenset({-7, -2})]
21	itemsets left after T operation 	: [frozenset({-3, -51})]
16	itemsets left after T operation 	: [frozenset({-2})]
# of frequent itemsets	: 2
Time of DCI Closed		: 0.23264026641845703
Initial DL				: 41872.89997857942
Final DL				: 5688.453925445271
Compression (wrt me)	: 0.8641495112983514
Operator Counters		: {'D': 0, 'W': 2, 'V': 4, 'S': 1, 'R': 0, 'T': 14}
Misle Learning Runtime	: 2.600241184234619

# of frequent itemsets	: 32153
Time of DCI Closed		: 0.8653228282928467
21  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-73, -72, -7, -5, -2}), frozenset({-6, -4, -2}), frozenset({-21, -17, -12, -7, -5, -2}), frozenset({-73, -72, -6, -4, -2}), frozenset({-28, -51, -17, -47, -6, -4, -67, -2}), frozenset({-21, -4, -14, -10, -73, -72, -6, -36, -2})}
DL of initial theory	: 40972.20190421681
24708	itemsets left after T operation 	: [frozenset({-72, -6, -4, -2})]
17669	itemsets left after W operation 	: [frozenset({85, -6, -21, -4, -17}), frozenset({-32, -64, -61, -55, -53, -85, -48, -46, -73, -72, -36, -3}), frozenset({-62, -58, -56, -54, -51, -47, -9, -43, -37, -33, -28, -24, -85, -3, -73, -72, -67}), frozenset({-30, -59, -26, -24, -55, -53, -85, -48, -73, -46, -41, -72, -36, -3}), frozenset({-28, -24, -56, -85, -84, -50, -80, -73, -46, -12, -41, -72, -3, -34}), frozenset({-62, -55, -54, -50, -46, -42, -8, -37, -33, -27, -24, -85, -82, -80, -72, -3, -66}), frozenset({-62, -28, -25, -55, -85, -47, -43, -37, -67, -2, -33}), frozenset({-30, -55, -22, -85, -82, -48, -79, -46, -43, -75, -8, -71, -36, -2}), frozenset({-32, -62, -22, -85, -49, -80, -46, -41, -8, -37, -67, -2}), frozenset({-28, -24, -85, -51, -46, -11, -42, -36, -2}), frozenset({-31, -61, -28, -24, -55, -53, -85, -50, -46, -76, -72, -40, -36, -3}), frozenset({-26, -85, -46, -75, -43, -10, -71, -36, -67, -2}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -85, -82, -80, -3, -12, -73, -72, -67}), frozenset({-62, -58, -24, -56, -53, -85, -50, -73, -72, -41, -8, -36, -3, -66}), frozenset({-10, -73, -71, -85, -2}), frozenset({-62, -28, -24, -56, -85, -52, -49, -67, -47, -11, -72, -73, -40, -37, -3}), frozenset({-32, -61, -29, -24, -55, -53, -85, -51, -67, -47, -42, -73, -72, -36, -3}), frozenset({-61, -55, -52, -49, -46, -41, -36, -32, -26, -24, -85, -82, -79, -66, -75, -68, -2}), frozenset({-62, -57, -54, -50, -46, -41, -36, -30, -28, -25, -85, -82, -80, -10, -73, -70, -67, -2}), frozenset({-32, -26, -55, -22, -85, -52, -49, -78, -45, -12, -42, -73, -72, -36, -3}), frozenset({-32, -62, -22, -53, -85, -49, -46, -73, -40, -71, -37, -67, -2}), frozenset({-61, -28, -23, -53, -85, -50, -80, -46, -10, -42, -2, -36, -66, -33}), frozenset({-32, -28, -23, -85, -50, -46, -78, -42, -73, -8, -71, -36, -2}), frozenset({-26, -10, -40, -37, -85, -67, -33}), frozenset({-59, -52, -50, -46, -42, -36, -31, -28, -22, -85, -79, -73, -8, -71, -67, -2}), frozenset({-62, -55, -52, -50, -47, -40, -8, -37, -35, -28, -25, -85, -82, -79, -3, -73, -72, -67}), frozenset({-61, -58, -56, -53, -49, -46, -41, -36, -30, -28, -24, -85, -66, -73, -8, -71, -2}), frozenset({-30, -26, -58, -24, -57, -85, -52, -49, -73, -46, -72, -41, -8, -36, -3}), frozenset({-8, -85, -84, -2}), frozenset({-55, -54, -85, -51, -43, -37, -67, -2}), frozenset({-32, -64, -28, -57, -25, -85, -50, -47, -42, -73, -72, -37, -3})]
11277	itemsets left after W operation 	: [frozenset({-6, -36, -4, 86}), frozenset({-31, -27, -22, -21, -86, -14, -45, -10, -40, -2}), frozenset({-32, -23, -86, -21, -82, -46, -13, -12, -75, -40, -71, -2}), frozenset({-63, -62, -55, -52, -48, -46, -40, -34, -28, -24, -86, -17, -12, -73, -72, -3}), frozenset({-55, -52, -48, -47, -8, -39, -31, -28, -24, -86, -21, -3, -14, -73, -72, -67}), frozenset({-32, -26, -24, -86, -49, -47, -79, -12, -43, -73, -71, -2}), frozenset({-32, -26, -24, -86, -53, -21, -82, -49, -47, -78, -12, -42, -73, -71, -2}), frozenset({-63, -59, -55, -53, -50, -44, -8, -39, -33, -26, -24, -86, -21, -16, -73, -72, -3}), frozenset({-31, -62, -58, -57, -26, -23, -86, -21, -50, -16, -46, -9, -40, -67, -2}), frozenset({-55, -53, -50, -45, -41, -32, -26, -24, -86, -21, -82, -3, -14, -78, -73, -8, -70, -67}), frozenset({-26, -22, -86, -17, -48, -78, -44, -11, -73, -71, -2}), frozenset({-30, -86, -21, -14, -10, -73, -68, -3}), frozenset({-59, -58, -56, -52, -50, -47, -41, -32, -26, -23, -86, -19, -14, -10, -73, -71, -3, -66}), frozenset({-62, -30, -58, -57, -26, -24, -86, -52, -50, -79, -46, -66, -40, -2}), frozenset({-61, -55, -52, -48, -46, -41, -33, -26, -86, -18, -80, -14, -73, -8, -68, -2, -65}), frozenset({-32, -26, -24, -55, -86, -21, -52, -48, -16, -44, -42, -73, -8, -68, -2}), frozenset({-58, -55, -86, -20, -82, -17, -79, -42, -2, -33}), frozenset({-61, -55, -53, -48, -46, -42, -32, -26, -24, -86, -21, -82, -16, -79, -75, -10, -72, -67}), frozenset({-59, -58, -56, -52, -50, -46, -43, -31, -28, -23, -86, -82, -17, -79, -10, -73, -71, -67, -2}), frozenset({-57, -53, -49, -46, -41, -8, -32, -28, -24, -86, -82, -17, -80, -73, -72, -3, -66}), frozenset({-62, -53, -49, -46, -9, -41, -32, -26, -22, -86, -19, -82, -17, -79, -66, -73, -70, -2}), frozenset({-62, -30, -26, -56, -22, -53, -86, -51, -16, -45, -10, -39, -67, -2}), frozenset({-30, -26, -22, -21, -86, -48, -46, -14, -10, -73, -40, -72, -3, -65}), frozenset({-62, -56, -53, -50, -47, -41, -30, -24, -86, -21, -16, -79, -3, -73, -8, -69, -67}), frozenset({-59, -55, -52, -48, -44, -40, -30, -26, -23, -86, -82, -17, -79, -75, -8, -71, -2}), frozenset({-61, -55, -54, -49, -46, -40, -30, -28, -86, -82, -80, -14, -8, -71, -67, -2}), frozenset({-62, -30, -28, -24, -55, -86, -52, -50, -3, -46, -43, -73, -72, -67}), frozenset({-32, -26, -22, -53, -21, -51, -86, -16, -3, -46, -12, -75, -41, -72, -67})]
5944	itemsets left after T operation 	: [frozenset({-21, -17, -73, -7, -36, -2})]
4613	itemsets left after W operation 	: [frozenset({-72, -3, 87, -73}), frozenset({-61, -58, -57, -49, -47, -40, -37, -33, -28, -24, -87, -84, -19, -17, -80, -8, -6, -4, -65}), frozenset({-62, -55, -52, -51, -47, -43, -37, -33, -28, -25, -87, -17, -80, -6, -4, -67}), frozenset({-30, -26, -57, -24, -87, -52, -19, -50, -17, -42, -10, -7, -37, -4}), frozenset({-58, -56, -52, -49, -47, -40, -36, -34, -26, -24, -87, -19, -82, -17, -79, -12, -7, -4, -66}), frozenset({-12, -21, -87, -5, -7, -82, -17}), frozenset({-32, -64, -61, -55, -87, -53, -85, -48, -46, -36}), frozenset({-62, -28, -58, -56, -24, -54, -85, -87, -51, -47, -43, -9, -37, -67, -33}), frozenset({-30, -59, -26, -24, -55, -87, -53, -85, -48, -46, -41, -36}), frozenset({-28, -24, -56, -87, -85, -84, -50, -80, -46, -12, -41, -34}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -87, -85, -82, -80, -12, -67}), frozenset({-62, -58, -24, -56, -87, -53, -85, -50, -41, -8, -36, -66}), frozenset({-62, -28, -24, -56, -87, -85, -52, -49, -47, -11, -40, -37, -67}), frozenset({-32, -61, -29, -24, -55, -87, -53, -85, -51, -47, -42, -36, -67}), frozenset({-32, -26, -55, -22, -85, -52, -87, -49, -78, -45, -12, -42, -36}), frozenset({-62, -55, -52, -50, -47, -40, -37, -35, -28, -25, -87, -85, -82, -79, -8, -67}), frozenset({-30, -58, -26, -24, -57, -87, -85, -52, -49, -46, -41, -8, -36}), frozenset({-32, -64, -28, -57, -25, -87, -85, -50, -47, -42, -37}), frozenset({-63, -62, -28, -24, -55, -86, -87, -52, -17, -48, -46, -12, -40, -34}), frozenset({-31, -28, -24, -55, -86, -21, -52, -87, -48, -47, -14, -8, -39, -67}), frozenset({-63, -59, -26, -24, -55, -86, -53, -21, -87, -50, -16, -44, -8, -39, -33}), frozenset({-32, -28, -57, -24, -87, -86, -53, -82, -49, -17, -80, -46, -41, -8, -66}), frozenset({-30, -26, -87, -86, -22, -21, -48, -46, -14, -10, -40, -65}), frozenset({-62, -30, -28, -24, -55, -86, -87, -52, -50, -46, -43, -67})]
2015	itemsets left after T operation 	: [frozenset({-2, -73})]
1642	itemsets left after T operation 	: [frozenset({-24, -55, -46})]
988	itemsets left after V operation 	: [frozenset({2, -61, -58, -57, -52, -48, -46, -41, -37, -34, -26, -22, -82, -17, -78, -75, -10, -72, -3, -66}), frozenset({-35, -3, 2, -29, -42, -24, -51}), frozenset({-6, -4, -2}), frozenset({2, -61, -58, -57, -49, -47, -40, -37, -33, -28, -24, -87, -84, -19, -17, -80, -8, -65}), frozenset({-62, 2, -28, -25, -55, -87, -52, -51, -17, -80, -47, -43, -37, -67, -33}), frozenset({-32, -62, 2, -28, -56, -24, -52, -51, -17, -67, -47, -43, -72, -37, -3}), frozenset({-63, 2, -59, -58, -57, -21, -16, -77, -10, -40, -72, -3}), frozenset({2, -21, 85, -17}), frozenset({2, -36, 86})]
871	itemsets left after T operation 	: [frozenset({-47, -37, -33})]
558	itemsets left after T operation 	: [frozenset({-46, -2})]
472	itemsets left after T operation 	: [frozenset({-24, -53, -50, -21})]
289	itemsets left after T operation 	: [frozenset({-52, -58, -26})]
250	itemsets left after W operation 	: [frozenset({-40, 88, -21, -10}), frozenset({-28, -88, -17, -47, -75, -72, -6, -5, -36, -2}), frozenset({-31, -27, -88, -22, -86, -14, -45, -2}), frozenset({-30, -26, -88, -87, -86, -22, -48, -46, -14, -65}), frozenset({-63, 2, -59, -58, -57, -88, -16, -77, -72, -3})]
207	itemsets left after T operation 	: [frozenset({-55, -82, -17, -79, -2})]
183	itemsets left after V operation 	: [frozenset({33, -62, -28, -24, -56, -87, -85, -52, -49, -11, -40, -67}), frozenset({33, -62, -28, -25, -8, -55, -87, -85, -52, -50, -82, -67, -79, -40, -35}), frozenset({-32, -64, 33, -28, -57, -25, -87, -85, -50, -42}), frozenset({-32, 33, -62, 2, -28, -56, -24, -52, -51, -17, -3, -43, -72, -67}), frozenset({-47, -37, -33})]
151	itemsets left after T operation 	: [frozenset({-32, -24, -28, -17})]
116	itemsets left after T operation 	: [frozenset({-2, -17})]
92	itemsets left after T operation 	: [frozenset({-30, -26, -2})]
81	itemsets left after V operation 	: [frozenset({-32, -55, -22, -85, -87, -49, -78, -45, -12, -42, 58, -36}), frozenset({-52, -58, -26}), frozenset({-30, -57, -24, -87, -19, -50, -17, -42, -10, -7, 58, -37, -4})]
64	itemsets left after T operation 	: [frozenset({-24, -50})]
58	itemsets left after V operation 	: [frozenset({-24, -55, -46}), frozenset({-32, -61, -29, -87, -53, -85, -51, 46, -47, -42, -36, -67}), frozenset({-31, -28, -87, -86, -21, -52, 46, -48, -47, -14, -8, -39, -67})]
40	itemsets left after T operation 	: [frozenset({-3, -51})]
39	itemsets left after W operation 	: [frozenset({-32, 89, -28}), frozenset({-64, 33, -25, -57, -87, -89, -85, -50, -42}), frozenset({-24, -17, -89})]
32	itemsets left after V operation 	: [frozenset({-32, -64, -61, -87, -53, -85, -48, 24, -36}), frozenset({-24, -55, -46})]
28	itemsets left after T operation 	: [frozenset({-37, -33})]
26	itemsets left after T operation 	: [frozenset({-2})]
# of frequent itemsets	: 1
Time of DCI Closed		: 0.1687936782836914
Initial DL				: 41828.96760729492
Final DL				: 5212.820025005403
Compression (wrt me)	: 0.8753777507983176
Operator Counters		: {'D': 0, 'W': 5, 'V': 5, 'S': 0, 'R': 0, 'T': 16}
Misle Learning Runtime	: 2.9001309871673584

# of frequent itemsets	: 32913
Time of DCI Closed		: 0.8657081127166748
23  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-73, -72, -7, -5, -2}), frozenset({-21, -4, -14, -10, -73, -72, -6, -36, -2}), frozenset({-6, -4, -2}), frozenset({-73, -72, -6, -4, -2})}
DL of initial theory	: 41042.681914710425
24520	itemsets left after T operation 	: [frozenset({-72, -6, -4, -2})]
18821	itemsets left after W operation 	: [frozenset({85, -73, -72, -6, -4, -3}), frozenset({-32, -64, -61, -55, -21, -53, -85, -17, -48, -46, -36}), frozenset({-63, -62, -28, -24, -55, -85, -52, -17, -48, -46, -12, -40, -36, -34}), frozenset({-62, -58, -56, -54, -51, -47, -43, -37, -33, -28, -24, -21, -85, -17, -9, -67}), frozenset({-61, -58, -57, -49, -47, -40, -37, -33, -28, -24, -85, -84, -19, -17, -80, -8, -65}), frozenset({-30, -59, -26, -24, -55, -21, -53, -85, -17, -48, -46, -41, -36}), frozenset({-31, -62, -55, -23, -21, -52, -85, -17, -49, -12, -44, -40, -36, -66}), frozenset({-28, -24, -56, -21, -84, -85, -50, -17, -80, -46, -12, -41, -34}), frozenset({-31, -28, -24, -55, -21, -52, -85, -48, -47, -14, -8, -39, -36, -67}), frozenset({-63, -59, -26, -24, -55, -21, -53, -85, -50, -16, -44, -8, -39, -36, -33}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -21, -85, -82, -17, -80, -12, -67}), frozenset({-79, -14, -21, -85, -36, -82}), frozenset({-62, -58, -24, -56, -21, -53, -85, -50, -17, -41, -8, -36, -66}), frozenset({-62, -28, -24, -56, -21, -52, -85, -17, -49, -47, -11, -40, -37, -67}), frozenset({-62, -28, -25, -55, -85, -52, -51, -17, -80, -47, -43, -37, -67, -33}), frozenset({-32, -61, -29, -24, -55, -21, -53, -51, -85, -17, -47, -42, -36, -67}), frozenset({-32, -26, -55, -22, -21, -52, -85, -17, -49, -78, -45, -12, -42, -36}), frozenset({-32, -28, -57, -24, -53, -85, -82, -17, -80, -49, -46, -41, -8, -36, -66}), frozenset({-62, -55, -52, -50, -47, -40, -37, -35, -28, -25, -21, -85, -82, -17, -79, -8, -67}), frozenset({-30, -26, -22, -21, -85, -48, -14, -46, -10, -40, -36, -65}), frozenset({-30, -26, -58, -24, -57, -21, -52, -85, -17, -49, -46, -41, -8, -36}), frozenset({-62, -30, -28, -24, -55, -85, -52, -50, -46, -43, -36, -67}), frozenset({-32, -64, -28, -57, -25, -21, -85, -50, -17, -47, -42, -37})]
11937	itemsets left after T operation 	: [frozenset({-21, -17, -46, -36, -2})]
7906	itemsets left after S operation 	: [frozenset({-6, -4, -2})]
4163	itemsets left after T operation 	: [frozenset({-7, -21, -2, -73})]
1957	itemsets left after W operation 	: [frozenset({-6, -4, -3, 86}), frozenset({-62, -55, -54, -50, -46, -42, -8, -37, -33, -27, -24, -86, -21, -82, -17, -80, -72, -66}), frozenset({-32, -62, -28, -24, -55, -86, -51, -17, -47, -43, -72, -37, -67}), frozenset({-55, -53, -50, -45, -41, -36, -32, -26, -24, -86, -21, -82, -14, -78, -73, -8, -70, -67}), frozenset({-30, -86, -21, -68, -14, -10, -73, -36}), frozenset({-59, -58, -56, -52, -50, -47, -41, -36, -32, -26, -23, -86, -19, -14, -10, -73, -71, -66}), frozenset({-51, -29, -42, -24, -86, -35}), frozenset({-62, -56, -53, -50, -47, -41, -36, -30, -24, -86, -21, -16, -79, -73, -8, -69, -67}), frozenset({-32, -62, -28, -56, -24, -86, -52, -51, -17, -47, -43, -72, -37, -67}), frozenset({-63, -59, -58, -57, -86, -21, -16, -77, -10, -72, -40}), frozenset({-32, -26, -22, -53, -21, -51, -86, -16, -46, -12, -75, -41, -72, -36, -67}), frozenset({-72, -86, 85, -73})]
1359	itemsets left after T operation 	: [frozenset({-24, -53, -36, -21})]
822	itemsets left after T operation 	: [frozenset({-37, -28, -17})]
548	itemsets left after W operation 	: [frozenset({-21, -17, 87}), frozenset({-29, -37, -25, -87, -51, -47, -43, -7, -5, -3, -33}), frozenset({-59, -87, -53, -82, -78, -44, -11, -73, -71, -6, -5, -2}), frozenset({-26, -87, -10, -40, -6, -37, -4, -67, -33}), frozenset({-87, -82, -12, -73, -72, -7, -5, -3}), frozenset({-32, -64, -61, -55, -87, -53, -85, -48, -46, -36}), frozenset({-31, -62, -55, -23, -85, -52, -87, -49, -12, -44, -40, -36, -66}), frozenset({-28, -24, -56, -87, -85, -84, -50, -80, -46, -12, -41, -34}), frozenset({-32, -26, -55, -22, -85, -52, -87, -49, -78, -45, -12, -42, -36}), frozenset({-30, -26, -58, -24, -57, -87, -85, -52, -49, -46, -41, -8, -36}), frozenset({-87, -46, -36, -2}), frozenset({-62, -55, -54, -50, -46, -42, -8, -37, -33, -27, -24, -87, -86, -82, -80, -72, -66})]
327	itemsets left after T operation 	: [frozenset({-24, -46, -28})]
295	itemsets left after W operation 	: [frozenset({-72, -73, 88, -7, -5}), frozenset({-88, -2}), frozenset({-88, -79, -2}), frozenset({-12, -88, -87, -3, -82})]
230	itemsets left after W operation 	: [frozenset({89, -22, -36, -26}), frozenset({-63, -30, -59, -89, -82, -48, -79, -14, -44, -8, -39, -4, -7, -2}), frozenset({-32, -89, -86, -53, -21, -51, -16, -46, -12, -75, -41, -72, -67}), frozenset({-30, -89, -21, -85, -48, -14, -46, -10, -40, -65}), frozenset({-32, -89, -55, -87, -85, -52, -49, -78, -45, -12, -42})]
101	itemsets left after T operation 	: [frozenset({-24, -36, -52})]
72	itemsets left after T operation 	: [frozenset({-36, -52, -66})]
60	itemsets left after T operation 	: [frozenset({-7, -4, -2})]
56	itemsets left after V operation 	: [frozenset({-6, -4, -2}), frozenset({2, -3, 86}), frozenset({2, -26, -87, -10, -40, -37, -67, -33})]
49	itemsets left after T operation 	: [frozenset({-7, -2})]
48	itemsets left after V operation 	: [frozenset({-24, -36, -52}), frozenset({24, -66})]
46	itemsets left after V operation 	: [frozenset({-24, -52, -36}), frozenset({-53, 52, -21})]
41	itemsets left after V operation 	: [frozenset({-62, -55, -54, -50, -42, -8, -37, 28, -33, -27, -87, -86, -82, -80, -72, -66}), frozenset({-24, -46, -28})]
34	itemsets left after V operation 	: [frozenset({-32, -89, -86, -52, -51, -16, -46, -12, -75, -41, -72, -67}), frozenset({-53, 52, -21})]
29	itemsets left after T operation 	: [frozenset({-6, -2})]
22	itemsets left after T operation 	: [frozenset({-2})]
10	itemsets left after T operation 	: [frozenset({-51})]
6	itemsets left after T operation 	: [frozenset({-33})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.1682910919189453
Initial DL				: 42120.8063992436
Final DL				: 5745.038393045183
Compression (wrt me)	: 0.8636056883956439
Operator Counters		: {'D': 0, 'W': 5, 'V': 5, 'S': 1, 'R': 0, 'T': 14}
Misle Learning Runtime	: 2.538224458694458

# of frequent itemsets	: 38611
Time of DCI Closed		: 0.9667220115661621
22  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-73, -72, -7, -5, -2}), frozenset({-6, -4, -2}), frozenset({-21, -17, -12, -7, -5, -2}), frozenset({-73, -72, -6, -4, -2}), frozenset({-28, -51, -17, -47, -6, -4, -67, -2}), frozenset({-21, -4, -14, -10, -73, -72, -6, -36, -2})}
DL of initial theory	: 40949.49408669026
27794	itemsets left after T operation 	: [frozenset({-72, -6, -4, -2})]
20125	itemsets left after W operation 	: [frozenset({85, -72, -6, -4, -3, -17}), frozenset({-32, -64, -61, -55, -21, -53, -85, -48, -46, -73, -36}), frozenset({-63, -62, -28, -24, -55, -85, -52, -48, -46, -12, -73, -40, -36, -34}), frozenset({-62, -58, -56, -54, -51, -47, -73, -43, -37, -33, -28, -24, -21, -85, -9, -67}), frozenset({-61, -58, -57, -49, -47, -40, -37, -33, -28, -24, -85, -84, -19, -80, -73, -8, -65}), frozenset({-30, -59, -26, -24, -55, -21, -53, -85, -48, -73, -46, -41, -36}), frozenset({-31, -62, -55, -23, -21, -52, -85, -49, -12, -44, -73, -40, -36, -66}), frozenset({-28, -24, -56, -21, -84, -85, -50, -80, -73, -46, -12, -41, -34}), frozenset({-62, -55, -54, -50, -46, -42, -37, -33, -27, -24, -21, -85, -82, -80, -8, -66}), frozenset({-31, -61, -28, -24, -55, -21, -53, -85, -50, -46, -76, -40, -36}), frozenset({-32, -62, -28, -24, -55, -85, -51, -47, -43, -37, -67}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -21, -85, -82, -80, -12, -73, -67}), frozenset({-62, -58, -24, -56, -21, -53, -85, -50, -73, -41, -8, -36, -66}), frozenset({-62, -28, -24, -56, -21, -52, -85, -49, -47, -11, -73, -40, -37, -67}), frozenset({-62, -28, -25, -55, -85, -52, -51, -80, -47, -43, -73, -37, -67, -33}), frozenset({-32, -61, -29, -24, -55, -21, -53, -51, -85, -47, -42, -73, -36, -67}), frozenset({-61, -58, -57, -52, -48, -46, -41, -37, -34, -26, -22, -85, -82, -78, -75, -10, -66}), frozenset({-32, -26, -55, -22, -21, -52, -85, -49, -78, -45, -12, -42, -73, -36}), frozenset({-32, -28, -57, -24, -53, -85, -82, -49, -80, -73, -46, -41, -8, -36, -66}), frozenset({-62, -55, -52, -50, -47, -40, -37, -35, -28, -25, -21, -85, -82, -79, -73, -8, -67}), frozenset({-30, -26, -58, -24, -57, -21, -52, -85, -49, -73, -46, -41, -8, -36}), frozenset({-32, -62, -28, -24, -56, -85, -52, -51, -47, -43, -37, -67}), frozenset({-32, -64, -28, -57, -25, -21, -85, -50, -47, -42, -73, -37})]
13026	itemsets left after S operation 	: [frozenset({-6, -4, -2})]
6039	itemsets left after T operation 	: [frozenset({-21, -17, -73, -7, -2})]
3674	itemsets left after W operation 	: [frozenset({-21, -36, 86, -73}), frozenset({-59, -55, -53, -48, -47, -42, -8, -28, -24, -86, -82, -16, -79, -72, -7, -4, -2}), frozenset({-30, -59, -26, -24, -55, -86, -53, -85, -48, -46, -41}), frozenset({-55, -52, -48, -47, -8, -39, -31, -28, -24, -86, -3, -14, -72, -6, -4, -67}), frozenset({-31, -62, -55, -23, -85, -52, -86, -49, -12, -44, -40, -66}), frozenset({-86, -82, -79, -14, -72, -6, -4, -3}), frozenset({-30, -86, -4, -14, -10, -6, -68, -3}), frozenset({-62, -58, -24, -56, -86, -53, -85, -50, -41, -8, -66}), frozenset({-32, -61, -29, -24, -55, -86, -53, -85, -51, -47, -42, -67}), frozenset({-32, -26, -55, -22, -85, -52, -86, -49, -78, -45, -12, -42}), frozenset({-59, -55, -53, -48, -47, -32, -26, -22, -86, -16, -78, -66, -72, -7, -4, -2}), frozenset({-30, -26, -22, -86, -48, -46, -14, -10, -40, -72, -6, -4, -3, -65}), frozenset({-62, -56, -53, -50, -47, -41, -30, -24, -86, -16, -79, -3, -8, -6, -69, -4, -67}), frozenset({-30, -58, -26, -24, -57, -86, -85, -52, -49, -46, -41, -8}), frozenset({-32, -64, -61, -55, -86, -53, -85, -48, -46})]
1878	itemsets left after T operation 	: [frozenset({-24, -28, -73})]
1155	itemsets left after W operation 	: [frozenset({-6, -4, -3, 87}), frozenset({-59, -58, -56, -52, -50, -47, -41, -36, -32, -26, -23, -87, -19, -14, -10, -73, -71, -66}), frozenset({-30, -26, -87, -86, -22, -48, -46, -14, -10, -40, -72, -65}), frozenset({-62, -30, -56, -24, -86, -53, -87, -50, -16, -47, -79, -41, -8, -69, -67}), frozenset({-63, -59, -58, -57, -87, -21, -16, -77, -10, -72, -40}), frozenset({-32, -26, -87, -22, -53, -21, -51, -16, -46, -12, -75, -41, -72, -36, -67}), frozenset({-72, -87, 85, -17}), frozenset({-79, -14, -72, -87, -86, -82}), frozenset({-30, -14, -10, -87, -86, -68})]
806	itemsets left after W operation 	: [frozenset({-72, -7, 88, -73}), frozenset({-30, -26, -57, -24, -88, -52, -19, -50, -17, -42, -10, -37, -4, -3}), frozenset({-88, -5, -2}), frozenset({-58, -56, -52, -49, -47, -40, -36, -34, -26, -24, -88, -19, -82, -17, -79, -12, -4, -3, -66}), frozenset({-64, -62, -48, -44, -39, -37, -30, -26, -24, -88, -84, -19, -80, -14, -8, -4, -2}), frozenset({-88, -79, -5, -2}), frozenset({-12, -21, -88, -5, -3, -82, -17})]
738	itemsets left after T operation 	: [frozenset({-43, -47, -37, -51})]
565	itemsets left after T operation 	: [frozenset({-7, -21, -2, -17})]
329	itemsets left after T operation 	: [frozenset({-24, -55, -46, -21})]
202	itemsets left after T operation 	: [frozenset({-52, -58, -26})]
153	itemsets left after T operation 	: [frozenset({-21, -37, -28, -73})]
116	itemsets left after T operation 	: [frozenset({-48, -4, -26, -2})]
95	itemsets left after T operation 	: [frozenset({-24, -53, -50})]
78	itemsets left after T operation 	: [frozenset({-21, -2, -17})]
66	itemsets left after T operation 	: [frozenset({-4, -2})]
60	itemsets left after V operation 	: [frozenset({-32, -55, -22, -85, -86, -49, -78, -45, -12, -42, 58}), frozenset({-52, -58, -26}), frozenset({-30, -57, -24, -88, -19, -50, -17, -42, -10, 58, -37, -4, -3})]
53	itemsets left after V operation 	: [frozenset({-21, -2, -17}), frozenset({2, -12, -88, -5, -3, -82})]
51	itemsets left after T operation 	: [frozenset({-5, -2})]
47	itemsets left after V operation 	: [frozenset({-24, -53, -50}), frozenset({-32, -61, -29, -55, -86, -85, -51, -47, 50, -42, -67})]
44	itemsets left after T operation 	: [frozenset({-24, -50})]
39	itemsets left after V operation 	: [frozenset({-24, -28, -73}), frozenset({24, -21, -37})]
22	itemsets left after V operation 	: [frozenset({50, -28, -73}), frozenset({-55, -46, -21, 50}), frozenset({-24, -50})]
17	itemsets left after T operation 	: [frozenset({-2})]
# of frequent itemsets	: 3
Time of DCI Closed		: 0.17964506149291992
Initial DL				: 42021.51276763668
Final DL				: 4998.552027631556
Compression (wrt me)	: 0.8810477848507813
Operator Counters		: {'D': 0, 'W': 4, 'V': 5, 'S': 1, 'R': 0, 'T': 15}
Misle Learning Runtime	: 2.9783570766448975

# of frequent itemsets	: 30444
Time of DCI Closed		: 0.8332319259643555
21  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-73, -72, -7, -5, -2}), frozenset({-21, -4, -14, -10, -73, -72, -6, -36, -2}), frozenset({-6, -4, -2})}
DL of initial theory	: 40816.1929599786
22157	itemsets left after T operation 	: [frozenset({-72, -6, -4, -2})]
14716	itemsets left after W operation 	: [frozenset({85, -6, -21, -4, -17}), frozenset({-32, -64, -61, -55, -53, -85, -48, -46, -73, -72, -36, -3}), frozenset({-62, -58, -56, -54, -51, -47, -9, -43, -37, -33, -28, -24, -85, -3, -73, -72, -67}), frozenset({-30, -59, -26, -24, -55, -53, -85, -48, -73, -46, -41, -72, -36, -3}), frozenset({-31, -62, -55, -23, -85, -52, -49, -12, -44, -72, -73, -40, -36, -3, -66}), frozenset({-28, -24, -56, -85, -84, -50, -80, -73, -46, -12, -41, -72, -3, -34}), frozenset({-62, -55, -54, -50, -46, -42, -8, -37, -33, -27, -24, -85, -82, -80, -72, -3, -66}), frozenset({-62, -28, -25, -55, -85, -47, -43, -37, -67, -2, -33}), frozenset({-30, -55, -22, -85, -82, -48, -79, -46, -43, -75, -8, -71, -36, -2}), frozenset({-32, -62, -22, -85, -49, -80, -46, -41, -8, -37, -67, -2}), frozenset({-28, -24, -85, -51, -46, -11, -42, -36, -2}), frozenset({-31, -61, -28, -24, -55, -53, -85, -50, -46, -76, -72, -40, -36, -3}), frozenset({-26, -85, -46, -75, -43, -10, -71, -36, -67, -2}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -85, -82, -80, -3, -12, -73, -72, -67}), frozenset({-62, -58, -24, -56, -53, -85, -50, -73, -72, -41, -8, -36, -3, -66}), frozenset({-10, -73, -71, -85, -2}), frozenset({-32, -61, -29, -24, -55, -53, -85, -51, -67, -47, -42, -73, -72, -36, -3}), frozenset({-61, -55, -52, -49, -46, -41, -36, -32, -26, -24, -85, -82, -79, -66, -75, -68, -2}), frozenset({-62, -57, -54, -50, -46, -41, -36, -30, -28, -25, -85, -82, -80, -10, -73, -70, -67, -2}), frozenset({-32, -26, -55, -22, -85, -52, -49, -78, -45, -12, -42, -73, -72, -36, -3}), frozenset({-32, -62, -22, -53, -85, -49, -46, -73, -40, -71, -37, -67, -2}), frozenset({-61, -28, -23, -53, -85, -50, -80, -46, -10, -42, -2, -36, -66, -33}), frozenset({-26, -10, -40, -37, -85, -67, -33}), frozenset({-59, -52, -50, -46, -42, -36, -31, -28, -22, -85, -79, -73, -8, -71, -67, -2}), frozenset({-62, -55, -52, -50, -47, -40, -8, -37, -35, -28, -25, -85, -82, -79, -3, -73, -72, -67}), frozenset({-61, -58, -56, -53, -49, -46, -41, -36, -30, -28, -24, -85, -66, -73, -8, -71, -2}), frozenset({-30, -26, -58, -24, -57, -85, -52, -49, -73, -46, -72, -41, -8, -36, -3}), frozenset({-8, -85, -84, -2}), frozenset({-55, -54, -85, -51, -43, -37, -67, -2}), frozenset({-32, -64, -28, -57, -25, -85, -50, -47, -42, -73, -72, -37, -3})]
9758	itemsets left after T operation 	: [frozenset({-21, -17, -73, -7, -2})]
4108	itemsets left after W operation 	: [frozenset({-6, -36, -4, 86}), frozenset({-31, -27, -22, -21, -86, -14, -45, -10, -40, -2}), frozenset({-32, -23, -86, -21, -82, -46, -13, -12, -75, -40, -71, -2}), frozenset({-63, -62, -55, -52, -48, -46, -40, -34, -28, -24, -86, -17, -12, -73, -72, -3}), frozenset({-55, -52, -48, -47, -8, -39, -31, -28, -24, -86, -21, -3, -14, -73, -72, -67}), frozenset({-32, -26, -24, -86, -53, -21, -82, -49, -47, -78, -12, -42, -73, -71, -2}), frozenset({-63, -59, -55, -53, -50, -44, -8, -39, -33, -26, -24, -86, -21, -16, -73, -72, -3}), frozenset({-55, -53, -50, -45, -41, -32, -26, -24, -86, -21, -82, -3, -14, -78, -73, -8, -70, -67}), frozenset({-26, -22, -86, -17, -48, -78, -44, -11, -73, -71, -2}), frozenset({-86, -21, -82, -79, -14, -73, -72, -3}), frozenset({-30, -86, -21, -14, -10, -73, -68, -3}), frozenset({-59, -58, -56, -52, -50, -47, -41, -32, -26, -23, -86, -19, -14, -10, -73, -71, -3, -66}), frozenset({-62, -30, -58, -57, -26, -24, -86, -52, -50, -79, -46, -66, -40, -2}), frozenset({-61, -55, -52, -48, -46, -41, -33, -26, -86, -18, -80, -14, -73, -8, -68, -2, -65}), frozenset({-32, -26, -24, -55, -86, -21, -52, -48, -16, -44, -42, -73, -8, -68, -2}), frozenset({-58, -55, -86, -20, -82, -17, -79, -42, -2, -33}), frozenset({-57, -53, -49, -46, -41, -8, -32, -28, -24, -86, -82, -17, -80, -73, -72, -3, -66}), frozenset({-62, -53, -49, -46, -9, -41, -32, -26, -22, -86, -19, -82, -17, -79, -66, -73, -70, -2}), frozenset({-62, -30, -26, -56, -22, -53, -86, -51, -16, -45, -10, -39, -67, -2}), frozenset({-30, -26, -22, -21, -86, -48, -46, -14, -10, -73, -40, -72, -3, -65}), frozenset({-62, -56, -53, -50, -47, -41, -30, -24, -86, -21, -16, -79, -3, -73, -8, -69, -67}), frozenset({-59, -55, -52, -48, -44, -40, -30, -26, -23, -86, -82, -17, -79, -75, -8, -71, -2}), frozenset({-61, -55, -54, -49, -46, -40, -30, -28, -86, -82, -80, -14, -8, -71, -67, -2}), frozenset({-62, -30, -28, -24, -55, -86, -52, -50, -3, -46, -43, -73, -72, -67}), frozenset({-32, -26, -22, -53, -21, -51, -86, -16, -3, -46, -12, -75, -41, -72, -67})]
3445	itemsets left after W operation 	: [frozenset({-72, -3, 87, -73}), frozenset({-61, -58, -57, -49, -47, -40, -37, -33, -28, -24, -87, -84, -19, -17, -80, -8, -6, -4, -65}), frozenset({-30, -26, -57, -24, -87, -52, -19, -50, -17, -42, -10, -7, -37, -4}), frozenset({-12, -21, -87, -5, -7, -82, -17}), frozenset({-32, -64, -61, -55, -87, -53, -85, -48, -46, -36}), frozenset({-62, -28, -58, -56, -24, -54, -85, -87, -51, -47, -43, -9, -37, -67, -33}), frozenset({-30, -59, -26, -24, -55, -87, -53, -85, -48, -46, -41, -36}), frozenset({-31, -62, -55, -23, -85, -52, -87, -49, -12, -44, -40, -36, -66}), frozenset({-28, -24, -56, -87, -85, -84, -50, -80, -46, -12, -41, -34}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -87, -85, -82, -80, -12, -67}), frozenset({-62, -58, -24, -56, -87, -53, -85, -50, -41, -8, -36, -66}), frozenset({-32, -61, -29, -24, -55, -87, -53, -85, -51, -47, -42, -36, -67}), frozenset({-32, -26, -55, -22, -85, -52, -87, -49, -78, -45, -12, -42, -36}), frozenset({-62, -55, -52, -50, -47, -40, -37, -35, -28, -25, -87, -85, -82, -79, -8, -67}), frozenset({-30, -58, -26, -24, -57, -87, -85, -52, -49, -46, -41, -8, -36}), frozenset({-32, -64, -28, -57, -25, -87, -85, -50, -47, -42, -37}), frozenset({-63, -62, -28, -24, -55, -86, -87, -52, -17, -48, -46, -12, -40, -34}), frozenset({-31, -28, -24, -55, -86, -21, -52, -87, -48, -47, -14, -8, -39, -67}), frozenset({-63, -59, -26, -24, -55, -86, -53, -21, -87, -50, -16, -44, -8, -39, -33}), frozenset({-79, -14, -87, -86, -21, -82}), frozenset({-32, -28, -57, -24, -87, -86, -53, -82, -49, -17, -80, -46, -41, -8, -66}), frozenset({-30, -26, -87, -86, -22, -21, -48, -46, -14, -10, -40, -65}), frozenset({-62, -30, -28, -24, -55, -86, -87, -52, -50, -46, -43, -67})]
2095	itemsets left after T operation 	: [frozenset({-2, -73})]
1872	itemsets left after T operation 	: [frozenset({-24, -46, -28})]
928	itemsets left after V operation 	: [frozenset({-32, -62, 2, -28, -24, -55, -51, -17, -47, -3, -43, -72, -37, -67}), frozenset({2, -61, -58, -57, -52, -48, -46, -41, -37, -34, -26, -22, -82, -17, -78, -75, -10, -72, -3, -66}), frozenset({-35, -3, 2, -29, -42, -24, -51}), frozenset({-6, -4, -2}), frozenset({2, -61, -58, -57, -49, -47, -40, -37, -33, -28, -24, -87, -84, -19, -17, -80, -8, -65}), frozenset({-32, -62, 2, -28, -56, -24, -52, -51, -17, -67, -47, -43, -72, -37, -3}), frozenset({-63, 2, -59, -58, -57, -21, -16, -77, -10, -40, -72, -3}), frozenset({2, -21, 85, -17}), frozenset({2, -36, 86})]
800	itemsets left after T operation 	: [frozenset({-79, -55, -82, -2})]
718	itemsets left after W operation 	: [frozenset({-5, 88, -7, -21, -17}), frozenset({-62, -24, -88, -54, -51, -79, -46, -12, -2, -41, -72, -36, -34}), frozenset({-88, -12, -2}), frozenset({-29, -25, -88, -51, -47, -43, -37, -3, -33}), frozenset({-88, -87, -12, -82})]
616	itemsets left after T operation 	: [frozenset({-43, -47, -37, -51})]
442	itemsets left after T operation 	: [frozenset({-46, -2})]
337	itemsets left after T operation 	: [frozenset({-24, -73, -50, -41})]
266	itemsets left after W operation 	: [frozenset({89, -46, -26, -41}), frozenset({-30, -59, -89, -24, -55, -87, -53, -85, -48, -36}), frozenset({2, -61, -58, -57, -52, -48, -37, -34, -89, -22, -82, -17, -78, -75, -10, -72, -3, -66}), frozenset({-32, -89, -22, -53, -21, -51, -86, -16, -3, -12, -75, -72, -67}), frozenset({-30, -58, -57, -24, -87, -89, -85, -52, -49, -8, -36})]
224	itemsets left after W operation 	: [frozenset({-40, 90, -21, -10}), frozenset({-28, -90, -17, -47, -75, -72, -6, -5, -36, -2}), frozenset({-31, -27, -90, -22, -86, -14, -45, -2}), frozenset({-63, 2, -59, -58, -57, -90, -16, -77, -72, -3}), frozenset({-30, -26, -90, -87, -86, -22, -48, -46, -14, -65})]
198	itemsets left after W operation 	: [frozenset({-47, 91, -28}), frozenset({-62, -91, -25, -55, -85, -43, -37, -67, -2, -33}), frozenset({-91, -90, -17, -75, -72, -6, -5, -36, -2}), frozenset({-62, -91, -25, -55, -87, -85, -52, -50, -82, -35, -79, -40, -8, -37, -67}), frozenset({-32, -64, -91, -57, -25, -87, -85, -50, -42, -37}), frozenset({-31, -91, -24, -55, -86, -21, -52, -87, -48, -14, -8, -39, -67}), frozenset({2, -61, -58, -57, -49, -40, -37, -33, -91, -24, -87, -84, -19, -17, -80, -8, -65})]
153	itemsets left after T operation 	: [frozenset({-24, -50})]
120	itemsets left after T operation 	: [frozenset({-30, -26, -2})]
109	itemsets left after T operation 	: [frozenset({-43, -37, -51})]
104	itemsets left after V operation 	: [frozenset({-79, -55, -82, -2}), frozenset({-62, 2, -91, -25, -8, -87, -85, -52, -50, -67, -40, -37, -35})]
86	itemsets left after T operation 	: [frozenset({-61, -58, -17})]
69	itemsets left after T operation 	: [frozenset({-37, -25})]
57	itemsets left after T operation 	: [frozenset({-52, -58})]
50	itemsets left after T operation 	: [frozenset({-4, -2})]
48	itemsets left after W operation 	: [frozenset({-48, -36, 92}), frozenset({-30, -92, -59, -89, -24, -55, -87, -53, -85}), frozenset({-32, -64, -61, -92, -55, -87, -53, -85, -46})]
36	itemsets left after T operation 	: [frozenset({-24, -51})]
28	itemsets left after T operation 	: [frozenset({-2})]
14	itemsets left after T operation 	: [frozenset({-51})]
Unpacking W operator applied earlier using 90 on frozenset({-40, -21, -10})
Unpacking W operator applied earlier using 86 on frozenset({-6, -36, -4})
Unpacking W operator applied earlier using 85 on frozenset({-6, -21, -4, -17})
# of frequent itemsets	: 6
Time of DCI Closed		: 0.17157292366027832
Initial DL				: 41917.27499737748
Final DL				: 4619.076913891129
Compression (wrt me)	: 0.8898049333078041
Operator Counters		: {'D': 0, 'W': 5, 'V': 2, 'S': 0, 'R': 0, 'T': 18}
Misle Learning Runtime	: 2.9121053218841553

# of frequent itemsets	: 36323
Time of DCI Closed		: 0.8887519836425781
23  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-6, -4, -2}), frozenset({-21, -17, -12, -7, -5, -2}), frozenset({-73, -72, -6, -4, -2}), frozenset({-28, -51, -17, -47, -6, -4, -67, -2}), frozenset({-21, -4, -14, -10, -73, -72, -6, -36, -2})}
DL of initial theory	: 41319.87341071546
25215	itemsets left after T operation 	: [frozenset({-72, -6, -4, -2})]
13387	itemsets left after T operation 	: [frozenset({-6, -4, -17})]
7082	itemsets left after T operation 	: [frozenset({-21, -17, -73, -7, -2})]
3234	itemsets left after W operation 	: [frozenset({85, -26, -6, -36, -4}), frozenset({-30, -22, -21, -85, -48, -14, -46, -10, -73, -40, -72, -3, -65}), frozenset({-32, -24, -85, -49, -79, -47, -12, -43, -73, -71, -2}), frozenset({-32, -24, -21, -53, -85, -82, -49, -47, -78, -12, -42, -73, -71, -2}), frozenset({-63, -59, -55, -53, -50, -44, -72, -39, -33, -24, -21, -85, -16, -73, -8, -3}), frozenset({-31, -62, -58, -57, -23, -21, -85, -50, -16, -46, -9, -40, -67, -2}), frozenset({-55, -53, -50, -45, -41, -32, -24, -21, -85, -82, -3, -14, -78, -73, -8, -70, -67}), frozenset({-59, -58, -56, -52, -50, -47, -41, -32, -23, -85, -19, -14, -10, -73, -71, -3, -66}), frozenset({-62, -30, -58, -57, -24, -85, -52, -50, -79, -46, -2, -40, -66}), frozenset({-61, -55, -52, -48, -46, -41, -33, -85, -18, -80, -14, -73, -8, -68, -2, -65}), frozenset({-32, -24, -55, -21, -52, -85, -16, -48, -44, -42, -73, -8, -68, -2}), frozenset({-61, -55, -53, -48, -46, -42, -32, -24, -21, -85, -82, -16, -79, -75, -10, -72, -67}), frozenset({-62, -30, -56, -22, -53, -85, -51, -16, -45, -10, -39, -67, -2})]
1376	itemsets left after T operation 	: [frozenset({-72, -7, -4, -73})]
999	itemsets left after S operation 	: [frozenset({-6, -4, -2})]
659	itemsets left after T operation 	: [frozenset({-21, -2, -17})]
426	itemsets left after W operation 	: [frozenset({-21, -3, 86, -73}), frozenset({-61, -55, -53, -48, -46, -40, -37, -7, -32, -28, -24, -86, -80, -14, -10, -71, -4}), frozenset({-86, -4, -82, -79, -14, -72, -6, -36}), frozenset({-12, -72, -7, -86, -5, -82, -17}), frozenset({-30, -22, -85, -86, -48, -14, -46, -10, -40, -72, -65}), frozenset({-63, -59, -24, -55, -86, -53, -85, -50, -16, -44, -72, -8, -39, -33}), frozenset({-32, -24, -55, -86, -53, -85, -50, -82, -14, -45, -78, -41, -8, -70, -67})]
334	itemsets left after T operation 	: [frozenset({-32, -24, -2, -73})]
293	itemsets left after V operation 	: [frozenset({-35, -3, 17, -29, -42, -24, -51}), frozenset({-63, -59, -58, -57, -21, -16, 17, -77, -10, -40, -72, -3}), frozenset({-6, -4, -17}), frozenset({17, -36, 85, -26}), frozenset({17, -2}), frozenset({-79, -14, 17, -72, -86, -36, -82})]
211	itemsets left after T operation 	: [frozenset({-32, -24, -53})]
114	itemsets left after T operation 	: [frozenset({-40, -46, -2})]
64	itemsets left after T operation 	: [frozenset({-7, -4})]
47	itemsets left after T operation 	: [frozenset({-2, -73})]
38	itemsets left after V operation 	: [frozenset({-30, 2, -86, -22, -85, -48, -14, -10, -72, -65}), frozenset({-40, -46, -2})]
35	itemsets left after V operation 	: [frozenset({-24, -32, -53}), frozenset({32, -63, -59, -8, -55, -86, -85, -50, -16, -44, -72, -39, -33})]
33	itemsets left after V operation 	: [frozenset({2, -29, -25, -5, -51, -47, -43, -7, -37, -3, -33}), frozenset({-21, -2, -17})]
21	itemsets left after T operation 	: [frozenset({-59, -50})]
17	itemsets left after T operation 	: [frozenset({-3, -51})]
10	itemsets left after T operation 	: [frozenset({-2})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.18386483192443848
Initial DL				: 42024.60676043134
Final DL				: 8139.127811296882
Compression (wrt me)	: 0.8063247121455435
Operator Counters		: {'D': 0, 'W': 2, 'V': 4, 'S': 1, 'R': 0, 'T': 13}
Misle Learning Runtime	: 2.259190559387207

Running	: ./Resources/Krimp/bin/krimp	/home/arcchitjain/Documents/Mistle/classify.conf
krimp_accuracy = 0.7663
mistle_fold_accuracy_list = [0.7027027027027027, 0.972972972972973, 0.8918918918918919, 0.7837837837837838, 0.8378378378378378, 0.8378378378378378, 0.8918918918918919, 0.8378378378378378, 0.7837837837837838, 0.8]
mistle_attempted_list = [37, 37, 37, 37, 37, 37, 37, 37, 37, 35]
weighted sum = 307.0
weighted_mistle_accuracy = 0.8342391304347826
mistle_atempted = 368
mistle_coverage = 1.0
naive_mistle_attempted_list = 0.8340540540540541
Mistle MDL Selections = []
krimp_time = 12.2672278881073
mistle_topk_time = 0
mistle_time = 27.65403389930725
krimp_accuracy_dict = {'horseColic.dat': '0.7663'}
mistle_accuracy_dict = {'horseColic.dat': (0.8342391304347826, 368, 1.0)}
