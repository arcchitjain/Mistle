>/Users/arcchit/Docs/Mistle/Resources/spmf.jar
Running the DCI-Closed algorithm
========== DCI_CLOSED - STATS ============
 Number of transactions: 28
 Number of frequent closed itemsets: 12067
 Total time ~: 225 ms
Current Minsup[0.5] yields 12067 itemsets.
Top-k minsup for at least 5000 paterns = 0.5 or 14
DL of initial theory	: 35432.10311332919
4832	itemsets left after W operation 	: [frozenset({3, 4, 5, 6, 8, -55, 11, 19, -40, 33, 36, 38, 41, 42, 43, 44, 47, 49, 51, -12, 54, 56, -7, -2}), frozenset({10, 14, 16, 18, 22, 23, 26, 28, 30, 32, 34, 37, 39, 45, 46, 50, 52, 53, -56, -48, -35, -31, -29, -27, -25, -24, -21, -20, -17, -15, -13, -9}), frozenset({9, 14, 15, 17, 22, 24, 26, 27, 30, 31, 32, 37, 39, 45, 46, 50, 52, 53, -56, -48, -35, -34, -29, -28, -25, -23, -21, -20, -18, -16, -13, -10}), frozenset({10, 14, 16, 18, 21, 24, 26, 27, 30, 31, 32, 35, 37, 39, 45, 46, 50, 52, 53, -56, -48, -34, -29, -28, -25, -23, -22, -20, -17, -15, -13, -9}), frozenset({10, 14, 15, 17, 20, 21, 22, 24, 26, 28, 29, 32, 34, 35, 39, 45, 48, 50, 52, 53, -56, -46, -37, -31, -30, -27, -25, -23, -18, -16, -13, -9}), frozenset({10, 14, 16, 17, 21, 23, 25, 28, 29, 32, 34, 37, 39, 45, 46, 52, 53, -56, -50, -48, -35, -31, -30, -27, -26, -24, -22, -20, -18, -15, -13, -9}), frozenset({10, 14, 16, 17, 21, 24, 26, 27, 29, 32, 34, 37, 39, 45, 46, 50, 53, -56, -52, -48, -35, -31, -30, -28, -25, -23, -22, -20, -18, -15, -13, -9}), frozenset({10, 14, 16, 17, 21, 24, 25, 27, 30, 32, 34, 35, 39, 45, 46, 48, 50, 52, -56, -53, -37, -31, -29, -28, -26, -23, -22, -20, -18, -15, -13, -9}), frozenset({9, 14, 16, 17, 22, 23, 25, 28, 30, 32, 34, 37, 39, 46, 48, 50, 52, -56, -53, -45, -35, -31, -29, -27, -26, -24, -21, -20, -18, -15, -13, -10}), frozenset({9, 13, 15, 17, 21, 23, 26, 27, 30, 32, 34, 37, 39, 45, 46, 50, 52, -56, -53, -48, -35, -31, -29, -28, -25, -24, -22, -20, -18, -16, -14, -10}), frozenset({9, 14, 15, 17, 22, 24, 25, 28, 30, 31, 34, 35, 39, 46, 48, 52, 53, -56, -50, -45, -37, -32, -29, -27, -26, -23, -21, -20, -18, -16, -13, -10}), frozenset({9, 14, 16, 17, 22, 23, 26, 28, 30, 32, 34, 35, 37, 45, 48, 52, 53, -56, -50, -46, -39, -31, -29, -27, -25, -24, -21, -20, -18, -15, -13, -10}), frozenset({9, 14, 15, 17, 21, 24, 26, 28, 29, 32, 34, 37, 39, 45, 46, 50, 52, -56, -53, -48, -35, -31, -30, -27, -25, -23, -22, -20, -18, -16, -13, -10}), frozenset({10, 14, 16, 17, 20, 21, 22, 24, 25, 28, 29, 31, 32, 37, 39, 45, 46, 50, 52, -56, -53, -48, -35, -34, -30, -27, -26, -23, -18, -15, -13, -9}), frozenset({9, 14, 16, 18, 21, 23, 26, 28, 29, 32, 34, 35, 37, 39, 46, 48, 50, 52, 53, -56, -45, -31, -30, -27, -25, -24, -22, -20, -17, -15, -13, -10}), frozenset({9, 14, 16, 18, 22, 23, 26, 28, 30, 31, 34, 35, 37, 45, 46, 50, 52, 53, -56, -48, -39, -32, -29, -27, -25, -24, -21, -20, -17, -15, -13, -10}), frozenset({10, 13, 15, 17, 22, 23, 25, 27, 29, 32, 34, 35, 37, 45, 46, 50, 52, -56, -53, -48, -39, -31, -30, -28, -26, -24, -21, -20, -18, -16, -14, -9}), frozenset({10, 14, 16, 18, 21, 24, 25, 27, 29, 31, 32, 35, 37, 39, 46, 48, 50, 52, 53, -56, -45, -34, -30, -28, -26, -23, -22, -20, -17, -15, -13, -9})]
130	itemsets left after W operation 	: [frozenset({5, 6, 8, 14, 17, -7, 32, 33, 38, 41, 43, 45, -18, 47, 49, 51, -13, 52, 57}), frozenset({2, 3, 10, 11, 16, 19, 20, 21, 22, 23, 25, 27, 29, 34, 35, 36, 37, 39, 42, 44, 46, 48, 50, 53, 55, -57, -54, -40, -31, -30, -28, -26, -24, -15, -12, -9, -4}), frozenset({2, 3, 10, 11, 16, 19, 22, 24, 26, 27, 29, 34, 36, 37, 39, 40, 44, 46, 50, 54, -57, -55, -53, -48, -42, -35, -31, -30, -28, -25, -23, -21, -20, -15, -12, -9, -4}), frozenset({2, 4, 10, 11, 16, 19, 21, 23, 26, 28, 29, 31, 36, 37, 39, 42, 44, 46, 53, 54, -57, -55, -50, -48, -40, -35, -34, -30, -27, -25, -24, -22, -20, -15, -12, -9, -3}), frozenset({2, 3, 10, 11, 16, 19, 20, 21, 22, 23, 26, 27, 29, 31, 34, 35, 36, 37, 39, 40, 42, 44, 46, 48, 50, 53, 54, -57, -55, -30, -28, -25, -24, -15, -12, -9, -4}), frozenset({3, 4, 10, 12, 16, 19, 22, 23, 25, 27, 29, 34, 35, 36, 37, 42, 44, 46, 50, 55, -57, -54, -53, -48, -40, -39, -31, -30, -28, -26, -24, -21, -20, -15, -11, -9, -2}), frozenset({3, 4, 10, 11, 16, 19, 22, 23, 26, 28, 30, 31, 35, 37, 39, 40, 44, 48, 53, 54, -57, -55, -50, -46, -42, -36, -34, -29, -27, -25, -24, -21, -20, -15, -12, -9, -2}), frozenset({3, 4, 10, 12, 16, 19, 21, 23, 26, 27, 29, 34, 36, 37, 39, 42, 44, 46, 53, 54, -57, -55, -50, -48, -40, -35, -31, -30, -28, -25, -24, -22, -20, -15, -11, -9, -2}), frozenset({2, 3, 9, 11, 15, 20, 22, 24, 26, 27, 29, 34, 35, 36, 37, 40, 42, 46, 50, 53, 55, -57, -54, -48, -44, -39, -31, -30, -28, -25, -23, -21, -19, -16, -12, -10, -4}), frozenset({3, 4, 9, 11, 15, 19, 21, 23, 26, 27, 29, 34, 36, 37, 39, 42, 44, 46, 50, 53, 55, -57, -54, -48, -40, -35, -31, -30, -28, -25, -24, -22, -20, -16, -12, -10, -2})]
0	itemsets left after W operation 	: [frozenset({4, 5, 8, -55, 11, 36, 38, 42, 43, 47, 49, 51, -12, 54, -7, 58}), frozenset({2, 6, 10, 14, 16, 18, 20, 22, 23, 26, 27, 29, 31, 32, 34, 37, 39, 40, 44, 45, 46, 50, 52, 53, -58, -48, -41, -35, -33, -30, -28, -25, -24, -21, -19, -17, -15, -13, -9, -3}), frozenset({2, 3, 10, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 37, 39, 40, 41, 45, 46, 50, 53, -58, -52, -48, -44, -35, -31, -17, -15, -13, -9, -6}), frozenset({33, 3, 6, -58, 41, 44, 19, -40, 56, -2})]
# of frequent itemsets	: 195
Time of DCI Closed		: 0.3150458335876465
192	itemsets left after W operation 	: [frozenset({16, -15, 37, 39, -9, 10, 59}), frozenset({-59, -56, 14, -48, 18, 22, 23, 26, 28, -35, 30, 32, -31, 34, -29, -27, -25, -24, -21, -20, 45, 46, -17, 50, -13, 52, 53}), frozenset({-59, -56, 14, -48, 18, 21, 24, 26, 27, 30, 31, 32, -34, 35, -29, -28, -25, -23, -22, -20, 45, 46, -17, 50, -13, 52, 53}), frozenset({-59, -56, 14, -50, -48, 17, 21, 23, 25, 28, 29, -35, 32, -31, 34, -30, -27, -26, -24, -22, -20, 45, 46, -18, -13, 52, 53}), frozenset({-59, -56, -52, 14, -48, 17, 21, 24, 26, 27, 29, -35, 32, -31, 34, -30, -28, -25, -23, -22, -20, 45, 46, -18, 50, -13, 53}), frozenset({-59, -56, -53, 14, -48, 17, 20, 21, 22, 24, 25, 28, 29, -35, 31, 32, -34, -30, -27, -26, -23, 45, 46, -18, 50, -13, 52}), frozenset({-59, -56, 14, 18, -45, 21, 24, 25, 27, 29, -34, 31, 32, -30, 35, -28, -26, -23, -22, -20, 46, -17, 48, 50, -13, 52, 53}), frozenset({2, 3, 11, 19, 20, 21, 22, 23, 25, 27, 29, 34, 35, 36, 42, 44, 46, 48, 50, 53, 55, -59, -57, -54, -40, -31, -30, -28, -26, -24, -12, -4}), frozenset({2, 3, 11, 19, 22, 24, 26, 27, 29, 34, 36, 40, 44, 46, 50, 54, -59, -57, -55, -53, -48, -42, -35, -31, -30, -28, -25, -23, -21, -20, -12, -4}), frozenset({2, 4, 11, 19, 21, 23, 26, 28, 29, 31, 36, 42, 44, 46, 53, 54, -59, -57, -55, -50, -48, -40, -35, -34, -30, -27, -25, -24, -22, -20, -12, -3}), frozenset({2, 3, 11, 19, 20, 21, 22, 23, 26, 27, 29, 31, 34, 35, 36, 40, 42, 44, 46, 48, 50, 53, 54, -59, -57, -55, -30, -28, -25, -24, -12, -4}), frozenset({3, 4, 11, 19, 22, 23, 26, 28, 30, 31, 35, 40, 44, 48, 53, 54, -59, -57, -55, -50, -46, -42, -36, -34, -29, -27, -25, -24, -21, -20, -12, -2}), frozenset({3, 4, 12, 19, 21, 23, 26, 27, 29, 34, 36, 42, 44, 46, 53, 54, -59, -57, -55, -50, -48, -40, -35, -31, -30, -28, -25, -24, -22, -20, -11, -2}), frozenset({2, 6, 14, 18, 20, 22, 23, 26, 27, 29, 31, 32, 34, 40, 44, 45, 46, 50, 52, 53, -59, -58, -48, -41, -35, -33, -30, -28, -25, -24, -21, -19, -17, -13, -3}), frozenset({2, 3, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 40, 41, 45, 46, 50, 53, -59, -58, -52, -48, -44, -35, -31, -17, -13, -6})]
182	itemsets left after W operation 	: [frozenset({50, -28, 27, 60, 46}), frozenset({-60, -56, 9, 14, 15, -48, 17, 22, 24, 26, -35, 30, 31, 32, -34, -29, 37, 39, -25, -23, -21, -20, 45, -18, -16, -13, 52, 53, -10}), frozenset({-60, -56, 10, -53, 14, 16, 17, 21, 24, 25, -37, 30, 32, -31, 34, 35, -29, -26, 39, -23, -22, -20, 45, -18, 48, -15, -13, 52, -9}), frozenset({-60, -56, 9, -53, 13, 15, -48, 17, 21, 23, 26, -35, 30, 32, -31, 34, -29, 37, 39, -25, -24, -22, -20, 45, -18, -16, -14, 52, -10}), frozenset({-60, -56, 10, -53, 13, 15, -48, 17, 22, 23, 25, -39, 29, 32, -31, 34, 35, -30, 37, -26, -24, -21, -20, 45, -18, -16, -14, 52, -9}), frozenset({3, 4, 10, 12, 16, 19, 22, 23, 25, 29, 34, 35, 36, 37, 42, 44, 55, -60, -57, -54, -53, -48, -40, -39, -31, -30, -26, -24, -21, -20, -15, -11, -9, -2}), frozenset({2, 3, 9, 11, 15, 20, 22, 24, 26, 29, 34, 35, 36, 37, 40, 42, 53, 55, -60, -57, -54, -48, -44, -39, -31, -30, -25, -23, -21, -19, -16, -12, -10, -4}), frozenset({3, 4, 9, 11, 15, 19, 21, 23, 26, 29, 34, 36, 37, 39, 42, 44, 53, 55, -60, -57, -54, -48, -40, -35, -31, -30, -25, -24, -22, -20, -16, -12, -10, -2}), frozenset({-60, -59, -56, 14, -48, 18, 21, 24, 26, 30, 31, 32, -34, 35, -29, -25, -23, -22, -20, 45, -17, -13, 52, 53}), frozenset({-60, -59, -56, -52, 14, -48, 17, 21, 24, 26, 29, -35, 32, -31, 34, -30, -25, -23, -22, -20, 45, -18, -13, 53}), frozenset({-60, -59, -56, 14, 18, -45, 21, 24, 25, 29, -34, 31, 32, -30, 35, -26, -23, -22, -20, -17, 48, -13, 52, 53}), frozenset({2, 3, -60, -59, -57, -54, 11, 19, 20, 21, 22, 23, -40, 25, 29, -31, 34, 35, 36, -30, -26, -24, 42, 44, 48, -12, 53, 55, -4}), frozenset({2, 3, -60, -59, -57, -55, 11, -53, -48, 19, 22, -42, 24, 26, 29, -35, -31, 34, -30, 36, -25, 40, -23, -21, 44, -20, -12, 54, -4}), frozenset({2, 3, -60, -59, -57, -55, 11, 19, 20, 21, 22, 23, 26, 29, 31, 34, 35, 36, -30, -25, 40, -24, 42, 44, 48, -12, 53, 54, -4}), frozenset({2, 6, 14, 18, 20, 22, 23, 26, 29, 31, 32, 34, 40, 44, 45, 52, 53, -60, -59, -58, -48, -41, -35, -33, -30, -25, -24, -21, -19, -17, -13, -3})]>/Users/arcchit/Docs/Mistle/Resources/spmf.jar
Running the DCI-Closed algorithm
========== DCI_CLOSED - STATS ============
 Number of transactions: 89
 Number of frequent closed itemsets: 12321
 Total time ~: 320 ms

87	itemsets left after T operation 	: [frozenset({-56, -13, 52, 14})]
70	itemsets left after W operation 	: [frozenset({-30, 61, 34, 29}), frozenset({3, 4, -59, -61, -57, -55, 12, -50, -48, 19, 21, 23, -40, 26, 27, -35, -31, 36, -28, -25, -24, 42, -22, 44, -20, 46, 53, 54, -11, -2}), frozenset({-61, -60, -56, 10, -53, 13, 15, -48, 17, 22, 23, 25, -39, 32, -31, 35, 37, -26, -24, -21, -20, 45, -18, -16, -14, 52, -9}), frozenset({3, 4, 10, 12, 16, 19, 22, 23, 25, 35, 36, 37, 42, 44, 55, -61, -60, -57, -54, -53, -48, -40, -39, -31, -26, -24, -21, -20, -15, -11, -9, -2}), frozenset({2, 3, 9, 11, 15, 20, 22, 24, 26, 35, 36, 37, 40, 42, 53, 55, -61, -60, -57, -54, -48, -44, -39, -31, -25, -23, -21, -19, -16, -12, -10, -4}), frozenset({3, 4, 9, 11, 15, 19, 21, 23, 26, 36, 37, 39, 42, 44, 53, 55, -61, -60, -57, -54, -48, -40, -35, -31, -25, -24, -22, -20, -16, -12, -10, -2}), frozenset({-61, -60, -59, -56, -52, 14, -48, 17, 21, 24, 26, -35, 32, -31, -25, -23, -22, -20, 45, -18, -13, 53}), frozenset({2, 3, -60, -59, -61, -57, -54, 11, 19, 20, 21, 22, 23, -40, 25, -31, 35, 36, -26, -24, 42, 44, 48, -12, 53, 55, -4}), frozenset({2, 3, -60, -59, -61, -57, -55, 11, -53, -48, 19, 22, -42, 24, 26, -35, -31, 36, -25, 40, -23, -21, 44, -20, -12, 54, -4}), frozenset({2, 3, -60, -59, -61, -57, -55, 11, 19, 20, 21, 22, 23, 26, 31, 35, 36, -25, 40, -24, 42, 44, 48, -12, 53, 54, -4}), frozenset({2, -61, -60, -59, 6, -58, 14, -48, 18, 20, 22, 23, -41, 26, -35, 31, 32, -33, -25, 40, -24, -21, 44, 45, -19, -17, -13, 52, 53, -3})]
57	itemsets left after W operation 	: [frozenset({26, 53, 62, -25}), frozenset({2, -62, 4, -59, -57, -55, 11, -50, -48, 19, 21, 23, -40, 28, 29, -35, 31, -34, -30, 36, -27, -24, 42, -22, 44, -20, 46, -12, 54, -3}), frozenset({-62, 3, 4, -59, -57, -55, 11, -50, -46, 19, 22, 23, -42, 28, -36, 30, 31, -34, 35, -29, -27, 40, -24, -21, 44, -20, 48, -12, 54, -2}), frozenset({-62, 3, 4, -59, -61, -57, -55, 12, -50, -48, 19, 21, 23, -40, 27, -35, -31, 36, -28, -24, 42, -22, 44, -20, 46, -11, 54, -2}), frozenset({2, 3, -61, -60, -62, -57, 9, -54, 11, 15, -48, 20, -44, 22, 24, -39, -31, 35, 36, 37, 40, -23, 42, -21, -19, -16, -12, -10, 55, -4}), frozenset({-62, 3, 4, -61, -60, -57, 9, -54, 11, 15, -48, 19, 21, 23, -40, -35, -31, 36, 37, 39, -24, 42, -22, 44, -20, -16, -12, -10, 55, -2}), frozenset({-62, -61, -60, -59, -56, -52, 14, -48, 17, 21, 24, -35, 32, -31, -23, -22, -20, 45, -18, -13}), frozenset({2, 3, -60, -59, -61, -57, -62, -55, 11, 19, 20, 21, 22, 23, 31, 35, 36, 40, -24, 42, 44, 48, -12, 54, -4}), frozenset({2, -61, -60, -59, 6, -58, -62, 14, -48, 18, 20, 22, 23, -41, -35, 31, 32, -33, 40, -24, -21, 44, 45, -19, -17, -13, 52, -3})]
50	itemsets left after V operation 	: [frozenset({5, 6, 8, 17, 57, 32, 33, 38, 41, 43, 45, -18, 47, 49, 51, 56, -7}), frozenset({2, -61, -60, -59, 6, -58, -62, -48, 18, 20, 22, 23, -41, -35, 31, 32, -33, 40, -24, -21, 44, 45, -19, -17, 56, -3}), frozenset({-56, -13, 52, 14})]
45	itemsets left after T operation 	: [frozenset({-56, -13, 14})]
33	itemsets left after V operation 	: [frozenset({2, 3, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 40, 41, 45, 46, 50, 53, 56, -59, -58, -52, -48, -44, -35, -31, -17, -6}), frozenset({-56, -13, 14})]
Initial DL				: 37720.90089000497
Final DL				: 5340.694680730132
Compression (wrt me)	: 0.8584155056024848
Operator Counters		: {'D': 0, 'W': 7, 'V': 2, 'S': 0, 'R': 0, 'T': 2}
Misle Learning Runtime	: 2.7555341720581055

Timeout Reached
Current Minsup[0.75] yields 23556 itemsets.
Current Minsup[0.875] yields 1386 itemsets.
Current Minsup[0.7878047993993396] yields 9754 itemsets.
Top-k minsup for at least 5000 paterns = 0.7878047993993396 or 70
DL of initial theory	: 35432.10311332919
4999	itemsets left after T operation 	: [frozenset({32, 33, 34, 3, 4, 5, 6, 38, 36, 41, 43, 45, 46, 47, 50, 51, 52, -2})]
3091	itemsets left after T operation 	: [frozenset({-30, 34, -28, 5, 38, 45, 46, 47, 49, 50, 51, 52, 27, 29})]
0	itemsets left after T operation 	: [frozenset({32, 33, 3, 36, 5, 38, 6, 41, 43, 45, 47, 50, 51, 52})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.2969388961791992
Initial DL				: 37720.90089000497
Final DL				: 4978.560629035208
Compression (wrt me)	: 0.8680158609267364
Operator Counters		: {'D': 0, 'W': 0, 'V': 0, 'S': 0, 'R': 0, 'T': 3}
Misle Learning Runtime	: 24.903898000717163

Max Score = 0.0; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})"]
Max Score = 0.0; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})"]
Max Score = 0.0; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})"]
Max Score = 0.0; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})"]
Max Score = 0.03571428571428571; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {14: 1})", "defaultdict(<class 'int'>, {14: 1})", "defaultdict(<class 'int'>, {14: 1})", "defaultdict(<class 'int'>, {14: 1})", "defaultdict(<class 'int'>, {14: 1})", "defaultdict(<class 'int'>, {14: 1})", "defaultdict(<class 'int'>, {14: 1})", "defaultdict(<class 'int'>, {14: 1})"]
Max Score = 0.03571428571428571; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {14: 1})", "defaultdict(<class 'int'>, {14: 1})", "defaultdict(<class 'int'>, {14: 1})", "defaultdict(<class 'int'>, {14: 1})", "defaultdict(<class 'int'>, {14: 1})", "defaultdict(<class 'int'>, {14: 1})", "defaultdict(<class 'int'>, {14: 1})", "defaultdict(<class 'int'>, {14: 1})"]
Max Score = 0.0; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})"]
Max Score = 0.07142857142857142; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})"]
Max Score = 0.07142857142857142; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})"]
Max Score = 0.07142857142857142; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})"]
Max Score = 0.07142857142857142; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})"]
Max Score = 0.07142857142857142; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})"]
Max Score = 0.0; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})"]
Max Score = 0.07142857142857142; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})", "defaultdict(<class 'int'>, {14: 2})"]
Return Code	: 0
CNF-cc Accuracy		: 0.39285714285714285

Dataset				: hepatitis.dat
Metric				: length
Minsups				: [3]
Mistle Accuracy		: [1.0]
CNFAlgo Accuracy	: [0.39285714285714285]
Randomized Accuracy	: [0.125]

# Test Examples		: 28
Mistle # Ties		: [(26, 130)]
CNFAlgo # Ties		: [(0, 0)]
