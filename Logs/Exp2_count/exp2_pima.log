>/Users/arcchit/Docs/Mistle/Resources/spmf.jar
Running the DCI-Closed algorithm
========== DCI_CLOSED - STATS ============
 Number of transactions: 66
 Number of frequent closed itemsets: 14600
 Total time ~: 367 ms
>/Users/arcchit/Docs/Mistle/Resources/spmf.jar
Running the DCI-Closed algorithm
========== DCI_CLOSED - STATS ============
 Number of transactions: 86
 Number of frequent closed itemsets: 13811
 Total time ~: 558 ms
Timeout Reached
Current Minsup[0.75] yields 81180 itemsets.
Current Minsup[0.875] yields 1814 itemsets.
Current Minsup[0.8188637755884972] yields 9027 itemsets.
Top-k minsup for at least 5000 paterns = 0.8188637755884972 or 54
26  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, -34, -28, -24, -20, -15, -10, -6, -2}), frozenset({3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, -37, -28, -24, -20, -15, -10, -7, -2}), frozenset({3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -15, -11, -6, -2}), frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -18, -10, -6, -2}), frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -15, -10, -6, -2}), frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, -37, -28, -24, -20, -15, -10, -6, -2}), frozenset({2, 3, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -15, -10, -6, -4}), frozenset({2, 3, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -15, -10, -9, -4}), frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -17, -10, -6, -2}), frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, -33, -31, -24, -20, -15, -10, -6, -2}), frozenset({3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -27, -20, -18, -10, -9, -2}), frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, -33, -29, -24, -20, -15, -10, -6, -2}), frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, -33, -30, -24, -20, -15, -10, -6, -2}), frozenset({3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -15, -10, -7, -2}), frozenset({3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -15, -10, -9, -2}), frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, -33, -32, -24, -20, -15, -10, -6, -2}), frozenset({3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -22, -15, -10, -9, -2}), frozenset({3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -15, -10, -8, -2}), frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -16, -10, -6, -2}), frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -19, -10, -6, -2}), frozenset({2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -15, -10, -6, -5}), frozenset({3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, -37, -28, -24, -20, -15, -10, -9, -2}), frozenset({2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -15, -10, -6, -3}), frozenset({2, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -15, -10, -9, -3}), frozenset({2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, -34, -28, -24, -20, -15, -10, -6, -5}), frozenset({3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, -34, -28, -24, -20, -15, -10, -9, -2})}
DL of initial theory	: 23272.70980539344
4999	itemsets left after T operation 	: [frozenset({35, 36, 8, -20, 14, 21, 22, 23, 29})]
1913	itemsets left after T operation 	: [frozenset({35, 36, 12, 14, 19, 27, 30})]
9	itemsets left after T operation 	: [frozenset({36, 8, -20, 21, 22, 23, 29})]
2	itemsets left after V operation 	: [frozenset({2, 3, 5, 6, 7, 8, 11, 13, 16, 17, 18, 21, 22, 23, 25, 26, -36, 29, 31, 32, 33, 34, -28, 37, -24, -20, -15, -10, -9, -4}), frozenset({35, 19, 36, 30, 27, 12, 14})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.36719775199890137
Initial DL				: 109019.69407604229
Final DL				: 14457.963014291678
Compression (wrt me)	: 0.8673820988324632
Operator Counters		: {'D': 0, 'W': 0, 'V': 1, 'S': 0, 'R': 0, 'T': 3}
Misle Learning Runtime	: 26.182435989379883

Timeout Reached
Current Minsup[0.75] yields 24719 itemsets.
Current Minsup[0.875] yields 586 itemsets.
Current Minsup[0.780230666462056] yields 10157 itemsets.
Top-k minsup for at least 5000 paterns = 0.780230666462056 or 67
26  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, -34, -28, -24, -20, -15, -10, -6, -2}), frozenset({3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, -37, -28, -24, -20, -15, -10, -7, -2}), frozenset({3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -15, -11, -6, -2}), frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -18, -10, -6, -2}), frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -15, -10, -6, -2}), frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, -37, -28, -24, -20, -15, -10, -6, -2}), frozenset({2, 3, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -15, -10, -6, -4}), frozenset({2, 3, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -15, -10, -9, -4}), frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -17, -10, -6, -2}), frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, -33, -31, -24, -20, -15, -10, -6, -2}), frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, -33, -29, -24, -20, -15, -10, -6, -2}), frozenset({3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -27, -20, -18, -10, -9, -2}), frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, -33, -30, -24, -20, -15, -10, -6, -2}), frozenset({3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -15, -10, -7, -2}), frozenset({3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -15, -10, -9, -2}), frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, -33, -32, -24, -20, -15, -10, -6, -2}), frozenset({3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -22, -15, -10, -9, -2}), frozenset({3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -15, -10, -8, -2}), frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -16, -10, -6, -2}), frozenset({3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -19, -10, -6, -2}), frozenset({2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -15, -10, -6, -5}), frozenset({3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, -37, -28, -24, -20, -15, -10, -9, -2}), frozenset({2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -15, -10, -6, -3}), frozenset({2, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, -33, -28, -24, -20, -15, -10, -9, -3}), frozenset({2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, -34, -28, -24, -20, -15, -10, -6, -5}), frozenset({3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, -34, -28, -24, -20, -15, -10, -9, -2})}
DL of initial theory	: 23272.70980539344
4999	itemsets left after T operation 	: [frozenset({36, 11, 12, 13, 14, 21, -10, 22, 25, 29})]
848	itemsets left after T operation 	: [frozenset({35, 4, 14, 16, 22, 25, 29, 30})]
1	itemsets left after T operation 	: [frozenset({36, 11, 12, 13, 14, 21, -10, 25})]
0	itemsets left after V operation 	: [frozenset({2, 5, 6, 7, 8, 10, 11, 12, 17, 18, 19, 21, 23, 24, 26, 27, -36, 31, 32, 33, 34, -28, 37, -25, -20, -15, -13, -9, -3}), frozenset({35, 4, 14, 16, 22, 25, 29, 30})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.35573601722717285
Initial DL				: 109019.69407604229
Final DL				: 11059.25410886604
Compression (wrt me)	: 0.8985572817590911
Operator Counters		: {'D': 0, 'W': 0, 'V': 1, 'S': 0, 'R': 0, 'T': 3}
Misle Learning Runtime	: 27.056779623031616

Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.07142857142857142; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.07142857142857142; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.07142857142857142; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})"]
Max Score = 0.0; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.07142857142857142; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.07142857142857142; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.07142857142857142; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})", "defaultdict(<class 'int'>, {7: 1})"]
Max Score = 0.0; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})", "defaultdict(<class 'int'>, {})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.14285714285714285; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})", "defaultdict(<class 'int'>, {7: 2})"]
Max Score = 0.125; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})"]
Max Score = 0.125; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})"]
Max Score = 0.125; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})"]
Max Score = 0.125; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})"]
Max Score = 0.125; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})"]
Max Score = 0.125; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})"]
Max Score = 0.125; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})"]
Max Score = 0.125; Max Indices = [0, 1, 2, 3, 4, 5, 6, 7]; # failed_clauses_list = ["defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})", "defaultdict(<class 'int'>, {8: 2})"]
Return Code	: 0
CNF-cc Accuracy		: 0.91875

Dataset				: pima.dat
Metric				: length
Minsups				: [3]
Mistle Accuracy		: [1.0]
CNFAlgo Accuracy	: [0.91875]
Randomized Accuracy	: [0.125]

# Test Examples		: 160
Mistle # Ties		: [(155, 525)]
CNFAlgo # Ties		: [(0, 0)]
