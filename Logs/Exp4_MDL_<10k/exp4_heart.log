 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: '13afe69e-2b61-4431-84a9-6b0613262b99_convertdb.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Database :: 
 * Type:		FIMI database
 * File:		heart.dat
 * Scanning file:	in progress... * Scanning file: done                       
 * Database:	303 rows, maximal 14 columns
 * 		has bin sizes: no
 * 		has transaction id's: no
 * Reading database:	in progress... * Reading database:	done          

 * Processing Data:  * Processing Data: Translating Forward * Processing Data: Sorting within Rows * Processing Data: Writing Data              ** Writing FIC database to file
 * File:		/home/arcchitjain/Documents/Mistle/Data/heart.db
** Finished writing database.

 * Processing Data: Finished                  

 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/

Task `datatrans`, command `convertdb` finished. This took 0 seconds.

 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: 'd843a38b-1c8a-4af1-a2cc-9923ae097a12_analysedb.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Database :: 
 * File:		heart.db
 * Database:		303t 303r, 4236i, 20284.82bits
 * 			pruned below support 0, maximum set length 14
 * Alphabet:		47 items
 * Internal datatype:	uint16 value arrays

** Analysing database
 * Output File:	heart.db.analysis.txt
 * Writing analysis:	in progress... * Writing analysis:	done          


 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/analysedb/

Task `main`, command `analysedb` finished. This took 0 seconds.

 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: '1910555e-873c-43b5-9d39-7baaae94eefd_classifycompress.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Database :: 
 * File:		heart.db
 * Database:		303t 303r, 4236i, 20284.82bits
 * 			pruned below support 0, maximum set length 14
 * Alphabet:		47 items
 * Internal datatype:	32bit bitmap array

** Classification ::
 * Seed:				1234
 * numFolds:			10
 * Split database:		creating 10 partitions
 * Creating:			fold 1
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 1
** Writing FIC database to file
 * File:		train10.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		heart-all-9d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		27133
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(38a,0u,1842,8268,498,8766)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (272) ? c/s  		 | Progress:		2% (543) ? c/s  		 / Progress:		3% (814) ? c/s  		 - Progress:		4% (1086) ? c/s  		 \ Progress:		5% (1357) ? c/s  		 | Progress:		6% (1628) ? c/s  		 / Progress:		7% (1900) ? c/s  		 - Progress:		8% (2171) ? c/s  		 \ Progress:		9% (2442) ? c/s  		 | Progress:		10% (2714) ? c/s  		 / Progress:		11% (2985) ? c/s  		 - Progress:		12% (3256) ? c/s  		 \ Progress:		13% (3528) ? c/s  		 | Progress:		14% (3799) ? c/s  		 / Progress:		15% (4070) ? c/s  		 - Progress:		16% (4342) ? c/s  		 \ Progress:		17% (4613) ? c/s  		 | Progress:		18% (4884) ? c/s  		 | Progress:		18% (5000) 5000 c/s (0s +/- 4s)                        / Progress:		19% (5156) 5000 c/s (0s +/- 4s)                        - Progress:		20% (5427) 5000 c/s (0s +/- 4s)                        \ Progress:		21% (5698) 5000 c/s (0s +/- 4s)                        | Progress:		22% (5970) 5000 c/s (0s +/- 4s)                        / Progress:		23% (6241) 5000 c/s (0s +/- 4s)                        - Progress:		24% (6512) 5000 c/s (0s +/- 4s)                        \ Progress:		25% (6784) 5000 c/s (0s +/- 4s)                        | Progress:		26% (7055) 5000 c/s (0s +/- 4s)                        / Progress:		27% (7326) 5000 c/s (0s +/- 3s)                        - Progress:		28% (7598) 5000 c/s (0s +/- 3s)                        \ Progress:		29% (7869) 5000 c/s (0s +/- 3s)                        | Progress:		30% (8140) 5000 c/s (0s +/- 3s)                        / Progress:		31% (8412) 5000 c/s (0s +/- 3s)                        - Progress:		32% (8683) 5000 c/s (0s +/- 3s)                        \ Progress:		33% (8954) 5000 c/s (0s +/- 3s)                        | Progress:		34% (9226) 5000 c/s (0s +/- 3s)                        / Progress:		35% (9497) 5000 c/s (0s +/- 3s)                        - Progress:		36% (9768) 5000 c/s (0s +/- 3s)                        \ Progress:		37% (10040) 5000 c/s (0s +/- 3s)                       | Progress:		38% (10311) 5000 c/s (0s +/- 3s)                       / Progress:		39% (10582) 5000 c/s (0s +/- 3s)                       - Progress:		40% (10854) 5000 c/s (0s +/- 3s)                       \ Progress:		41% (11125) 5000 c/s (0s +/- 3s)                       | Progress:		42% (11396) 5000 c/s (0s +/- 3s)                       / Progress:		43% (11668) 5000 c/s (0s +/- 3s)                       - Progress:		44% (11939) 5000 c/s (0s +/- 3s)                       \ Progress:		45% (12210) 5000 c/s (0s +/- 2s)                       | Progress:		46% (12482) 5000 c/s (0s +/- 2s)                       / Progress:		47% (12753) 5000 c/s (0s +/- 2s)                       - Progress:		48% (13024) 5000 c/s (0s +/- 2s)                       \ Progress:		49% (13296) 5000 c/s (0s +/- 2s)                       | Progress:		50% (13567) 5000 c/s (0s +/- 2s)                       / Progress:		51% (13838) 5000 c/s (0s +/- 2s)                       - Progress:		52% (14110) 5000 c/s (0s +/- 2s)                       \ Progress:		53% (14381) 5000 c/s (0s +/- 2s)                       | Progress:		54% (14652) 5000 c/s (0s +/- 2s)                       / Progress:		55% (14924) 5000 c/s (0s +/- 2s)                       - Progress:		56% (15195) 5000 c/s (0s +/- 2s)                       \ Progress:		57% (15466) 5000 c/s (0s +/- 2s)                       | Progress:		58% (15738) 5000 c/s (0s +/- 2s)                       / Progress:		59% (16009) 5000 c/s (0s +/- 2s)                       - Progress:		60% (16280) 5000 c/s (0s +/- 2s)                       \ Progress:		61% (16552) 5000 c/s (0s +/- 2s)                       | Progress:		62% (16823) 5000 c/s (0s +/- 2s)                       / Progress:		63% (17094) 5000 c/s (0s +/- 2s)                       - Progress:		64% (17366) 5000 c/s (0s +/- 1s)                       \ Progress:		65% (17637) 5000 c/s (0s +/- 1s)                       | Progress:		66% (17908) 5000 c/s (0s +/- 1s)                       / Progress:		67% (18180) 5000 c/s (0s +/- 1s)                       - Progress:		68% (18451) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (18722) 5000 c/s (0s +/- 1s)                       | Progress:		70% (18994) 5000 c/s (0s +/- 1s)                       / Progress:		71% (19265) 5000 c/s (0s +/- 1s)                       - Progress:		72% (19536) 5000 c/s (0s +/- 1s)                       \ Progress:		73% (19808) 5000 c/s (0s +/- 1s)                       | Progress:		74% (20079) 5000 c/s (0s +/- 1s)                       / Progress:		75% (20350) 5000 c/s (0s +/- 1s)                       - Progress:		76% (20622) 5000 c/s (0s +/- 1s)                       \ Progress:		77% (20893) 5000 c/s (0s +/- 1s)                       | Progress:		78% (21164) 5000 c/s (0s +/- 1s)                       / Progress:		79% (21436) 5000 c/s (0s +/- 1s)                       - Progress:		80% (21707) 5000 c/s (0s +/- 1s)                       \ Progress:		81% (21978) 5000 c/s (0s +/- 1s)                       | Progress:		82% (22250) 5000 c/s (0s +/- <1s)                      / Progress:		83% (22521) 5000 c/s (0s +/- <1s)                      - Progress:		84% (22792) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (23064) 5000 c/s (0s +/- <1s)                      | Progress:		86% (23335) 5000 c/s (0s +/- <1s)                      / Progress:		87% (23606) 5000 c/s (0s +/- <1s)                      - Progress:		88% (23878) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (24149) 5000 c/s (0s +/- <1s)                      | Progress:		90% (24420) 5000 c/s (0s +/- <1s)                      / Progress:		91% (24692) 5000 c/s (0s +/- <1s)                      - Progress:		92% (24963) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (25234) 5000 c/s (0s +/- <1s)                      | Progress:		94% (25506) 5000 c/s (0s +/- <1s)                      / Progress:		95% (25777) 5000 c/s (0s +/- <1s)                      - Progress:		96% (26048) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (26320) 5000 c/s (0s +/- <1s)                      | Progress:		98% (26591) 5000 c/s (0s +/- <1s)                      / Progress:		99% (26862) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.108564 seconds.		
 * Result:		(31a,31u,623,3293,1296,4589)
** Writing FIC database to file
 * File:		train16.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		heart-all-9d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		16862
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(45a,0u,1688,7950,604,8554)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (169) ? c/s  		 | Progress:		2% (338) ? c/s  		 / Progress:		3% (506) ? c/s  		 - Progress:		4% (675) ? c/s  		 \ Progress:		5% (844) ? c/s  		 | Progress:		6% (1012) ? c/s  		 / Progress:		7% (1181) ? c/s  		 - Progress:		8% (1349) ? c/s  		 \ Progress:		9% (1518) ? c/s  		 | Progress:		10% (1687) ? c/s  		 / Progress:		11% (1855) ? c/s  		 - Progress:		12% (2024) ? c/s  		 \ Progress:		13% (2193) ? c/s  		 | Progress:		14% (2361) ? c/s  		 / Progress:		15% (2530) ? c/s  		 - Progress:		16% (2698) ? c/s  		 \ Progress:		17% (2867) ? c/s  		 | Progress:		18% (3036) ? c/s  		 / Progress:		19% (3204) ? c/s  		 - Progress:		20% (3373) ? c/s  		 \ Progress:		21% (3542) ? c/s  		 | Progress:		22% (3710) ? c/s  		 / Progress:		23% (3879) ? c/s  		 - Progress:		24% (4047) ? c/s  		 \ Progress:		25% (4216) ? c/s  		 | Progress:		26% (4385) ? c/s  		 / Progress:		27% (4553) ? c/s  		 - Progress:		28% (4722) ? c/s  		 \ Progress:		29% (4890) ? c/s  		 \ Progress:		29% (5000) 5000 c/s (0s +/- 2s)                        | Progress:		30% (5059) 5000 c/s (0s +/- 2s)                        / Progress:		31% (5228) 5000 c/s (0s +/- 2s)                        - Progress:		32% (5396) 5000 c/s (0s +/- 2s)                        \ Progress:		33% (5565) 5000 c/s (0s +/- 2s)                        | Progress:		34% (5734) 5000 c/s (0s +/- 2s)                        / Progress:		35% (5902) 5000 c/s (0s +/- 2s)                        - Progress:		36% (6071) 5000 c/s (0s +/- 2s)                        \ Progress:		37% (6239) 5000 c/s (0s +/- 2s)                        | Progress:		38% (6408) 5000 c/s (0s +/- 2s)                        / Progress:		39% (6577) 5000 c/s (0s +/- 2s)                        - Progress:		40% (6745) 5000 c/s (0s +/- 2s)                        \ Progress:		41% (6914) 5000 c/s (0s +/- 1s)                        | Progress:		42% (7083) 5000 c/s (0s +/- 1s)                        / Progress:		43% (7251) 5000 c/s (0s +/- 1s)                        - Progress:		44% (7420) 5000 c/s (0s +/- 1s)                        \ Progress:		45% (7588) 5000 c/s (0s +/- 1s)                        | Progress:		46% (7757) 5000 c/s (0s +/- 1s)                        / Progress:		47% (7926) 5000 c/s (0s +/- 1s)                        - Progress:		48% (8094) 5000 c/s (0s +/- 1s)                        \ Progress:		49% (8263) 5000 c/s (0s +/- 1s)                        | Progress:		50% (8431) 5000 c/s (0s +/- 1s)                        / Progress:		51% (8600) 5000 c/s (0s +/- 1s)                        - Progress:		52% (8769) 5000 c/s (0s +/- 1s)                        \ Progress:		53% (8937) 5000 c/s (0s +/- 1s)                        | Progress:		54% (9106) 5000 c/s (0s +/- 1s)                        / Progress:		55% (9275) 5000 c/s (0s +/- 1s)                        - Progress:		56% (9443) 5000 c/s (0s +/- 1s)                        \ Progress:		57% (9612) 5000 c/s (0s +/- 1s)                        | Progress:		58% (9780) 5000 c/s (0s +/- 1s)                        / Progress:		59% (9949) 5000 c/s (0s +/- 1s)                        - Progress:		60% (10118) 5000 c/s (0s +/- 1s)                       \ Progress:		61% (10286) 5000 c/s (0s +/- 1s)                       | Progress:		62% (10455) 5000 c/s (0s +/- 1s)                       / Progress:		63% (10624) 5000 c/s (0s +/- 1s)                       - Progress:		64% (10792) 5000 c/s (0s +/- 1s)                       \ Progress:		65% (10961) 5000 c/s (0s +/- 1s)                       | Progress:		66% (11129) 5000 c/s (0s +/- 1s)                       / Progress:		67% (11298) 5000 c/s (0s +/- 1s)                       - Progress:		68% (11467) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (11635) 5000 c/s (0s +/- 1s)                       | Progress:		70% (11804) 5000 c/s (0s +/- 1s)                       / Progress:		71% (11973) 5000 c/s (0s +/- <1s)                      - Progress:		72% (12141) 5000 c/s (0s +/- <1s)                      \ Progress:		73% (12310) 5000 c/s (0s +/- <1s)                      | Progress:		74% (12478) 5000 c/s (0s +/- <1s)                      / Progress:		75% (12647) 5000 c/s (0s +/- <1s)                      - Progress:		76% (12816) 5000 c/s (0s +/- <1s)                      \ Progress:		77% (12984) 5000 c/s (0s +/- <1s)                      | Progress:		78% (13153) 5000 c/s (0s +/- <1s)                      / Progress:		79% (13321) 5000 c/s (0s +/- <1s)                      - Progress:		80% (13490) 5000 c/s (0s +/- <1s)                      \ Progress:		81% (13659) 5000 c/s (0s +/- <1s)                      | Progress:		82% (13827) 5000 c/s (0s +/- <1s)                      / Progress:		83% (13996) 5000 c/s (0s +/- <1s)                      - Progress:		84% (14165) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (14333) 5000 c/s (0s +/- <1s)                      | Progress:		86% (14502) 5000 c/s (0s +/- <1s)                      / Progress:		87% (14670) 5000 c/s (0s +/- <1s)                      - Progress:		88% (14839) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (15008) 5000 c/s (0s +/- <1s)                      | Progress:		90% (15176) 5000 c/s (0s +/- <1s)                      / Progress:		91% (15345) 5000 c/s (0s +/- <1s)                      - Progress:		92% (15514) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (15682) 5000 c/s (0s +/- <1s)                      | Progress:		94% (15851) 5000 c/s (0s +/- <1s)                      / Progress:		95% (16019) 5000 c/s (0s +/- <1s)                      - Progress:		96% (16188) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (16357) 5000 c/s (0s +/- <1s)                      | Progress:		98% (16525) 5000 c/s (0s +/- <1s)                      / Progress:		99% (16694) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.082081 seconds.		
 * Result:		(41a,38u,688,4050,1500,5550)
 * Creating:			fold 2
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 2
** Writing FIC database to file
 * File:		train10.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		heart-all-9d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		28571
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(39a,0u,1921,8615,522,9137)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (286) ? c/s  		 | Progress:		2% (572) ? c/s  		 / Progress:		3% (858) ? c/s  		 - Progress:		4% (1143) ? c/s  		 \ Progress:		5% (1429) ? c/s  		 | Progress:		6% (1715) ? c/s  		 / Progress:		7% (2000) ? c/s  		 - Progress:		8% (2286) ? c/s  		 \ Progress:		9% (2572) ? c/s  		 | Progress:		10% (2858) ? c/s  		 / Progress:		11% (3143) ? c/s  		 - Progress:		12% (3429) ? c/s  		 \ Progress:		13% (3715) ? c/s  		 | Progress:		14% (4000) ? c/s  		 / Progress:		15% (4286) ? c/s  		 - Progress:		16% (4572) ? c/s  		 \ Progress:		17% (4858) ? c/s  		 \ Progress:		17% (5000) 5000 c/s (0s +/- 4s)                        | Progress:		18% (5143) 5000 c/s (0s +/- 4s)                        / Progress:		19% (5429) 5000 c/s (0s +/- 4s)                        - Progress:		20% (5715) 5000 c/s (0s +/- 4s)                        \ Progress:		21% (6000) 5000 c/s (0s +/- 4s)                        | Progress:		22% (6286) 5000 c/s (0s +/- 4s)                        / Progress:		23% (6572) 5000 c/s (0s +/- 4s)                        - Progress:		24% (6858) 5000 c/s (0s +/- 4s)                        \ Progress:		25% (7143) 5000 c/s (0s +/- 4s)                        | Progress:		26% (7429) 5000 c/s (0s +/- 4s)                        / Progress:		27% (7715) 5000 c/s (0s +/- 4s)                        - Progress:		28% (8000) 5000 c/s (0s +/- 4s)                        \ Progress:		29% (8286) 5000 c/s (0s +/- 4s)                        | Progress:		30% (8572) 5000 c/s (0s +/- 3s)                        / Progress:		31% (8858) 5000 c/s (0s +/- 3s)                        - Progress:		32% (9143) 5000 c/s (0s +/- 3s)                        \ Progress:		33% (9429) 5000 c/s (0s +/- 3s)                        | Progress:		34% (9715) 5000 c/s (0s +/- 3s)                        / Progress:		35% (10000) 5000 c/s (0s +/- 3s)                       - Progress:		36% (10286) 5000 c/s (0s +/- 3s)                       \ Progress:		37% (10572) 5000 c/s (0s +/- 3s)                       | Progress:		38% (10857) 5000 c/s (0s +/- 3s)                       / Progress:		39% (11143) 5000 c/s (0s +/- 3s)                       - Progress:		40% (11429) 5000 c/s (0s +/- 3s)                       \ Progress:		41% (11715) 5000 c/s (0s +/- 3s)                       | Progress:		42% (12000) 5000 c/s (0s +/- 3s)                       / Progress:		43% (12286) 5000 c/s (0s +/- 3s)                       - Progress:		44% (12572) 5000 c/s (0s +/- 3s)                       \ Progress:		45% (12857) 5000 c/s (0s +/- 3s)                       | Progress:		46% (13143) 5000 c/s (0s +/- 3s)                       / Progress:		47% (13429) 5000 c/s (0s +/- 3s)                       - Progress:		48% (13715) 5000 c/s (0s +/- 2s)                       \ Progress:		49% (14000) 5000 c/s (0s +/- 2s)                       | Progress:		50% (14286) 5000 c/s (0s +/- 2s)                       / Progress:		51% (14572) 5000 c/s (0s +/- 2s)                       - Progress:		52% (14857) 5000 c/s (0s +/- 2s)                       \ Progress:		53% (15143) 5000 c/s (0s +/- 2s)                       | Progress:		54% (15429) 5000 c/s (0s +/- 2s)                       / Progress:		55% (15715) 5000 c/s (0s +/- 2s)                       - Progress:		56% (16000) 5000 c/s (0s +/- 2s)                       \ Progress:		57% (16286) 5000 c/s (0s +/- 2s)                       | Progress:		58% (16572) 5000 c/s (0s +/- 2s)                       / Progress:		59% (16857) 5000 c/s (0s +/- 2s)                       - Progress:		60% (17143) 5000 c/s (0s +/- 2s)                       \ Progress:		61% (17429) 5000 c/s (0s +/- 2s)                       | Progress:		62% (17715) 5000 c/s (0s +/- 2s)                       / Progress:		63% (18000) 5000 c/s (0s +/- 2s)                       - Progress:		64% (18286) 5000 c/s (0s +/- 2s)                       \ Progress:		65% (18572) 5000 c/s (0s +/- 1s)                       | Progress:		66% (18857) 5000 c/s (0s +/- 1s)                       / Progress:		67% (19143) 5000 c/s (0s +/- 1s)                       - Progress:		68% (19429) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (19714) 5000 c/s (0s +/- 1s)                       | Progress:		70% (20000) 5000 c/s (0s +/- 1s)                       / Progress:		71% (20286) 5000 c/s (0s +/- 1s)                       - Progress:		72% (20572) 5000 c/s (0s +/- 1s)                       \ Progress:		73% (20857) 5000 c/s (0s +/- 1s)                       | Progress:		74% (21143) 5000 c/s (0s +/- 1s)                       / Progress:		75% (21429) 5000 c/s (0s +/- 1s)                       - Progress:		76% (21714) 5000 c/s (0s +/- 1s)                       \ Progress:		77% (22000) 5000 c/s (0s +/- 1s)                       | Progress:		78% (22286) 5000 c/s (0s +/- 1s)                       / Progress:		79% (22572) 5000 c/s (0s +/- 1s)                       - Progress:		80% (22857) 5000 c/s (0s +/- 1s)                       \ Progress:		81% (23143) 5000 c/s (0s +/- 1s)                       | Progress:		82% (23429) 5000 c/s (0s +/- 1s)                       / Progress:		83% (23714) 5000 c/s (0s +/- <1s)                      - Progress:		84% (24000) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (24286) 5000 c/s (0s +/- <1s)                      | Progress:		86% (24572) 5000 c/s (0s +/- <1s)                      / Progress:		87% (24857) 5000 c/s (0s +/- <1s)                      - Progress:		88% (25143) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (25429) 5000 c/s (0s +/- <1s)                      | Progress:		90% (25714) 5000 c/s (0s +/- <1s)                      / Progress:		91% (26000) 5000 c/s (0s +/- <1s)                      - Progress:		92% (26286) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (26572) 5000 c/s (0s +/- <1s)                      | Progress:		94% (26857) 5000 c/s (0s +/- <1s)                      / Progress:		95% (27143) 5000 c/s (0s +/- <1s)                      - Progress:		96% (27429) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (27714) 5000 c/s (0s +/- <1s)                      | Progress:		98% (28000) 5000 c/s (0s +/- <1s)                      / Progress:		99% (28286) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.129897 seconds.		
 * Result:		(31a,35u,623,3365,1314,4678)
** Writing FIC database to file
 * File:		train16.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		heart-all-9d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		15977
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(45a,0u,1610,7572,606,8177)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (160) ? c/s  		 | Progress:		2% (320) ? c/s  		 / Progress:		3% (480) ? c/s  		 - Progress:		4% (640) ? c/s  		 \ Progress:		5% (799) ? c/s  		 | Progress:		6% (959) ? c/s  		 / Progress:		7% (1119) ? c/s  		 - Progress:		8% (1279) ? c/s  		 \ Progress:		9% (1438) ? c/s  		 | Progress:		10% (1598) ? c/s  		 / Progress:		11% (1758) ? c/s  		 - Progress:		12% (1918) ? c/s  		 \ Progress:		13% (2078) ? c/s  		 | Progress:		14% (2237) ? c/s  		 / Progress:		15% (2397) ? c/s  		 - Progress:		16% (2557) ? c/s  		 \ Progress:		17% (2717) ? c/s  		 | Progress:		18% (2876) ? c/s  		 / Progress:		19% (3036) ? c/s  		 - Progress:		20% (3196) ? c/s  		 \ Progress:		21% (3356) ? c/s  		 | Progress:		22% (3515) ? c/s  		 / Progress:		23% (3675) ? c/s  		 - Progress:		24% (3835) ? c/s  		 \ Progress:		25% (3995) ? c/s  		 | Progress:		26% (4155) ? c/s  		 / Progress:		27% (4314) ? c/s  		 - Progress:		28% (4474) ? c/s  		 \ Progress:		29% (4634) ? c/s  		 | Progress:		30% (4794) ? c/s  		 / Progress:		31% (4953) ? c/s  		 / Progress:		31% (5000) 5000 c/s (0s +/- 2s)                        - Progress:		32% (5113) 5000 c/s (0s +/- 2s)                        \ Progress:		33% (5273) 5000 c/s (0s +/- 2s)                        | Progress:		34% (5433) 5000 c/s (0s +/- 2s)                        / Progress:		35% (5592) 5000 c/s (0s +/- 2s)                        - Progress:		36% (5752) 5000 c/s (0s +/- 2s)                        \ Progress:		37% (5912) 5000 c/s (0s +/- 2s)                        | Progress:		38% (6072) 5000 c/s (0s +/- 1s)                        / Progress:		39% (6232) 5000 c/s (0s +/- 1s)                        - Progress:		40% (6391) 5000 c/s (0s +/- 1s)                        \ Progress:		41% (6551) 5000 c/s (0s +/- 1s)                        | Progress:		42% (6711) 5000 c/s (0s +/- 1s)                        / Progress:		43% (6871) 5000 c/s (0s +/- 1s)                        - Progress:		44% (7030) 5000 c/s (0s +/- 1s)                        \ Progress:		45% (7190) 5000 c/s (0s +/- 1s)                        | Progress:		46% (7350) 5000 c/s (0s +/- 1s)                        / Progress:		47% (7510) 5000 c/s (0s +/- 1s)                        - Progress:		48% (7669) 5000 c/s (0s +/- 1s)                        \ Progress:		49% (7829) 5000 c/s (0s +/- 1s)                        | Progress:		50% (7989) 5000 c/s (0s +/- 1s)                        / Progress:		51% (8149) 5000 c/s (0s +/- 1s)                        - Progress:		52% (8309) 5000 c/s (0s +/- 1s)                        \ Progress:		53% (8468) 5000 c/s (0s +/- 1s)                        | Progress:		54% (8628) 5000 c/s (0s +/- 1s)                        / Progress:		55% (8788) 5000 c/s (0s +/- 1s)                        - Progress:		56% (8948) 5000 c/s (0s +/- 1s)                        \ Progress:		57% (9107) 5000 c/s (0s +/- 1s)                        | Progress:		58% (9267) 5000 c/s (0s +/- 1s)                        / Progress:		59% (9427) 5000 c/s (0s +/- 1s)                        - Progress:		60% (9587) 5000 c/s (0s +/- 1s)                        \ Progress:		61% (9746) 5000 c/s (0s +/- 1s)                        | Progress:		62% (9906) 5000 c/s (0s +/- 1s)                        / Progress:		63% (10066) 5000 c/s (0s +/- 1s)                       - Progress:		64% (10226) 5000 c/s (0s +/- 1s)                       \ Progress:		65% (10386) 5000 c/s (0s +/- 1s)                       | Progress:		66% (10545) 5000 c/s (0s +/- 1s)                       / Progress:		67% (10705) 5000 c/s (0s +/- 1s)                       - Progress:		68% (10865) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (11025) 5000 c/s (0s +/- <1s)                      | Progress:		70% (11184) 5000 c/s (0s +/- <1s)                      / Progress:		71% (11344) 5000 c/s (0s +/- <1s)                      - Progress:		72% (11504) 5000 c/s (0s +/- <1s)                      \ Progress:		73% (11664) 5000 c/s (0s +/- <1s)                      | Progress:		74% (11823) 5000 c/s (0s +/- <1s)                      / Progress:		75% (11983) 5000 c/s (0s +/- <1s)                      - Progress:		76% (12143) 5000 c/s (0s +/- <1s)                      \ Progress:		77% (12303) 5000 c/s (0s +/- <1s)                      | Progress:		78% (12463) 5000 c/s (0s +/- <1s)                      / Progress:		79% (12622) 5000 c/s (0s +/- <1s)                      - Progress:		80% (12782) 5000 c/s (0s +/- <1s)                      \ Progress:		81% (12942) 5000 c/s (0s +/- <1s)                      | Progress:		82% (13102) 5000 c/s (0s +/- <1s)                      / Progress:		83% (13261) 5000 c/s (0s +/- <1s)                      - Progress:		84% (13421) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (13581) 5000 c/s (0s +/- <1s)                      | Progress:		86% (13741) 5000 c/s (0s +/- <1s)                      / Progress:		87% (13900) 5000 c/s (0s +/- <1s)                      - Progress:		88% (14060) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (14220) 5000 c/s (0s +/- <1s)                      | Progress:		90% (14380) 5000 c/s (0s +/- <1s)                      / Progress:		91% (14540) 5000 c/s (0s +/- <1s)                      - Progress:		92% (14699) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (14859) 5000 c/s (0s +/- <1s)                      | Progress:		94% (15019) 5000 c/s (0s +/- <1s)                      / Progress:		95% (15179) 5000 c/s (0s +/- <1s)                      - Progress:		96% (15338) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (15498) 5000 c/s (0s +/- <1s)                      | Progress:		98% (15658) 5000 c/s (0s +/- <1s)                      / Progress:		99% (15818) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.076027 seconds.		
 * Result:		(37a,38u,651,3785,1387,5172)
 * Creating:			fold 3
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 3
** Writing FIC database to file
 * File:		train10.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		heart-all-9d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		28561
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(39a,0u,1946,8750,521,9271)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (286) ? c/s  		 | Progress:		2% (572) ? c/s  		 / Progress:		3% (857) ? c/s  		 - Progress:		4% (1143) ? c/s  		 \ Progress:		5% (1429) ? c/s  		 | Progress:		6% (1714) ? c/s  		 / Progress:		7% (2000) ? c/s  		 - Progress:		8% (2285) ? c/s  		 \ Progress:		9% (2571) ? c/s  		 | Progress:		10% (2857) ? c/s  		 / Progress:		11% (3142) ? c/s  		 - Progress:		12% (3428) ? c/s  		 \ Progress:		13% (3713) ? c/s  		 | Progress:		14% (3999) ? c/s  		 / Progress:		15% (4285) ? c/s  		 - Progress:		16% (4570) ? c/s  		 \ Progress:		17% (4856) ? c/s  		 \ Progress:		17% (5000) 5000 c/s (0s +/- 4s)                        | Progress:		18% (5141) 5000 c/s (0s +/- 4s)                        / Progress:		19% (5427) 5000 c/s (0s +/- 4s)                        - Progress:		20% (5713) 5000 c/s (0s +/- 4s)                        \ Progress:		21% (5998) 5000 c/s (0s +/- 4s)                        | Progress:		22% (6284) 5000 c/s (0s +/- 4s)                        / Progress:		23% (6570) 5000 c/s (0s +/- 4s)                        - Progress:		24% (6855) 5000 c/s (0s +/- 4s)                        \ Progress:		25% (7141) 5000 c/s (0s +/- 4s)                        | Progress:		26% (7426) 5000 c/s (0s +/- 4s)                        / Progress:		27% (7712) 5000 c/s (0s +/- 4s)                        - Progress:		28% (7998) 5000 c/s (0s +/- 4s)                        \ Progress:		29% (8283) 5000 c/s (0s +/- 4s)                        | Progress:		30% (8569) 5000 c/s (0s +/- 3s)                        / Progress:		31% (8854) 5000 c/s (0s +/- 3s)                        - Progress:		32% (9140) 5000 c/s (0s +/- 3s)                        \ Progress:		33% (9426) 5000 c/s (0s +/- 3s)                        | Progress:		34% (9711) 5000 c/s (0s +/- 3s)                        / Progress:		35% (9997) 5000 c/s (0s +/- 3s)                        - Progress:		36% (10282) 5000 c/s (0s +/- 3s)                       \ Progress:		37% (10568) 5000 c/s (0s +/- 3s)                       | Progress:		38% (10854) 5000 c/s (0s +/- 3s)                       / Progress:		39% (11139) 5000 c/s (0s +/- 3s)                       - Progress:		40% (11425) 5000 c/s (0s +/- 3s)                       \ Progress:		41% (11711) 5000 c/s (0s +/- 3s)                       | Progress:		42% (11996) 5000 c/s (0s +/- 3s)                       / Progress:		43% (12282) 5000 c/s (0s +/- 3s)                       - Progress:		44% (12567) 5000 c/s (0s +/- 3s)                       \ Progress:		45% (12853) 5000 c/s (0s +/- 3s)                       | Progress:		46% (13139) 5000 c/s (0s +/- 3s)                       / Progress:		47% (13424) 5000 c/s (0s +/- 3s)                       - Progress:		48% (13710) 5000 c/s (0s +/- 2s)                       \ Progress:		49% (13995) 5000 c/s (0s +/- 2s)                       | Progress:		50% (14281) 5000 c/s (0s +/- 2s)                       / Progress:		51% (14567) 5000 c/s (0s +/- 2s)                       - Progress:		52% (14852) 5000 c/s (0s +/- 2s)                       \ Progress:		53% (15138) 5000 c/s (0s +/- 2s)                       | Progress:		54% (15423) 5000 c/s (0s +/- 2s)                       / Progress:		55% (15709) 5000 c/s (0s +/- 2s)                       - Progress:		56% (15995) 5000 c/s (0s +/- 2s)                       \ Progress:		57% (16280) 5000 c/s (0s +/- 2s)                       | Progress:		58% (16566) 5000 c/s (0s +/- 2s)                       / Progress:		59% (16851) 5000 c/s (0s +/- 2s)                       - Progress:		60% (17137) 5000 c/s (0s +/- 2s)                       \ Progress:		61% (17423) 5000 c/s (0s +/- 2s)                       | Progress:		62% (17708) 5000 c/s (0s +/- 2s)                       / Progress:		63% (17994) 5000 c/s (0s +/- 2s)                       - Progress:		64% (18280) 5000 c/s (0s +/- 2s)                       \ Progress:		65% (18565) 5000 c/s (0s +/- 1s)                       | Progress:		66% (18851) 5000 c/s (0s +/- 1s)                       / Progress:		67% (19136) 5000 c/s (0s +/- 1s)                       - Progress:		68% (19422) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (19708) 5000 c/s (0s +/- 1s)                       | Progress:		70% (19993) 5000 c/s (0s +/- 1s)                       / Progress:		71% (20279) 5000 c/s (0s +/- 1s)                       - Progress:		72% (20564) 5000 c/s (0s +/- 1s)                       \ Progress:		73% (20850) 5000 c/s (0s +/- 1s)                       | Progress:		74% (21136) 5000 c/s (0s +/- 1s)                       / Progress:		75% (21421) 5000 c/s (0s +/- 1s)                       - Progress:		76% (21707) 5000 c/s (0s +/- 1s)                       \ Progress:		77% (21992) 5000 c/s (0s +/- 1s)                       | Progress:		78% (22278) 5000 c/s (0s +/- 1s)                       / Progress:		79% (22564) 5000 c/s (0s +/- 1s)                       - Progress:		80% (22849) 5000 c/s (0s +/- 1s)                       \ Progress:		81% (23135) 5000 c/s (0s +/- 1s)                       | Progress:		82% (23421) 5000 c/s (0s +/- 1s)                       / Progress:		83% (23706) 5000 c/s (0s +/- <1s)                      - Progress:		84% (23992) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (24277) 5000 c/s (0s +/- <1s)                      | Progress:		86% (24563) 5000 c/s (0s +/- <1s)                      / Progress:		87% (24849) 5000 c/s (0s +/- <1s)                      - Progress:		88% (25134) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (25420) 5000 c/s (0s +/- <1s)                      | Progress:		90% (25705) 5000 c/s (0s +/- <1s)                      / Progress:		91% (25991) 5000 c/s (0s +/- <1s)                      - Progress:		92% (26277) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (26562) 5000 c/s (0s +/- <1s)                      | Progress:		94% (26848) 5000 c/s (0s +/- <1s)                      / Progress:		95% (27133) 5000 c/s (0s +/- <1s)                      - Progress:		96% (27419) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (27705) 5000 c/s (0s +/- <1s)                      | Progress:		98% (27990) 5000 c/s (0s +/- <1s)                      / Progress:		99% (28276) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.115960 seconds.		
 * Result:		(34a,29u,673,3591,1241,4833)
** Writing FIC database to file
 * File:		train16.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		heart-all-9d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		14761
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(45a,0u,1584,7482,602,8084)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (148) ? c/s  		 | Progress:		2% (296) ? c/s  		 / Progress:		3% (443) ? c/s  		 - Progress:		4% (591) ? c/s  		 \ Progress:		5% (739) ? c/s  		 | Progress:		6% (886) ? c/s  		 / Progress:		7% (1034) ? c/s  		 - Progress:		8% (1181) ? c/s  		 \ Progress:		9% (1329) ? c/s  		 | Progress:		10% (1477) ? c/s  		 / Progress:		11% (1624) ? c/s  		 - Progress:		12% (1772) ? c/s  		 \ Progress:		13% (1919) ? c/s  		 | Progress:		14% (2067) ? c/s  		 / Progress:		15% (2215) ? c/s  		 - Progress:		16% (2362) ? c/s  		 \ Progress:		17% (2510) ? c/s  		 | Progress:		18% (2657) ? c/s  		 / Progress:		19% (2805) ? c/s  		 - Progress:		20% (2953) ? c/s  		 \ Progress:		21% (3100) ? c/s  		 | Progress:		22% (3248) ? c/s  		 / Progress:		23% (3396) ? c/s  		 - Progress:		24% (3543) ? c/s  		 \ Progress:		25% (3691) ? c/s  		 | Progress:		26% (3838) ? c/s  		 / Progress:		27% (3986) ? c/s  		 - Progress:		28% (4134) ? c/s  		 \ Progress:		29% (4281) ? c/s  		 | Progress:		30% (4429) ? c/s  		 / Progress:		31% (4576) ? c/s  		 - Progress:		32% (4724) ? c/s  		 \ Progress:		33% (4872) ? c/s  		 \ Progress:		33% (5000) 5000 c/s (0s +/- 1s)                        | Progress:		34% (5019) 5000 c/s (0s +/- 1s)                        / Progress:		35% (5167) 5000 c/s (0s +/- 1s)                        - Progress:		36% (5314) 5000 c/s (0s +/- 1s)                        \ Progress:		37% (5462) 5000 c/s (0s +/- 1s)                        | Progress:		38% (5610) 5000 c/s (0s +/- 1s)                        / Progress:		39% (5757) 5000 c/s (0s +/- 1s)                        - Progress:		40% (5905) 5000 c/s (0s +/- 1s)                        \ Progress:		41% (6053) 5000 c/s (0s +/- 1s)                        | Progress:		42% (6200) 5000 c/s (0s +/- 1s)                        / Progress:		43% (6348) 5000 c/s (0s +/- 1s)                        - Progress:		44% (6495) 5000 c/s (0s +/- 1s)                        \ Progress:		45% (6643) 5000 c/s (0s +/- 1s)                        | Progress:		46% (6791) 5000 c/s (0s +/- 1s)                        / Progress:		47% (6938) 5000 c/s (0s +/- 1s)                        - Progress:		48% (7086) 5000 c/s (0s +/- 1s)                        \ Progress:		49% (7233) 5000 c/s (0s +/- 1s)                        | Progress:		50% (7381) 5000 c/s (0s +/- 1s)                        / Progress:		51% (7529) 5000 c/s (0s +/- 1s)                        - Progress:		52% (7676) 5000 c/s (0s +/- 1s)                        \ Progress:		53% (7824) 5000 c/s (0s +/- 1s)                        | Progress:		54% (7971) 5000 c/s (0s +/- 1s)                        / Progress:		55% (8119) 5000 c/s (0s +/- 1s)                        - Progress:		56% (8267) 5000 c/s (0s +/- 1s)                        \ Progress:		57% (8414) 5000 c/s (0s +/- 1s)                        | Progress:		58% (8562) 5000 c/s (0s +/- 1s)                        / Progress:		59% (8709) 5000 c/s (0s +/- 1s)                        - Progress:		60% (8857) 5000 c/s (0s +/- 1s)                        \ Progress:		61% (9005) 5000 c/s (0s +/- 1s)                        | Progress:		62% (9152) 5000 c/s (0s +/- 1s)                        / Progress:		63% (9300) 5000 c/s (0s +/- 1s)                        - Progress:		64% (9448) 5000 c/s (0s +/- 1s)                        \ Progress:		65% (9595) 5000 c/s (0s +/- 1s)                        | Progress:		66% (9743) 5000 c/s (0s +/- 1s)                        / Progress:		67% (9890) 5000 c/s (0s +/- <1s)                       - Progress:		68% (10038) 5000 c/s (0s +/- <1s)                      \ Progress:		69% (10186) 5000 c/s (0s +/- <1s)                      | Progress:		70% (10333) 5000 c/s (0s +/- <1s)                      / Progress:		71% (10481) 5000 c/s (0s +/- <1s)                      - Progress:		72% (10628) 5000 c/s (0s +/- <1s)                      \ Progress:		73% (10776) 5000 c/s (0s +/- <1s)                      | Progress:		74% (10924) 5000 c/s (0s +/- <1s)                      / Progress:		75% (11071) 5000 c/s (0s +/- <1s)                      - Progress:		76% (11219) 5000 c/s (0s +/- <1s)                      \ Progress:		77% (11366) 5000 c/s (0s +/- <1s)                      | Progress:		78% (11514) 5000 c/s (0s +/- <1s)                      / Progress:		79% (11662) 5000 c/s (0s +/- <1s)                      - Progress:		80% (11809) 5000 c/s (0s +/- <1s)                      \ Progress:		81% (11957) 5000 c/s (0s +/- <1s)                      | Progress:		82% (12105) 5000 c/s (0s +/- <1s)                      / Progress:		83% (12252) 5000 c/s (0s +/- <1s)                      - Progress:		84% (12400) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (12547) 5000 c/s (0s +/- <1s)                      | Progress:		86% (12695) 5000 c/s (0s +/- <1s)                      / Progress:		87% (12843) 5000 c/s (0s +/- <1s)                      - Progress:		88% (12990) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (13138) 5000 c/s (0s +/- <1s)                      | Progress:		90% (13285) 5000 c/s (0s +/- <1s)                      / Progress:		91% (13433) 5000 c/s (0s +/- <1s)                      - Progress:		92% (13581) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (13728) 5000 c/s (0s +/- <1s)                      | Progress:		94% (13876) 5000 c/s (0s +/- <1s)                      / Progress:		95% (14023) 5000 c/s (0s +/- <1s)                      - Progress:		96% (14171) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (14319) 5000 c/s (0s +/- <1s)                      | Progress:		98% (14466) 5000 c/s (0s +/- <1s)                      / Progress:		99% (14614) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.089788 seconds.		
 * Result:		(43a,38u,657,3927,1437,5364)
 * Creating:			fold 4
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 4
** Writing FIC database to file
 * File:		train10.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		heart-all-9d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		27993
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(39a,0u,1959,8823,519,9342)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (280) ? c/s  		 | Progress:		2% (560) ? c/s  		 / Progress:		3% (840) ? c/s  		 - Progress:		4% (1120) ? c/s  		 \ Progress:		5% (1400) ? c/s  		 | Progress:		6% (1680) ? c/s  		 / Progress:		7% (1960) ? c/s  		 - Progress:		8% (2240) ? c/s  		 \ Progress:		9% (2520) ? c/s  		 | Progress:		10% (2800) ? c/s  		 / Progress:		11% (3080) ? c/s  		 - Progress:		12% (3360) ? c/s  		 \ Progress:		13% (3640) ? c/s  		 | Progress:		14% (3920) ? c/s  		 / Progress:		15% (4199) ? c/s  		 - Progress:		16% (4479) ? c/s  		 \ Progress:		17% (4759) ? c/s  		 \ Progress:		17% (5000) 5000 c/s (0s +/- 4s)                        | Progress:		18% (5039) 5000 c/s (0s +/- 4s)                        / Progress:		19% (5319) 5000 c/s (0s +/- 4s)                        - Progress:		20% (5599) 5000 c/s (0s +/- 4s)                        \ Progress:		21% (5879) 5000 c/s (0s +/- 4s)                        | Progress:		22% (6159) 5000 c/s (0s +/- 4s)                        / Progress:		23% (6439) 5000 c/s (0s +/- 4s)                        - Progress:		24% (6719) 5000 c/s (0s +/- 4s)                        \ Progress:		25% (6999) 5000 c/s (0s +/- 4s)                        | Progress:		26% (7279) 5000 c/s (0s +/- 4s)                        / Progress:		27% (7559) 5000 c/s (0s +/- 4s)                        - Progress:		28% (7839) 5000 c/s (0s +/- 4s)                        \ Progress:		29% (8118) 5000 c/s (0s +/- 3s)                        | Progress:		30% (8398) 5000 c/s (0s +/- 3s)                        / Progress:		31% (8678) 5000 c/s (0s +/- 3s)                        - Progress:		32% (8958) 5000 c/s (0s +/- 3s)                        \ Progress:		33% (9238) 5000 c/s (0s +/- 3s)                        | Progress:		34% (9518) 5000 c/s (0s +/- 3s)                        / Progress:		35% (9798) 5000 c/s (0s +/- 3s)                        - Progress:		36% (10078) 5000 c/s (0s +/- 3s)                       \ Progress:		37% (10358) 5000 c/s (0s +/- 3s)                       | Progress:		38% (10638) 5000 c/s (0s +/- 3s)                       / Progress:		39% (10918) 5000 c/s (0s +/- 3s)                       - Progress:		40% (11198) 5000 c/s (0s +/- 3s)                       \ Progress:		41% (11478) 5000 c/s (0s +/- 3s)                       | Progress:		42% (11758) 5000 c/s (0s +/- 3s)                       / Progress:		43% (12037) 5000 c/s (0s +/- 3s)                       - Progress:		44% (12317) 5000 c/s (0s +/- 3s)                       \ Progress:		45% (12597) 5000 c/s (0s +/- 3s)                       | Progress:		46% (12877) 5000 c/s (0s +/- 3s)                       / Progress:		47% (13157) 5000 c/s (0s +/- 2s)                       - Progress:		48% (13437) 5000 c/s (0s +/- 2s)                       \ Progress:		49% (13717) 5000 c/s (0s +/- 2s)                       | Progress:		50% (13997) 5000 c/s (0s +/- 2s)                       / Progress:		51% (14277) 5000 c/s (0s +/- 2s)                       - Progress:		52% (14557) 5000 c/s (0s +/- 2s)                       \ Progress:		53% (14837) 5000 c/s (0s +/- 2s)                       | Progress:		54% (15117) 5000 c/s (0s +/- 2s)                       / Progress:		55% (15397) 5000 c/s (0s +/- 2s)                       - Progress:		56% (15677) 5000 c/s (0s +/- 2s)                       \ Progress:		57% (15957) 5000 c/s (0s +/- 2s)                       | Progress:		58% (16236) 5000 c/s (0s +/- 2s)                       / Progress:		59% (16516) 5000 c/s (0s +/- 2s)                       - Progress:		60% (16796) 5000 c/s (0s +/- 2s)                       \ Progress:		61% (17076) 5000 c/s (0s +/- 2s)                       | Progress:		62% (17356) 5000 c/s (0s +/- 2s)                       / Progress:		63% (17636) 5000 c/s (0s +/- 2s)                       - Progress:		64% (17916) 5000 c/s (0s +/- 2s)                       \ Progress:		65% (18196) 5000 c/s (0s +/- 1s)                       | Progress:		66% (18476) 5000 c/s (0s +/- 1s)                       / Progress:		67% (18756) 5000 c/s (0s +/- 1s)                       - Progress:		68% (19036) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (19316) 5000 c/s (0s +/- 1s)                       | Progress:		70% (19596) 5000 c/s (0s +/- 1s)                       / Progress:		71% (19876) 5000 c/s (0s +/- 1s)                       - Progress:		72% (20155) 5000 c/s (0s +/- 1s)                       \ Progress:		73% (20435) 5000 c/s (0s +/- 1s)                       | Progress:		74% (20715) 5000 c/s (0s +/- 1s)                       / Progress:		75% (20995) 5000 c/s (0s +/- 1s)                       - Progress:		76% (21275) 5000 c/s (0s +/- 1s)                       \ Progress:		77% (21555) 5000 c/s (0s +/- 1s)                       | Progress:		78% (21835) 5000 c/s (0s +/- 1s)                       / Progress:		79% (22115) 5000 c/s (0s +/- 1s)                       - Progress:		80% (22395) 5000 c/s (0s +/- 1s)                       \ Progress:		81% (22675) 5000 c/s (0s +/- 1s)                       | Progress:		82% (22955) 5000 c/s (0s +/- 1s)                       / Progress:		83% (23235) 5000 c/s (0s +/- <1s)                      - Progress:		84% (23515) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (23795) 5000 c/s (0s +/- <1s)                      | Progress:		86% (24074) 5000 c/s (0s +/- <1s)                      / Progress:		87% (24354) 5000 c/s (0s +/- <1s)                      - Progress:		88% (24634) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (24914) 5000 c/s (0s +/- <1s)                      | Progress:		90% (25194) 5000 c/s (0s +/- <1s)                      / Progress:		91% (25474) 5000 c/s (0s +/- <1s)                      - Progress:		92% (25754) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (26034) 5000 c/s (0s +/- <1s)                      | Progress:		94% (26314) 5000 c/s (0s +/- <1s)                      / Progress:		95% (26594) 5000 c/s (0s +/- <1s)                      - Progress:		96% (26874) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (27154) 5000 c/s (0s +/- <1s)                      | Progress:		98% (27434) 5000 c/s (0s +/- <1s)                      / Progress:		99% (27714) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.102985 seconds.		
 * Result:		(34a,38u,615,3523,1466,4990)
** Writing FIC database to file
 * File:		train16.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		heart-all-9d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		14619
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(45a,0u,1571,7435,599,8034)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (147) ? c/s  		 | Progress:		2% (293) ? c/s  		 / Progress:		3% (439) ? c/s  		 - Progress:		4% (585) ? c/s  		 \ Progress:		5% (731) ? c/s  		 | Progress:		6% (878) ? c/s  		 / Progress:		7% (1024) ? c/s  		 - Progress:		8% (1170) ? c/s  		 \ Progress:		9% (1316) ? c/s  		 | Progress:		10% (1462) ? c/s  		 / Progress:		11% (1609) ? c/s  		 - Progress:		12% (1755) ? c/s  		 \ Progress:		13% (1901) ? c/s  		 | Progress:		14% (2047) ? c/s  		 / Progress:		15% (2193) ? c/s  		 - Progress:		16% (2340) ? c/s  		 \ Progress:		17% (2486) ? c/s  		 | Progress:		18% (2632) ? c/s  		 / Progress:		19% (2778) ? c/s  		 - Progress:		20% (2924) ? c/s  		 \ Progress:		21% (3070) ? c/s  		 | Progress:		22% (3217) ? c/s  		 / Progress:		23% (3363) ? c/s  		 - Progress:		24% (3509) ? c/s  		 \ Progress:		25% (3655) ? c/s  		 | Progress:		26% (3801) ? c/s  		 / Progress:		27% (3948) ? c/s  		 - Progress:		28% (4094) ? c/s  		 \ Progress:		29% (4240) ? c/s  		 | Progress:		30% (4386) ? c/s  		 / Progress:		31% (4532) ? c/s  		 - Progress:		32% (4679) ? c/s  		 \ Progress:		33% (4825) ? c/s  		 | Progress:		34% (4971) ? c/s  		 | Progress:		34% (5000) 5000 c/s (0s +/- 1s)                        / Progress:		35% (5117) 5000 c/s (0s +/- 1s)                        - Progress:		36% (5263) 5000 c/s (0s +/- 1s)                        \ Progress:		37% (5410) 5000 c/s (0s +/- 1s)                        | Progress:		38% (5556) 5000 c/s (0s +/- 1s)                        / Progress:		39% (5702) 5000 c/s (0s +/- 1s)                        - Progress:		40% (5848) 5000 c/s (0s +/- 1s)                        \ Progress:		41% (5994) 5000 c/s (0s +/- 1s)                        | Progress:		42% (6140) 5000 c/s (0s +/- 1s)                        / Progress:		43% (6287) 5000 c/s (0s +/- 1s)                        - Progress:		44% (6433) 5000 c/s (0s +/- 1s)                        \ Progress:		45% (6579) 5000 c/s (0s +/- 1s)                        | Progress:		46% (6725) 5000 c/s (0s +/- 1s)                        / Progress:		47% (6871) 5000 c/s (0s +/- 1s)                        - Progress:		48% (7018) 5000 c/s (0s +/- 1s)                        \ Progress:		49% (7164) 5000 c/s (0s +/- 1s)                        | Progress:		50% (7310) 5000 c/s (0s +/- 1s)                        / Progress:		51% (7456) 5000 c/s (0s +/- 1s)                        - Progress:		52% (7602) 5000 c/s (0s +/- 1s)                        \ Progress:		53% (7749) 5000 c/s (0s +/- 1s)                        | Progress:		54% (7895) 5000 c/s (0s +/- 1s)                        / Progress:		55% (8041) 5000 c/s (0s +/- 1s)                        - Progress:		56% (8187) 5000 c/s (0s +/- 1s)                        \ Progress:		57% (8333) 5000 c/s (0s +/- 1s)                        | Progress:		58% (8480) 5000 c/s (0s +/- 1s)                        / Progress:		59% (8626) 5000 c/s (0s +/- 1s)                        - Progress:		60% (8772) 5000 c/s (0s +/- 1s)                        \ Progress:		61% (8918) 5000 c/s (0s +/- 1s)                        | Progress:		62% (9064) 5000 c/s (0s +/- 1s)                        / Progress:		63% (9210) 5000 c/s (0s +/- 1s)                        - Progress:		64% (9357) 5000 c/s (0s +/- 1s)                        \ Progress:		65% (9503) 5000 c/s (0s +/- 1s)                        | Progress:		66% (9649) 5000 c/s (0s +/- <1s)                       / Progress:		67% (9795) 5000 c/s (0s +/- <1s)                       - Progress:		68% (9941) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (10088) 5000 c/s (0s +/- <1s)                      | Progress:		70% (10234) 5000 c/s (0s +/- <1s)                      / Progress:		71% (10380) 5000 c/s (0s +/- <1s)                      - Progress:		72% (10526) 5000 c/s (0s +/- <1s)                      \ Progress:		73% (10672) 5000 c/s (0s +/- <1s)                      | Progress:		74% (10819) 5000 c/s (0s +/- <1s)                      / Progress:		75% (10965) 5000 c/s (0s +/- <1s)                      - Progress:		76% (11111) 5000 c/s (0s +/- <1s)                      \ Progress:		77% (11257) 5000 c/s (0s +/- <1s)                      | Progress:		78% (11403) 5000 c/s (0s +/- <1s)                      / Progress:		79% (11550) 5000 c/s (0s +/- <1s)                      - Progress:		80% (11696) 5000 c/s (0s +/- <1s)                      \ Progress:		81% (11842) 5000 c/s (0s +/- <1s)                      | Progress:		82% (11988) 5000 c/s (0s +/- <1s)                      / Progress:		83% (12134) 5000 c/s (0s +/- <1s)                      - Progress:		84% (12280) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (12427) 5000 c/s (0s +/- <1s)                      | Progress:		86% (12573) 5000 c/s (0s +/- <1s)                      / Progress:		87% (12719) 5000 c/s (0s +/- <1s)                      - Progress:		88% (12865) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (13011) 5000 c/s (0s +/- <1s)                      | Progress:		90% (13158) 5000 c/s (0s +/- <1s)                      / Progress:		91% (13304) 5000 c/s (0s +/- <1s)                      - Progress:		92% (13450) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (13596) 5000 c/s (0s +/- <1s)                      | Progress:		94% (13742) 5000 c/s (0s +/- <1s)                      / Progress:		95% (13889) 5000 c/s (0s +/- <1s)                      - Progress:		96% (14035) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (14181) 5000 c/s (0s +/- <1s)                      | Progress:		98% (14327) 5000 c/s (0s +/- <1s)                      / Progress:		99% (14473) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.081939 seconds.		
 * Result:		(41a,33u,687,4014,1327,5341)
 * Creating:			fold 5
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 5
** Writing FIC database to file
 * File:		train10.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		heart-all-9d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		28485
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(38a,0u,1921,8618,501,9120)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (285) ? c/s  		 | Progress:		2% (570) ? c/s  		 / Progress:		3% (855) ? c/s  		 - Progress:		4% (1140) ? c/s  		 \ Progress:		5% (1425) ? c/s  		 | Progress:		6% (1710) ? c/s  		 / Progress:		7% (1994) ? c/s  		 - Progress:		8% (2279) ? c/s  		 \ Progress:		9% (2564) ? c/s  		 | Progress:		10% (2849) ? c/s  		 / Progress:		11% (3134) ? c/s  		 - Progress:		12% (3419) ? c/s  		 \ Progress:		13% (3704) ? c/s  		 | Progress:		14% (3988) ? c/s  		 / Progress:		15% (4273) ? c/s  		 - Progress:		16% (4558) ? c/s  		 \ Progress:		17% (4843) ? c/s  		 \ Progress:		17% (5000) 5000 c/s (0s +/- 4s)                        | Progress:		18% (5128) 5000 c/s (0s +/- 4s)                        / Progress:		19% (5413) 5000 c/s (0s +/- 4s)                        - Progress:		20% (5697) 5000 c/s (0s +/- 4s)                        \ Progress:		21% (5982) 5000 c/s (0s +/- 4s)                        | Progress:		22% (6267) 5000 c/s (0s +/- 4s)                        / Progress:		23% (6552) 5000 c/s (0s +/- 4s)                        - Progress:		24% (6837) 5000 c/s (0s +/- 4s)                        \ Progress:		25% (7122) 5000 c/s (0s +/- 4s)                        | Progress:		26% (7407) 5000 c/s (0s +/- 4s)                        / Progress:		27% (7691) 5000 c/s (0s +/- 4s)                        - Progress:		28% (7976) 5000 c/s (0s +/- 4s)                        \ Progress:		29% (8261) 5000 c/s (0s +/- 4s)                        | Progress:		30% (8546) 5000 c/s (0s +/- 3s)                        / Progress:		31% (8831) 5000 c/s (0s +/- 3s)                        - Progress:		32% (9116) 5000 c/s (0s +/- 3s)                        \ Progress:		33% (9401) 5000 c/s (0s +/- 3s)                        | Progress:		34% (9685) 5000 c/s (0s +/- 3s)                        / Progress:		35% (9970) 5000 c/s (0s +/- 3s)                        - Progress:		36% (10255) 5000 c/s (0s +/- 3s)                       \ Progress:		37% (10540) 5000 c/s (0s +/- 3s)                       | Progress:		38% (10825) 5000 c/s (0s +/- 3s)                       / Progress:		39% (11110) 5000 c/s (0s +/- 3s)                       - Progress:		40% (11394) 5000 c/s (0s +/- 3s)                       \ Progress:		41% (11679) 5000 c/s (0s +/- 3s)                       | Progress:		42% (11964) 5000 c/s (0s +/- 3s)                       / Progress:		43% (12249) 5000 c/s (0s +/- 3s)                       - Progress:		44% (12534) 5000 c/s (0s +/- 3s)                       \ Progress:		45% (12819) 5000 c/s (0s +/- 3s)                       | Progress:		46% (13104) 5000 c/s (0s +/- 3s)                       / Progress:		47% (13388) 5000 c/s (0s +/- 3s)                       - Progress:		48% (13673) 5000 c/s (0s +/- 2s)                       \ Progress:		49% (13958) 5000 c/s (0s +/- 2s)                       | Progress:		50% (14243) 5000 c/s (0s +/- 2s)                       / Progress:		51% (14528) 5000 c/s (0s +/- 2s)                       - Progress:		52% (14813) 5000 c/s (0s +/- 2s)                       \ Progress:		53% (15098) 5000 c/s (0s +/- 2s)                       | Progress:		54% (15382) 5000 c/s (0s +/- 2s)                       / Progress:		55% (15667) 5000 c/s (0s +/- 2s)                       - Progress:		56% (15952) 5000 c/s (0s +/- 2s)                       \ Progress:		57% (16237) 5000 c/s (0s +/- 2s)                       | Progress:		58% (16522) 5000 c/s (0s +/- 2s)                       / Progress:		59% (16807) 5000 c/s (0s +/- 2s)                       - Progress:		60% (17091) 5000 c/s (0s +/- 2s)                       \ Progress:		61% (17376) 5000 c/s (0s +/- 2s)                       | Progress:		62% (17661) 5000 c/s (0s +/- 2s)                       / Progress:		63% (17946) 5000 c/s (0s +/- 2s)                       - Progress:		64% (18231) 5000 c/s (0s +/- 2s)                       \ Progress:		65% (18516) 5000 c/s (0s +/- 1s)                       | Progress:		66% (18801) 5000 c/s (0s +/- 1s)                       / Progress:		67% (19085) 5000 c/s (0s +/- 1s)                       - Progress:		68% (19370) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (19655) 5000 c/s (0s +/- 1s)                       | Progress:		70% (19940) 5000 c/s (0s +/- 1s)                       / Progress:		71% (20225) 5000 c/s (0s +/- 1s)                       - Progress:		72% (20510) 5000 c/s (0s +/- 1s)                       \ Progress:		73% (20795) 5000 c/s (0s +/- 1s)                       | Progress:		74% (21079) 5000 c/s (0s +/- 1s)                       / Progress:		75% (21364) 5000 c/s (0s +/- 1s)                       - Progress:		76% (21649) 5000 c/s (0s +/- 1s)                       \ Progress:		77% (21934) 5000 c/s (0s +/- 1s)                       | Progress:		78% (22219) 5000 c/s (0s +/- 1s)                       / Progress:		79% (22504) 5000 c/s (0s +/- 1s)                       - Progress:		80% (22788) 5000 c/s (0s +/- 1s)                       \ Progress:		81% (23073) 5000 c/s (0s +/- 1s)                       | Progress:		82% (23358) 5000 c/s (0s +/- 1s)                       / Progress:		83% (23643) 5000 c/s (0s +/- <1s)                      - Progress:		84% (23928) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (24213) 5000 c/s (0s +/- <1s)                      | Progress:		86% (24498) 5000 c/s (0s +/- <1s)                      / Progress:		87% (24782) 5000 c/s (0s +/- <1s)                      - Progress:		88% (25067) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (25352) 5000 c/s (0s +/- <1s)                      | Progress:		90% (25637) 5000 c/s (0s +/- <1s)                      / Progress:		91% (25922) 5000 c/s (0s +/- <1s)                      - Progress:		92% (26207) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (26492) 5000 c/s (0s +/- <1s)                      | Progress:		94% (26776) 5000 c/s (0s +/- <1s)                      / Progress:		95% (27061) 5000 c/s (0s +/- <1s)                      - Progress:		96% (27346) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (27631) 5000 c/s (0s +/- <1s)                      | Progress:		98% (27916) 5000 c/s (0s +/- <1s)                      / Progress:		99% (28201) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.109571 seconds.		
 * Result:		(32a,32u,632,3464,1248,4713)
** Writing FIC database to file
 * File:		train16.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		heart-all-9d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		15405
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(45a,0u,1610,7614,599,8213)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (155) ? c/s  		 | Progress:		2% (309) ? c/s  		 / Progress:		3% (463) ? c/s  		 - Progress:		4% (617) ? c/s  		 \ Progress:		5% (771) ? c/s  		 | Progress:		6% (925) ? c/s  		 / Progress:		7% (1079) ? c/s  		 - Progress:		8% (1233) ? c/s  		 \ Progress:		9% (1387) ? c/s  		 | Progress:		10% (1541) ? c/s  		 / Progress:		11% (1695) ? c/s  		 - Progress:		12% (1849) ? c/s  		 \ Progress:		13% (2003) ? c/s  		 | Progress:		14% (2157) ? c/s  		 / Progress:		15% (2311) ? c/s  		 - Progress:		16% (2465) ? c/s  		 \ Progress:		17% (2619) ? c/s  		 | Progress:		18% (2773) ? c/s  		 / Progress:		19% (2927) ? c/s  		 - Progress:		20% (3081) ? c/s  		 \ Progress:		21% (3236) ? c/s  		 | Progress:		22% (3390) ? c/s  		 / Progress:		23% (3544) ? c/s  		 - Progress:		24% (3698) ? c/s  		 \ Progress:		25% (3852) ? c/s  		 | Progress:		26% (4006) ? c/s  		 / Progress:		27% (4160) ? c/s  		 - Progress:		28% (4314) ? c/s  		 \ Progress:		29% (4468) ? c/s  		 | Progress:		30% (4622) ? c/s  		 / Progress:		31% (4776) ? c/s  		 - Progress:		32% (4930) ? c/s  		 - Progress:		32% (5000) 5000 c/s (0s +/- 2s)                        \ Progress:		33% (5084) 5000 c/s (0s +/- 2s)                        | Progress:		34% (5238) 5000 c/s (0s +/- 2s)                        / Progress:		35% (5392) 5000 c/s (0s +/- 2s)                        - Progress:		36% (5546) 5000 c/s (0s +/- 1s)                        \ Progress:		37% (5700) 5000 c/s (0s +/- 1s)                        | Progress:		38% (5854) 5000 c/s (0s +/- 1s)                        / Progress:		39% (6008) 5000 c/s (0s +/- 1s)                        - Progress:		40% (6162) 5000 c/s (0s +/- 1s)                        \ Progress:		41% (6317) 5000 c/s (0s +/- 1s)                        | Progress:		42% (6471) 5000 c/s (0s +/- 1s)                        / Progress:		43% (6625) 5000 c/s (0s +/- 1s)                        - Progress:		44% (6779) 5000 c/s (0s +/- 1s)                        \ Progress:		45% (6933) 5000 c/s (0s +/- 1s)                        | Progress:		46% (7087) 5000 c/s (0s +/- 1s)                        / Progress:		47% (7241) 5000 c/s (0s +/- 1s)                        - Progress:		48% (7395) 5000 c/s (0s +/- 1s)                        \ Progress:		49% (7549) 5000 c/s (0s +/- 1s)                        | Progress:		50% (7703) 5000 c/s (0s +/- 1s)                        / Progress:		51% (7857) 5000 c/s (0s +/- 1s)                        - Progress:		52% (8011) 5000 c/s (0s +/- 1s)                        \ Progress:		53% (8165) 5000 c/s (0s +/- 1s)                        | Progress:		54% (8319) 5000 c/s (0s +/- 1s)                        / Progress:		55% (8473) 5000 c/s (0s +/- 1s)                        - Progress:		56% (8627) 5000 c/s (1s +/- 1s)                        \ Progress:		57% (8781) 5000 c/s (1s +/- 1s)                        | Progress:		58% (8935) 5000 c/s (1s +/- 1s)                        / Progress:		59% (9089) 5000 c/s (1s +/- 1s)                        - Progress:		60% (9243) 5000 c/s (1s +/- 1s)                        \ Progress:		61% (9398) 5000 c/s (1s +/- 1s)                        | Progress:		62% (9552) 5000 c/s (1s +/- 1s)                        / Progress:		63% (9706) 5000 c/s (1s +/- 1s)                        - Progress:		64% (9860) 5000 c/s (1s +/- 1s)                        \ Progress:		65% (10014) 5000 c/s (1s +/- 1s)                       | Progress:		66% (10168) 5000 c/s (1s +/- 1s)                       / Progress:		67% (10322) 5000 c/s (1s +/- 1s)                       - Progress:		68% (10476) 5000 c/s (1s +/- <1s)                      \ Progress:		69% (10630) 5000 c/s (1s +/- <1s)                      | Progress:		70% (10784) 5000 c/s (1s +/- <1s)                      / Progress:		71% (10938) 5000 c/s (1s +/- <1s)                      - Progress:		72% (11092) 5000 c/s (1s +/- <1s)                      \ Progress:		73% (11246) 5000 c/s (1s +/- <1s)                      | Progress:		74% (11400) 5000 c/s (1s +/- <1s)                      / Progress:		75% (11554) 5000 c/s (1s +/- <1s)                      - Progress:		76% (11708) 5000 c/s (1s +/- <1s)                      \ Progress:		77% (11862) 5000 c/s (1s +/- <1s)                      | Progress:		78% (12016) 5000 c/s (1s +/- <1s)                      / Progress:		79% (12170) 5000 c/s (1s +/- <1s)                      - Progress:		80% (12324) 5000 c/s (1s +/- <1s)                      \ Progress:		81% (12479) 5000 c/s (1s +/- <1s)                      | Progress:		82% (12633) 5000 c/s (1s +/- <1s)                      / Progress:		83% (12787) 5000 c/s (1s +/- <1s)                      - Progress:		84% (12941) 5000 c/s (1s +/- <1s)                      \ Progress:		85% (13095) 5000 c/s (1s +/- <1s)                      | Progress:		86% (13249) 5000 c/s (1s +/- <1s)                      / Progress:		87% (13403) 5000 c/s (1s +/- <1s)                      - Progress:		88% (13557) 5000 c/s (1s +/- <1s)                      \ Progress:		89% (13711) 5000 c/s (1s +/- <1s)                      | Progress:		90% (13865) 5000 c/s (1s +/- <1s)                      / Progress:		91% (14019) 5000 c/s (1s +/- <1s)                      - Progress:		92% (14173) 5000 c/s (1s +/- <1s)                      \ Progress:		93% (14327) 5000 c/s (1s +/- <1s)                      | Progress:		94% (14481) 5000 c/s (1s +/- <1s)                      / Progress:		95% (14635) 5000 c/s (1s +/- <1s)                      - Progress:		96% (14789) 5000 c/s (1s +/- <1s)                      \ Progress:		97% (14943) 5000 c/s (1s +/- <1s)                      | Progress:		98% (15097) 5000 c/s (1s +/- <1s)                      / Progress:		99% (15251) 5000 c/s (1s +/- <1s)                      * Time:    		Compressing the database took 0.090004 seconds.		
 * Result:		(39a,34u,698,3952,1351,5304)
 * Creating:			fold 6
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 6
** Writing FIC database to file
 * File:		train10.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		heart-all-9d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		27691
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(39a,0u,1881,8460,519,8978)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (277) ? c/s  		 | Progress:		2% (554) ? c/s  		 / Progress:		3% (831) ? c/s  		 - Progress:		4% (1108) ? c/s  		 \ Progress:		5% (1385) ? c/s  		 | Progress:		6% (1662) ? c/s  		 / Progress:		7% (1939) ? c/s  		 - Progress:		8% (2216) ? c/s  		 \ Progress:		9% (2493) ? c/s  		 | Progress:		10% (2770) ? c/s  		 / Progress:		11% (3047) ? c/s  		 - Progress:		12% (3323) ? c/s  		 \ Progress:		13% (3600) ? c/s  		 | Progress:		14% (3877) ? c/s  		 / Progress:		15% (4154) ? c/s  		 - Progress:		16% (4431) ? c/s  		 \ Progress:		17% (4708) ? c/s  		 | Progress:		18% (4985) ? c/s  		 | Progress:		18% (5000) 5000 c/s (0s +/- 4s)                        / Progress:		19% (5262) 5000 c/s (0s +/- 4s)                        - Progress:		20% (5539) 5000 c/s (0s +/- 4s)                        \ Progress:		21% (5816) 5000 c/s (0s +/- 4s)                        | Progress:		22% (6093) 5000 c/s (0s +/- 4s)                        / Progress:		23% (6369) 5000 c/s (0s +/- 4s)                        - Progress:		24% (6646) 5000 c/s (0s +/- 4s)                        \ Progress:		25% (6923) 5000 c/s (0s +/- 4s)                        | Progress:		26% (7200) 5000 c/s (0s +/- 4s)                        / Progress:		27% (7477) 5000 c/s (0s +/- 4s)                        - Progress:		28% (7754) 5000 c/s (0s +/- 3s)                        \ Progress:		29% (8031) 5000 c/s (0s +/- 3s)                        | Progress:		30% (8308) 5000 c/s (0s +/- 3s)                        / Progress:		31% (8585) 5000 c/s (0s +/- 3s)                        - Progress:		32% (8862) 5000 c/s (0s +/- 3s)                        \ Progress:		33% (9139) 5000 c/s (0s +/- 3s)                        | Progress:		34% (9415) 5000 c/s (0s +/- 3s)                        / Progress:		35% (9692) 5000 c/s (0s +/- 3s)                        - Progress:		36% (9969) 5000 c/s (0s +/- 3s)                        \ Progress:		37% (10246) 5000 c/s (0s +/- 3s)                       | Progress:		38% (10523) 5000 c/s (0s +/- 3s)                       / Progress:		39% (10800) 5000 c/s (0s +/- 3s)                       - Progress:		40% (11077) 5000 c/s (0s +/- 3s)                       \ Progress:		41% (11354) 5000 c/s (0s +/- 3s)                       | Progress:		42% (11631) 5000 c/s (0s +/- 3s)                       / Progress:		43% (11908) 5000 c/s (0s +/- 3s)                       - Progress:		44% (12185) 5000 c/s (0s +/- 3s)                       \ Progress:		45% (12461) 5000 c/s (0s +/- 3s)                       | Progress:		46% (12738) 5000 c/s (0s +/- 2s)                       / Progress:		47% (13015) 5000 c/s (0s +/- 2s)                       - Progress:		48% (13292) 5000 c/s (0s +/- 2s)                       \ Progress:		49% (13569) 5000 c/s (0s +/- 2s)                       | Progress:		50% (13846) 5000 c/s (0s +/- 2s)                       / Progress:		51% (14123) 5000 c/s (0s +/- 2s)                       - Progress:		52% (14400) 5000 c/s (0s +/- 2s)                       \ Progress:		53% (14677) 5000 c/s (0s +/- 2s)                       | Progress:		54% (14954) 5000 c/s (0s +/- 2s)                       / Progress:		55% (15231) 5000 c/s (0s +/- 2s)                       - Progress:		56% (15507) 5000 c/s (0s +/- 2s)                       \ Progress:		57% (15784) 5000 c/s (0s +/- 2s)                       | Progress:		58% (16061) 5000 c/s (0s +/- 2s)                       / Progress:		59% (16338) 5000 c/s (0s +/- 2s)                       - Progress:		60% (16615) 5000 c/s (0s +/- 2s)                       \ Progress:		61% (16892) 5000 c/s (0s +/- 2s)                       | Progress:		62% (17169) 5000 c/s (0s +/- 2s)                       / Progress:		63% (17446) 5000 c/s (0s +/- 2s)                       - Progress:		64% (17723) 5000 c/s (0s +/- 1s)                       \ Progress:		65% (18000) 5000 c/s (0s +/- 1s)                       | Progress:		66% (18277) 5000 c/s (0s +/- 1s)                       / Progress:		67% (18553) 5000 c/s (0s +/- 1s)                       - Progress:		68% (18830) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (19107) 5000 c/s (0s +/- 1s)                       | Progress:		70% (19384) 5000 c/s (0s +/- 1s)                       / Progress:		71% (19661) 5000 c/s (0s +/- 1s)                       - Progress:		72% (19938) 5000 c/s (0s +/- 1s)                       \ Progress:		73% (20215) 5000 c/s (0s +/- 1s)                       | Progress:		74% (20492) 5000 c/s (0s +/- 1s)                       / Progress:		75% (20769) 5000 c/s (0s +/- 1s)                       - Progress:		76% (21046) 5000 c/s (0s +/- 1s)                       \ Progress:		77% (21323) 5000 c/s (0s +/- 1s)                       | Progress:		78% (21599) 5000 c/s (0s +/- 1s)                       / Progress:		79% (21876) 5000 c/s (0s +/- 1s)                       - Progress:		80% (22153) 5000 c/s (0s +/- 1s)                       \ Progress:		81% (22430) 5000 c/s (0s +/- 1s)                       | Progress:		82% (22707) 5000 c/s (0s +/- <1s)                      / Progress:		83% (22984) 5000 c/s (0s +/- <1s)                      - Progress:		84% (23261) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (23538) 5000 c/s (0s +/- <1s)                      | Progress:		86% (23815) 5000 c/s (0s +/- <1s)                      / Progress:		87% (24092) 5000 c/s (0s +/- <1s)                      - Progress:		88% (24369) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (24645) 5000 c/s (0s +/- <1s)                      | Progress:		90% (24922) 5000 c/s (0s +/- <1s)                      / Progress:		91% (25199) 5000 c/s (0s +/- <1s)                      - Progress:		92% (25476) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (25753) 5000 c/s (0s +/- <1s)                      | Progress:		94% (26030) 5000 c/s (0s +/- <1s)                      / Progress:		95% (26307) 5000 c/s (0s +/- <1s)                      - Progress:		96% (26584) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (26861) 5000 c/s (0s +/- <1s)                      | Progress:		98% (27138) 5000 c/s (0s +/- <1s)                      / Progress:		99% (27415) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.104652 seconds.		
 * Result:		(32a,32u,678,3723,1194,4916)
** Writing FIC database to file
 * File:		train16.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		heart-all-9d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		15342
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(45a,0u,1649,7791,602,8393)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (154) ? c/s  		 | Progress:		2% (307) ? c/s  		 / Progress:		3% (461) ? c/s  		 - Progress:		4% (614) ? c/s  		 \ Progress:		5% (768) ? c/s  		 | Progress:		6% (921) ? c/s  		 / Progress:		7% (1074) ? c/s  		 - Progress:		8% (1228) ? c/s  		 \ Progress:		9% (1381) ? c/s  		 | Progress:		10% (1535) ? c/s  		 / Progress:		11% (1688) ? c/s  		 - Progress:		12% (1842) ? c/s  		 \ Progress:		13% (1995) ? c/s  		 | Progress:		14% (2148) ? c/s  		 / Progress:		15% (2302) ? c/s  		 - Progress:		16% (2455) ? c/s  		 \ Progress:		17% (2609) ? c/s  		 | Progress:		18% (2762) ? c/s  		 / Progress:		19% (2915) ? c/s  		 - Progress:		20% (3069) ? c/s  		 \ Progress:		21% (3222) ? c/s  		 | Progress:		22% (3376) ? c/s  		 / Progress:		23% (3529) ? c/s  		 - Progress:		24% (3683) ? c/s  		 \ Progress:		25% (3836) ? c/s  		 | Progress:		26% (3989) ? c/s  		 / Progress:		27% (4143) ? c/s  		 - Progress:		28% (4296) ? c/s  		 \ Progress:		29% (4450) ? c/s  		 | Progress:		30% (4603) ? c/s  		 / Progress:		31% (4757) ? c/s  		 - Progress:		32% (4910) ? c/s  		 - Progress:		32% (5000) 5000 c/s (0s +/- 2s)                        \ Progress:		33% (5063) 5000 c/s (0s +/- 2s)                        | Progress:		34% (5217) 5000 c/s (0s +/- 2s)                        / Progress:		35% (5370) 5000 c/s (0s +/- 1s)                        - Progress:		36% (5524) 5000 c/s (0s +/- 1s)                        \ Progress:		37% (5677) 5000 c/s (0s +/- 1s)                        | Progress:		38% (5830) 5000 c/s (0s +/- 1s)                        / Progress:		39% (5984) 5000 c/s (0s +/- 1s)                        - Progress:		40% (6137) 5000 c/s (0s +/- 1s)                        \ Progress:		41% (6291) 5000 c/s (0s +/- 1s)                        | Progress:		42% (6444) 5000 c/s (0s +/- 1s)                        / Progress:		43% (6598) 5000 c/s (0s +/- 1s)                        - Progress:		44% (6751) 5000 c/s (0s +/- 1s)                        \ Progress:		45% (6904) 5000 c/s (0s +/- 1s)                        | Progress:		46% (7058) 5000 c/s (0s +/- 1s)                        / Progress:		47% (7211) 5000 c/s (0s +/- 1s)                        - Progress:		48% (7365) 5000 c/s (0s +/- 1s)                        \ Progress:		49% (7518) 5000 c/s (0s +/- 1s)                        | Progress:		50% (7671) 5000 c/s (0s +/- 1s)                        / Progress:		51% (7825) 5000 c/s (0s +/- 1s)                        - Progress:		52% (7978) 5000 c/s (0s +/- 1s)                        \ Progress:		53% (8132) 5000 c/s (0s +/- 1s)                        | Progress:		54% (8285) 5000 c/s (0s +/- 1s)                        / Progress:		55% (8439) 5000 c/s (0s +/- 1s)                        - Progress:		56% (8592) 5000 c/s (0s +/- 1s)                        \ Progress:		57% (8745) 5000 c/s (0s +/- 1s)                        | Progress:		58% (8899) 5000 c/s (0s +/- 1s)                        / Progress:		59% (9052) 5000 c/s (0s +/- 1s)                        - Progress:		60% (9206) 5000 c/s (0s +/- 1s)                        \ Progress:		61% (9359) 5000 c/s (0s +/- 1s)                        | Progress:		62% (9513) 5000 c/s (0s +/- 1s)                        / Progress:		63% (9666) 5000 c/s (0s +/- 1s)                        - Progress:		64% (9819) 5000 c/s (0s +/- 1s)                        \ Progress:		65% (9973) 5000 c/s (0s +/- 1s)                        | Progress:		66% (10126) 5000 c/s (0s +/- 1s)                       / Progress:		67% (10280) 5000 c/s (0s +/- 1s)                       - Progress:		68% (10433) 5000 c/s (0s +/- <1s)                      \ Progress:		69% (10586) 5000 c/s (0s +/- <1s)                      | Progress:		70% (10740) 5000 c/s (0s +/- <1s)                      / Progress:		71% (10893) 5000 c/s (0s +/- <1s)                      - Progress:		72% (11047) 5000 c/s (0s +/- <1s)                      \ Progress:		73% (11200) 5000 c/s (0s +/- <1s)                      | Progress:		74% (11354) 5000 c/s (0s +/- <1s)                      / Progress:		75% (11507) 5000 c/s (0s +/- <1s)                      - Progress:		76% (11660) 5000 c/s (0s +/- <1s)                      \ Progress:		77% (11814) 5000 c/s (0s +/- <1s)                      | Progress:		78% (11967) 5000 c/s (0s +/- <1s)                      / Progress:		79% (12121) 5000 c/s (0s +/- <1s)                      - Progress:		80% (12274) 5000 c/s (0s +/- <1s)                      \ Progress:		81% (12428) 5000 c/s (0s +/- <1s)                      | Progress:		82% (12581) 5000 c/s (0s +/- <1s)                      / Progress:		83% (12734) 5000 c/s (0s +/- <1s)                      - Progress:		84% (12888) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (13041) 5000 c/s (0s +/- <1s)                      | Progress:		86% (13195) 5000 c/s (0s +/- <1s)                      / Progress:		87% (13348) 5000 c/s (0s +/- <1s)                      - Progress:		88% (13501) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (13655) 5000 c/s (0s +/- <1s)                      | Progress:		90% (13808) 5000 c/s (0s +/- <1s)                      / Progress:		91% (13962) 5000 c/s (0s +/- <1s)                      - Progress:		92% (14115) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (14269) 5000 c/s (0s +/- <1s)                      | Progress:		94% (14422) 5000 c/s (0s +/- <1s)                      / Progress:		95% (14575) 5000 c/s (0s +/- <1s)                      - Progress:		96% (14729) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (14882) 5000 c/s (0s +/- <1s)                      | Progress:		98% (15036) 5000 c/s (0s +/- <1s)                      / Progress:		99% (15189) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.085261 seconds.		
 * Result:		(43a,35u,705,4209,1361,5570)
 * Creating:			fold 7
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 7
** Writing FIC database to file
 * File:		train10.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		heart-all-9d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		28333
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(38a,0u,1946,8731,499,9229)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (284) ? c/s  		 | Progress:		2% (567) ? c/s  		 / Progress:		3% (850) ? c/s  		 - Progress:		4% (1134) ? c/s  		 \ Progress:		5% (1417) ? c/s  		 | Progress:		6% (1700) ? c/s  		 / Progress:		7% (1984) ? c/s  		 - Progress:		8% (2267) ? c/s  		 \ Progress:		9% (2550) ? c/s  		 | Progress:		10% (2834) ? c/s  		 / Progress:		11% (3117) ? c/s  		 - Progress:		12% (3400) ? c/s  		 \ Progress:		13% (3684) ? c/s  		 | Progress:		14% (3967) ? c/s  		 / Progress:		15% (4250) ? c/s  		 - Progress:		16% (4534) ? c/s  		 \ Progress:		17% (4817) ? c/s  		 \ Progress:		17% (5000) 5000 c/s (0s +/- 4s)                        | Progress:		18% (5100) 5000 c/s (0s +/- 4s)                        / Progress:		19% (5384) 5000 c/s (0s +/- 4s)                        - Progress:		20% (5667) 5000 c/s (0s +/- 4s)                        \ Progress:		21% (5950) 5000 c/s (0s +/- 4s)                        | Progress:		22% (6234) 5000 c/s (0s +/- 4s)                        / Progress:		23% (6517) 5000 c/s (0s +/- 4s)                        - Progress:		24% (6800) 5000 c/s (0s +/- 4s)                        \ Progress:		25% (7084) 5000 c/s (0s +/- 4s)                        | Progress:		26% (7367) 5000 c/s (0s +/- 4s)                        / Progress:		27% (7650) 5000 c/s (0s +/- 4s)                        - Progress:		28% (7934) 5000 c/s (0s +/- 4s)                        \ Progress:		29% (8217) 5000 c/s (0s +/- 4s)                        | Progress:		30% (8500) 5000 c/s (0s +/- 3s)                        / Progress:		31% (8784) 5000 c/s (0s +/- 3s)                        - Progress:		32% (9067) 5000 c/s (0s +/- 3s)                        \ Progress:		33% (9350) 5000 c/s (0s +/- 3s)                        | Progress:		34% (9634) 5000 c/s (0s +/- 3s)                        / Progress:		35% (9917) 5000 c/s (0s +/- 3s)                        - Progress:		36% (10200) 5000 c/s (0s +/- 3s)                       \ Progress:		37% (10484) 5000 c/s (0s +/- 3s)                       | Progress:		38% (10767) 5000 c/s (0s +/- 3s)                       / Progress:		39% (11050) 5000 c/s (0s +/- 3s)                       - Progress:		40% (11334) 5000 c/s (0s +/- 3s)                       \ Progress:		41% (11617) 5000 c/s (0s +/- 3s)                       | Progress:		42% (11900) 5000 c/s (0s +/- 3s)                       / Progress:		43% (12184) 5000 c/s (0s +/- 3s)                       - Progress:		44% (12467) 5000 c/s (0s +/- 3s)                       \ Progress:		45% (12750) 5000 c/s (0s +/- 3s)                       | Progress:		46% (13034) 5000 c/s (0s +/- 3s)                       / Progress:		47% (13317) 5000 c/s (0s +/- 3s)                       - Progress:		48% (13600) 5000 c/s (0s +/- 2s)                       \ Progress:		49% (13884) 5000 c/s (0s +/- 2s)                       | Progress:		50% (14167) 5000 c/s (0s +/- 2s)                       / Progress:		51% (14450) 5000 c/s (0s +/- 2s)                       - Progress:		52% (14734) 5000 c/s (0s +/- 2s)                       \ Progress:		53% (15017) 5000 c/s (0s +/- 2s)                       | Progress:		54% (15300) 5000 c/s (0s +/- 2s)                       / Progress:		55% (15584) 5000 c/s (0s +/- 2s)                       - Progress:		56% (15867) 5000 c/s (0s +/- 2s)                       \ Progress:		57% (16150) 5000 c/s (0s +/- 2s)                       | Progress:		58% (16434) 5000 c/s (0s +/- 2s)                       / Progress:		59% (16717) 5000 c/s (0s +/- 2s)                       - Progress:		60% (17000) 5000 c/s (0s +/- 2s)                       \ Progress:		61% (17284) 5000 c/s (0s +/- 2s)                       | Progress:		62% (17567) 5000 c/s (0s +/- 2s)                       / Progress:		63% (17850) 5000 c/s (0s +/- 2s)                       - Progress:		64% (18134) 5000 c/s (0s +/- 2s)                       \ Progress:		65% (18417) 5000 c/s (0s +/- 1s)                       | Progress:		66% (18700) 5000 c/s (0s +/- 1s)                       / Progress:		67% (18984) 5000 c/s (0s +/- 1s)                       - Progress:		68% (19267) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (19550) 5000 c/s (0s +/- 1s)                       | Progress:		70% (19834) 5000 c/s (0s +/- 1s)                       / Progress:		71% (20117) 5000 c/s (0s +/- 1s)                       - Progress:		72% (20400) 5000 c/s (0s +/- 1s)                       \ Progress:		73% (20684) 5000 c/s (0s +/- 1s)                       | Progress:		74% (20967) 5000 c/s (0s +/- 1s)                       / Progress:		75% (21250) 5000 c/s (0s +/- 1s)                       - Progress:		76% (21534) 5000 c/s (0s +/- 1s)                       \ Progress:		77% (21817) 5000 c/s (0s +/- 1s)                       | Progress:		78% (22100) 5000 c/s (0s +/- 1s)                       / Progress:		79% (22384) 5000 c/s (0s +/- 1s)                       - Progress:		80% (22667) 5000 c/s (0s +/- 1s)                       \ Progress:		81% (22950) 5000 c/s (0s +/- 1s)                       | Progress:		82% (23234) 5000 c/s (0s +/- 1s)                       / Progress:		83% (23517) 5000 c/s (0s +/- <1s)                      - Progress:		84% (23800) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (24084) 5000 c/s (0s +/- <1s)                      | Progress:		86% (24367) 5000 c/s (0s +/- <1s)                      / Progress:		87% (24650) 5000 c/s (0s +/- <1s)                      - Progress:		88% (24934) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (25217) 5000 c/s (0s +/- <1s)                      | Progress:		90% (25500) 5000 c/s (0s +/- <1s)                      / Progress:		91% (25784) 5000 c/s (0s +/- <1s)                      - Progress:		92% (26067) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (26350) 5000 c/s (0s +/- <1s)                      | Progress:		94% (26634) 5000 c/s (0s +/- <1s)                      / Progress:		95% (26917) 5000 c/s (0s +/- <1s)                      - Progress:		96% (27200) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (27484) 5000 c/s (0s +/- <1s)                      | Progress:		98% (27767) 5000 c/s (0s +/- <1s)                      / Progress:		99% (28050) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.110807 seconds.		
 * Result:		(32a,34u,578,3198,1380,4578)
** Writing FIC database to file
 * File:		train16.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		heart-all-9d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		14253
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(45a,0u,1585,7488,602,8091)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (143) ? c/s  		 | Progress:		2% (286) ? c/s  		 / Progress:		3% (428) ? c/s  		 - Progress:		4% (571) ? c/s  		 \ Progress:		5% (713) ? c/s  		 | Progress:		6% (856) ? c/s  		 / Progress:		7% (998) ? c/s  		 - Progress:		8% (1141) ? c/s  		 \ Progress:		9% (1283) ? c/s  		 | Progress:		10% (1426) ? c/s  		 / Progress:		11% (1568) ? c/s  		 - Progress:		12% (1711) ? c/s  		 \ Progress:		13% (1853) ? c/s  		 | Progress:		14% (1996) ? c/s  		 / Progress:		15% (2138) ? c/s  		 - Progress:		16% (2281) ? c/s  		 \ Progress:		17% (2424) ? c/s  		 | Progress:		18% (2566) ? c/s  		 / Progress:		19% (2709) ? c/s  		 - Progress:		20% (2851) ? c/s  		 \ Progress:		21% (2994) ? c/s  		 | Progress:		22% (3136) ? c/s  		 / Progress:		23% (3279) ? c/s  		 - Progress:		24% (3421) ? c/s  		 \ Progress:		25% (3564) ? c/s  		 | Progress:		26% (3706) ? c/s  		 / Progress:		27% (3849) ? c/s  		 - Progress:		28% (3991) ? c/s  		 \ Progress:		29% (4134) ? c/s  		 | Progress:		30% (4276) ? c/s  		 / Progress:		31% (4419) ? c/s  		 - Progress:		32% (4561) ? c/s  		 \ Progress:		33% (4704) ? c/s  		 | Progress:		34% (4847) ? c/s  		 / Progress:		35% (4989) ? c/s  		 / Progress:		35% (5000) 5000 c/s (0s +/- 1s)                        - Progress:		36% (5132) 5000 c/s (0s +/- 1s)                        \ Progress:		37% (5274) 5000 c/s (0s +/- 1s)                        | Progress:		38% (5417) 5000 c/s (0s +/- 1s)                        / Progress:		39% (5559) 5000 c/s (0s +/- 1s)                        - Progress:		40% (5702) 5000 c/s (0s +/- 1s)                        \ Progress:		41% (5844) 5000 c/s (0s +/- 1s)                        | Progress:		42% (5987) 5000 c/s (0s +/- 1s)                        / Progress:		43% (6129) 5000 c/s (0s +/- 1s)                        - Progress:		44% (6272) 5000 c/s (0s +/- 1s)                        \ Progress:		45% (6414) 5000 c/s (0s +/- 1s)                        | Progress:		46% (6557) 5000 c/s (0s +/- 1s)                        / Progress:		47% (6699) 5000 c/s (0s +/- 1s)                        - Progress:		48% (6842) 5000 c/s (0s +/- 1s)                        \ Progress:		49% (6984) 5000 c/s (0s +/- 1s)                        | Progress:		50% (7127) 5000 c/s (0s +/- 1s)                        / Progress:		51% (7270) 5000 c/s (0s +/- 1s)                        - Progress:		52% (7412) 5000 c/s (0s +/- 1s)                        \ Progress:		53% (7555) 5000 c/s (0s +/- 1s)                        | Progress:		54% (7697) 5000 c/s (0s +/- 1s)                        / Progress:		55% (7840) 5000 c/s (0s +/- 1s)                        - Progress:		56% (7982) 5000 c/s (0s +/- 1s)                        \ Progress:		57% (8125) 5000 c/s (0s +/- 1s)                        | Progress:		58% (8267) 5000 c/s (0s +/- 1s)                        / Progress:		59% (8410) 5000 c/s (0s +/- 1s)                        - Progress:		60% (8552) 5000 c/s (0s +/- 1s)                        \ Progress:		61% (8695) 5000 c/s (0s +/- 1s)                        | Progress:		62% (8837) 5000 c/s (0s +/- 1s)                        / Progress:		63% (8980) 5000 c/s (0s +/- 1s)                        - Progress:		64% (9122) 5000 c/s (0s +/- 1s)                        \ Progress:		65% (9265) 5000 c/s (0s +/- <1s)                       | Progress:		66% (9407) 5000 c/s (0s +/- <1s)                       / Progress:		67% (9550) 5000 c/s (0s +/- <1s)                       - Progress:		68% (9693) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (9835) 5000 c/s (0s +/- <1s)                       | Progress:		70% (9978) 5000 c/s (0s +/- <1s)                       / Progress:		71% (10120) 5000 c/s (0s +/- <1s)                      - Progress:		72% (10263) 5000 c/s (0s +/- <1s)                      \ Progress:		73% (10405) 5000 c/s (0s +/- <1s)                      | Progress:		74% (10548) 5000 c/s (0s +/- <1s)                      / Progress:		75% (10690) 5000 c/s (0s +/- <1s)                      - Progress:		76% (10833) 5000 c/s (0s +/- <1s)                      \ Progress:		77% (10975) 5000 c/s (0s +/- <1s)                      | Progress:		78% (11118) 5000 c/s (0s +/- <1s)                      / Progress:		79% (11260) 5000 c/s (0s +/- <1s)                      - Progress:		80% (11403) 5000 c/s (0s +/- <1s)                      \ Progress:		81% (11545) 5000 c/s (0s +/- <1s)                      | Progress:		82% (11688) 5000 c/s (0s +/- <1s)                      / Progress:		83% (11830) 5000 c/s (0s +/- <1s)                      - Progress:		84% (11973) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (12116) 5000 c/s (0s +/- <1s)                      | Progress:		86% (12258) 5000 c/s (0s +/- <1s)                      / Progress:		87% (12401) 5000 c/s (0s +/- <1s)                      - Progress:		88% (12543) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (12686) 5000 c/s (0s +/- <1s)                      | Progress:		90% (12828) 5000 c/s (0s +/- <1s)                      / Progress:		91% (12971) 5000 c/s (0s +/- <1s)                      - Progress:		92% (13113) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (13256) 5000 c/s (0s +/- <1s)                      | Progress:		94% (13398) 5000 c/s (0s +/- <1s)                      / Progress:		95% (13541) 5000 c/s (0s +/- <1s)                      - Progress:		96% (13683) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (13826) 5000 c/s (0s +/- <1s)                      | Progress:		98% (13968) 5000 c/s (0s +/- <1s)                      / Progress:		99% (14111) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.054342 seconds.		
 * Result:		(44a,33u,683,4039,1420,5459)
 * Creating:			fold 8
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 8
** Writing FIC database to file
 * File:		train10.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		heart-all-9d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		28701
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(39a,0u,1920,8625,521,9147)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (288) ? c/s  		 | Progress:		2% (575) ? c/s  		 / Progress:		3% (862) ? c/s  		 - Progress:		4% (1149) ? c/s  		 \ Progress:		5% (1436) ? c/s  		 | Progress:		6% (1723) ? c/s  		 / Progress:		7% (2010) ? c/s  		 - Progress:		8% (2297) ? c/s  		 \ Progress:		9% (2584) ? c/s  		 | Progress:		10% (2871) ? c/s  		 / Progress:		11% (3158) ? c/s  		 - Progress:		12% (3445) ? c/s  		 \ Progress:		13% (3732) ? c/s  		 | Progress:		14% (4019) ? c/s  		 / Progress:		15% (4306) ? c/s  		 - Progress:		16% (4593) ? c/s  		 \ Progress:		17% (4880) ? c/s  		 \ Progress:		17% (5000) 5000 c/s (0s +/- 4s)                        | Progress:		18% (5167) 5000 c/s (0s +/- 4s)                        / Progress:		19% (5454) 5000 c/s (0s +/- 4s)                        - Progress:		20% (5741) 5000 c/s (0s +/- 4s)                        \ Progress:		21% (6028) 5000 c/s (0s +/- 4s)                        | Progress:		22% (6315) 5000 c/s (0s +/- 4s)                        / Progress:		23% (6602) 5000 c/s (0s +/- 4s)                        - Progress:		24% (6889) 5000 c/s (0s +/- 4s)                        \ Progress:		25% (7176) 5000 c/s (0s +/- 4s)                        | Progress:		26% (7463) 5000 c/s (0s +/- 4s)                        / Progress:		27% (7750) 5000 c/s (0s +/- 4s)                        - Progress:		28% (8037) 5000 c/s (0s +/- 4s)                        \ Progress:		29% (8324) 5000 c/s (0s +/- 4s)                        | Progress:		30% (8611) 5000 c/s (0s +/- 4s)                        / Progress:		31% (8898) 5000 c/s (0s +/- 3s)                        - Progress:		32% (9185) 5000 c/s (0s +/- 3s)                        \ Progress:		33% (9472) 5000 c/s (0s +/- 3s)                        | Progress:		34% (9759) 5000 c/s (0s +/- 3s)                        / Progress:		35% (10046) 5000 c/s (0s +/- 3s)                       - Progress:		36% (10333) 5000 c/s (0s +/- 3s)                       \ Progress:		37% (10620) 5000 c/s (0s +/- 3s)                       | Progress:		38% (10907) 5000 c/s (0s +/- 3s)                       / Progress:		39% (11194) 5000 c/s (0s +/- 3s)                       - Progress:		40% (11481) 5000 c/s (0s +/- 3s)                       \ Progress:		41% (11768) 5000 c/s (0s +/- 3s)                       | Progress:		42% (12055) 5000 c/s (0s +/- 3s)                       / Progress:		43% (12342) 5000 c/s (0s +/- 3s)                       - Progress:		44% (12629) 5000 c/s (0s +/- 3s)                       \ Progress:		45% (12916) 5000 c/s (0s +/- 3s)                       | Progress:		46% (13203) 5000 c/s (0s +/- 3s)                       / Progress:		47% (13490) 5000 c/s (0s +/- 3s)                       - Progress:		48% (13777) 5000 c/s (0s +/- 2s)                       \ Progress:		49% (14064) 5000 c/s (0s +/- 2s)                       | Progress:		50% (14351) 5000 c/s (0s +/- 2s)                       / Progress:		51% (14638) 5000 c/s (0s +/- 2s)                       - Progress:		52% (14925) 5000 c/s (0s +/- 2s)                       \ Progress:		53% (15212) 5000 c/s (0s +/- 2s)                       | Progress:		54% (15499) 5000 c/s (0s +/- 2s)                       / Progress:		55% (15786) 5000 c/s (0s +/- 2s)                       - Progress:		56% (16073) 5000 c/s (0s +/- 2s)                       \ Progress:		57% (16360) 5000 c/s (0s +/- 2s)                       | Progress:		58% (16647) 5000 c/s (0s +/- 2s)                       / Progress:		59% (16934) 5000 c/s (0s +/- 2s)                       - Progress:		60% (17221) 5000 c/s (0s +/- 2s)                       \ Progress:		61% (17508) 5000 c/s (0s +/- 2s)                       | Progress:		62% (17795) 5000 c/s (0s +/- 2s)                       / Progress:		63% (18082) 5000 c/s (0s +/- 2s)                       - Progress:		64% (18369) 5000 c/s (0s +/- 2s)                       \ Progress:		65% (18656) 5000 c/s (0s +/- 2s)                       | Progress:		66% (18943) 5000 c/s (0s +/- 1s)                       / Progress:		67% (19230) 5000 c/s (0s +/- 1s)                       - Progress:		68% (19517) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (19804) 5000 c/s (0s +/- 1s)                       | Progress:		70% (20091) 5000 c/s (0s +/- 1s)                       / Progress:		71% (20378) 5000 c/s (0s +/- 1s)                       - Progress:		72% (20665) 5000 c/s (0s +/- 1s)                       \ Progress:		73% (20952) 5000 c/s (0s +/- 1s)                       | Progress:		74% (21239) 5000 c/s (0s +/- 1s)                       / Progress:		75% (21526) 5000 c/s (0s +/- 1s)                       - Progress:		76% (21813) 5000 c/s (0s +/- 1s)                       \ Progress:		77% (22100) 5000 c/s (0s +/- 1s)                       | Progress:		78% (22387) 5000 c/s (0s +/- 1s)                       / Progress:		79% (22674) 5000 c/s (0s +/- 1s)                       - Progress:		80% (22961) 5000 c/s (0s +/- 1s)                       \ Progress:		81% (23248) 5000 c/s (0s +/- 1s)                       | Progress:		82% (23535) 5000 c/s (0s +/- 1s)                       / Progress:		83% (23822) 5000 c/s (0s +/- <1s)                      - Progress:		84% (24109) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (24396) 5000 c/s (0s +/- <1s)                      | Progress:		86% (24683) 5000 c/s (0s +/- <1s)                      / Progress:		87% (24970) 5000 c/s (0s +/- <1s)                      - Progress:		88% (25257) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (25544) 5000 c/s (0s +/- <1s)                      | Progress:		90% (25831) 5000 c/s (0s +/- <1s)                      / Progress:		91% (26118) 5000 c/s (0s +/- <1s)                      - Progress:		92% (26405) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (26692) 5000 c/s (0s +/- <1s)                      | Progress:		94% (26979) 5000 c/s (0s +/- <1s)                      / Progress:		95% (27266) 5000 c/s (0s +/- <1s)                      - Progress:		96% (27553) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (27840) 5000 c/s (0s +/- <1s)                      | Progress:		98% (28127) 5000 c/s (0s +/- <1s)                      / Progress:		99% (28414) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.092447 seconds.		
 * Result:		(34a,35u,568,3224,1396,4621)
** Writing FIC database to file
 * File:		train16.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		heart-all-9d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		15661
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(42a,0u,1610,7575,538,8113)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (157) ? c/s  		 | Progress:		2% (314) ? c/s  		 / Progress:		3% (470) ? c/s  		 - Progress:		4% (627) ? c/s  		 \ Progress:		5% (784) ? c/s  		 | Progress:		6% (940) ? c/s  		 / Progress:		7% (1097) ? c/s  		 - Progress:		8% (1253) ? c/s  		 \ Progress:		9% (1410) ? c/s  		 | Progress:		10% (1567) ? c/s  		 / Progress:		11% (1723) ? c/s  		 - Progress:		12% (1880) ? c/s  		 \ Progress:		13% (2036) ? c/s  		 | Progress:		14% (2193) ? c/s  		 / Progress:		15% (2350) ? c/s  		 - Progress:		16% (2506) ? c/s  		 \ Progress:		17% (2663) ? c/s  		 | Progress:		18% (2819) ? c/s  		 / Progress:		19% (2976) ? c/s  		 - Progress:		20% (3133) ? c/s  		 \ Progress:		21% (3289) ? c/s  		 | Progress:		22% (3446) ? c/s  		 / Progress:		23% (3603) ? c/s  		 - Progress:		24% (3759) ? c/s  		 \ Progress:		25% (3916) ? c/s  		 | Progress:		26% (4072) ? c/s  		 / Progress:		27% (4229) ? c/s  		 - Progress:		28% (4386) ? c/s  		 \ Progress:		29% (4542) ? c/s  		 | Progress:		30% (4699) ? c/s  		 / Progress:		31% (4855) ? c/s  		 / Progress:		31% (5000) 5000 c/s (1s +/- 2s)                        - Progress:		32% (5012) 5000 c/s (1s +/- 2s)                        \ Progress:		33% (5169) 5000 c/s (1s +/- 2s)                        | Progress:		34% (5325) 5000 c/s (1s +/- 2s)                        / Progress:		35% (5482) 5000 c/s (1s +/- 2s)                        - Progress:		36% (5638) 5000 c/s (1s +/- 2s)                        \ Progress:		37% (5795) 5000 c/s (1s +/- 1s)                        | Progress:		38% (5952) 5000 c/s (1s +/- 1s)                        / Progress:		39% (6108) 5000 c/s (1s +/- 1s)                        - Progress:		40% (6265) 5000 c/s (1s +/- 1s)                        \ Progress:		41% (6422) 5000 c/s (1s +/- 1s)                        | Progress:		42% (6578) 5000 c/s (1s +/- 1s)                        / Progress:		43% (6735) 5000 c/s (1s +/- 1s)                        - Progress:		44% (6891) 5000 c/s (1s +/- 1s)                        \ Progress:		45% (7048) 5000 c/s (1s +/- 1s)                        | Progress:		46% (7205) 5000 c/s (1s +/- 1s)                        / Progress:		47% (7361) 5000 c/s (1s +/- 1s)                        - Progress:		48% (7518) 5000 c/s (1s +/- 1s)                        \ Progress:		49% (7674) 5000 c/s (1s +/- 1s)                        | Progress:		50% (7831) 5000 c/s (1s +/- 1s)                        / Progress:		51% (7988) 5000 c/s (1s +/- 1s)                        - Progress:		52% (8144) 5000 c/s (1s +/- 1s)                        \ Progress:		53% (8301) 5000 c/s (1s +/- 1s)                        | Progress:		54% (8457) 5000 c/s (1s +/- 1s)                        / Progress:		55% (8614) 5000 c/s (1s +/- 1s)                        - Progress:		56% (8771) 5000 c/s (1s +/- 1s)                        \ Progress:		57% (8927) 5000 c/s (1s +/- 1s)                        | Progress:		58% (9084) 5000 c/s (1s +/- 1s)                        / Progress:		59% (9240) 5000 c/s (1s +/- 1s)                        - Progress:		60% (9397) 5000 c/s (1s +/- 1s)                        \ Progress:		61% (9554) 5000 c/s (1s +/- 1s)                        | Progress:		62% (9710) 5000 c/s (1s +/- 1s)                        / Progress:		63% (9867) 5000 c/s (1s +/- 1s)                        - Progress:		64% (10024) 5000 c/s (1s +/- 1s)                       \ Progress:		65% (10180) 5000 c/s (1s +/- 1s)                       | Progress:		66% (10337) 5000 c/s (1s +/- 1s)                       / Progress:		67% (10493) 5000 c/s (1s +/- 1s)                       - Progress:		68% (10650) 5000 c/s (1s +/- 1s)                       \ Progress:		69% (10807) 5000 c/s (1s +/- <1s)                      | Progress:		70% (10963) 5000 c/s (1s +/- <1s)                      / Progress:		71% (11120) 5000 c/s (1s +/- <1s)                      - Progress:		72% (11276) 5000 c/s (1s +/- <1s)                      \ Progress:		73% (11433) 5000 c/s (1s +/- <1s)                      | Progress:		74% (11590) 5000 c/s (1s +/- <1s)                      / Progress:		75% (11746) 5000 c/s (1s +/- <1s)                      - Progress:		76% (11903) 5000 c/s (1s +/- <1s)                      \ Progress:		77% (12059) 5000 c/s (1s +/- <1s)                      | Progress:		78% (12216) 5000 c/s (1s +/- <1s)                      / Progress:		79% (12373) 5000 c/s (1s +/- <1s)                      - Progress:		80% (12529) 5000 c/s (1s +/- <1s)                      \ Progress:		81% (12686) 5000 c/s (1s +/- <1s)                      | Progress:		82% (12843) 5000 c/s (1s +/- <1s)                      / Progress:		83% (12999) 5000 c/s (1s +/- <1s)                      - Progress:		84% (13156) 5000 c/s (1s +/- <1s)                      \ Progress:		85% (13312) 5000 c/s (1s +/- <1s)                      | Progress:		86% (13469) 5000 c/s (1s +/- <1s)                      / Progress:		87% (13626) 5000 c/s (1s +/- <1s)                      - Progress:		88% (13782) 5000 c/s (1s +/- <1s)                      \ Progress:		89% (13939) 5000 c/s (1s +/- <1s)                      | Progress:		90% (14095) 5000 c/s (1s +/- <1s)                      / Progress:		91% (14252) 5000 c/s (1s +/- <1s)                      - Progress:		92% (14409) 5000 c/s (1s +/- <1s)                      \ Progress:		93% (14565) 5000 c/s (1s +/- <1s)                      | Progress:		94% (14722) 5000 c/s (1s +/- <1s)                      / Progress:		95% (14878) 5000 c/s (1s +/- <1s)                      - Progress:		96% (15035) 5000 c/s (1s +/- <1s)                      \ Progress:		97% (15192) 5000 c/s (1s +/- <1s)                      | Progress:		98% (15348) 5000 c/s (1s +/- <1s)                      / Progress:		99% (15505) 5000 c/s (1s +/- <1s)                      * Time:    		Compressing the database took 0.088806 seconds.		
 * Result:		(37a,36u,682,3978,1275,5254)
 * Creating:			fold 9
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 9
** Writing FIC database to file
 * File:		train10.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		heart-all-9d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		27723
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(38a,0u,1908,8594,497,9091)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (278) ? c/s  		 | Progress:		2% (555) ? c/s  		 / Progress:		3% (832) ? c/s  		 - Progress:		4% (1109) ? c/s  		 \ Progress:		5% (1387) ? c/s  		 | Progress:		6% (1664) ? c/s  		 / Progress:		7% (1941) ? c/s  		 - Progress:		8% (2218) ? c/s  		 \ Progress:		9% (2496) ? c/s  		 | Progress:		10% (2773) ? c/s  		 / Progress:		11% (3050) ? c/s  		 - Progress:		12% (3327) ? c/s  		 \ Progress:		13% (3604) ? c/s  		 | Progress:		14% (3882) ? c/s  		 / Progress:		15% (4159) ? c/s  		 - Progress:		16% (4436) ? c/s  		 \ Progress:		17% (4713) ? c/s  		 | Progress:		18% (4991) ? c/s  		 | Progress:		18% (5000) 5000 c/s (0s +/- 4s)                        / Progress:		19% (5268) 5000 c/s (0s +/- 4s)                        - Progress:		20% (5545) 5000 c/s (0s +/- 4s)                        \ Progress:		21% (5822) 5000 c/s (0s +/- 4s)                        | Progress:		22% (6100) 5000 c/s (0s +/- 4s)                        / Progress:		23% (6377) 5000 c/s (0s +/- 4s)                        - Progress:		24% (6654) 5000 c/s (0s +/- 4s)                        \ Progress:		25% (6931) 5000 c/s (0s +/- 4s)                        | Progress:		26% (7208) 5000 c/s (0s +/- 4s)                        / Progress:		27% (7486) 5000 c/s (0s +/- 4s)                        - Progress:		28% (7763) 5000 c/s (0s +/- 3s)                        \ Progress:		29% (8040) 5000 c/s (0s +/- 3s)                        | Progress:		30% (8317) 5000 c/s (0s +/- 3s)                        / Progress:		31% (8595) 5000 c/s (0s +/- 3s)                        - Progress:		32% (8872) 5000 c/s (0s +/- 3s)                        \ Progress:		33% (9149) 5000 c/s (0s +/- 3s)                        | Progress:		34% (9426) 5000 c/s (0s +/- 3s)                        / Progress:		35% (9704) 5000 c/s (0s +/- 3s)                        - Progress:		36% (9981) 5000 c/s (0s +/- 3s)                        \ Progress:		37% (10258) 5000 c/s (0s +/- 3s)                       | Progress:		38% (10535) 5000 c/s (0s +/- 3s)                       / Progress:		39% (10812) 5000 c/s (0s +/- 3s)                       - Progress:		40% (11090) 5000 c/s (0s +/- 3s)                       \ Progress:		41% (11367) 5000 c/s (0s +/- 3s)                       | Progress:		42% (11644) 5000 c/s (0s +/- 3s)                       / Progress:		43% (11921) 5000 c/s (0s +/- 3s)                       - Progress:		44% (12199) 5000 c/s (0s +/- 3s)                       \ Progress:		45% (12476) 5000 c/s (0s +/- 3s)                       | Progress:		46% (12753) 5000 c/s (0s +/- 2s)                       / Progress:		47% (13030) 5000 c/s (0s +/- 2s)                       - Progress:		48% (13308) 5000 c/s (0s +/- 2s)                       \ Progress:		49% (13585) 5000 c/s (0s +/- 2s)                       | Progress:		50% (13862) 5000 c/s (0s +/- 2s)                       / Progress:		51% (14139) 5000 c/s (0s +/- 2s)                       - Progress:		52% (14416) 5000 c/s (0s +/- 2s)                       \ Progress:		53% (14694) 5000 c/s (0s +/- 2s)                       | Progress:		54% (14971) 5000 c/s (0s +/- 2s)                       / Progress:		55% (15248) 5000 c/s (0s +/- 2s)                       - Progress:		56% (15525) 5000 c/s (0s +/- 2s)                       \ Progress:		57% (15803) 5000 c/s (0s +/- 2s)                       | Progress:		58% (16080) 5000 c/s (0s +/- 2s)                       / Progress:		59% (16357) 5000 c/s (0s +/- 2s)                       - Progress:		60% (16634) 5000 c/s (0s +/- 2s)                       \ Progress:		61% (16912) 5000 c/s (0s +/- 2s)                       | Progress:		62% (17189) 5000 c/s (0s +/- 2s)                       / Progress:		63% (17466) 5000 c/s (0s +/- 2s)                       - Progress:		64% (17743) 5000 c/s (0s +/- 1s)                       \ Progress:		65% (18020) 5000 c/s (0s +/- 1s)                       | Progress:		66% (18298) 5000 c/s (0s +/- 1s)                       / Progress:		67% (18575) 5000 c/s (0s +/- 1s)                       - Progress:		68% (18852) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (19129) 5000 c/s (0s +/- 1s)                       | Progress:		70% (19407) 5000 c/s (0s +/- 1s)                       / Progress:		71% (19684) 5000 c/s (0s +/- 1s)                       - Progress:		72% (19961) 5000 c/s (0s +/- 1s)                       \ Progress:		73% (20238) 5000 c/s (0s +/- 1s)                       | Progress:		74% (20516) 5000 c/s (0s +/- 1s)                       / Progress:		75% (20793) 5000 c/s (0s +/- 1s)                       - Progress:		76% (21070) 5000 c/s (0s +/- 1s)                       \ Progress:		77% (21347) 5000 c/s (0s +/- 1s)                       | Progress:		78% (21624) 5000 c/s (0s +/- 1s)                       / Progress:		79% (21902) 5000 c/s (0s +/- 1s)                       - Progress:		80% (22179) 5000 c/s (0s +/- 1s)                       \ Progress:		81% (22456) 5000 c/s (0s +/- 1s)                       | Progress:		82% (22733) 5000 c/s (0s +/- <1s)                      / Progress:		83% (23011) 5000 c/s (0s +/- <1s)                      - Progress:		84% (23288) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (23565) 5000 c/s (0s +/- <1s)                      | Progress:		86% (23842) 5000 c/s (0s +/- <1s)                      / Progress:		87% (24120) 5000 c/s (0s +/- <1s)                      - Progress:		88% (24397) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (24674) 5000 c/s (0s +/- <1s)                      | Progress:		90% (24951) 5000 c/s (0s +/- <1s)                      / Progress:		91% (25228) 5000 c/s (0s +/- <1s)                      - Progress:		92% (25506) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (25783) 5000 c/s (0s +/- <1s)                      | Progress:		94% (26060) 5000 c/s (0s +/- <1s)                      / Progress:		95% (26337) 5000 c/s (0s +/- <1s)                      - Progress:		96% (26615) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (26892) 5000 c/s (0s +/- <1s)                      | Progress:		98% (27169) 5000 c/s (0s +/- <1s)                      / Progress:		99% (27446) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.091306 seconds.		
 * Result:		(30a,36u,587,3286,1364,4650)
** Writing FIC database to file
 * File:		train16.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		heart-all-9d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		15014
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(45a,0u,1623,7679,600,8279)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (151) ? c/s  		 | Progress:		2% (301) ? c/s  		 / Progress:		3% (451) ? c/s  		 - Progress:		4% (601) ? c/s  		 \ Progress:		5% (751) ? c/s  		 | Progress:		6% (901) ? c/s  		 / Progress:		7% (1051) ? c/s  		 - Progress:		8% (1202) ? c/s  		 \ Progress:		9% (1352) ? c/s  		 | Progress:		10% (1502) ? c/s  		 / Progress:		11% (1652) ? c/s  		 - Progress:		12% (1802) ? c/s  		 \ Progress:		13% (1952) ? c/s  		 | Progress:		14% (2102) ? c/s  		 / Progress:		15% (2253) ? c/s  		 - Progress:		16% (2403) ? c/s  		 \ Progress:		17% (2553) ? c/s  		 | Progress:		18% (2703) ? c/s  		 / Progress:		19% (2853) ? c/s  		 - Progress:		20% (3003) ? c/s  		 \ Progress:		21% (3153) ? c/s  		 | Progress:		22% (3304) ? c/s  		 / Progress:		23% (3454) ? c/s  		 - Progress:		24% (3604) ? c/s  		 \ Progress:		25% (3754) ? c/s  		 | Progress:		26% (3904) ? c/s  		 / Progress:		27% (4054) ? c/s  		 - Progress:		28% (4204) ? c/s  		 \ Progress:		29% (4355) ? c/s  		 | Progress:		30% (4505) ? c/s  		 / Progress:		31% (4655) ? c/s  		 - Progress:		32% (4805) ? c/s  		 \ Progress:		33% (4955) ? c/s  		 \ Progress:		33% (5000) 5000 c/s (0s +/- 2s)                        | Progress:		34% (5105) 5000 c/s (0s +/- 1s)                        / Progress:		35% (5255) 5000 c/s (0s +/- 1s)                        - Progress:		36% (5406) 5000 c/s (0s +/- 1s)                        \ Progress:		37% (5556) 5000 c/s (0s +/- 1s)                        | Progress:		38% (5706) 5000 c/s (0s +/- 1s)                        / Progress:		39% (5856) 5000 c/s (0s +/- 1s)                        - Progress:		40% (6006) 5000 c/s (0s +/- 1s)                        \ Progress:		41% (6156) 5000 c/s (0s +/- 1s)                        | Progress:		42% (6306) 5000 c/s (0s +/- 1s)                        / Progress:		43% (6457) 5000 c/s (0s +/- 1s)                        - Progress:		44% (6607) 5000 c/s (0s +/- 1s)                        \ Progress:		45% (6757) 5000 c/s (0s +/- 1s)                        | Progress:		46% (6907) 5000 c/s (0s +/- 1s)                        / Progress:		47% (7057) 5000 c/s (0s +/- 1s)                        - Progress:		48% (7207) 5000 c/s (0s +/- 1s)                        \ Progress:		49% (7357) 5000 c/s (0s +/- 1s)                        | Progress:		50% (7507) 5000 c/s (0s +/- 1s)                        / Progress:		51% (7658) 5000 c/s (0s +/- 1s)                        - Progress:		52% (7808) 5000 c/s (0s +/- 1s)                        \ Progress:		53% (7958) 5000 c/s (0s +/- 1s)                        | Progress:		54% (8108) 5000 c/s (0s +/- 1s)                        / Progress:		55% (8258) 5000 c/s (0s +/- 1s)                        - Progress:		56% (8408) 5000 c/s (0s +/- 1s)                        \ Progress:		57% (8558) 5000 c/s (0s +/- 1s)                        | Progress:		58% (8709) 5000 c/s (0s +/- 1s)                        / Progress:		59% (8859) 5000 c/s (0s +/- 1s)                        - Progress:		60% (9009) 5000 c/s (0s +/- 1s)                        \ Progress:		61% (9159) 5000 c/s (0s +/- 1s)                        | Progress:		62% (9309) 5000 c/s (0s +/- 1s)                        / Progress:		63% (9459) 5000 c/s (0s +/- 1s)                        - Progress:		64% (9609) 5000 c/s (0s +/- 1s)                        \ Progress:		65% (9760) 5000 c/s (0s +/- 1s)                        | Progress:		66% (9910) 5000 c/s (0s +/- 1s)                        / Progress:		67% (10060) 5000 c/s (0s +/- <1s)                      - Progress:		68% (10210) 5000 c/s (0s +/- <1s)                      \ Progress:		69% (10360) 5000 c/s (0s +/- <1s)                      | Progress:		70% (10510) 5000 c/s (0s +/- <1s)                      / Progress:		71% (10660) 5000 c/s (0s +/- <1s)                      - Progress:		72% (10811) 5000 c/s (0s +/- <1s)                      \ Progress:		73% (10961) 5000 c/s (0s +/- <1s)                      | Progress:		74% (11111) 5000 c/s (0s +/- <1s)                      / Progress:		75% (11261) 5000 c/s (0s +/- <1s)                      - Progress:		76% (11411) 5000 c/s (0s +/- <1s)                      \ Progress:		77% (11561) 5000 c/s (0s +/- <1s)                      | Progress:		78% (11711) 5000 c/s (0s +/- <1s)                      / Progress:		79% (11862) 5000 c/s (0s +/- <1s)                      - Progress:		80% (12012) 5000 c/s (0s +/- <1s)                      \ Progress:		81% (12162) 5000 c/s (0s +/- <1s)                      | Progress:		82% (12312) 5000 c/s (0s +/- <1s)                      / Progress:		83% (12462) 5000 c/s (0s +/- <1s)                      - Progress:		84% (12612) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (12762) 5000 c/s (0s +/- <1s)                      | Progress:		86% (12913) 5000 c/s (0s +/- <1s)                      / Progress:		87% (13063) 5000 c/s (0s +/- <1s)                      - Progress:		88% (13213) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (13363) 5000 c/s (0s +/- <1s)                      | Progress:		90% (13513) 5000 c/s (0s +/- <1s)                      / Progress:		91% (13663) 5000 c/s (0s +/- <1s)                      - Progress:		92% (13813) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (13964) 5000 c/s (0s +/- <1s)                      | Progress:		94% (14114) 5000 c/s (0s +/- <1s)                      / Progress:		95% (14264) 5000 c/s (0s +/- <1s)                      - Progress:		96% (14414) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (14564) 5000 c/s (0s +/- <1s)                      | Progress:		98% (14714) 5000 c/s (0s +/- <1s)                      / Progress:		99% (14864) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.097168 seconds.		
 * Result:		(39a,39u,662,3875,1404,5279)
 * Creating:			fold 10
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 10
** Writing FIC database to file
 * File:		train10.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		heart-all-9d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		29091
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(38a,0u,1908,8551,500,9051)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (291) ? c/s  		 | Progress:		2% (582) ? c/s  		 / Progress:		3% (873) ? c/s  		 - Progress:		4% (1164) ? c/s  		 \ Progress:		5% (1455) ? c/s  		 | Progress:		6% (1746) ? c/s  		 / Progress:		7% (2037) ? c/s  		 - Progress:		8% (2328) ? c/s  		 \ Progress:		9% (2619) ? c/s  		 | Progress:		10% (2910) ? c/s  		 / Progress:		11% (3201) ? c/s  		 - Progress:		12% (3491) ? c/s  		 \ Progress:		13% (3782) ? c/s  		 | Progress:		14% (4073) ? c/s  		 / Progress:		15% (4364) ? c/s  		 - Progress:		16% (4655) ? c/s  		 \ Progress:		17% (4946) ? c/s  		 \ Progress:		17% (5000) 5000 c/s (0s +/- 4s)                        | Progress:		18% (5237) 5000 c/s (0s +/- 4s)                        / Progress:		19% (5528) 5000 c/s (0s +/- 4s)                        - Progress:		20% (5819) 5000 c/s (0s +/- 4s)                        \ Progress:		21% (6110) 5000 c/s (0s +/- 4s)                        | Progress:		22% (6401) 5000 c/s (0s +/- 4s)                        / Progress:		23% (6691) 5000 c/s (0s +/- 4s)                        - Progress:		24% (6982) 5000 c/s (0s +/- 4s)                        \ Progress:		25% (7273) 5000 c/s (0s +/- 4s)                        | Progress:		26% (7564) 5000 c/s (0s +/- 4s)                        / Progress:		27% (7855) 5000 c/s (0s +/- 4s)                        - Progress:		28% (8146) 5000 c/s (0s +/- 4s)                        \ Progress:		29% (8437) 5000 c/s (0s +/- 4s)                        | Progress:		30% (8728) 5000 c/s (0s +/- 4s)                        / Progress:		31% (9019) 5000 c/s (0s +/- 4s)                        - Progress:		32% (9310) 5000 c/s (0s +/- 3s)                        \ Progress:		33% (9601) 5000 c/s (0s +/- 3s)                        | Progress:		34% (9891) 5000 c/s (0s +/- 3s)                        / Progress:		35% (10182) 5000 c/s (0s +/- 3s)                       - Progress:		36% (10473) 5000 c/s (0s +/- 3s)                       \ Progress:		37% (10764) 5000 c/s (0s +/- 3s)                       | Progress:		38% (11055) 5000 c/s (0s +/- 3s)                       / Progress:		39% (11346) 5000 c/s (0s +/- 3s)                       - Progress:		40% (11637) 5000 c/s (0s +/- 3s)                       \ Progress:		41% (11928) 5000 c/s (0s +/- 3s)                       | Progress:		42% (12219) 5000 c/s (0s +/- 3s)                       / Progress:		43% (12510) 5000 c/s (0s +/- 3s)                       - Progress:		44% (12801) 5000 c/s (0s +/- 3s)                       \ Progress:		45% (13091) 5000 c/s (0s +/- 3s)                       | Progress:		46% (13382) 5000 c/s (0s +/- 3s)                       / Progress:		47% (13673) 5000 c/s (0s +/- 3s)                       - Progress:		48% (13964) 5000 c/s (0s +/- 3s)                       \ Progress:		49% (14255) 5000 c/s (0s +/- 2s)                       | Progress:		50% (14546) 5000 c/s (0s +/- 2s)                       / Progress:		51% (14837) 5000 c/s (0s +/- 2s)                       - Progress:		52% (15128) 5000 c/s (0s +/- 2s)                       \ Progress:		53% (15419) 5000 c/s (0s +/- 2s)                       | Progress:		54% (15710) 5000 c/s (0s +/- 2s)                       / Progress:		55% (16001) 5000 c/s (0s +/- 2s)                       - Progress:		56% (16291) 5000 c/s (0s +/- 2s)                       \ Progress:		57% (16582) 5000 c/s (0s +/- 2s)                       | Progress:		58% (16873) 5000 c/s (0s +/- 2s)                       / Progress:		59% (17164) 5000 c/s (0s +/- 2s)                       - Progress:		60% (17455) 5000 c/s (0s +/- 2s)                       \ Progress:		61% (17746) 5000 c/s (0s +/- 2s)                       | Progress:		62% (18037) 5000 c/s (0s +/- 2s)                       / Progress:		63% (18328) 5000 c/s (0s +/- 2s)                       - Progress:		64% (18619) 5000 c/s (0s +/- 2s)                       \ Progress:		65% (18910) 5000 c/s (0s +/- 2s)                       | Progress:		66% (19201) 5000 c/s (0s +/- 1s)                       / Progress:		67% (19491) 5000 c/s (0s +/- 1s)                       - Progress:		68% (19782) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (20073) 5000 c/s (0s +/- 1s)                       | Progress:		70% (20364) 5000 c/s (0s +/- 1s)                       / Progress:		71% (20655) 5000 c/s (0s +/- 1s)                       - Progress:		72% (20946) 5000 c/s (0s +/- 1s)                       \ Progress:		73% (21237) 5000 c/s (0s +/- 1s)                       | Progress:		74% (21528) 5000 c/s (0s +/- 1s)                       / Progress:		75% (21819) 5000 c/s (0s +/- 1s)                       - Progress:		76% (22110) 5000 c/s (0s +/- 1s)                       \ Progress:		77% (22401) 5000 c/s (0s +/- 1s)                       | Progress:		78% (22691) 5000 c/s (0s +/- 1s)                       / Progress:		79% (22982) 5000 c/s (0s +/- 1s)                       - Progress:		80% (23273) 5000 c/s (0s +/- 1s)                       \ Progress:		81% (23564) 5000 c/s (0s +/- 1s)                       | Progress:		82% (23855) 5000 c/s (0s +/- 1s)                       / Progress:		83% (24146) 5000 c/s (0s +/- <1s)                      - Progress:		84% (24437) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (24728) 5000 c/s (0s +/- <1s)                      | Progress:		86% (25019) 5000 c/s (0s +/- <1s)                      / Progress:		87% (25310) 5000 c/s (0s +/- <1s)                      - Progress:		88% (25601) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (25891) 5000 c/s (0s +/- <1s)                      | Progress:		90% (26182) 5000 c/s (0s +/- <1s)                      / Progress:		91% (26473) 5000 c/s (0s +/- <1s)                      - Progress:		92% (26764) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (27055) 5000 c/s (0s +/- <1s)                      | Progress:		94% (27346) 5000 c/s (0s +/- <1s)                      / Progress:		95% (27637) 5000 c/s (0s +/- <1s)                      - Progress:		96% (27928) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (28219) 5000 c/s (0s +/- <1s)                      | Progress:		98% (28510) 5000 c/s (0s +/- <1s)                      / Progress:		99% (28801) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.118670 seconds.		
 * Result:		(29a,38u,601,3297,1390,4687)
** Writing FIC database to file
 * File:		train16.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		heart-all-9d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		16839
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(45a,0u,1715,8102,602,8704)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (169) ? c/s  		 | Progress:		2% (337) ? c/s  		 / Progress:		3% (506) ? c/s  		 - Progress:		4% (674) ? c/s  		 \ Progress:		5% (842) ? c/s  		 | Progress:		6% (1011) ? c/s  		 / Progress:		7% (1179) ? c/s  		 - Progress:		8% (1348) ? c/s  		 \ Progress:		9% (1516) ? c/s  		 | Progress:		10% (1684) ? c/s  		 / Progress:		11% (1853) ? c/s  		 - Progress:		12% (2021) ? c/s  		 \ Progress:		13% (2190) ? c/s  		 | Progress:		14% (2358) ? c/s  		 / Progress:		15% (2526) ? c/s  		 - Progress:		16% (2695) ? c/s  		 \ Progress:		17% (2863) ? c/s  		 | Progress:		18% (3032) ? c/s  		 / Progress:		19% (3200) ? c/s  		 - Progress:		20% (3368) ? c/s  		 \ Progress:		21% (3537) ? c/s  		 | Progress:		22% (3705) ? c/s  		 / Progress:		23% (3873) ? c/s  		 - Progress:		24% (4042) ? c/s  		 \ Progress:		25% (4210) ? c/s  		 | Progress:		26% (4379) ? c/s  		 / Progress:		27% (4547) ? c/s  		 - Progress:		28% (4715) ? c/s  		 \ Progress:		29% (4884) ? c/s  		 \ Progress:		29% (5000) 5000 c/s (0s +/- 2s)                        | Progress:		30% (5052) 5000 c/s (0s +/- 2s)                        / Progress:		31% (5221) 5000 c/s (0s +/- 2s)                        - Progress:		32% (5389) 5000 c/s (0s +/- 2s)                        \ Progress:		33% (5557) 5000 c/s (0s +/- 2s)                        | Progress:		34% (5726) 5000 c/s (0s +/- 2s)                        / Progress:		35% (5894) 5000 c/s (0s +/- 2s)                        - Progress:		36% (6063) 5000 c/s (0s +/- 2s)                        \ Progress:		37% (6231) 5000 c/s (0s +/- 2s)                        | Progress:		38% (6399) 5000 c/s (0s +/- 2s)                        / Progress:		39% (6568) 5000 c/s (0s +/- 2s)                        - Progress:		40% (6736) 5000 c/s (0s +/- 2s)                        \ Progress:		41% (6904) 5000 c/s (0s +/- 1s)                        | Progress:		42% (7073) 5000 c/s (0s +/- 1s)                        / Progress:		43% (7241) 5000 c/s (0s +/- 1s)                        - Progress:		44% (7410) 5000 c/s (0s +/- 1s)                        \ Progress:		45% (7578) 5000 c/s (0s +/- 1s)                        | Progress:		46% (7746) 5000 c/s (0s +/- 1s)                        / Progress:		47% (7915) 5000 c/s (0s +/- 1s)                        - Progress:		48% (8083) 5000 c/s (0s +/- 1s)                        \ Progress:		49% (8252) 5000 c/s (0s +/- 1s)                        | Progress:		50% (8420) 5000 c/s (0s +/- 1s)                        / Progress:		51% (8588) 5000 c/s (0s +/- 1s)                        - Progress:		52% (8757) 5000 c/s (0s +/- 1s)                        \ Progress:		53% (8925) 5000 c/s (0s +/- 1s)                        | Progress:		54% (9094) 5000 c/s (0s +/- 1s)                        / Progress:		55% (9262) 5000 c/s (0s +/- 1s)                        - Progress:		56% (9430) 5000 c/s (0s +/- 1s)                        \ Progress:		57% (9599) 5000 c/s (0s +/- 1s)                        | Progress:		58% (9767) 5000 c/s (0s +/- 1s)                        / Progress:		59% (9936) 5000 c/s (0s +/- 1s)                        - Progress:		60% (10104) 5000 c/s (0s +/- 1s)                       \ Progress:		61% (10272) 5000 c/s (0s +/- 1s)                       | Progress:		62% (10441) 5000 c/s (0s +/- 1s)                       / Progress:		63% (10609) 5000 c/s (0s +/- 1s)                       - Progress:		64% (10777) 5000 c/s (0s +/- 1s)                       \ Progress:		65% (10946) 5000 c/s (0s +/- 1s)                       | Progress:		66% (11114) 5000 c/s (0s +/- 1s)                       / Progress:		67% (11283) 5000 c/s (0s +/- 1s)                       - Progress:		68% (11451) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (11619) 5000 c/s (0s +/- 1s)                       | Progress:		70% (11788) 5000 c/s (0s +/- 1s)                       / Progress:		71% (11956) 5000 c/s (0s +/- <1s)                      - Progress:		72% (12125) 5000 c/s (0s +/- <1s)                      \ Progress:		73% (12293) 5000 c/s (0s +/- <1s)                      | Progress:		74% (12461) 5000 c/s (0s +/- <1s)                      / Progress:		75% (12630) 5000 c/s (0s +/- <1s)                      - Progress:		76% (12798) 5000 c/s (0s +/- <1s)                      \ Progress:		77% (12967) 5000 c/s (0s +/- <1s)                      | Progress:		78% (13135) 5000 c/s (0s +/- <1s)                      / Progress:		79% (13303) 5000 c/s (0s +/- <1s)                      - Progress:		80% (13472) 5000 c/s (0s +/- <1s)                      \ Progress:		81% (13640) 5000 c/s (0s +/- <1s)                      | Progress:		82% (13808) 5000 c/s (0s +/- <1s)                      / Progress:		83% (13977) 5000 c/s (0s +/- <1s)                      - Progress:		84% (14145) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (14314) 5000 c/s (0s +/- <1s)                      | Progress:		86% (14482) 5000 c/s (0s +/- <1s)                      / Progress:		87% (14650) 5000 c/s (0s +/- <1s)                      - Progress:		88% (14819) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (14987) 5000 c/s (0s +/- <1s)                      | Progress:		90% (15156) 5000 c/s (0s +/- <1s)                      / Progress:		91% (15324) 5000 c/s (0s +/- <1s)                      - Progress:		92% (15492) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (15661) 5000 c/s (0s +/- <1s)                      | Progress:		94% (15829) 5000 c/s (0s +/- <1s)                      / Progress:		95% (15998) 5000 c/s (0s +/- <1s)                      - Progress:		96% (16166) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (16334) 5000 c/s (0s +/- <1s)                      | Progress:		98% (16503) 5000 c/s (0s +/- <1s)                      / Progress:		99% (16671) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.095222 seconds.		
 * Result:		(40a,37u,698,4100,1423,5523)

 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/classify/heart-all-9d-pop-cccp-20210117100746/

Task `classify`, command `classifycompress` finished. This took 3 seconds.

 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: 'classify.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Classification ::
 * Processing Fold:	1
Starting classification
 * Classifying ct sup:	9      * Classifying:		done
 * Processing Fold:	2
Starting classification
 * Classifying ct sup:	9      * Classifying:		done
 * Processing Fold:	3
Starting classification
 * Classifying ct sup:	9      * Classifying:		done
 * Processing Fold:	4
Starting classification
 * Classifying ct sup:	9      * Classifying:		done
 * Processing Fold:	5
Starting classification
 * Classifying ct sup:	9      * Classifying:		done
 * Processing Fold:	6
Starting classification
 * Classifying ct sup:	9      * Classifying:		done
 * Processing Fold:	7
Starting classification
 * Classifying ct sup:	9      * Classifying:		done
 * Processing Fold:	8
Starting classification
 * Classifying ct sup:	9      * Classifying:		done
 * Processing Fold:	9
Starting classification
 * Classifying ct sup:	9      * Classifying:		done
 * Processing Fold:	10
Starting classification
 * Classifying ct sup:	9      * Classifying:		done
 * Processing Fold:	1
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	2
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	3
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	4
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	5
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	6
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	7
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	8
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	9
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	10
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done


 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/classify/heart-all-9d-pop-cccp-20210117100746/

Task `classify`, command `classifyanalyse` finished. This took 2 seconds.



Comparing on heart.dat with nb_rows = 303 and minsup = 0.03125
Running	: ./Resources/Krimp/bin/krimp	13afe69e-2b61-4431-84a9-6b0613262b99_convertdb.conf
Running	: ./Resources/Krimp/bin/krimp	d843a38b-1c8a-4af1-a2cc-9923ae097a12_analysedb.conf
Running	: ./Resources/Krimp/bin/krimp	1910555e-873c-43b5-9d39-7baaae94eefd_classifycompress.conf
res_path = /home/arcchitjain/Documents/Mistle/Output/xps/classify/heart-all-9d-pop-cccp-20210117100746
krimp_item_dict = {0: 30, 1: 11, 2: 33, 3: 21, 4: 16, 5: 6, 6: 31, 7: 1, 8: 41, 9: 45, 10: 48, 11: 23, 12: 25, 13: 10, 14: 38, 15: 39, 16: 49, 17: 47, 18: 32, 19: 5, 20: 9, 21: 3, 22: 42, 23: 8, 24: 22, 25: 43, 26: 18, 27: 2, 28: 7, 29: 40, 30: 44, 31: 46, 32: 17, 33: 20, 34: 36, 35: 14, 36: 19, 37: 35, 38: 29, 39: 24, 40: 13, 41: 28, 42: 37, 43: 27, 44: 26, 45: 15, 46: 4}
# of frequent itemsets	: 9748
Time of DCI Closed		: 0.3220958709716797
4  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -42, -7, -39, -34}), frozenset({-31, -26, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34, -33}), frozenset({-32, -31, -24, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -48, -12, -2, -9, -42, -7, -39, -34})}
DL of initial theory	: 19843.614534319506
7743	itemsets left after T operation 	: [frozenset({-31, -22, -12, -7, -34})]
4994	itemsets left after T operation 	: [frozenset({-48, -31, -12, -11})]
3308	itemsets left after T operation 	: [frozenset({-31, -17, -40, -34, -33})]
1673	itemsets left after T operation 	: [frozenset({-24, -22, -17, -12, -40, -7})]
1090	itemsets left after W operation 	: [frozenset({-32, -31, -46, 49, -12, -34}), frozenset({-24, -23, -19, -49, -45, -11, -40, -6, -4}), frozenset({-26, -22, -21, -49, -11, -42, -39, -6, -4}), frozenset({-26, -23, -19, -49, -44, -9, -39, -6, -2}), frozenset({-26, -22, -19, -49, -11, -42, -39, -6, -3}), frozenset({-26, -23, -18, -49, -43, -40, -8, -7, -4})]
577	itemsets left after T operation 	: [frozenset({-26, -18, -48, -7, -34})]
228	itemsets left after T operation 	: [frozenset({-7, -22, -12})]
99	itemsets left after T operation 	: [frozenset({-32, -26, -17, -44, -12, -11})]
60	itemsets left after T operation 	: [frozenset({-31, -11, -6, -2, -33})]
41	itemsets left after T operation 	: [frozenset({-44, -26})]
33	itemsets left after V operation 	: [frozenset({-32, -30, 7, -24, -17, -48, -43, -10, -40, -6, -4, -34}), frozenset({-7, -22, -12})]
# of frequent itemsets	: 9
Time of DCI Closed		: 0.14071226119995117
Initial DL				: 23685.05226144059
Final DL				: 5239.962400080492
Compression (wrt me)	: 0.7787650057833655
Operator Counters		: {'D': 0, 'W': 1, 'V': 1, 'S': 0, 'R': 0, 'T': 9}
Misle Learning Runtime	: 0.8389370441436768

# of frequent itemsets	: 4722
Time of DCI Closed		: 0.23255634307861328
4  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -48, -12, -2, -9, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -7, -39, -34}), frozenset({-31, -26, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34, -33}), frozenset({-32, -31, -24, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34})}
DL of initial theory	: 19843.614534319506
3207	itemsets left after T operation 	: [frozenset({-32, -31, -22, -12, -34})]
1437	itemsets left after W operation 	: [frozenset({-31, 49, -12, -7, -34, -17}), frozenset({-32, -24, -23, -49, -46, -44, -10, -39, -2}), frozenset({-24, -23, -49, -46, -42, -10, -40, -4, -33}), frozenset({-32, -26, -23, -49, -46, -42, -9, -39, -4}), frozenset({-24, -22, -49, -47, -11, -42, -40, -2, -33}), frozenset({-26, -22, -49, -46, -11, -42, -40, -2, -33}), frozenset({-24, -22, -49, -48, -43, -11, -40, -4, -33}), frozenset({-32, -26, -23, -49, -46, -10, -41, -42, -2}), frozenset({-32, -26, -23, -49, -46, -45, -10, -39, -2}), frozenset({-32, -24, -23, -49, -46, -10, -42, -39, -3}), frozenset({-26, -22, -49, -48, -10, -42, -40, -2, -33}), frozenset({-24, -22, -49, -46, -42, -9, -39, -3, -33}), frozenset({-32, -24, -23, -49, -48, -42, -9, -39, -2}), frozenset({-26, -22, -49, -46, -11, -42, -39, -2, -33}), frozenset({-32, -26, -23, -49, -47, -42, -41, -8, -4}), frozenset({-32, -24, -23, -49, -48, -43, -10, -39, -2}), frozenset({-26, -22, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -24, -23, -49, -46, -42, -9, -39, -2}), frozenset({-26, -22, -49, -46, -43, -8, -39, -2, -33}), frozenset({-32, -26, -23, -49, -46, -43, -40, -8, -4}), frozenset({-24, -22, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -26, -23, -49, -46, -10, -42, -39, -2}), frozenset({-24, -22, -49, -46, -10, -42, -40, -2, -33}), frozenset({-24, -22, -49, -46, -10, -42, -39, -2, -33}), frozenset({-24, -22, -49, -48, -42, -8, -39, -2, -33})]
413	itemsets left after T operation 	: [frozenset({-31, -46, -12, -6, -34})]
57	itemsets left after T operation 	: [frozenset({-32, -31, -48, -42, -7})]
15	itemsets left after T operation 	: [frozenset({-32, -42})]
6	itemsets left after V operation 	: [frozenset({-24, -22, -20, 12, -15, -11, -42, -39, -4, -33}), frozenset({-31, -46, -12, -6, -34})]
# of frequent itemsets	: 96
Time of DCI Closed		: 0.1407794952392578
72	itemsets left after T operation 	: [frozenset({-22, -49, -42, -2, -33})]
53	itemsets left after T operation 	: [frozenset({-39, -46, -2, -49})]
38	itemsets left after T operation 	: [frozenset({-24, -22, -42, -39, -33})]
22	itemsets left after V operation 	: [frozenset({-39, -46, -2, -49}), frozenset({-32, -48, -43, -10, -24, -23, 46})]
14	itemsets left after T operation 	: [frozenset({-23, -46, -49})]
11	itemsets left after V operation 	: [frozenset({-23, -46, -49}), frozenset({-39, -2, 23})]
Initial DL				: 23685.05226144059
Final DL				: 4712.254512928491
Compression (wrt me)	: 0.8010452136261456
Operator Counters		: {'D': 0, 'W': 1, 'V': 3, 'S': 0, 'R': 0, 'T': 8}
Misle Learning Runtime	: 0.6226537227630615

# of frequent itemsets	: 9299
Time of DCI Closed		: 0.32555246353149414
4  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -42, -7, -39, -34}), frozenset({-31, -26, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34, -33}), frozenset({-32, -31, -24, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -48, -12, -2, -9, -42, -7, -39, -34})}
DL of initial theory	: 19761.16556484516
7277	itemsets left after T operation 	: [frozenset({-31, -22, -12, -7, -34})]
4546	itemsets left after T operation 	: [frozenset({-31, -12, -11, -17})]
2515	itemsets left after T operation 	: [frozenset({-48, -22, -12, -40})]
1415	itemsets left after W operation 	: [frozenset({-31, 49, -26, -40, -34}), frozenset({-23, -17, -49, -47, -14, -44, -11, -6, -2, -33}), frozenset({-23, -17, -48, -15, -49, -10, -42, -7, -4, -33}), frozenset({-23, -21, -49, -48, -12, -11, -42, -6, -2, -33}), frozenset({-32, -22, -17, -49, -46, -12, -43, -9, -6, -2}), frozenset({-32, -23, -18, -49, -48, -45, -12, -11, -7, -2}), frozenset({-32, -23, -18, -49, -46, -12, -43, -8, -7, -4}), frozenset({-32, -22, -18, -49, -48, -14, -42, -8, -7, -3})]
746	itemsets left after T operation 	: [frozenset({-32, -17, -12, -40, -7})]
519	itemsets left after T operation 	: [frozenset({-23, -11, -2, -33})]
223	itemsets left after T operation 	: [frozenset({-31, -22, -3, -42})]
161	itemsets left after W operation 	: [frozenset({-32, -7, 50, -12}), frozenset({-23, -50, -18, -49, -46, -43, -8, -4}), frozenset({-31, -25, -22, -19, -50, -47, -45, -11, -41, -37, -2}), frozenset({-23, -50, -18, -48, -49, -45, -11, -2}), frozenset({-40, -50, -17})]
51	itemsets left after T operation 	: [frozenset({-26, -22, -43, -7, -34})]
40	itemsets left after T operation 	: [frozenset({-23, -11, -2})]
30	itemsets left after V operation 	: [frozenset({-31, -25, -22, -19, -50, -47, -45, 23, -41, -37}), frozenset({-23, -11, -2})]
28	itemsets left after V operation 	: [frozenset({-32, -31, -26, 11, -19, -46, -12, -44, -9, -39, -6, -34}), frozenset({-23, -11, -2})]
# of frequent itemsets	: 6
Time of DCI Closed		: 0.14009475708007812
Initial DL				: 23691.096655559944
Final DL				: 6050.48260145316
Compression (wrt me)	: 0.7446094332643228
Operator Counters		: {'D': 0, 'W': 2, 'V': 2, 'S': 0, 'R': 0, 'T': 8}
Misle Learning Runtime	: 0.8303232192993164

# of frequent itemsets	: 5807
Time of DCI Closed		: 0.2504689693450928
4  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -48, -12, -2, -9, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -7, -39, -34}), frozenset({-31, -26, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34, -33}), frozenset({-32, -31, -24, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34})}
DL of initial theory	: 19761.16556484516
4793	itemsets left after T operation 	: [frozenset({-32, -31, -22, -46, -12, -34})]
2284	itemsets left after W operation 	: [frozenset({-31, 49, -12, -7, -34, -17}), frozenset({-32, -24, -23, -49, -46, -44, -10, -39, -2}), frozenset({-24, -23, -49, -46, -42, -10, -40, -4, -33}), frozenset({-32, -26, -23, -49, -46, -42, -9, -39, -4}), frozenset({-24, -22, -49, -48, -43, -11, -40, -4, -33}), frozenset({-32, -26, -22, -49, -48, -10, -42, -39, -2}), frozenset({-32, -26, -23, -49, -46, -10, -41, -42, -2}), frozenset({-32, -26, -23, -49, -46, -45, -10, -39, -2}), frozenset({-32, -24, -23, -49, -46, -10, -42, -39, -3}), frozenset({-32, -24, -22, -49, -48, -11, -42, -40, -3}), frozenset({-32, -24, -22, -49, -48, -42, -9, -39, -2}), frozenset({-32, -26, -22, -49, -48, -42, -40, -8, -2}), frozenset({-26, -22, -49, -48, -10, -42, -40, -2, -33}), frozenset({-24, -22, -49, -46, -42, -9, -39, -3, -33}), frozenset({-32, -24, -23, -49, -48, -42, -9, -39, -2}), frozenset({-26, -22, -49, -46, -11, -42, -39, -2, -33}), frozenset({-32, -24, -22, -49, -47, -42, -9, -40, -2}), frozenset({-32, -26, -22, -49, -47, -11, -42, -39, -4}), frozenset({-26, -22, -49, -46, -42, -40, -8, -4, -33}), frozenset({-32, -24, -23, -49, -48, -43, -10, -39, -2}), frozenset({-32, -26, -22, -49, -48, -10, -42, -40, -2}), frozenset({-26, -22, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -24, -23, -49, -46, -42, -9, -39, -2}), frozenset({-32, -24, -23, -49, -48, -45, -11, -39, -2}), frozenset({-26, -22, -49, -46, -43, -8, -39, -2, -33}), frozenset({-32, -24, -23, -49, -48, -10, -41, -42, -2}), frozenset({-32, -24, -22, -49, -48, -11, -42, -39, -2}), frozenset({-32, -26, -23, -49, -46, -43, -40, -8, -4}), frozenset({-24, -22, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -24, -22, -49, -48, -11, -42, -39, -4}), frozenset({-32, -26, -23, -49, -46, -10, -42, -40, -2}), frozenset({-32, -26, -23, -49, -46, -10, -42, -39, -2}), frozenset({-32, -24, -22, -49, -48, -45, -10, -40, -4}), frozenset({-24, -22, -49, -46, -10, -42, -40, -2, -33}), frozenset({-24, -22, -49, -46, -10, -42, -39, -2, -33}), frozenset({-32, -26, -22, -49, -47, -42, -40, -8, -2}), frozenset({-24, -22, -49, -48, -43, -10, -39, -2, -33}), frozenset({-24, -22, -49, -48, -42, -8, -39, -2, -33})]
1167	itemsets left after T operation 	: [frozenset({-31, -46, -12, -6, -34})]
404	itemsets left after T operation 	: [frozenset({-24, -32, -42})]
37	itemsets left after T operation 	: [frozenset({-32, -42})]
26	itemsets left after T operation 	: [frozenset({-24, -46, -42})]
17	itemsets left after V operation 	: [frozenset({-32, -22, 6}), frozenset({-31, -46, -12, -6, -34})]
12	itemsets left after T operation 	: [frozenset({-46, -42})]
# of frequent itemsets	: 41
Time of DCI Closed		: 0.15501761436462402
36	itemsets left after T operation 	: [frozenset({-22, -49, -39, -2, -33})]
23	itemsets left after T operation 	: [frozenset({-32, -23, -49, -39, -2})]
16	itemsets left after V operation 	: [frozenset({-33, -39, -22, -2, -49}), frozenset({-48, -40, 39, -26, -42, -10})]
Initial DL				: 23691.096655559944
Final DL				: 3209.6190229694926
Compression (wrt me)	: 0.8645221422362378
Operator Counters		: {'D': 0, 'W': 1, 'V': 2, 'S': 0, 'R': 0, 'T': 8}
Misle Learning Runtime	: 0.751410722732544

# of frequent itemsets	: 10327
Time of DCI Closed		: 0.3286557197570801
4  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -42, -7, -39, -34}), frozenset({-31, -26, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34, -33}), frozenset({-32, -31, -24, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -48, -12, -2, -9, -42, -7, -39, -34})}
DL of initial theory	: 20020.852198938122
7921	itemsets left after W operation 	: [frozenset({-31, 49, -12, -7, -22, -34}), frozenset({-32, -24, -17, -48, -49, -44, -11, -39, -2}), frozenset({-26, -17, -48, -49, -11, -43, -40, -2, -33}), frozenset({-32, -24, -17, -48, -49, -11, -42, -40, -2}), frozenset({-26, -18, -49, -48, -11, -42, -39, -2, -33}), frozenset({-26, -19, -49, -48, -45, -11, -40, -2, -33}), frozenset({-26, -17, -48, -49, -44, -11, -40, -4, -33}), frozenset({-24, -17, -49, -47, -11, -42, -41, -2, -33}), frozenset({-32, -26, -17, -48, -49, -10, -42, -40, -4}), frozenset({-32, -24, -17, -48, -49, -42, -40, -8, -2}), frozenset({-32, -24, -17, -48, -49, -43, -10, -40, -2}), frozenset({-26, -17, -48, -49, -11, -43, -39, -4, -33}), frozenset({-26, -17, -49, -46, -11, -43, -39, -4, -33}), frozenset({-32, -26, -19, -49, -48, -44, -11, -39, -2}), frozenset({-26, -17, -48, -49, -43, -11, -40, -3, -33}), frozenset({-26, -18, -49, -48, -44, -11, -40, -3, -33}), frozenset({-26, -17, -49, -46, -11, -43, -40, -2, -33}), frozenset({-32, -24, -17, -49, -46, -11, -43, -39, -2}), frozenset({-26, -17, -49, -47, -11, -43, -40, -2, -33}), frozenset({-24, -17, -48, -49, -11, -42, -41, -4, -33}), frozenset({-26, -19, -49, -46, -45, -11, -39, -5, -33}), frozenset({-32, -24, -17, -48, -49, -11, -43, -39, -4}), frozenset({-24, -19, -49, -47, -11, -42, -40, -2, -33}), frozenset({-32, -26, -17, -48, -49, -11, -42, -40, -2}), frozenset({-26, -19, -49, -46, -44, -11, -40, -4, -33}), frozenset({-32, -24, -17, -49, -46, -44, -8, -39, -3}), frozenset({-32, -26, -17, -49, -46, -11, -43, -39, -2}), frozenset({-32, -26, -18, -49, -46, -42, -9, -40, -2}), frozenset({-32, -26, -17, -48, -49, -45, -10, -40, -4}), frozenset({-32, -24, -17, -48, -49, -41, -42, -9, -2}), frozenset({-32, -24, -17, -48, -49, -42, -9, -39, -2}), frozenset({-32, -26, -17, -49, -46, -42, -8, -39, -3}), frozenset({-32, -24, -17, -48, -49, -11, -43, -40, -2}), frozenset({-32, -26, -19, -49, -46, -11, -43, -39, -2}), frozenset({-24, -17, -48, -49, -11, -43, -40, -2, -33}), frozenset({-24, -17, -48, -49, -43, -11, -39, -3, -33}), frozenset({-32, -24, -17, -49, -46, -10, -42, -39, -2}), frozenset({-32, -26, -17, -49, -47, -44, -11, -39, -4}), frozenset({-32, -26, -17, -48, -49, -43, -10, -40, -2}), frozenset({-26, -17, -48, -49, -11, -42, -39, -2, -33}), frozenset({-24, -17, -48, -49, -11, -43, -39, -2, -33}), frozenset({-26, -18, -49, -46, -45, -11, -40, -4, -33}), frozenset({-32, -26, -20, -49, -46, -45, -11, -40, -4}), frozenset({-24, -17, -48, -49, -11, -42, -40, -2, -33}), frozenset({-24, -19, -49, -48, -11, -42, -39, -2, -33}), frozenset({-24, -19, -49, -48, -42, -10, -40, -4, -33}), frozenset({-24, -19, -49, -48, -44, -11, -40, -2, -33}), frozenset({-26, -17, -48, -49, -44, -11, -40, -3, -33}), frozenset({-26, -17, -48, -49, -44, -11, -40, -2, -33}), frozenset({-32, -24, -17, -48, -49, -11, -42, -39, -2}), frozenset({-26, -17, -48, -49, -11, -42, -40, -2, -33}), frozenset({-32, -26, -17, -48, -49, -11, -43, -40, -4}), frozenset({-32, -26, -17, -49, -46, -45, -10, -39, -2}), frozenset({-32, -24, -21, -49, -46, -10, -42, -39, -4}), frozenset({-32, -26, -19, -49, -48, -44, -11, -40, -3}), frozenset({-32, -26, -17, -48, -49, -11, -42, -39, -2}), frozenset({-24, -21, -49, -48, -11, -43, -40, -2, -33}), frozenset({-32, -26, -17, -49, -47, -44, -11, -40, -4}), frozenset({-26, -18, -49, -46, -44, -11, -40, -2, -33})]
5685	itemsets left after T operation 	: [frozenset({-48, -11, -33})]
2475	itemsets left after W operation 	: [frozenset({-31, 50, -12, -40, -17}), frozenset({-32, -24, -23, -4, -50, -48, -44, -11, -7, -36}), frozenset({-32, -24, -22, -50, -46, -10, -42, -7, -37, -2}), frozenset({-32, -24, -23, -50, -47, -43, -10, -7, -3, -34}), frozenset({-32, -26, -22, -50, -48, -45, -11, -6, -4, -34}), frozenset({-24, -22, -50, -46, -44, -11, -6, -4, -34, -33}), frozenset({-32, -24, -23, -50, -48, -44, -11, -7, -4, -34}), frozenset({-32, -26, -22, -50, -48, -44, -11, -6, -3, -34}), frozenset({-26, -23, -50, -47, -43, -10, -2, -7, -34, -33}), frozenset({-26, -22, -50, -46, -43, -11, -7, -37, -4, -33}), frozenset({-24, -22, -50, -48, -42, -8, -7, -37, -2, -33}), frozenset({-26, -23, -50, -46, -11, -43, -2, -7, -34, -33}), frozenset({-24, -22, -50, -46, -11, -42, -6, -4, -34, -33}), frozenset({-24, -23, -50, -11, -42, -2, -7, -34, -33}), frozenset({-32, -26, -22, -50, -46, -43, -2, -9, -6, -34})]
1256	itemsets left after T operation 	: [frozenset({-11, -26})]
781	itemsets left after T operation 	: [frozenset({-32, -40, -48})]
546	itemsets left after W operation 	: [frozenset({-24, 51, -42}), frozenset({-32, -27, -22, -51, -17, -46, -12, -11, -40, -7, -4, -34}), frozenset({-31, -22, -51, -17, -15, -46, -11, -40, -6, -3, -34, -33}), frozenset({-51, -17, -49, -47, -11, -41, -2, -33}), frozenset({-51, -19, -49, -47, -11, -40, -2, -33}), frozenset({-32, -51, -17, -48, -49, -9, -41, -2}), frozenset({-32, -51, -17, -48, -49, -9, -39, -2}), frozenset({-32, -51, -17, -49, -46, -10, -39, -2}), frozenset({-51, -19, -49, -48, -10, -40, -4, -33}), frozenset({-32, -51, -17, -48, -49, -11, -39, -2}), frozenset({-32, -21, -51, -49, -46, -10, -39, -4}), frozenset({-32, -22, -51, -50, -46, -10, -7, -37, -2}), frozenset({-22, -51, -50, -48, -8, -7, -37, -2, -33}), frozenset({-22, -51, -50, -46, -11, -6, -4, -34, -33}), frozenset({-23, -51, -50, -11, -2, -7, -34, -33})]
245	itemsets left after W operation 	: [frozenset({-32, -46, -12, 52, -40, -4, -34}), frozenset({-31, -24, -23, -52, -19, -45, -11, -6}), frozenset({-31, -26, -23, -52, -18, -43, -8, -7}), frozenset({-27, -11, -7, -22, -52, -51, -17})]
124	itemsets left after T operation 	: [frozenset({-46, -22, -11, -33})]
113	itemsets left after W operation 	: [frozenset({53, -2, -17}), frozenset({-32, -24, -53, -49, -48, -44, -11, -39}), frozenset({-32, -24, -53, -49, -46, -11, -43, -39}), frozenset({-32, -26, -53, -49, -46, -45, -10, -39}), frozenset({-47, -11, -41, -49, -53, -51, -33}), frozenset({-32, -48, -41, -9, -53, -51, -49}), frozenset({-32, -48, -9, -39, -53, -51, -49}), frozenset({-32, -46, -10, -39, -53, -51, -49}), frozenset({-32, -48, -11, -39, -53, -51, -49})]
59	itemsets left after T operation 	: [frozenset({-23, -7, -34, -33})]
54	itemsets left after V operation 	: [frozenset({-24, 40, -17, -49, -43, -11, -39, -4}), frozenset({-32, -40, -48}), frozenset({-44, -11, -24, -39, 40, -53, -49}), frozenset({-9, -41, 40, -53, -51, -49}), frozenset({-9, 40, -39, -53, -51, -49}), frozenset({-11, 40, -39, -53, -51, -49})]
45	itemsets left after T operation 	: [frozenset({-11, -33})]
40	itemsets left after V operation 	: [frozenset({-23, -7, -34, -33}), frozenset({-32, 33, -24, -50, -47, -43, -10, -3})]
24	itemsets left after V operation 	: [frozenset({-26, -18, -49, 48, -46, -42, -9, -2}), frozenset({48, -46, -12, 52, -4, -34}), frozenset({-32, -48, -40})]
11	itemsets left after V operation 	: [frozenset({-51, 32, -10, -33, -4, -19, -49}), frozenset({-48, -32, -40})]
# of frequent itemsets	: 80
Time of DCI Closed		: 0.16341233253479004
68	itemsets left after W operation 	: [frozenset({-32, -46, 54, -39, -49}), frozenset({-44, -24, -8, -54, -3, -17}), frozenset({-26, -42, -8, -54, -3, -17}), frozenset({-10, -54, -21, -4, -51}), frozenset({-43, -11, -24, -54, -53}), frozenset({-45, -26, -10, -54, -53}), frozenset({-54, -53, -51, -10})]
61	itemsets left after W operation 	: [frozenset({-46, -9, -26, 55, -2}), frozenset({-32, -31, -23, -55, -19, -12, -44, -39, -6, -34}), frozenset({-32, -22, -43, -50, -55, -6, -34}), frozenset({48, -42, -55, -18, -49})]
52	itemsets left after T operation 	: [frozenset({40, -53, -51, -49})]
41	itemsets left after V operation 	: [frozenset({51, -44, -11, -24, -39}), frozenset({40, -53, -51, -49})]
24	itemsets left after V operation 	: [frozenset({-11, -26}), frozenset({-31, -6, -24, -23, -52, -19, -45, 26}), frozenset({26, -27, -7, -22, -52, -51, -17}), frozenset({-24, 40, -49, -17, -43, -39, 26, -4}), frozenset({26, -33}), frozenset({26, -43, -24, -54, -53}), frozenset({51, -44, -24, -39, 26})]
Initial DL				: 23685.05226144059
Final DL				: 3775.4204676630407
Compression (wrt me)	: 0.840599023131165
Operator Counters		: {'D': 0, 'W': 7, 'V': 6, 'S': 0, 'R': 0, 'T': 7}
Misle Learning Runtime	: 1.3341662883758545

# of frequent itemsets	: 5805
Time of DCI Closed		: 0.2575962543487549
4  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -48, -12, -2, -9, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -7, -39, -34}), frozenset({-31, -26, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34, -33}), frozenset({-32, -31, -24, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34})}
DL of initial theory	: 20020.852198938122
3987	itemsets left after T operation 	: [frozenset({-32, -31, -22, -12, -34})]
1957	itemsets left after W operation 	: [frozenset({-31, 49, -12, -7, -34, -17}), frozenset({-32, -24, -23, -49, -46, -44, -10, -39, -2}), frozenset({-24, -23, -49, -46, -42, -10, -40, -4, -33}), frozenset({-24, -22, -49, -47, -11, -42, -40, -2, -33}), frozenset({-26, -22, -49, -46, -11, -42, -40, -2, -33}), frozenset({-24, -22, -49, -48, -43, -11, -40, -4, -33}), frozenset({-32, -26, -23, -49, -46, -10, -41, -42, -2}), frozenset({-32, -26, -23, -49, -46, -45, -10, -39, -2}), frozenset({-32, -24, -23, -49, -46, -10, -42, -39, -3}), frozenset({-26, -22, -49, -48, -10, -42, -40, -2, -33}), frozenset({-24, -22, -49, -46, -42, -9, -39, -3, -33}), frozenset({-32, -24, -23, -49, -48, -42, -9, -39, -2}), frozenset({-26, -22, -49, -46, -11, -42, -39, -2, -33}), frozenset({-32, -26, -23, -49, -47, -42, -41, -8, -4}), frozenset({-26, -22, -49, -46, -42, -40, -8, -4, -33}), frozenset({-32, -24, -23, -49, -48, -43, -10, -39, -2}), frozenset({-26, -22, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -24, -23, -49, -48, -45, -11, -39, -2}), frozenset({-26, -22, -49, -46, -43, -8, -39, -2, -33}), frozenset({-32, -24, -23, -49, -48, -10, -41, -42, -2}), frozenset({-32, -26, -23, -49, -46, -43, -40, -8, -4}), frozenset({-24, -22, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -26, -23, -49, -46, -10, -42, -40, -2}), frozenset({-24, -22, -49, -46, -10, -42, -40, -2, -33}), frozenset({-24, -22, -49, -46, -10, -42, -39, -2, -33}), frozenset({-24, -22, -49, -48, -43, -10, -39, -2, -33}), frozenset({-24, -22, -49, -48, -42, -8, -39, -2, -33})]
685	itemsets left after T operation 	: [frozenset({-31, -46, -12, -6, -34})]
328	itemsets left after T operation 	: [frozenset({-24, -46, -42})]
24	itemsets left after T operation 	: [frozenset({-32, -31, -48, -42, -7})]
20	itemsets left after T operation 	: [frozenset({-46, -42})]
8	itemsets left after T operation 	: [frozenset({-32, -42})]
# of frequent itemsets	: 40
Time of DCI Closed		: 0.13976716995239258
27	itemsets left after W operation 	: [frozenset({50, -33, -22, -2, -49}), frozenset({-47, -11, -42, -40, -24, -50}), frozenset({-48, -26, -42, -40, -10, -50}), frozenset({-48, -11, -26, -42, -39, -50}), frozenset({-46, -43, -26, -8, -39, -50}), frozenset({-48, -11, -42, -24, -39, -50}), frozenset({-48, -43, -10, -24, -39, -50}), frozenset({-48, -42, -24, -8, -39, -50})]
10	itemsets left after T operation 	: [frozenset({-32, -23, -49, -39, -2})]
Initial DL				: 23685.05226144059
Final DL				: 4590.807664077279
Compression (wrt me)	: 0.806172787232936
Operator Counters		: {'D': 0, 'W': 2, 'V': 0, 'S': 0, 'R': 0, 'T': 7}
Misle Learning Runtime	: 0.6915123462677002

# of frequent itemsets	: 9847
Time of DCI Closed		: 0.4228348731994629
2  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-31, -26, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34, -33}), frozenset({-32, -31, -24, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34})}
DL of initial theory	: 20198.089700321947
7441	itemsets left after W operation 	: [frozenset({-31, 49, -12, -7, -22, -34}), frozenset({-32, -24, -17, -48, -49, -44, -11, -39, -2}), frozenset({-26, -17, -48, -49, -11, -43, -40, -2, -33}), frozenset({-26, -18, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -26, -17, -49, -46, -10, -42, -40, -3}), frozenset({-26, -17, -48, -49, -44, -11, -40, -4, -33}), frozenset({-24, -17, -49, -47, -11, -42, -41, -2, -33}), frozenset({-32, -26, -17, -48, -49, -10, -42, -40, -4}), frozenset({-32, -24, -17, -48, -49, -43, -10, -40, -2}), frozenset({-24, -17, -48, -49, -43, -10, -40, -4, -33}), frozenset({-26, -17, -48, -49, -11, -43, -39, -4, -33}), frozenset({-26, -17, -49, -46, -11, -43, -39, -4, -33}), frozenset({-32, -26, -17, -49, -46, -43, -9, -39, -2}), frozenset({-32, -26, -19, -49, -48, -44, -11, -39, -2}), frozenset({-26, -17, -48, -49, -43, -11, -40, -3, -33}), frozenset({-26, -18, -49, -48, -44, -11, -40, -3, -33}), frozenset({-26, -17, -49, -46, -11, -43, -40, -2, -33}), frozenset({-32, -24, -17, -49, -46, -11, -43, -39, -2}), frozenset({-26, -17, -49, -47, -11, -43, -40, -2, -33}), frozenset({-24, -17, -48, -49, -11, -42, -41, -4, -33}), frozenset({-26, -19, -49, -46, -45, -11, -39, -5, -33}), frozenset({-32, -24, -17, -48, -49, -11, -43, -39, -4}), frozenset({-24, -19, -49, -47, -11, -42, -40, -2, -33}), frozenset({-32, -26, -17, -48, -49, -11, -42, -40, -2}), frozenset({-26, -19, -49, -46, -44, -11, -40, -4, -33}), frozenset({-32, -24, -17, -49, -46, -44, -8, -39, -3}), frozenset({-32, -26, -17, -49, -46, -11, -43, -39, -2}), frozenset({-32, -26, -18, -49, -46, -42, -9, -40, -2}), frozenset({-32, -26, -17, -48, -49, -45, -10, -40, -4}), frozenset({-32, -24, -17, -48, -49, -41, -42, -9, -2}), frozenset({-32, -24, -17, -48, -49, -42, -9, -39, -2}), frozenset({-32, -26, -17, -49, -46, -42, -8, -39, -3}), frozenset({-26, -18, -49, -48, -11, -43, -40, -2, -33}), frozenset({-32, -24, -17, -48, -49, -11, -43, -40, -2}), frozenset({-24, -17, -49, -47, -45, -9, -40, -4, -33}), frozenset({-24, -17, -48, -49, -11, -43, -40, -2, -33}), frozenset({-24, -17, -48, -49, -43, -11, -39, -3, -33}), frozenset({-32, -26, -17, -49, -47, -44, -11, -39, -4}), frozenset({-26, -17, -48, -49, -45, -11, -40, -2, -33}), frozenset({-32, -26, -17, -48, -49, -43, -10, -40, -2}), frozenset({-26, -17, -48, -49, -11, -42, -39, -2, -33}), frozenset({-24, -17, -48, -49, -11, -43, -39, -2, -33}), frozenset({-26, -18, -49, -46, -45, -11, -40, -4, -33}), frozenset({-24, -19, -49, -48, -11, -42, -39, -2, -33}), frozenset({-24, -19, -49, -48, -42, -10, -40, -4, -33}), frozenset({-24, -19, -49, -48, -44, -11, -40, -2, -33}), frozenset({-26, -17, -48, -49, -44, -11, -40, -3, -33}), frozenset({-26, -17, -48, -49, -44, -11, -40, -2, -33}), frozenset({-32, -24, -17, -48, -49, -11, -42, -39, -2}), frozenset({-32, -24, -17, -48, -49, -11, -43, -39, -2}), frozenset({-26, -17, -48, -49, -11, -42, -40, -2, -33}), frozenset({-32, -26, -17, -48, -49, -11, -43, -40, -4}), frozenset({-32, -26, -17, -48, -49, -44, -10, -39, -2}), frozenset({-32, -24, -21, -49, -46, -10, -42, -39, -4}), frozenset({-32, -26, -19, -49, -48, -44, -11, -40, -3}), frozenset({-32, -26, -17, -48, -49, -11, -42, -39, -2}), frozenset({-32, -24, -17, -48, -49, -45, -10, -40, -2}), frozenset({-24, -21, -49, -48, -11, -43, -40, -2, -33}), frozenset({-32, -24, -17, -49, -46, -44, -40, -8, -4}), frozenset({-32, -26, -17, -49, -47, -44, -11, -40, -4}), frozenset({-26, -18, -49, -46, -44, -11, -40, -2, -33})]
5096	itemsets left after T operation 	: [frozenset({-48, -11, -33})]
4259	itemsets left after T operation 	: [frozenset({-32, -31, -26, -22, -12, -11, -6})]
1934	itemsets left after W operation 	: [frozenset({-40, 50, -17}), frozenset({-32, -31, -24, -23, -4, -50, -48, -12, -11, -44, -7, -36}), frozenset({-32, -31, -24, -22, -50, -46, -12, -10, -42, -7, -37, -2}), frozenset({-31, -24, -22, -50, -46, -12, -11, -44, -6, -4, -34, -33}), frozenset({-32, -31, -24, -23, -50, -48, -12, -11, -44, -7, -4, -34}), frozenset({-31, -26, -23, -50, -47, -14, -44, -11, -2, -6, -34, -33}), frozenset({-31, -26, -23, -50, -47, -12, -43, -10, -2, -7, -34, -33}), frozenset({-31, -26, -22, -50, -46, -12, -11, -43, -7, -37, -4, -33}), frozenset({-31, -26, -23, -50, -48, -15, -10, -42, -7, -4, -34, -33}), frozenset({-32, -30, -24, -22, -50, -48, -12, -43, -10, -6, -4, -34}), frozenset({-31, -24, -22, -50, -46, -12, -11, -42, -6, -4, -34, -33}), frozenset({-32, -27, -24, -22, -50, -46, -12, -11, -42, -7, -4, -34}), frozenset({-31, -24, -23, -50, -12, -11, -42, -2, -7, -34, -33}), frozenset({-32, -31, -26, -22, -50, -46, -12, -43, -2, -9, -6, -34}), frozenset({-32, -28, -26, -23, -50, -47, -12, -11, -44, -7, -3, -34}), frozenset({-32, -31, -24, -23, -50, -47, -12, -43, -10, -7, -3, -34}), frozenset({-32, -26, -50, -49, -46, -10, -42, -3}), frozenset({-32, -26, -50, -49, -48, -10, -42, -4}), frozenset({-32, -24, -50, -49, -48, -43, -10, -2}), frozenset({-24, -50, -49, -48, -43, -10, -4, -33}), frozenset({-26, -50, -49, -46, -43, -11, -2, -33}), frozenset({-26, -50, -49, -47, -43, -11, -2, -33}), frozenset({-32, -26, -50, -49, -48, -11, -42, -2}), frozenset({-32, -26, -50, -49, -48, -45, -10, -4}), frozenset({-32, -24, -50, -49, -48, -11, -43, -2}), frozenset({-24, -50, -49, -47, -45, -9, -4, -33}), frozenset({-32, -26, -50, -49, -48, -43, -10, -2}), frozenset({-32, -26, -50, -49, -48, -11, -43, -4}), frozenset({-32, -24, -50, -49, -48, -45, -10, -2}), frozenset({-32, -24, -50, -49, -46, -44, -8, -4}), frozenset({-32, -26, -50, -49, -47, -44, -11, -4})]
1471	itemsets left after W operation 	: [frozenset({-32, 51, -26}), frozenset({-31, -23, -19, -51, -46, -12, -44, -2, -9, -39, -6, -34}), frozenset({-30, -22, -51, -18, -48, -12, -43, -9, -40, -7, -4, -34}), frozenset({-31, -23, -51, -18, -46, -12, -43, -40, -8, -7, -4, -34}), frozenset({-31, -22, -51, -18, -48, -15, -43, -2, -9, -7, -39, -34}), frozenset({-31, -22, -51, -18, -48, -14, -42, -40, -8, -7, -3, -34}), frozenset({-51, -17, -49, -46, -43, -9, -39, -2}), frozenset({-51, -19, -49, -48, -44, -11, -39, -2}), frozenset({-51, -17, -49, -46, -43, -11, -39, -2}), frozenset({-51, -18, -49, -46, -42, -9, -40, -2}), frozenset({-51, -17, -49, -46, -42, -8, -39, -3}), frozenset({-51, -17, -49, -47, -44, -11, -39, -4}), frozenset({-51, -17, -48, -49, -44, -10, -39, -2}), frozenset({-51, -19, -49, -48, -44, -11, -40, -3}), frozenset({-51, -17, -48, -49, -11, -42, -39, -2}), frozenset({-31, -22, -12, -11, -6, -51}), frozenset({-31, -22, -51, -50, -46, -12, -43, -2, -9, -6, -34}), frozenset({-28, -23, -51, -50, -47, -12, -11, -44, -7, -3, -34}), frozenset({-3, -46, -10, -42, -51, -50, -49}), frozenset({-48, -10, -42, -4, -51, -50, -49}), frozenset({-48, -11, -42, -50, -51, -2, -49}), frozenset({-48, -45, -10, -4, -51, -50, -49}), frozenset({-48, -43, -10, -50, -51, -2, -49}), frozenset({-48, -43, -11, -4, -51, -50, -49}), frozenset({-47, -44, -11, -4, -51, -50, -49})]
754	itemsets left after W operation 	: [frozenset({-31, -12, -34, 52}), frozenset({-32, -24, -23, -52, -19, -46, -45, -11, -40, -6, -4}), frozenset({-24, -22, -52, -50, -46, -11, -42, -6, -4, -33}), frozenset({-24, -23, -52, -50, -11, -42, -7, -2, -33}), frozenset({49, -22, -52, -7}), frozenset({-32, -24, -23, -52, -50, -47, -43, -10, -7, -3}), frozenset({-23, -52, -51, -19, -46, -44, -9, -39, -6, -2}), frozenset({-23, -52, -51, -18, -46, -43, -40, -8, -7, -4}), frozenset({-22, -52, -51, -50, -46, -43, -9, -6, -2}), frozenset({-24, -22, -52, -50, -46, -44, -11, -6, -4, -33}), frozenset({-32, -24, -23, -52, -50, -48, -44, -11, -7, -4}), frozenset({-26, -23, -52, -50, -47, -43, -10, -7, -2, -33})]
481	itemsets left after T operation 	: [frozenset({-11, -26, -33})]
380	itemsets left after W operation 	: [frozenset({-24, 53, -11}), frozenset({-32, -53, -17, -48, -49, -44, -39, -2}), frozenset({-53, -17, -49, -47, -42, -41, -2, -33}), frozenset({-32, -53, -17, -49, -46, -43, -39, -2}), frozenset({-32, -53, -17, -48, -49, -43, -39, -4}), frozenset({-53, -19, -49, -47, -42, -40, -2, -33}), frozenset({-32, -53, -17, -48, -49, -42, -39, -2}), frozenset({-32, -53, -17, -48, -49, -43, -39, -2}), frozenset({-32, -31, -23, -53, -4, -50, -48, -12, -44, -7, -36}), frozenset({-32, -23, -53, -52, -19, -46, -45, -40, -6, -4}), frozenset({-22, -53, -52, -50, -46, -42, -6, -4, -33}), frozenset({-32, -27, -22, -53, -50, -46, -12, -42, -7, -4, -34}), frozenset({-23, -53, -52, -50, -42, -7, -2, -33}), frozenset({-32, -48, -43, -50, -53, -2, -49}), frozenset({-22, -53, -52, -50, -46, -44, -6, -4, -33}), frozenset({-32, -23, -53, -52, -50, -48, -44, -7, -4})]
362	itemsets left after W operation 	: [frozenset({-48, 54, -2}), frozenset({-11, -42, -54, -51, -50, -49}), frozenset({-32, -24, -54, -17, -49, -9, -42, -41}), frozenset({-32, -24, -54, -17, -49, -42, -9, -39}), frozenset({-43, -10, -54, -51, -50, -49}), frozenset({-32, -43, -10, -24, -54, -50, -49}), frozenset({-32, -45, -10, -24, -54, -50, -49}), frozenset({-32, -49, -44, -39, -54, -53, -17}), frozenset({-31, -22, -54, -51, -18, -15, -43, -9, -7, -39, -34}), frozenset({-32, -49, -42, -39, -54, -53, -17}), frozenset({-19, -44, -11, -39, -54, -51, -49}), frozenset({-32, -49, -43, -39, -54, -53, -17}), frozenset({-49, -44, -10, -39, -54, -51, -17}), frozenset({-32, -43, -54, -53, -50, -49}), frozenset({-49, -11, -42, -39, -54, -51, -17})]
202	itemsets left after T operation 	: [frozenset({-48, -4})]
115	itemsets left after T operation 	: [frozenset({-31, -22, -12, -7, -37})]
99	itemsets left after T operation 	: [frozenset({-44, -11})]
86	itemsets left after W operation 	: [frozenset({-33, -2, 55}), frozenset({-31, -25, -55, -22, -20, -15, -46, -11, -42, -40, -6, -36}), frozenset({-26, -23, -55, -52, -50, -47, -43, -10, -7}), frozenset({-47, -42, -41, -55, -49, -53, -17}), frozenset({-47, -42, -40, -55, -53, -19, -49}), frozenset({-7, -42, -55, -53, -52, -23, -50})]
62	itemsets left after T operation 	: [frozenset({-7, -22, -34, -18})]
52	itemsets left after W operation 	: [frozenset({-31, -6, -11, 56, -22}), frozenset({-25, -56, -55, -20, -15, -46, -42, -40, -36}), frozenset({-56, -12, -51})]
37	itemsets left after V operation 	: [frozenset({-11, -26, -33}), frozenset({-48, 26})]
Unpacking W operator applied earlier using 54 on frozenset({-48, -2})
Unpacking W operator applied earlier using 53 on frozenset({-24, -11})
Unpacking W operator applied earlier using 52 on frozenset({-31, -12, -34})
Unpacking W operator applied earlier using 51 on frozenset({-32, -26})
Unpacking W operator applied earlier using 50 on frozenset({-40, -17})
# of frequent itemsets	: 368
Time of DCI Closed		: 0.16216611862182617
Clause Pruned	: frozenset({-32, -24, -49, -48, -17, -43, -10, -40, -2})
Clause Pruned	: frozenset({-32, -24, -17, -48, -49, -11, -42, -39, -2})
Initial DL				: 23685.05226144059
Final DL				: 4132.355262556975
Compression (wrt me)	: 0.8255289784906037
Operator Counters		: {'D': 0, 'W': 3, 'V': 1, 'S': 0, 'R': 0, 'T': 7}
Misle Learning Runtime	: 4.122839450836182

# of frequent itemsets	: 5930
Time of DCI Closed		: 0.264493465423584
2  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-31, -26, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34, -33}), frozenset({-32, -31, -24, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34})}
DL of initial theory	: 20198.089700321947
4243	itemsets left after T operation 	: [frozenset({-32, -31, -22, -12, -34})]
1963	itemsets left after W operation 	: [frozenset({-31, 49, -12, -7, -34, -17}), frozenset({-32, -24, -23, -49, -46, -44, -10, -39, -2}), frozenset({-24, -23, -49, -46, -42, -10, -40, -4, -33}), frozenset({-32, -26, -23, -49, -46, -42, -9, -39, -4}), frozenset({-24, -22, -49, -47, -11, -42, -40, -2, -33}), frozenset({-26, -22, -49, -46, -11, -42, -40, -2, -33}), frozenset({-24, -22, -49, -48, -43, -11, -40, -4, -33}), frozenset({-32, -26, -23, -49, -46, -10, -41, -42, -2}), frozenset({-32, -26, -23, -49, -46, -45, -10, -39, -2}), frozenset({-32, -24, -23, -49, -46, -10, -42, -39, -3}), frozenset({-26, -22, -49, -48, -10, -42, -40, -2, -33}), frozenset({-24, -22, -49, -46, -42, -9, -39, -3, -33}), frozenset({-32, -24, -23, -49, -48, -42, -9, -39, -2}), frozenset({-26, -22, -49, -46, -11, -42, -39, -2, -33}), frozenset({-32, -26, -23, -49, -47, -42, -41, -8, -4}), frozenset({-26, -22, -49, -46, -42, -40, -8, -4, -33}), frozenset({-32, -24, -23, -49, -48, -43, -10, -39, -2}), frozenset({-26, -22, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -24, -23, -49, -46, -42, -9, -39, -2}), frozenset({-32, -24, -23, -49, -48, -45, -11, -39, -2}), frozenset({-26, -22, -49, -46, -43, -8, -39, -2, -33}), frozenset({-32, -24, -23, -49, -48, -10, -41, -42, -2}), frozenset({-32, -26, -23, -49, -46, -43, -40, -8, -4}), frozenset({-24, -22, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -26, -23, -49, -46, -10, -42, -40, -2}), frozenset({-32, -26, -23, -49, -46, -10, -42, -39, -2}), frozenset({-24, -22, -49, -46, -10, -42, -40, -2, -33}), frozenset({-24, -22, -49, -46, -10, -42, -39, -2, -33}), frozenset({-24, -22, -49, -48, -43, -10, -39, -2, -33}), frozenset({-24, -22, -49, -48, -42, -8, -39, -2, -33})]
687	itemsets left after T operation 	: [frozenset({-31, -46, -12, -6, -34})]
329	itemsets left after T operation 	: [frozenset({-24, -46, -42})]
24	itemsets left after T operation 	: [frozenset({-32, -31, -48, -42, -7})]
20	itemsets left after T operation 	: [frozenset({-46, -42})]
8	itemsets left after T operation 	: [frozenset({-32, -42})]
# of frequent itemsets	: 40
Time of DCI Closed		: 0.14615511894226074
27	itemsets left after W operation 	: [frozenset({50, -33, -22, -2, -49}), frozenset({-47, -11, -42, -40, -24, -50}), frozenset({-48, -26, -42, -40, -10, -50}), frozenset({-48, -11, -26, -42, -39, -50}), frozenset({-46, -43, -26, -8, -39, -50}), frozenset({-48, -11, -42, -24, -39, -50}), frozenset({-48, -43, -10, -24, -39, -50}), frozenset({-48, -42, -24, -8, -39, -50})]
10	itemsets left after T operation 	: [frozenset({-32, -23, -49, -39, -2})]
Initial DL				: 23685.05226144059
Final DL				: 4502.630633915254
Compression (wrt me)	: 0.8098956850838128
Operator Counters		: {'D': 0, 'W': 2, 'V': 0, 'S': 0, 'R': 0, 'T': 7}
Misle Learning Runtime	: 0.6881048679351807

# of frequent itemsets	: 10024
Time of DCI Closed		: 0.3197920322418213
3  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -42, -7, -39, -34}), frozenset({-31, -26, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34, -33}), frozenset({-32, -31, -24, -22, -17, -48, -12, -2, -9, -42, -7, -39, -34})}
DL of initial theory	: 20027.022123939565
7883	itemsets left after W operation 	: [frozenset({-31, 49, -12, -7, -22, -34}), frozenset({-26, -17, -48, -49, -11, -43, -40, -2, -33}), frozenset({-32, -24, -17, -48, -49, -11, -42, -40, -2}), frozenset({-26, -18, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -26, -17, -49, -46, -10, -42, -40, -3}), frozenset({-26, -19, -49, -48, -45, -11, -40, -2, -33}), frozenset({-26, -17, -48, -49, -44, -11, -40, -4, -33}), frozenset({-32, -26, -17, -48, -49, -10, -42, -40, -4}), frozenset({-32, -24, -17, -48, -49, -42, -40, -8, -2}), frozenset({-32, -24, -17, -48, -49, -43, -10, -40, -2}), frozenset({-24, -17, -48, -49, -43, -10, -40, -4, -33}), frozenset({-26, -17, -48, -49, -11, -43, -39, -4, -33}), frozenset({-26, -17, -49, -46, -11, -43, -39, -4, -33}), frozenset({-32, -26, -17, -49, -46, -43, -9, -39, -2}), frozenset({-32, -26, -19, -49, -48, -44, -11, -39, -2}), frozenset({-26, -17, -48, -49, -43, -11, -40, -3, -33}), frozenset({-26, -18, -49, -48, -44, -11, -40, -3, -33}), frozenset({-26, -17, -49, -46, -11, -43, -40, -2, -33}), frozenset({-26, -17, -49, -47, -11, -43, -40, -2, -33}), frozenset({-26, -19, -49, -46, -45, -11, -39, -5, -33}), frozenset({-32, -24, -17, -48, -49, -11, -43, -39, -4}), frozenset({-32, -26, -17, -48, -49, -11, -42, -40, -2}), frozenset({-32, -26, -18, -49, -46, -42, -9, -40, -2}), frozenset({-32, -26, -17, -48, -49, -45, -10, -40, -4}), frozenset({-32, -24, -17, -48, -49, -42, -9, -39, -2}), frozenset({-32, -26, -17, -49, -46, -42, -8, -39, -3}), frozenset({-26, -18, -49, -48, -11, -43, -40, -2, -33}), frozenset({-32, -24, -17, -48, -49, -11, -43, -40, -2}), frozenset({-24, -17, -49, -47, -45, -9, -40, -4, -33}), frozenset({-32, -26, -19, -49, -46, -11, -43, -39, -2}), frozenset({-24, -17, -48, -49, -11, -43, -40, -2, -33}), frozenset({-24, -17, -48, -49, -43, -11, -39, -3, -33}), frozenset({-32, -24, -17, -49, -46, -10, -42, -39, -2}), frozenset({-32, -26, -17, -49, -47, -44, -11, -39, -4}), frozenset({-26, -17, -48, -49, -45, -11, -40, -2, -33}), frozenset({-32, -26, -17, -48, -49, -43, -10, -40, -2}), frozenset({-26, -17, -48, -49, -11, -42, -39, -2, -33}), frozenset({-24, -17, -48, -49, -11, -43, -39, -2, -33}), frozenset({-26, -18, -49, -46, -45, -11, -40, -4, -33}), frozenset({-32, -26, -20, -49, -46, -45, -11, -40, -4}), frozenset({-24, -17, -48, -49, -11, -42, -40, -2, -33}), frozenset({-24, -19, -49, -48, -11, -42, -39, -2, -33}), frozenset({-24, -19, -49, -48, -44, -11, -40, -2, -33}), frozenset({-26, -17, -48, -49, -44, -11, -40, -3, -33}), frozenset({-26, -17, -48, -49, -44, -11, -40, -2, -33}), frozenset({-32, -24, -17, -48, -49, -11, -42, -39, -2}), frozenset({-32, -24, -17, -48, -49, -11, -43, -39, -2}), frozenset({-26, -17, -48, -49, -11, -42, -40, -2, -33}), frozenset({-32, -26, -17, -48, -49, -11, -43, -40, -4}), frozenset({-32, -26, -17, -49, -46, -45, -10, -39, -2}), frozenset({-32, -26, -17, -48, -49, -44, -10, -39, -2}), frozenset({-32, -24, -21, -49, -46, -10, -42, -39, -4}), frozenset({-32, -26, -19, -49, -48, -44, -11, -40, -3}), frozenset({-32, -26, -17, -48, -49, -11, -42, -39, -2}), frozenset({-32, -24, -17, -48, -49, -45, -10, -40, -2}), frozenset({-24, -21, -49, -48, -11, -43, -40, -2, -33}), frozenset({-32, -24, -17, -49, -46, -44, -40, -8, -4}), frozenset({-26, -18, -49, -46, -44, -11, -40, -2, -33})]
5668	itemsets left after T operation 	: [frozenset({-48, -11, -33})]
2591	itemsets left after W operation 	: [frozenset({-31, 50, -12, -40, -17}), frozenset({-32, -24, -23, -4, -50, -48, -44, -11, -7, -36}), frozenset({-32, -24, -22, -50, -46, -10, -42, -7, -37, -2}), frozenset({-32, -24, -23, -50, -47, -43, -10, -7, -3, -34}), frozenset({-24, -22, -50, -46, -44, -11, -6, -4, -34, -33}), frozenset({-32, -24, -23, -50, -48, -44, -11, -7, -4, -34}), frozenset({-32, -26, -22, -50, -48, -44, -11, -6, -3, -34}), frozenset({-26, -23, -50, -47, -43, -10, -2, -7, -34, -33}), frozenset({-26, -22, -50, -46, -43, -11, -7, -37, -4, -33}), frozenset({-24, -22, -50, -48, -42, -8, -7, -37, -2, -33}), frozenset({-26, -23, -50, -46, -11, -43, -2, -7, -34, -33}), frozenset({-24, -22, -50, -46, -11, -42, -6, -4, -34, -33}), frozenset({-24, -23, -50, -11, -42, -2, -7, -34, -33}), frozenset({-32, -26, -22, -50, -46, -43, -2, -9, -6, -34})]
1802	itemsets left after T operation 	: [frozenset({-32, -40, -48})]
1400	itemsets left after T operation 	: [frozenset({-46, -11, -33})]
814	itemsets left after W operation 	: [frozenset({-32, 51, -26}), frozenset({-51, -17, -48, -49, -11, -42, -39, -2}), frozenset({-31, -22, -51, -17, -46, -12, -11, -44, -41, -6, -37, -4}), frozenset({-31, -22, -21, -51, -46, -12, -11, -42, -39, -6, -4, -34}), frozenset({-31, -23, -19, -51, -46, -12, -44, -2, -9, -39, -6, -34}), frozenset({-31, -22, -19, -51, -46, -12, -11, -42, -39, -6, -3, -34}), frozenset({-31, -23, -51, -18, -46, -12, -43, -40, -8, -7, -4, -34}), frozenset({-31, -6, -22, -51, -17, -48, -45, -12, -11, -41, -38, -4}), frozenset({-28, -23, -51, -17, -47, -12, -11, -44, -40, -7, -3, -34}), frozenset({-31, -22, -51, -18, -48, -15, -43, -2, -9, -7, -39, -34}), frozenset({-22, -51, -50, -46, -43, -2, -9, -6, -34}), frozenset({-51, -17, -49, -46, -42, -10, -40, -3}), frozenset({-51, -17, -49, -46, -43, -9, -39, -2}), frozenset({-51, -19, -49, -48, -44, -11, -39, -2}), frozenset({-51, -18, -49, -46, -42, -9, -40, -2}), frozenset({-51, -17, -49, -46, -42, -8, -39, -3}), frozenset({-51, -19, -49, -46, -43, -11, -39, -2}), frozenset({-51, -17, -49, -47, -44, -11, -39, -4}), frozenset({-20, -51, -49, -46, -45, -11, -40, -4}), frozenset({-51, -17, -49, -46, -45, -10, -39, -2}), frozenset({-51, -17, -48, -49, -44, -10, -39, -2})]
581	itemsets left after W operation 	: [frozenset({-31, -22, -12, -11, 52, -6}), frozenset({-52, -51, -17, -46, -44, -41, -37, -4}), frozenset({-21, -52, -51, -46, -42, -39, -4, -34}), frozenset({-52, -19, -51, -46, -42, -39, -3, -34}), frozenset({-52, -51, -17, -48, -45, -41, -38, -4})]
414	itemsets left after T operation 	: [frozenset({-24, -17, -4, -40})]
329	itemsets left after W operation 	: [frozenset({53, -2, -17}), frozenset({-31, -26, -23, -53, -47, -14, -44, -11, -40, -6, -34, -33}), frozenset({-46, -45, -10, -39, -53, -51, -49}), frozenset({-26, -53, -49, -47, -43, -11, -40, -33}), frozenset({-48, -44, -10, -39, -53, -51, -49}), frozenset({-32, -24, -53, -49, -48, -42, -9, -39}), frozenset({-32, -24, -53, -49, -46, -10, -42, -39}), frozenset({-32, -24, -53, -49, -48, -11, -42, -39}), frozenset({-32, -24, -53, -49, -48, -11, -43, -39}), frozenset({-48, -11, -42, -39, -53, -51, -49}), frozenset({-46, -43, -9, -39, -53, -51, -49})]
186	itemsets left after W operation 	: [frozenset({-31, -46, -12, 54, -23, -34}), frozenset({-32, -24, -54, -19, -45, -11, -40, -6, -4}), frozenset({-8, -54, -51, -18, -43, -40, -7, -4}), frozenset({-54, -19, -51, -44, -9, -39, -6, -2})]
140	itemsets left after W operation 	: [frozenset({-7, -22, -2, 55}), frozenset({-32, -31, -25, -55, -19, -47, -45, -12, -11, -41, -37}), frozenset({-24, -55, -50, -48, -42, -8, -37, -33}), frozenset({-32, -24, -55, -50, -46, -10, -42, -37}), frozenset({-31, -55, -51, -18, -48, -15, -43, -9, -39, -34})]
130	itemsets left after W operation 	: [frozenset({-24, 56, -42}), frozenset({-32, -46, -10, -56, -39, -53, -49}), frozenset({-32, -48, -11, -56, -39, -53, -49}), frozenset({-32, -56, -21, -49, -46, -10, -39, -4}), frozenset({-56, -23, -50, -11, -2, -7, -34, -33}), frozenset({-48, -56, -8, -55, -37, -50, -33}), frozenset({-32, -46, -10, -56, -55, -37, -50}), frozenset({-32, -48, -9, -56, -39, -53, -49})]
115	itemsets left after T operation 	: [frozenset({-48, -11})]
42	itemsets left after T operation 	: [frozenset({-23, -11, -34})]
32	itemsets left after W operation 	: [frozenset({-31, -12, 57}), frozenset({49, -57, -7, -22, -34}), frozenset({-40, 50, -17, -57}), frozenset({-6, 52, -11, -57, -22}), frozenset({-46, 54, -57, -23, -34}), frozenset({-32, -25, -57, -55, -19, -47, -45, -11, -41, -37})]
17	itemsets left after V operation 	: [frozenset({-46, -11, -33}), frozenset({-51, 33, -43, -39, -19, -2, -49}), frozenset({33, -4, -45, -40, -20, -51, -49})]
14	itemsets left after V operation 	: [frozenset({-46, -11, -33}), frozenset({-47, -43, -26, -40, -53, 46, -49})]
9	itemsets left after V operation 	: [frozenset({-32, -40, -48}), frozenset({-9, -56, -39, 40, -53, -49})]
Unpacking W operator applied earlier using 54 on frozenset({-31, -23, -46, -12, -34})
Unpacking W operator applied earlier using 52 on frozenset({-31, -22, -12, -11, -6})
Unpacking W operator applied earlier using 50 on frozenset({-40, -31, -12, -17})
# of frequent itemsets	: 142
Time of DCI Closed		: 0.14771509170532227
103	itemsets left after T operation 	: [frozenset({-31, -37, -12, -17})]
94	itemsets left after T operation 	: [frozenset({-51, -46, -3, -42})]
85	itemsets left after W operation 	: [frozenset({-10, -39, 58, -53, -49}), frozenset({-32, -46, -58, -56}), frozenset({-46, -45, -51, -58}), frozenset({-48, -44, -51, -58})]
74	itemsets left after W operation 	: [frozenset({-46, -9, 59, -51, -2}), frozenset({-31, -59, -22, -17, -12, -43, -40, -6, -34}), frozenset({-59, -42, -40, -18, -49}), frozenset({-31, -59, -23, -19, -12, -44, -39, -6, -34})]
64	itemsets left after T operation 	: [frozenset({-40, -47, -43})]
49	itemsets left after T operation 	: [frozenset({-51, -43, -9})]
44	itemsets left after W operation 	: [frozenset({-39, 60, -10, -49}), frozenset({-32, -46, -60, -56, -21, -4}), frozenset({58, -53, -60})]
40	itemsets left after V operation 	: [frozenset({-31, -59, 11, -19, -44, -12, -39, -6}), frozenset({-23, -11, -34}), frozenset({-31, 11, -51, -18, -46, -12, -43, -40, -8, -7, -4})]
34	itemsets left after V operation 	: [frozenset({-31, 11, -51, -18, 47, -46, -12, -8, -7, -4}), frozenset({-40, -47, -43})]
31	itemsets left after V operation 	: [frozenset({43, -46, 59, -2}), frozenset({-43, -51, -9})]
25	itemsets left after V operation 	: [frozenset({-46, -11, -33}), frozenset({-31, 33, -22, -21, -51, -12, -42, -39, -6, -4, -34})]
2	itemsets left after T operation 	: [frozenset({-45})]
Clause Pruned	: frozenset({-7, -22, -2, 55})
Initial DL				: 23691.096655559944
Final DL				: 3094.9572859370987
Compression (wrt me)	: 0.8693620083977514
Operator Counters		: {'D': 0, 'W': 9, 'V': 7, 'S': 0, 'R': 0, 'T': 11}
Misle Learning Runtime	: 1.5857770442962646

# of frequent itemsets	: 5178
Time of DCI Closed		: 0.2397780418395996
3  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -42, -7, -39, -34}), frozenset({-31, -26, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34, -33}), frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -48, -12, -2, -9, -42, -7, -39, -34})}
DL of initial theory	: 20027.022123939565
3490	itemsets left after T operation 	: [frozenset({-32, -31, -22, -12, -34})]
1254	itemsets left after W operation 	: [frozenset({-31, 49, -12, -7, -34, -17}), frozenset({-32, -24, -23, -49, -46, -44, -10, -39, -2}), frozenset({-24, -23, -49, -46, -42, -10, -40, -4, -33}), frozenset({-32, -26, -23, -49, -46, -42, -9, -39, -4}), frozenset({-24, -22, -49, -47, -11, -42, -40, -2, -33}), frozenset({-26, -22, -49, -46, -11, -42, -40, -2, -33}), frozenset({-32, -26, -23, -49, -46, -10, -41, -42, -2}), frozenset({-32, -26, -23, -49, -46, -45, -10, -39, -2}), frozenset({-32, -24, -23, -49, -46, -10, -42, -39, -3}), frozenset({-26, -22, -49, -48, -10, -42, -40, -2, -33}), frozenset({-24, -22, -49, -46, -42, -9, -39, -3, -33}), frozenset({-32, -24, -23, -49, -48, -42, -9, -39, -2}), frozenset({-26, -22, -49, -46, -11, -42, -39, -2, -33}), frozenset({-32, -26, -23, -49, -47, -42, -41, -8, -4}), frozenset({-26, -22, -49, -46, -42, -40, -8, -4, -33}), frozenset({-32, -24, -23, -49, -48, -43, -10, -39, -2}), frozenset({-26, -22, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -24, -23, -49, -46, -42, -9, -39, -2}), frozenset({-32, -24, -23, -49, -48, -45, -11, -39, -2}), frozenset({-26, -22, -49, -46, -43, -8, -39, -2, -33}), frozenset({-32, -24, -23, -49, -48, -10, -41, -42, -2}), frozenset({-32, -26, -23, -49, -46, -43, -40, -8, -4}), frozenset({-24, -22, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -26, -23, -49, -46, -10, -42, -40, -2}), frozenset({-32, -26, -23, -49, -46, -10, -42, -39, -2}), frozenset({-24, -22, -49, -46, -10, -42, -40, -2, -33}), frozenset({-24, -22, -49, -46, -10, -42, -39, -2, -33}), frozenset({-24, -22, -49, -48, -43, -10, -39, -2, -33}), frozenset({-24, -22, -49, -48, -42, -8, -39, -2, -33})]
411	itemsets left after T operation 	: [frozenset({-31, -46, -12, -6, -34})]
19	itemsets left after T operation 	: [frozenset({-32, -31, -17, -42, -7})]
1	itemsets left after W operation 	: [frozenset({-31, 50, -12, -34}), frozenset({-32, -24, -23, -19, -50, -48, -42, -40, -8, -7, -2}), frozenset({-32, -22, -50}), frozenset({49, -7, -50, -17}), frozenset({-46, -6, -50})]
# of frequent itemsets	: 111
Time of DCI Closed		: 0.15868759155273438
85	itemsets left after T operation 	: [frozenset({-22, -49, -42, -2, -33})]
64	itemsets left after T operation 	: [frozenset({-32, -23, -49, -39, -2})]
28	itemsets left after W operation 	: [frozenset({51, -49, -22, -33}), frozenset({-51, -46, -42, -9, -24, -39, -3}), frozenset({-46, -26, -42, -40, -8, -4, -51}), frozenset({-46, -43, -26, -8, -39, -51, -2}), frozenset({-48, -43, -10, -24, -39, -51, -2}), frozenset({-51, -42, -2})]
19	itemsets left after T operation 	: [frozenset({-32, -23, -2})]
10	itemsets left after T operation 	: [frozenset({-23, -46, -49})]
Initial DL				: 23691.096655559944
Final DL				: 4315.600256252159
Compression (wrt me)	: 0.8178387299247561
Operator Counters		: {'D': 0, 'W': 3, 'V': 0, 'S': 0, 'R': 0, 'T': 7}
Misle Learning Runtime	: 0.5926094055175781

# of frequent itemsets	: 10206
Time of DCI Closed		: 0.3356130123138428
3  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -42, -7, -39, -34}), frozenset({-31, -26, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34, -33}), frozenset({-32, -31, -24, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34})}
DL of initial theory	: 20375.327041449495
8056	itemsets left after W operation 	: [frozenset({-31, 49, -12, -7, -22, -34}), frozenset({-32, -24, -17, -48, -49, -44, -11, -39, -2}), frozenset({-26, -17, -48, -49, -11, -43, -40, -2, -33}), frozenset({-32, -24, -17, -48, -49, -11, -42, -40, -2}), frozenset({-26, -18, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -26, -17, -49, -46, -10, -42, -40, -3}), frozenset({-26, -19, -49, -48, -45, -11, -40, -2, -33}), frozenset({-26, -17, -48, -49, -44, -11, -40, -4, -33}), frozenset({-32, -26, -17, -48, -49, -10, -42, -40, -4}), frozenset({-24, -17, -49, -47, -11, -42, -41, -2, -33}), frozenset({-32, -24, -17, -48, -49, -42, -40, -8, -2}), frozenset({-32, -24, -17, -48, -49, -43, -10, -40, -2}), frozenset({-24, -17, -48, -49, -43, -10, -40, -4, -33}), frozenset({-26, -17, -48, -49, -11, -43, -39, -4, -33}), frozenset({-26, -17, -49, -46, -11, -43, -39, -4, -33}), frozenset({-32, -26, -17, -49, -46, -43, -9, -39, -2}), frozenset({-32, -26, -19, -49, -48, -44, -11, -39, -2}), frozenset({-26, -17, -48, -49, -43, -11, -40, -3, -33}), frozenset({-26, -18, -49, -48, -44, -11, -40, -3, -33}), frozenset({-26, -17, -49, -46, -11, -43, -40, -2, -33}), frozenset({-32, -24, -17, -49, -46, -11, -43, -39, -2}), frozenset({-26, -17, -49, -47, -11, -43, -40, -2, -33}), frozenset({-24, -17, -48, -49, -11, -42, -41, -4, -33}), frozenset({-26, -19, -49, -46, -45, -11, -39, -5, -33}), frozenset({-24, -19, -49, -47, -11, -42, -40, -2, -33}), frozenset({-32, -26, -17, -48, -49, -11, -42, -40, -2}), frozenset({-26, -19, -49, -46, -44, -11, -40, -4, -33}), frozenset({-32, -24, -17, -49, -46, -44, -8, -39, -3}), frozenset({-32, -26, -17, -49, -46, -11, -43, -39, -2}), frozenset({-32, -26, -18, -49, -46, -42, -9, -40, -2}), frozenset({-32, -26, -17, -48, -49, -45, -10, -40, -4}), frozenset({-32, -24, -17, -48, -49, -41, -42, -9, -2}), frozenset({-32, -26, -17, -49, -46, -42, -8, -39, -3}), frozenset({-26, -18, -49, -48, -11, -43, -40, -2, -33}), frozenset({-32, -24, -17, -48, -49, -11, -43, -40, -2}), frozenset({-24, -17, -49, -47, -45, -9, -40, -4, -33}), frozenset({-32, -26, -19, -49, -46, -11, -43, -39, -2}), frozenset({-24, -17, -48, -49, -11, -43, -40, -2, -33}), frozenset({-24, -17, -48, -49, -43, -11, -39, -3, -33}), frozenset({-32, -24, -17, -49, -46, -10, -42, -39, -2}), frozenset({-26, -17, -48, -49, -45, -11, -40, -2, -33}), frozenset({-32, -26, -17, -48, -49, -43, -10, -40, -2}), frozenset({-26, -17, -48, -49, -11, -42, -39, -2, -33}), frozenset({-26, -18, -49, -46, -45, -11, -40, -4, -33}), frozenset({-32, -26, -20, -49, -46, -45, -11, -40, -4}), frozenset({-24, -17, -48, -49, -11, -42, -40, -2, -33}), frozenset({-24, -19, -49, -48, -11, -42, -39, -2, -33}), frozenset({-24, -19, -49, -48, -42, -10, -40, -4, -33}), frozenset({-24, -19, -49, -48, -44, -11, -40, -2, -33}), frozenset({-26, -17, -48, -49, -44, -11, -40, -3, -33}), frozenset({-32, -24, -17, -48, -49, -11, -42, -39, -2}), frozenset({-32, -24, -17, -48, -49, -11, -43, -39, -2}), frozenset({-26, -17, -48, -49, -11, -42, -40, -2, -33}), frozenset({-32, -26, -17, -48, -49, -11, -43, -40, -4}), frozenset({-32, -26, -17, -49, -46, -45, -10, -39, -2}), frozenset({-32, -26, -17, -48, -49, -44, -10, -39, -2}), frozenset({-32, -24, -21, -49, -46, -10, -42, -39, -4}), frozenset({-32, -26, -19, -49, -48, -44, -11, -40, -3}), frozenset({-32, -26, -17, -48, -49, -11, -42, -39, -2}), frozenset({-32, -24, -17, -48, -49, -45, -10, -40, -2}), frozenset({-24, -21, -49, -48, -11, -43, -40, -2, -33}), frozenset({-32, -24, -17, -49, -46, -44, -40, -8, -4}), frozenset({-32, -26, -17, -49, -47, -44, -11, -40, -4}), frozenset({-26, -18, -49, -46, -44, -11, -40, -2, -33})]
5605	itemsets left after T operation 	: [frozenset({-48, -11, -33})]
2357	itemsets left after T operation 	: [frozenset({-40, -11, -17})]
1637	itemsets left after W operation 	: [frozenset({-32, 50, -26, -40}), frozenset({-31, -22, -21, -50, -48, -45, -12, -11, -6, -37, -4}), frozenset({-46, -42, -9, -2, -18, -50, -49}), frozenset({-48, -45, -10, -49, -4, -50, -17}), frozenset({-31, -22, -50, -17, -46, -12, -43, -2, -9, -6, -34}), frozenset({-48, -43, -10, -2, -49, -50, -17}), frozenset({-30, -22, -18, -50, -48, -12, -43, -9, -7, -4, -34}), frozenset({-46, -45, -11, -20, -4, -50, -49}), frozenset({-31, -23, -18, -50, -48, -45, -12, -11, -2, -7, -34}), frozenset({-31, -23, -18, -50, -46, -12, -43, -8, -7, -4, -34}), frozenset({-31, -22, -18, -50, -48, -14, -42, -8, -7, -3, -34}), frozenset({-48, -19, -44, -11, -3, -50, -49}), frozenset({-46, -42, -10, -49, -3, -50, -17}), frozenset({-48, -42, -10, -49, -4, -50, -17})]
1394	itemsets left after W operation 	: [frozenset({-24, 51, -48, -17}), frozenset({-32, -11, -42, -39, -51, -2, -49}), frozenset({-32, -43, -11, -39, -51, -2, -49}), frozenset({-32, -30, -22, -51, -12, -43, -10, -40, -6, -4, -34}), frozenset({-31, -22, -51, -12, -42, -40, -8, -7, -37, -2, -33}), frozenset({-32, -45, -10, -40, -51, -2, -49}), frozenset({-32, -44, -11, -39, -51, -2, -49}), frozenset({-32, -42, -40, -8, -51, -2, -49}), frozenset({-32, -43, -10, -40, -51, -2, -49}), frozenset({-43, -10, -40, -49, -4, -51, -33}), frozenset({-32, -9, -42, -41, -51, -2, -49})]
538	itemsets left after W operation 	: [frozenset({-31, -12, -34, 52}), frozenset({-26, -23, -52, -17, -47, -43, -10, -40, -7, -2, -33}), frozenset({-32, -24, -23, -52, -19, -46, -45, -11, -40, -6, -4}), frozenset({-32, -26, -22, -21, -52, -46, -11, -42, -39, -6, -4}), frozenset({-32, -26, -22, -52, -19, -46, -11, -42, -39, -6, -3}), frozenset({-22, -52, -50, -17, -46, -43, -9, -6, -2}), frozenset({-32, -24, -23, -52, -17, -47, -43, -10, -40, -7, -3}), frozenset({49, -22, -52, -7}), frozenset({-23, -52, -50, -18, -48, -45, -11, -7, -2}), frozenset({-23, -52, -50, -18, -46, -43, -8, -7, -4})]
422	itemsets left after W operation 	: [frozenset({-46, 53, -11}), frozenset({-31, -25, -22, -53, -20, -15, -42, -40, -6, -36, -2, -33}), frozenset({-29, -26, -22, -53, -17, -12, -43, -41, -7, -4, -34, -33}), frozenset({-32, -31, -26, -22, -53, -17, -12, -44, -41, -6, -37, -4}), frozenset({-45, -53, -20, -4, -50, -49}), frozenset({-26, -53, -17, -49, -43, -39, -4, -33}), frozenset({-32, -24, -53, -17, -49, -43, -39, -2}), frozenset({-26, -53, -19, -49, -45, -39, -5, -33}), frozenset({-26, -53, -19, -49, -44, -40, -4, -33}), frozenset({-32, -26, -53, -17, -49, -43, -39, -2}), frozenset({-32, -26, -53, -19, -49, -43, -39, -2}), frozenset({-26, -53, -18, -49, -45, -40, -4, -33}), frozenset({-32, -24, -23, -53, -52, -19, -45, -40, -6, -4}), frozenset({-32, -26, -22, -21, -52, -53, -42, -39, -6, -4}), frozenset({-32, -26, -22, -53, -52, -19, -42, -39, -6, -3}), frozenset({-26, -53, -18, -49, -44, -40, -2, -33})]
355	itemsets left after W operation 	: [frozenset({-32, 54, -26}), frozenset({-31, -22, -54, -18, -48, -15, -43, -2, -9, -7, -39, -34}), frozenset({-54, -17, -49, -46, -43, -9, -39, -2}), frozenset({-54, -19, -49, -48, -44, -11, -39, -2}), frozenset({-54, -17, -49, -46, -42, -8, -39, -3}), frozenset({-54, -17, -49, -46, -45, -10, -39, -2}), frozenset({-54, -17, -48, -49, -44, -10, -39, -2}), frozenset({-54, -17, -48, -49, -11, -42, -39, -2}), frozenset({-31, -22, -53, -54, -17, -12, -44, -41, -6, -37, -4}), frozenset({-40, -54, 50}), frozenset({-49, -43, -39, -54, -53, -2, -17}), frozenset({-43, -39, -54, -53, -19, -2, -49}), frozenset({-22, -21, -52, -53, -54, -42, -39, -6, -4}), frozenset({-22, -53, -52, -19, -54, -42, -39, -6, -3})]
265	itemsets left after T operation 	: [frozenset({-40, -4, -33})]
247	itemsets left after W operation 	: [frozenset({-17, -2, 55}), frozenset({-24, -55, -49, -47, -11, -42, -41, -33}), frozenset({-32, -24, -55, -49, -46, -10, -42, -39}), frozenset({-32, -43, -24, -39, -53, -55, -49}), frozenset({-48, -43, -10, -55, -50, -49}), frozenset({-46, -43, -9, -39, -54, -55, -49}), frozenset({-46, -45, -10, -39, -54, -55, -49}), frozenset({-48, -44, -10, -39, -54, -55, -49}), frozenset({-48, -11, -42, -39, -54, -55, -49}), frozenset({-43, -39, -54, -53, -55, -49}), frozenset({-26, -23, -55, -52, -47, -43, -10, -40, -7, -33}), frozenset({-55, -22, -52, -50, -46, -43, -9, -6})]
146	itemsets left after T operation 	: [frozenset({-31, -22, -37, -12})]
98	itemsets left after W operation 	: [frozenset({-12, -43, 56, -22, -4, -34}), frozenset({-32, -30, -10, -56, -40, -6, -51}), frozenset({-48, -30, -18, -9, -56, -7, -50}), frozenset({-29, -26, -56, -53, -17, -41, -7, -33})]
88	itemsets left after W operation 	: [frozenset({-32, 57, -40}), frozenset({-57, -24, -17, -49, -46, -44, -8, -4}), frozenset({-45, -10, -57, -51, -2, -49}), frozenset({-42, -57, -8, -51, -2, -49}), frozenset({-43, -10, -57, -51, -2, -49}), frozenset({-57, -24, -23, -52, -17, -47, -43, -10, -7, -3}), frozenset({-30, -10, -57, -56, -6, -51}), frozenset({-57, -24, -23, -53, -52, -19, -45, -6, -4})]
62	itemsets left after T operation 	: [frozenset({-40, -2, -33})]
52	itemsets left after T operation 	: [frozenset({-48, -11})]
27	itemsets left after W operation 	: [frozenset({-48, 58, -7, -22, -34}), frozenset({-31, -58, -54, -18, -15, -43, -9, -39, -2}), frozenset({-31, -58, -18, -50, -14, -42, -8, -3})]
8	itemsets left after T operation 	: [frozenset({-40, -33})]
Unpacking W operator applied earlier using 55 on frozenset({-2, -17})
Unpacking W operator applied earlier using 52 on frozenset({-31, -12, -34})
Unpacking W operator applied earlier using 51 on frozenset({-24, -17, -48})
# of frequent itemsets	: 141
Time of DCI Closed		: 0.14720964431762695
92	itemsets left after T operation 	: [frozenset({-39, -53, -43, -49})]
86	itemsets left after W operation 	: [frozenset({59, -10, -49}), frozenset({-46, -45, -59, -39, -54, -2, -17}), frozenset({-48, -44, -59, -39, -54, -2, -17}), frozenset({-48, -45, -59, -57, -24, -2, -17}), frozenset({-48, -43, -59, -57, -24, -2, -17}), frozenset({-32, -59, -24, -21, -46, -42, -39, -4}), frozenset({-48, -45, -59, -4, -50, -17}), frozenset({-46, -59, -42, -3, -50, -17}), frozenset({-48, -59, -42, -4, -50, -17}), frozenset({-32, -59, -24, -17, -46, -42, -39, -2}), frozenset({-48, -43, -59, -50, -2, -17})]
84	itemsets left after W operation 	: [frozenset({-22, -12, -34, 60}), frozenset({56, -4, -60, -43}), frozenset({-31, -60, -7, 49}), frozenset({-31, -60, -54, -53, -21, -42, -39, -6, -4}), frozenset({-31, -60, -54, -53, -19, -42, -39, -6, -3}), frozenset({-31, -60, -50, -17, -46, -43, -9, -6, -2})]
79	itemsets left after W operation 	: [frozenset({-24, -48, 61, -17}), frozenset({-61, -59, -43, -57, -2}), frozenset({-32, -61, -9, -42, -41, -2, -49}), frozenset({-61, -42, -57, -8, -2, -49}), frozenset({-30, -61, -10, -57, -56, -6}), frozenset({-61, -45, -59, -57, -2})]
69	itemsets left after W operation 	: [frozenset({-46, 62, -17}), frozenset({-32, -62, -59, -42, -24, -39, -2}), frozenset({-31, -62, -60, -50, -43, -9, -6, -2}), frozenset({-32, -62, -24, -49, -44, -8, -39, -3}), frozenset({-62, -42, -8, -39, -54, -3, -49}), frozenset({-62, -43, -9, -39, -54, -2, -49}), frozenset({-62, -44, -57, -24, -8, -4, -49}), frozenset({-62, -45, -59, -39, -54, -2}), frozenset({-62, -59, -42, -3, -50})]
67	itemsets left after W operation 	: [frozenset({-2, 63, -42, -49}), frozenset({-47, -63, -11, -41, -24, -17, -33}), frozenset({-32, -63, -41, -61, -9}), frozenset({-8, -63, -61, -57}), frozenset({-63, -46, -50, -9, -18})]
61	itemsets left after W operation 	: [frozenset({64, -39, -54}), frozenset({-64, -62, -42, -8, -3, -49}), frozenset({-64, -62, -43, -9, -2, -49}), frozenset({-64, -62, -45, -59, -2}), frozenset({-64, -31, -58, -18, -15, -43, -9, -2}), frozenset({-48, -64, -44, -59, -2, -17}), frozenset({-64, -31, -60, -21, -53, -42, -6, -4}), frozenset({-64, -31, -60, -53, -19, -42, -6, -3})]
53	itemsets left after T operation 	: [frozenset({-50, -18})]
50	itemsets left after V operation 	: [frozenset({-45, -26, 43, -5, -19, -33}), frozenset({-39, -53, -43, -49})]
17	itemsets left after T operation 	: [frozenset({-45})]
Initial DL				: 23685.05226144059
Final DL				: 3502.1524776070946
Compression (wrt me)	: 0.8521365948890635
Operator Counters		: {'D': 0, 'W': 13, 'V': 1, 'S': 0, 'R': 0, 'T': 10}
Misle Learning Runtime	: 1.9637517929077148

# of frequent itemsets	: 5678
Time of DCI Closed		: 0.32951927185058594
3  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -7, -39, -34}), frozenset({-31, -26, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34, -33}), frozenset({-32, -31, -24, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -42, -7, -39, -34})}
DL of initial theory	: 20375.327041449495
3769	itemsets left after T operation 	: [frozenset({-32, -31, -22, -12, -34})]
1719	itemsets left after W operation 	: [frozenset({-31, 49, -12, -7, -34, -17}), frozenset({-24, -23, -49, -46, -42, -10, -40, -4, -33}), frozenset({-32, -26, -23, -49, -46, -42, -9, -39, -4}), frozenset({-24, -22, -49, -47, -11, -42, -40, -2, -33}), frozenset({-26, -22, -49, -46, -11, -42, -40, -2, -33}), frozenset({-24, -22, -49, -48, -43, -11, -40, -4, -33}), frozenset({-32, -26, -23, -49, -46, -10, -41, -42, -2}), frozenset({-32, -26, -23, -49, -46, -45, -10, -39, -2}), frozenset({-26, -22, -49, -48, -10, -42, -40, -2, -33}), frozenset({-24, -22, -49, -46, -42, -9, -39, -3, -33}), frozenset({-32, -24, -23, -49, -48, -42, -9, -39, -2}), frozenset({-26, -22, -49, -46, -11, -42, -39, -2, -33}), frozenset({-32, -26, -23, -49, -47, -42, -41, -8, -4}), frozenset({-26, -22, -49, -46, -42, -40, -8, -4, -33}), frozenset({-26, -22, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -24, -23, -49, -46, -42, -9, -39, -2}), frozenset({-32, -24, -23, -49, -48, -45, -11, -39, -2}), frozenset({-26, -22, -49, -46, -43, -8, -39, -2, -33}), frozenset({-32, -24, -23, -49, -48, -10, -41, -42, -2}), frozenset({-32, -26, -23, -49, -46, -43, -40, -8, -4}), frozenset({-32, -26, -23, -49, -46, -10, -42, -40, -2}), frozenset({-32, -26, -23, -49, -46, -10, -42, -39, -2}), frozenset({-24, -22, -49, -46, -10, -42, -39, -2, -33}), frozenset({-24, -22, -49, -48, -43, -10, -39, -2, -33}), frozenset({-24, -22, -49, -48, -42, -8, -39, -2, -33})]
530	itemsets left after T operation 	: [frozenset({-31, -46, -12, -6, -34})]
183	itemsets left after T operation 	: [frozenset({-46, -42})]
19	itemsets left after T operation 	: [frozenset({-32, -31, -17, -48, -42, -7})]
9	itemsets left after W operation 	: [frozenset({-31, 50, -12, -34}), frozenset({-32, -22, -50}), frozenset({49, -7, -50, -17}), frozenset({-46, -6, -50})]
6	itemsets left after T operation 	: [frozenset({-32, -42})]
# of frequent itemsets	: 25
Time of DCI Closed		: 0.1487727165222168
15	itemsets left after W operation 	: [frozenset({-33, 51, -22, -2, -49}), frozenset({-47, -11, -42, -40, -24, -51}), frozenset({-48, -26, -42, -40, -10, -51}), frozenset({-48, -11, -26, -42, -39, -51}), frozenset({-46, -43, -26, -8, -39, -51}), frozenset({-48, -43, -10, -24, -39, -51}), frozenset({-48, -42, -24, -8, -39, -51})]
8	itemsets left after T operation 	: [frozenset({-39, -2, -49})]
7	itemsets left after V operation 	: [frozenset({-22, 51, 39, -33}), frozenset({-39, -2, -49})]
Initial DL				: 23685.052261440585
Final DL				: 4542.716713758591
Compression (wrt me)	: 0.8082032218626697
Operator Counters		: {'D': 0, 'W': 3, 'V': 1, 'S': 0, 'R': 0, 'T': 6}
Misle Learning Runtime	: 0.7037534713745117

# of frequent itemsets	: 8754
Time of DCI Closed		: 0.2884645462036133
2  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -48, -12, -2, -9, -42, -7, -39, -34})}
DL of initial theory	: 20204.25962532339
6813	itemsets left after W operation 	: [frozenset({-31, 49, -12, -7, -22, -34}), frozenset({-32, -24, -17, -48, -49, -44, -11, -39, -2}), frozenset({-26, -17, -48, -49, -11, -43, -40, -2, -33}), frozenset({-32, -24, -17, -48, -49, -11, -42, -40, -2}), frozenset({-26, -18, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -26, -17, -49, -46, -10, -42, -40, -3}), frozenset({-26, -19, -49, -48, -45, -11, -40, -2, -33}), frozenset({-26, -17, -48, -49, -44, -11, -40, -4, -33}), frozenset({-24, -17, -49, -47, -11, -42, -41, -2, -33}), frozenset({-32, -26, -17, -48, -49, -10, -42, -40, -4}), frozenset({-32, -24, -17, -48, -49, -42, -40, -8, -2}), frozenset({-32, -24, -17, -48, -49, -43, -10, -40, -2}), frozenset({-24, -17, -48, -49, -43, -10, -40, -4, -33}), frozenset({-26, -17, -48, -49, -11, -43, -39, -4, -33}), frozenset({-26, -17, -49, -46, -11, -43, -39, -4, -33}), frozenset({-32, -26, -17, -49, -46, -43, -9, -39, -2}), frozenset({-32, -26, -19, -49, -48, -44, -11, -39, -2}), frozenset({-26, -17, -48, -49, -43, -11, -40, -3, -33}), frozenset({-26, -18, -49, -48, -44, -11, -40, -3, -33}), frozenset({-26, -17, -49, -46, -11, -43, -40, -2, -33}), frozenset({-32, -24, -17, -49, -46, -11, -43, -39, -2}), frozenset({-26, -17, -49, -47, -11, -43, -40, -2, -33}), frozenset({-24, -17, -48, -49, -11, -42, -41, -4, -33}), frozenset({-26, -19, -49, -46, -45, -11, -39, -5, -33}), frozenset({-32, -24, -17, -48, -49, -11, -43, -39, -4}), frozenset({-24, -19, -49, -47, -11, -42, -40, -2, -33}), frozenset({-32, -26, -17, -48, -49, -11, -42, -40, -2}), frozenset({-26, -19, -49, -46, -44, -11, -40, -4, -33}), frozenset({-32, -24, -17, -49, -46, -44, -8, -39, -3}), frozenset({-32, -26, -17, -49, -46, -11, -43, -39, -2}), frozenset({-32, -26, -18, -49, -46, -42, -9, -40, -2}), frozenset({-32, -26, -17, -48, -49, -45, -10, -40, -4}), frozenset({-32, -24, -17, -48, -49, -41, -42, -9, -2}), frozenset({-32, -24, -17, -48, -49, -42, -9, -39, -2}), frozenset({-32, -26, -17, -49, -46, -42, -8, -39, -3}), frozenset({-26, -18, -49, -48, -11, -43, -40, -2, -33}), frozenset({-32, -24, -17, -48, -49, -11, -43, -40, -2}), frozenset({-24, -17, -49, -47, -45, -9, -40, -4, -33}), frozenset({-32, -26, -19, -49, -46, -11, -43, -39, -2}), frozenset({-24, -17, -48, -49, -11, -43, -40, -2, -33}), frozenset({-24, -17, -48, -49, -43, -11, -39, -3, -33}), frozenset({-32, -24, -17, -49, -46, -10, -42, -39, -2}), frozenset({-32, -26, -17, -49, -47, -44, -11, -39, -4}), frozenset({-26, -17, -48, -49, -45, -11, -40, -2, -33}), frozenset({-32, -26, -17, -48, -49, -43, -10, -40, -2}), frozenset({-24, -17, -48, -49, -11, -43, -39, -2, -33}), frozenset({-26, -18, -49, -46, -45, -11, -40, -4, -33}), frozenset({-32, -26, -20, -49, -46, -45, -11, -40, -4}), frozenset({-24, -17, -48, -49, -11, -42, -40, -2, -33}), frozenset({-24, -19, -49, -48, -11, -42, -39, -2, -33}), frozenset({-24, -19, -49, -48, -42, -10, -40, -4, -33}), frozenset({-24, -19, -49, -48, -44, -11, -40, -2, -33}), frozenset({-26, -17, -48, -49, -44, -11, -40, -2, -33}), frozenset({-32, -24, -17, -48, -49, -11, -43, -39, -2}), frozenset({-26, -17, -48, -49, -11, -42, -40, -2, -33}), frozenset({-32, -26, -17, -48, -49, -11, -43, -40, -4}), frozenset({-32, -26, -17, -49, -46, -45, -10, -39, -2}), frozenset({-32, -26, -17, -48, -49, -44, -10, -39, -2}), frozenset({-32, -24, -21, -49, -46, -10, -42, -39, -4}), frozenset({-32, -26, -19, -49, -48, -44, -11, -40, -3}), frozenset({-32, -26, -17, -48, -49, -11, -42, -39, -2}), frozenset({-32, -24, -17, -48, -49, -45, -10, -40, -2}), frozenset({-24, -21, -49, -48, -11, -43, -40, -2, -33}), frozenset({-32, -24, -17, -49, -46, -44, -40, -8, -4}), frozenset({-32, -26, -17, -49, -47, -44, -11, -40, -4}), frozenset({-26, -18, -49, -46, -44, -11, -40, -2, -33})]
5687	itemsets left after T operation 	: [frozenset({-48, -11, -2, -33})]
2855	itemsets left after T operation 	: [frozenset({-40, -11, -17})]
2417	itemsets left after W operation 	: [frozenset({-24, 50, -17, -48}), frozenset({-31, -23, -50, -44, -11, -12, -7, -39, -3, -34, -33}), frozenset({-11, -42, -41, -49, -4, -50, -33}), frozenset({-32, -43, -11, -39, -4, -50, -49}), frozenset({-32, -30, -22, -50, -12, -43, -10, -40, -6, -4, -34}), frozenset({-31, -22, -50, -12, -42, -40, -8, -7, -37, -2, -33}), frozenset({-32, -9, -42, -41, -2, -50, -49}), frozenset({-32, -42, -9, -2, -39, -50, -49}), frozenset({-11, -43, -39, -49, -3, -50, -33}), frozenset({-32, -44, -11, -2, -39, -50, -49}), frozenset({-32, -43, -11, -2, -39, -50, -49}), frozenset({-32, -42, -2, -40, -8, -50, -49}), frozenset({-32, -43, -10, -50, -40, -2, -49}), frozenset({-43, -10, -40, -49, -4, -50, -33}), frozenset({-32, -45, -10, -2, -40, -50, -49})]
1877	itemsets left after W operation 	: [frozenset({-32, 51, -26}), frozenset({-31, -22, -21, -51, -48, -45, -12, -11, -40, -6, -37, -4}), frozenset({-31, -22, -21, -51, -46, -12, -11, -42, -39, -6, -4, -34}), frozenset({-31, -23, -19, -51, -46, -12, -44, -2, -9, -39, -6, -34}), frozenset({-31, -22, -51, -17, -46, -12, -43, -2, -9, -40, -6, -34}), frozenset({-31, -22, -19, -51, -46, -12, -11, -42, -39, -6, -3, -34}), frozenset({-31, -23, -51, -18, -48, -45, -12, -11, -2, -40, -7, -34}), frozenset({-31, -6, -22, -51, -17, -48, -45, -12, -11, -41, -38, -4}), frozenset({-31, -22, -51, -18, -48, -15, -43, -2, -9, -7, -39, -34}), frozenset({-51, -17, -49, -46, -42, -10, -40, -3}), frozenset({-51, -17, -48, -49, -42, -10, -40, -4}), frozenset({-51, -17, -49, -46, -43, -9, -39, -2}), frozenset({-51, -19, -49, -48, -44, -11, -39, -2}), frozenset({-51, -17, -49, -46, -43, -11, -39, -2}), frozenset({-51, -18, -49, -46, -42, -9, -40, -2}), frozenset({-51, -17, -48, -49, -45, -10, -40, -4}), frozenset({-51, -17, -49, -46, -42, -8, -39, -3}), frozenset({-51, -19, -49, -46, -43, -11, -39, -2}), frozenset({-51, -17, -49, -47, -44, -11, -39, -4}), frozenset({-51, -17, -48, -49, -43, -10, -40, -2}), frozenset({-20, -51, -49, -46, -45, -11, -40, -4}), frozenset({-51, -17, -49, -46, -45, -10, -39, -2}), frozenset({-51, -17, -48, -49, -44, -10, -39, -2}), frozenset({-51, -19, -49, -48, -44, -11, -40, -3}), frozenset({-51, -17, -48, -49, -11, -42, -39, -2})]
674	itemsets left after W operation 	: [frozenset({-31, -12, -34, 52}), frozenset({-26, -23, -21, -52, -48, -45, -11, -39, -4, -7, -33}), frozenset({-26, -22, -52, -19, -48, -11, -42, -40, -6, -4, -33}), frozenset({-26, -23, -52, -17, -47, -43, -10, -40, -7, -2, -33}), frozenset({-32, -24, -23, -52, -19, -46, -45, -11, -40, -6, -4}), frozenset({-32, -24, -23, -52, -17, -47, -43, -10, -40, -7, -3}), frozenset({49, -22, -52, -7}), frozenset({-22, -21, -52, -51, -46, -11, -42, -39, -6, -4}), frozenset({-23, -52, -51, -19, -46, -44, -9, -39, -6, -2}), frozenset({-22, -52, -51, -17, -46, -43, -9, -40, -6, -2}), frozenset({-22, -52, -51, -19, -46, -11, -42, -39, -6, -3}), frozenset({-23, -52, -51, -18, -48, -45, -11, -40, -7, -2}), frozenset({-23, -52, -50, -44, -11, -7, -39, -3, -33})]
488	itemsets left after T operation 	: [frozenset({-11, -26, -33})]
381	itemsets left after W operation 	: [frozenset({-40, 53, -10, -17}), frozenset({-32, -31, -24, -22, -53, -46, -12, -42, -7, -37, -2}), frozenset({-51, -46, -42, -53, -3, -49}), frozenset({-31, -26, -23, -53, -48, -15, -42, -7, -4, -34, -33}), frozenset({-48, -42, -53, -4, -51, -49}), frozenset({-48, -45, -53, -4, -51, -49}), frozenset({-48, -43, -53, -51, -2, -49}), frozenset({-26, -23, -53, -52, -47, -43, -7, -2, -33}), frozenset({-32, -24, -23, -53, -52, -47, -43, -7, -3})]
315	itemsets left after W operation 	: [frozenset({-11, 54, -2}), frozenset({-31, -25, -22, -54, -20, -15, -46, -42, -40, -6, -36, -33}), frozenset({-32, -31, -25, -22, -54, -19, -47, -45, -12, -41, -7, -37}), frozenset({-24, -54, -17, -49, -47, -42, -41, -33}), frozenset({-32, -24, -54, -17, -49, -46, -43, -39}), frozenset({-24, -54, -19, -49, -47, -42, -40, -33}), frozenset({-48, -19, -44, -39, -54, -51, -49}), frozenset({-46, -49, -43, -39, -54, -51, -17}), frozenset({-19, -46, -43, -39, -54, -51, -49}), frozenset({-48, -49, -42, -39, -54, -51, -17}), frozenset({-48, -54, -33}), frozenset({-23, -54, -52, -51, -18, -48, -45, -40, -7}), frozenset({-32, -44, -39, -54, -50, -49}), frozenset({-32, -43, -39, -54, -50, -49})]
152	itemsets left after T operation 	: [frozenset({-31, -22, -37, -12})]
139	itemsets left after W operation 	: [frozenset({-46, -17, 55}), frozenset({-32, -24, -55, -49, -44, -8, -39, -3}), frozenset({-32, -24, -55, -49, -42, -10, -39, -2}), frozenset({-55, -22, -52, -51, -43, -9, -40, -6, -2}), frozenset({-32, -24, -8, -55, -49, -44, -40, -4}), frozenset({-32, -43, -24, -39, -54, -55, -49}), frozenset({-43, -39, -54, -55, -51, -49}), frozenset({-43, -9, -39, -55, -51, -2, -49}), frozenset({-51, -42, -8, -39, -55, -3, -49}), frozenset({-45, -10, -39, -55, -51, -2, -49})]
126	itemsets left after W operation 	: [frozenset({-24, 56, -4, -40}), frozenset({-47, -45, -9, -56, -33, -17, -49}), frozenset({-48, -10, -42, -56, -33, -19, -49}), frozenset({-32, -56, -23, -52, -19, -46, -45, -11, -6}), frozenset({-32, -44, -56, -8, -55, -49})]
109	itemsets left after V operation 	: [frozenset({-43, -39, 26, -3, -50, -49}), frozenset({-11, -26, -33}), frozenset({-23, -52, -50, -7, -44, -39, 26, -3}), frozenset({-42, -41, 26, -4, -50, -49})]
95	itemsets left after V operation 	: [frozenset({-31, -22, -37, -12}), frozenset({-38, 37, -51, -17, -48, -45, -11, -41, -6, -4})]
77	itemsets left after V operation 	: [frozenset({-40, -11, -17}), frozenset({-51, -48, -3, 17, -44, -19, -49}), frozenset({17, -46, -45, -4, -20, -51, -49})]
69	itemsets left after V operation 	: [frozenset({-6, 37, 40, -51, -48, -45, -41, -38, -4}), frozenset({-40, -11, -17}), frozenset({-47, -44, 40, -39, -4, -51, -49})]
62	itemsets left after V operation 	: [frozenset({-23, 11, -53, -52, -47, -43, -7, -2}), frozenset({-31, -23, -53, 11, -48, -15, -42, -7, -4, -34}), frozenset({-11, -26, -33})]
56	itemsets left after T operation 	: [frozenset({-48, -44})]
50	itemsets left after W operation 	: [frozenset({-7, -43, 57}), frozenset({-31, -57, -22, -51, -18, -48, -15, -2, -9, -39, -34}), frozenset({-47, -57, 11, -23, -53, -52, -2}), frozenset({-32, -57, -24, -23, -53, -52, -47, -3})]
40	itemsets left after T operation 	: [frozenset({-15, -31})]
38	itemsets left after V operation 	: [frozenset({-42, -10, -56, 54, -19, -49}), frozenset({-48, -54, -33})]
29	itemsets left after V operation 	: [frozenset({11, 53, -10}), frozenset({-40, -11, -17})]
Unpacking W operator applied earlier using 54 on frozenset({-11, -2})
Unpacking W operator applied earlier using 52 on frozenset({-31, -12, -34})
Unpacking W operator applied earlier using 50 on frozenset({-24, -17, -48})
1  violations of -ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-31, -22, -37, -12}), frozenset({-47, -33, -45, -9, -56, -49, -17}), frozenset({-24, -49, -17, -47, -11, -42, -41, -2, -33}), frozenset({49, -31, -12, -7, -22, -34}), frozenset({-32, -24, -49, -48, -17, -43, -11, -39, -2}), frozenset({-48, -44}), frozenset({-32, -24, -17, -48, -49, -42, -40, -8, -2}), frozenset({-31, -22, -21, -51, -46, -12, -11, -42, -39, -6, -4, -34}), frozenset({-48, -43, -53, -51, -2, -49}), frozenset({-31, -23, -51, -18, -48, -45, -12, -11, -2, -40, -7, -34}), frozenset({-24, -49, -48, -17, -43, -39, 26, -3}), frozenset({-47, -44, 40, -39, -4, -51, -49}), frozenset({-24, 56, -4, -40}), frozenset({-32, 51, -26}), frozenset({-32, -44, -56, -55, -8, -49}), frozenset({17, -46, -45, -4, -20, -51, -49}), frozenset({-31, -23, -51, -19, -46, -12, -44, -2, -9, -39, -6, -34}), frozenset({-31, -22, -51, -19, -46, -12, -11, -42, -39, -6, -3, -34}), frozenset({-48, -42, -53, -4, -51, -49}), frozenset({-32, -24, -17, -48, -49, -9, -42, -41, -2}), frozenset({-31, -57, -23, 11, -53, -47, -12, -2, -34}), frozenset({-40, -11, -17}), frozenset({-32, -24, -17, -48, -49, -42, -9, -39, -2}), frozenset({-32, -31, -56, -23, -19, -46, -45, -12, -11, -6, -34}), frozenset({-46, -17, 55}), frozenset({-51, -18, -49, -46, -42, -9, -40, -2}), frozenset({-11, -43, -55, -39, -51, -2, -49}), frozenset({-24, -49, -48, -17, -43, -10, -40, -4, -33}), frozenset({-32, -24, -55, -49, -44, -8, -39, -3}), frozenset({-32, -24, -21, -49, -46, -10, -42, -39, -4}), frozenset({-3, -42, -8, -55, -39, -51, -49}), frozenset({-45, -10, -55, -39, -51, -2, -49}), frozenset({-24, -49, -48, -17, -42, -41, 26, -4}), frozenset({-6, 37, 40, -51, -48, -45, -41, -38, -4}), frozenset({-32, -30, -24, -22, -17, -48, -12, -43, -10, -40, -6, -4, -34}), frozenset({-32, -24, -55, -49, -42, -10, -39, -2}), frozenset({-3, -46, -42, -53, -51, -49}), frozenset({-48, -11, -2, -33}), frozenset({-51, -19, -49, -46, -43, -11, -39, -2}), frozenset({11, 53, -10}), frozenset({-7, -43, 57}), frozenset({-11, -26, -33}), frozenset({-32, -24, -17, -48, -49, -11, -43, -39, -4}), frozenset({-24, -19, -49, -47, -11, -42, -40, -2, -33}), frozenset({-51, -17, -48, -49, -11, -42, -39, -2}), frozenset({-32, -24, -49, -48, -17, -43, -10, -40, -2}), frozenset({-32, -24, -17, -48, -49, -45, -10, -40, -2}), frozenset({-32, -31, -57, -24, -23, -53, -47, -12, -3, -34}), frozenset({-48, -45, -53, -4, -51, -49}), frozenset({-32, -24, -55, -49, -43, -11, -39, -2}), frozenset({-31, -55, -22, -51, -12, -43, -2, -9, -40, -6, -34}), frozenset({-15, -31}), frozenset({-43, -9, -55, -39, -51, -2, -49})}
# of frequent itemsets	: 131
Time of DCI Closed		: 0.14830350875854492
111	itemsets left after W operation 	: [frozenset({-39, 58, -49}), frozenset({-32, -58, -24, -21, -46, -10, -42, -4}), frozenset({-32, -43, -58, -24, -55, -54}), frozenset({-32, -11, -43, -58, -4, -50}), frozenset({-43, -58, -55, -54, -51}), frozenset({-43, -58, -9, -55, -51, -2}), frozenset({-32, -50, -42, -9, -58, -2}), frozenset({-3, -42, -58, -8, -55, -51}), frozenset({-45, -10, -58, -55, -51, -2}), frozenset({-43, -58, 26, -3, -50}), frozenset({-47, -44, -58, 40, -4, -51}), frozenset({-19, -46, -43, -58, -54, -51}), frozenset({-48, -42, -58, -54, -51, -17}), frozenset({-32, -43, -58, -54, -50}), frozenset({-32, -44, -58, -24, -55, -3, -8}), frozenset({-32, -42, -10, -24, -55, -58, -2})]
96	itemsets left after W operation 	: [frozenset({-32, -2, 59, -50, -49}), frozenset({-41, -59, -42, -9}), frozenset({-8, -59, -42, -40}), frozenset({-43, -59, -10, -40}), frozenset({-40, -45, -59, -10})]
90	itemsets left after W operation 	: [frozenset({-53, 60, -51, -49}), frozenset({-46, -60, -3, -42}), frozenset({-48, -60, -4, -42}), frozenset({-48, -45, -4, -60}), frozenset({-48, -60, -43, -2})]
84	itemsets left after W operation 	: [frozenset({-46, -6, -52, 61}), frozenset({-61, -23, -51, -19, -44, -9, -39, -2}), frozenset({-61, -22, -51, -19, -11, -42, -39, -3}), frozenset({-32, -45, -61, -11, -56, -23, -19}), frozenset({-61, -22, -21, -51, -11, -42, -39, -4})]
76	itemsets left after W operation 	: [frozenset({62, -51, -2, -9}), frozenset({-62, -61, -44, -23, -39, -19}), frozenset({-55, -62, -43, -58}), frozenset({-46, -62, -42, -40, -18, -49}), frozenset({-62, -22, -43, -40, -55, -6, -52})]
61	itemsets left after T operation 	: [frozenset({-45, -51})]
60	itemsets left after W operation 	: [frozenset({-32, -43, 63}), frozenset({-63, -30, -22, -50, -12, -10, -40, -6, -4, -34}), frozenset({-63, -58, -24, -55, -54}), frozenset({-63, -54, -50, -58}), frozenset({-63, -11, -58, -4, -50})]
51	itemsets left after T operation 	: [frozenset({-40, -50, -10})]
46	itemsets left after W operation 	: [frozenset({-24, 64, -42, -49}), frozenset({-64, -47, -41, -54, -17, -33}), frozenset({-64, -47, -40, -54, -19, -33})]
3	itemsets left after T operation 	: [frozenset({-56})]
Unpacking W operator applied earlier using 59 on frozenset({-32, -49, -50, -2})
# of frequent itemsets	: 42
Time of DCI Closed		: 0.14722394943237305
Initial DL				: 23691.096655559948
Final DL				: 3770.4533780784222
Compression (wrt me)	: 0.8408493522737136
Operator Counters		: {'D': 0, 'W': 12, 'V': 7, 'S': 0, 'R': 0, 'T': 9}
Misle Learning Runtime	: 2.758484363555908

# of frequent itemsets	: 5745
Time of DCI Closed		: 0.2578854560852051
2  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -48, -12, -2, -9, -42, -7, -39, -34})}
DL of initial theory	: 20204.25962532339
3888	itemsets left after T operation 	: [frozenset({-32, -31, -22, -12, -34})]
1506	itemsets left after W operation 	: [frozenset({-31, 49, -12, -7, -34, -17}), frozenset({-32, -24, -23, -49, -46, -44, -10, -39, -2}), frozenset({-24, -23, -49, -46, -42, -10, -40, -4, -33}), frozenset({-32, -26, -23, -49, -46, -42, -9, -39, -4}), frozenset({-24, -22, -49, -47, -11, -42, -40, -2, -33}), frozenset({-26, -22, -49, -46, -11, -42, -40, -2, -33}), frozenset({-24, -22, -49, -48, -43, -11, -40, -4, -33}), frozenset({-32, -26, -23, -49, -46, -10, -41, -42, -2}), frozenset({-32, -26, -23, -49, -46, -45, -10, -39, -2}), frozenset({-32, -24, -23, -49, -46, -10, -42, -39, -3}), frozenset({-26, -22, -49, -48, -10, -42, -40, -2, -33}), frozenset({-24, -22, -49, -46, -42, -9, -39, -3, -33}), frozenset({-32, -24, -23, -49, -48, -42, -9, -39, -2}), frozenset({-32, -26, -23, -49, -47, -42, -41, -8, -4}), frozenset({-26, -22, -49, -46, -42, -40, -8, -4, -33}), frozenset({-32, -24, -23, -49, -48, -43, -10, -39, -2}), frozenset({-32, -24, -23, -49, -46, -42, -9, -39, -2}), frozenset({-32, -24, -23, -49, -48, -45, -11, -39, -2}), frozenset({-26, -22, -49, -46, -43, -8, -39, -2, -33}), frozenset({-32, -24, -23, -49, -48, -10, -41, -42, -2}), frozenset({-32, -26, -23, -49, -46, -43, -40, -8, -4}), frozenset({-24, -22, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -26, -23, -49, -46, -10, -42, -40, -2}), frozenset({-32, -26, -23, -49, -46, -10, -42, -39, -2}), frozenset({-24, -22, -49, -46, -10, -42, -40, -2, -33}), frozenset({-24, -22, -49, -46, -10, -42, -39, -2, -33}), frozenset({-24, -22, -49, -48, -43, -10, -39, -2, -33}), frozenset({-24, -22, -49, -48, -42, -8, -39, -2, -33})]
583	itemsets left after T operation 	: [frozenset({-31, -46, -12, -6, -34})]
220	itemsets left after T operation 	: [frozenset({-24, -46, -42})]
27	itemsets left after T operation 	: [frozenset({-32, -31, -48, -42, -7, -34})]
23	itemsets left after T operation 	: [frozenset({-46, -42})]
8	itemsets left after T operation 	: [frozenset({-32, -42})]
# of frequent itemsets	: 32
Time of DCI Closed		: 0.15681791305541992
27	itemsets left after T operation 	: [frozenset({-24, -49, -48, -39, -2})]
16	itemsets left after T operation 	: [frozenset({-39, -2, -49})]
6	itemsets left after V operation 	: [frozenset({-39, -2, -49}), frozenset({39, -24, -22, -47, -11, -42, -40, -33}), frozenset({-26, 39, -22, -48, -42, -10, -40, -33})]
Initial DL				: 23691.096655559944
Final DL				: 4756.258175678895
Compression (wrt me)	: 0.7992385812767907
Operator Counters		: {'D': 0, 'W': 1, 'V': 1, 'S': 0, 'R': 0, 'T': 8}
Misle Learning Runtime	: 0.6823737621307373

# of frequent itemsets	: 9484
Time of DCI Closed		: 0.33702778816223145
4  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -42, -7, -39, -34}), frozenset({-31, -26, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34, -33}), frozenset({-32, -31, -24, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -48, -12, -2, -9, -42, -7, -39, -34})}
DL of initial theory	: 20020.852198938122
7490	itemsets left after T operation 	: [frozenset({-31, -22, -12, -7, -34})]
5594	itemsets left after T operation 	: [frozenset({-31, -12, -11, -40, -34})]
3355	itemsets left after T operation 	: [frozenset({-48, -12, -11, -7, -33})]
2974	itemsets left after T operation 	: [frozenset({-32, -31, -26, -22, -12, -11, -6, -4})]
1682	itemsets left after T operation 	: [frozenset({-31, -17, -12, -40, -7})]
1027	itemsets left after T operation 	: [frozenset({-32, -12, -43, -40, -34})]
540	itemsets left after T operation 	: [frozenset({-48, -7, -31, -26})]
224	itemsets left after T operation 	: [frozenset({-31, -11, -40, -6, -33})]
50	itemsets left after T operation 	: [frozenset({-7, -12, -11})]
31	itemsets left after T operation 	: [frozenset({-40, -31, -11})]
18	itemsets left after V operation 	: [frozenset({-32, -6, -12, -26, 40, -22, -4}), frozenset({-40, -31, -11})]
# of frequent itemsets	: 3
Time of DCI Closed		: 0.13816118240356445
Initial DL				: 23246.166832847026
Final DL				: 5398.6555305235925
Compression (wrt me)	: 0.7677614735649557
Operator Counters		: {'D': 0, 'W': 0, 'V': 1, 'S': 0, 'R': 0, 'T': 10}
Misle Learning Runtime	: 0.7740867137908936

# of frequent itemsets	: 5407
Time of DCI Closed		: 0.2536041736602783
4  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -48, -12, -2, -9, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -7, -39, -34}), frozenset({-31, -26, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34, -33}), frozenset({-32, -31, -24, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34})}
DL of initial theory	: 20020.852198938122
3675	itemsets left after T operation 	: [frozenset({-32, -31, -22, -12, -34})]
1325	itemsets left after W operation 	: [frozenset({-31, 49, -12, -7, -34, -17}), frozenset({-32, -24, -23, -49, -46, -44, -10, -39, -2}), frozenset({-32, -26, -23, -49, -46, -42, -9, -39, -4}), frozenset({-24, -22, -49, -47, -11, -42, -40, -2, -33}), frozenset({-26, -22, -49, -46, -11, -42, -40, -2, -33}), frozenset({-24, -22, -49, -48, -43, -11, -40, -4, -33}), frozenset({-32, -26, -23, -49, -46, -10, -41, -42, -2}), frozenset({-32, -26, -23, -49, -46, -45, -10, -39, -2}), frozenset({-32, -24, -23, -49, -46, -10, -42, -39, -3}), frozenset({-26, -22, -49, -48, -10, -42, -40, -2, -33}), frozenset({-24, -22, -49, -46, -42, -9, -39, -3, -33}), frozenset({-32, -24, -23, -49, -48, -42, -9, -39, -2}), frozenset({-26, -22, -49, -46, -11, -42, -39, -2, -33}), frozenset({-32, -26, -23, -49, -47, -42, -41, -8, -4}), frozenset({-26, -22, -49, -46, -42, -40, -8, -4, -33}), frozenset({-32, -24, -23, -49, -48, -43, -10, -39, -2}), frozenset({-26, -22, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -24, -23, -49, -46, -42, -9, -39, -2}), frozenset({-32, -24, -23, -49, -48, -45, -11, -39, -2}), frozenset({-26, -22, -49, -46, -43, -8, -39, -2, -33}), frozenset({-32, -24, -23, -49, -48, -10, -41, -42, -2}), frozenset({-24, -22, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -26, -23, -49, -46, -10, -42, -40, -2}), frozenset({-32, -26, -23, -49, -46, -10, -42, -39, -2}), frozenset({-24, -22, -49, -46, -10, -42, -40, -2, -33}), frozenset({-24, -22, -49, -46, -10, -42, -39, -2, -33}), frozenset({-24, -22, -49, -48, -43, -10, -39, -2, -33}), frozenset({-24, -22, -49, -48, -42, -8, -39, -2, -33})]
639	itemsets left after T operation 	: [frozenset({-31, -26, -46, -12, -6, -34})]
171	itemsets left after T operation 	: [frozenset({-24, -32, -42})]
150	itemsets left after T operation 	: [frozenset({-46, -42})]
26	itemsets left after T operation 	: [frozenset({-32, -31, -26, -22, -17, -48, -42, -7})]
20	itemsets left after V operation 	: [frozenset({-23, 42, -49, -48, -43, -10, -39, -2}), frozenset({-24, -32, -42}), frozenset({-23, 42, -49, -48, -45, -11, -39, -2}), frozenset({-23, 42, -49, -46, -44, -10, -39, -2})]
11	itemsets left after T operation 	: [frozenset({-32, -42})]
5	itemsets left after V operation 	: [frozenset({-32, -26, -23, 42, -49, -45, -10, -39, -2}), frozenset({-26, -22, 42, -49, -43, -8, -39, -2, -33}), frozenset({-31, -12, 42, -26, -6, -34}), frozenset({-46, -42}), frozenset({-44, -10, -23, 42, -39, -2, -49})]
# of frequent itemsets	: 31
Time of DCI Closed		: 0.15533041954040527
18	itemsets left after W operation 	: [frozenset({50, -33, -22, -2, -49}), frozenset({-47, -11, -42, -40, -24, -50}), frozenset({-48, -26, -42, -40, -10, -50}), frozenset({-48, -11, -26, -42, -39, -50}), frozenset({-48, -11, -42, -24, -39, -50}), frozenset({-48, -43, -10, -24, -39, -50}), frozenset({-48, -42, -24, -8, -39, -50}), frozenset({-43, -26, -8, -39, 42, -50})]
7	itemsets left after T operation 	: [frozenset({-23, 42, -49, -39, -2})]
Initial DL				: 23246.166832847026
Final DL				: 4456.217770354644
Compression (wrt me)	: 0.8083031149867698
Operator Counters		: {'D': 0, 'W': 2, 'V': 2, 'S': 0, 'R': 0, 'T': 7}
Misle Learning Runtime	: 0.6748342514038086

# of frequent itemsets	: 9765
Time of DCI Closed		: 0.3307042121887207
4  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -42, -7, -39, -34}), frozenset({-31, -26, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34, -33}), frozenset({-32, -31, -24, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -48, -12, -2, -9, -42, -7, -39, -34})}
DL of initial theory	: 20463.94565282595
7734	itemsets left after T operation 	: [frozenset({-31, -22, -12, -7, -34})]
4004	itemsets left after T operation 	: [frozenset({-31, -12, -11})]
2071	itemsets left after T operation 	: [frozenset({-40, -7, -12, -34})]
1552	itemsets left after T operation 	: [frozenset({-31, -17, -11, -40, -6, -34, -33})]
818	itemsets left after W operation 	: [frozenset({-31, 49, -12, -40, -22, -2, -17}), frozenset({-32, -24, -49, -46, -42, -10, -7, -37}), frozenset({-32, -26, -49, -46, -43, -9, -6, -34}), frozenset({-24, -49, -48, -42, -8, -7, -37, -33})]
292	itemsets left after T operation 	: [frozenset({-48, -7, -34, -26})]
108	itemsets left after T operation 	: [frozenset({-33, -11, -26, -41})]
73	itemsets left after T operation 	: [frozenset({-31, -11, -40, -6, -33})]
46	itemsets left after V operation 	: [frozenset({-32, -26, -23, 11, -19, -46, -44, -34, -9, -39, -6, -2}), frozenset({-7, -22, 11, -34}), frozenset({-31, -12, -11}), frozenset({49, -40, -22, 11, -2, -17})]
33	itemsets left after V operation 	: [frozenset({-32, -30, 7, -24, -22, -17, -48, -43, -10, -6, -4}), frozenset({-40, -7, -12, -34})]
26	itemsets left after V operation 	: [frozenset({-31, -12, -11}), frozenset({-40, -6, 12, -33})]
# of frequent itemsets	: 5
Time of DCI Closed		: 0.1458427906036377
Initial DL				: 23691.096655559944
Final DL				: 6366.928253066184
Compression (wrt me)	: 0.7312522782024967
Operator Counters		: {'D': 0, 'W': 1, 'V': 3, 'S': 0, 'R': 0, 'T': 7}
Misle Learning Runtime	: 0.7843213081359863

# of frequent itemsets	: 5421
Time of DCI Closed		: 0.24828147888183594
4  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -48, -12, -2, -9, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -7, -39, -34}), frozenset({-31, -26, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34, -33}), frozenset({-32, -31, -24, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34})}
DL of initial theory	: 20463.94565282595
3529	itemsets left after T operation 	: [frozenset({-32, -31, -22, -12, -34})]
1571	itemsets left after W operation 	: [frozenset({-31, 49, -12, -7, -34, -17}), frozenset({-32, -24, -23, -49, -46, -44, -10, -39, -2}), frozenset({-24, -23, -49, -46, -42, -10, -40, -4, -33}), frozenset({-32, -26, -23, -49, -46, -42, -9, -39, -4}), frozenset({-24, -22, -49, -47, -11, -42, -40, -2, -33}), frozenset({-26, -22, -49, -46, -11, -42, -40, -2, -33}), frozenset({-24, -22, -49, -48, -43, -11, -40, -4, -33}), frozenset({-32, -26, -23, -49, -46, -10, -41, -42, -2}), frozenset({-32, -24, -23, -49, -46, -10, -42, -39, -3}), frozenset({-24, -22, -49, -46, -42, -9, -39, -3, -33}), frozenset({-32, -24, -23, -49, -48, -42, -9, -39, -2}), frozenset({-26, -22, -49, -46, -11, -42, -39, -2, -33}), frozenset({-32, -26, -23, -49, -47, -42, -41, -8, -4}), frozenset({-26, -22, -49, -46, -42, -40, -8, -4, -33}), frozenset({-32, -24, -23, -49, -48, -43, -10, -39, -2}), frozenset({-26, -22, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -24, -23, -49, -46, -42, -9, -39, -2}), frozenset({-32, -24, -23, -49, -48, -45, -11, -39, -2}), frozenset({-26, -22, -49, -46, -43, -8, -39, -2, -33}), frozenset({-32, -24, -23, -49, -48, -10, -41, -42, -2}), frozenset({-32, -26, -23, -49, -46, -43, -40, -8, -4}), frozenset({-24, -22, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -26, -23, -49, -46, -10, -42, -40, -2}), frozenset({-32, -26, -23, -49, -46, -10, -42, -39, -2}), frozenset({-24, -22, -49, -46, -10, -42, -40, -2, -33}), frozenset({-24, -22, -49, -48, -43, -10, -39, -2, -33}), frozenset({-24, -22, -49, -48, -42, -8, -39, -2, -33})]
382	itemsets left after T operation 	: [frozenset({-31, -46, -12, -6, -34})]
197	itemsets left after T operation 	: [frozenset({-24, -46, -42})]
17	itemsets left after T operation 	: [frozenset({-32, -31, -48, -42, -8, -7})]
14	itemsets left after T operation 	: [frozenset({-32, -42})]
11	itemsets left after T operation 	: [frozenset({-46, -42})]
# of frequent itemsets	: 30
Time of DCI Closed		: 0.13752508163452148
24	itemsets left after T operation 	: [frozenset({-22, -49, -39, -2, -33})]
16	itemsets left after T operation 	: [frozenset({-24, -39, -2, -49})]
9	itemsets left after V operation 	: [frozenset({-33, -39, -22, -2, -49}), frozenset({-47, -11, -42, -40, -24, 39})]
6	itemsets left after T operation 	: [frozenset({-39, -2, -49})]
Initial DL				: 23691.096655559944
Final DL				: 4598.919313995085
Compression (wrt me)	: 0.8058798467264796
Operator Counters		: {'D': 0, 'W': 1, 'V': 1, 'S': 0, 'R': 0, 'T': 9}
Misle Learning Runtime	: 0.6332159042358398

# of frequent itemsets	: 10188
Time of DCI Closed		: 0.32685256004333496
4  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -42, -7, -39, -34}), frozenset({-31, -26, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34, -33}), frozenset({-32, -31, -24, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -48, -12, -2, -9, -42, -7, -39, -34})}
DL of initial theory	: 20292.878315736205
8009	itemsets left after T operation 	: [frozenset({-31, -22, -12, -7, -34})]
5327	itemsets left after T operation 	: [frozenset({-31, -12, -11, -34})]
3705	itemsets left after T operation 	: [frozenset({-24, -22, -48, -12, -11, -7, -33})]
2093	itemsets left after T operation 	: [frozenset({-40, -7, -12, -17})]
1515	itemsets left after W operation 	: [frozenset({-32, -31, 49, -12, -26, -6}), frozenset({-22, -21, -49, -48, -45, -11, -40, -37, -4}), frozenset({-22, -17, -49, -46, -44, -11, -41, -37, -4}), frozenset({-23, -19, -49, -46, -44, -2, -9, -39, -34}), frozenset({-22, -17, -49, -46, -43, -2, -9, -40, -34}), frozenset({-22, -17, -48, -49, -45, -11, -41, -38, -4})]
1030	itemsets left after T operation 	: [frozenset({-31, -17, -11, -40, -6, -34, -33})]
492	itemsets left after T operation 	: [frozenset({-26, -18, -48, -7, -34})]
116	itemsets left after T operation 	: [frozenset({-48, -31, -26, -33})]
48	itemsets left after T operation 	: [frozenset({-22, -11})]
18	itemsets left after T operation 	: [frozenset({-7, -34, -18, -26})]
9	itemsets left after T operation 	: [frozenset({-31, -11, -34})]
# of frequent itemsets	: 2
Time of DCI Closed		: 0.14081740379333496
Initial DL				: 24306.995509822656
Final DL				: 5720.160368617318
Compression (wrt me)	: 0.7646702009589892
Operator Counters		: {'D': 0, 'W': 1, 'V': 0, 'S': 0, 'R': 0, 'T': 10}
Misle Learning Runtime	: 0.7076187133789062

# of frequent itemsets	: 5509
Time of DCI Closed		: 0.25581884384155273
4  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -48, -12, -2, -9, -42, -7, -39, -34}), frozenset({-32, -31, -24, -22, -17, -46, -12, -2, -10, -7, -39, -34}), frozenset({-31, -26, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34, -33}), frozenset({-32, -31, -24, -22, -17, -48, -12, -11, -2, -42, -7, -39, -34})}
DL of initial theory	: 20292.878315736205
3769	itemsets left after T operation 	: [frozenset({-32, -31, -22, -12, -34})]
1808	itemsets left after W operation 	: [frozenset({-31, 49, -12, -7, -34, -17}), frozenset({-32, -24, -23, -49, -46, -44, -10, -39, -2}), frozenset({-24, -23, -49, -46, -42, -10, -40, -4, -33}), frozenset({-32, -26, -23, -49, -46, -42, -9, -39, -4}), frozenset({-24, -22, -49, -47, -11, -42, -40, -2, -33}), frozenset({-26, -22, -49, -46, -11, -42, -40, -2, -33}), frozenset({-24, -22, -49, -48, -43, -11, -40, -4, -33}), frozenset({-32, -26, -23, -49, -46, -45, -10, -39, -2}), frozenset({-32, -24, -23, -49, -46, -10, -42, -39, -3}), frozenset({-26, -22, -49, -48, -10, -42, -40, -2, -33}), frozenset({-26, -22, -49, -46, -11, -42, -39, -2, -33}), frozenset({-32, -26, -23, -49, -47, -42, -41, -8, -4}), frozenset({-26, -22, -49, -46, -42, -40, -8, -4, -33}), frozenset({-32, -24, -23, -49, -48, -43, -10, -39, -2}), frozenset({-26, -22, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -24, -23, -49, -46, -42, -9, -39, -2}), frozenset({-32, -24, -23, -49, -48, -45, -11, -39, -2}), frozenset({-32, -24, -23, -49, -48, -10, -41, -42, -2}), frozenset({-32, -26, -23, -49, -46, -43, -40, -8, -4}), frozenset({-24, -22, -49, -48, -11, -42, -39, -2, -33}), frozenset({-32, -26, -23, -49, -46, -10, -42, -40, -2}), frozenset({-32, -26, -23, -49, -46, -10, -42, -39, -2}), frozenset({-24, -22, -49, -46, -10, -42, -40, -2, -33}), frozenset({-24, -22, -49, -46, -10, -42, -39, -2, -33}), frozenset({-24, -22, -49, -48, -43, -10, -39, -2, -33})]
570	itemsets left after T operation 	: [frozenset({-31, -46, -12, -6, -34})]
195	itemsets left after T operation 	: [frozenset({-24, -46, -42})]
24	itemsets left after T operation 	: [frozenset({-32, -31, -48, -42, -7})]
20	itemsets left after T operation 	: [frozenset({-46, -42})]
18	itemsets left after T operation 	: [frozenset({-24, -32, -10})]
12	itemsets left after T operation 	: [frozenset({-32, -10})]
9	itemsets left after T operation 	: [frozenset({-32, -42})]
# of frequent itemsets	: 23
Time of DCI Closed		: 0.14427638053894043
19	itemsets left after W operation 	: [frozenset({-33, 50, -42, -22, -2, -49}), frozenset({-48, -11, -24, -39, -50}), frozenset({-47, -11, -40, -24, -50}), frozenset({-48, -26, -10, -40, -50}), frozenset({-48, -11, -26, -39, -50})]
Initial DL				: 24306.995509822656
Final DL				: 4986.494442053712
Compression (wrt me)	: 0.7948535251903662
Operator Counters		: {'D': 0, 'W': 2, 'V': 0, 'S': 0, 'R': 0, 'T': 8}
Misle Learning Runtime	: 0.693631649017334

Running	: ./Resources/Krimp/bin/krimp	/home/arcchitjain/Documents/Mistle/classify.conf
krimp_accuracy = 0.7756
mistle_fold_accuracy_list = [0.7741935483870968, 0.7741935483870968, 0.5806451612903226, 0.7096774193548387, 0.6129032258064516, 0.7419354838709677, 0.7096774193548387, 0.8064516129032258, 0.7741935483870968, 0.7916666666666666]
mistle_attempted_list = [31, 31, 31, 31, 31, 31, 31, 31, 31, 24]
weighted sum = 220.0
weighted_mistle_accuracy = 0.7260726072607261
mistle_atempted = 303
mistle_coverage = 1.0
naive_mistle_attempted_list = 0.7275537634408603
Mistle MDL Selections = ['T-', 'T-', 'T+', 'T+', 'T+', 'T+', 'T+', 'T-', 'T-', 'T-']
krimp_time = 5.544718027114868
mistle_time = 22.451739072799683
krimp_accuracy_dict = {'heart.dat': '0.7756'}
mistle_accuracy_dict = {'heart.dat': (0.7260726072607261, 303, 1.0)}
