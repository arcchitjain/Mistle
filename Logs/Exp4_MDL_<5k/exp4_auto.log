 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: '9a263052-d752-40c8-a1dc-9de102888325_convertdb.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Database :: 
 * Type:		FIMI database
 * File:		auto.dat
 * Scanning file:	in progress... * Scanning file: done                       
 * Database:	205 rows, maximal 26 columns
 * 		has bin sizes: no
 * 		has transaction id's: no
 * Reading database:	in progress... * Reading database:	done          

 * Processing Data:  * Processing Data: Translating Forward * Processing Data: Sorting within Rows * Processing Data: Writing Data              ** Writing FIC database to file
 * File:		/home/arcchitjain/Documents/Mistle/Data/auto.db
** Finished writing database.

 * Processing Data: Finished                  

 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/

Task `datatrans`, command `convertdb` finished. This took 0 seconds.

 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: '963037b9-090d-4be7-a4ad-d034364f7be0_analysedb.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Database :: 
 * File:		auto.db
 * Database:		205t 205r, 5271i, 33345.16bits
 * 			pruned below support 0, maximum set length 26
 * Alphabet:		131 items
 * Internal datatype:	uint16 value arrays

** Analysing database
 * Output File:	auto.db.analysis.txt
 * Writing analysis:	in progress... * Writing analysis:	done          


 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/analysedb/

Task `main`, command `analysedb` finished. This took 0 seconds.

 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: 'a387a9b2-085d-4f41-9d40-ad3e030c2918_classifycompress.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Database :: 
 * File:		auto.db
 * Database:		205t 205r, 5271i, 33345.16bits
 * 			pruned below support 0, maximum set length 26
 * Alphabet:		131 items
 * Internal datatype:	32bit bitmap array

** Classification ::
 * Seed:				1234
 * numFolds:			10
 * Split database:		creating 10 partitions
 * Creating:			fold 1
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 1
** Writing FIC database to file
 * File:		train6.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		auto-all-24d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		343887
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(127a,0u,2970,18591,2006,20597)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (3439) ? c/s  		 \ Progress:		1% (5000) 5000 c/s (0s +/- 1m07)                       | Progress:		2% (6878) 5000 c/s (0s +/- 1m07)                       / Progress:		3% (10317) 5000 c/s (0s +/- 1m06)                      - Progress:		4% (13756) 5000 c/s (0s +/- 1m06)                      \ Progress:		5% (17195) 5000 c/s (0s +/- 1m05)                      | Progress:		6% (20634) 5000 c/s (0s +/- 1m04)                      / Progress:		7% (24073) 5000 c/s (0s +/- 1m03)                      - Progress:		8% (27511) 5000 c/s (0s +/- 1m03)                      \ Progress:		9% (30950) 5000 c/s (0s +/- 1m02)                      | Progress:		10% (34389) 5000 c/s (0s +/- 1m01)                     / Progress:		11% (37828) 5000 c/s (0s +/- 1m01)                     - Progress:		12% (41267) 5000 c/s (0s +/- 1m00)                     \ Progress:		13% (44706) 5000 c/s (0s +/- 59s)                      | Progress:		14% (48145) 5000 c/s (0s +/- 59s)                      / Progress:		15% (51584) 5000 c/s (0s +/- 58s)                      - Progress:		16% (55022) 5000 c/s (0s +/- 57s)                      \ Progress:		17% (58461) 5000 c/s (0s +/- 57s)                      | Progress:		18% (61900) 5000 c/s (0s +/- 56s)                      / Progress:		19% (65339) 5000 c/s (0s +/- 55s)                      - Progress:		20% (68778) 5000 c/s (0s +/- 55s)                      \ Progress:		21% (72217) 5000 c/s (0s +/- 54s)                      | Progress:		22% (75656) 5000 c/s (0s +/- 53s)                      / Progress:		23% (79095) 5000 c/s (0s +/- 52s)                      - Progress:		24% (82533) 5000 c/s (0s +/- 52s)                      \ Progress:		25% (85972) 5000 c/s (0s +/- 51s)                      | Progress:		26% (89411) 5000 c/s (0s +/- 50s)                      / Progress:		27% (92850) 5000 c/s (0s +/- 50s)                      - Progress:		28% (96289) 5000 c/s (0s +/- 49s)                      \ Progress:		29% (99728) 5000 c/s (0s +/- 48s)                      | Progress:		30% (103167) 5000 c/s (0s +/- 48s)                     / Progress:		31% (106605) 5000 c/s (0s +/- 47s)                     - Progress:		32% (110044) 5000 c/s (0s +/- 46s)                     \ Progress:		33% (113483) 5000 c/s (0s +/- 46s)                     | Progress:		34% (116922) 5000 c/s (0s +/- 45s)                     / Progress:		35% (120361) 5000 c/s (0s +/- 44s)                     - Progress:		36% (123800) 5000 c/s (0s +/- 44s)                     \ Progress:		37% (127239) 5000 c/s (0s +/- 43s)                     | Progress:		38% (130678) 5000 c/s (0s +/- 42s)                     / Progress:		39% (134116) 5000 c/s (0s +/- 41s)                     - Progress:		40% (137555) 5000 c/s (0s +/- 41s)                     \ Progress:		41% (140994) 5000 c/s (0s +/- 40s)                     | Progress:		42% (144433) 5000 c/s (0s +/- 39s)                     / Progress:		43% (147872) 5000 c/s (0s +/- 39s)                     - Progress:		44% (151311) 5000 c/s (0s +/- 38s)                     \ Progress:		45% (154750) 5000 c/s (0s +/- 37s)                     \ Progress:		45% (155030) 150030 c/s (0s +/- 1s)                    | Progress:		46% (158189) 150030 c/s (0s +/- 1s)                    / Progress:		47% (161627) 150030 c/s (0s +/- 1s)                    - Progress:		48% (165066) 150030 c/s (0s +/- 1s)                    \ Progress:		49% (168505) 150030 c/s (0s +/- 1s)                    | Progress:		50% (171944) 150030 c/s (0s +/- 1s)                    / Progress:		51% (175383) 150030 c/s (0s +/- 1s)                    - Progress:		52% (178822) 150030 c/s (1s +/- 1s)                    \ Progress:		53% (182261) 150030 c/s (1s +/- 1s)                    | Progress:		54% (185699) 150030 c/s (1s +/- 1s)                    / Progress:		55% (189138) 150030 c/s (1s +/- 1s)                    - Progress:		56% (192577) 150030 c/s (1s +/- 1s)                    \ Progress:		57% (196016) 150030 c/s (1s +/- <1s)                   | Progress:		58% (199455) 150030 c/s (1s +/- <1s)                   / Progress:		59% (202894) 150030 c/s (1s +/- <1s)                   - Progress:		60% (206333) 150030 c/s (1s +/- <1s)                   \ Progress:		61% (209772) 150030 c/s (1s +/- <1s)                   | Progress:		62% (213210) 150030 c/s (1s +/- <1s)                   / Progress:		63% (216649) 150030 c/s (1s +/- <1s)                   - Progress:		64% (220088) 150030 c/s (1s +/- <1s)                   \ Progress:		65% (223527) 150030 c/s (1s +/- <1s)                   | Progress:		66% (226966) 150030 c/s (1s +/- <1s)                   / Progress:		67% (230405) 150030 c/s (1s +/- <1s)                   - Progress:		68% (233844) 150030 c/s (1s +/- <1s)                   \ Progress:		69% (237283) 150030 c/s (1s +/- <1s)                   | Progress:		70% (240721) 150030 c/s (1s +/- <1s)                   / Progress:		71% (244160) 150030 c/s (1s +/- <1s)                   - Progress:		72% (247599) 150030 c/s (1s +/- <1s)                   \ Progress:		73% (251038) 150030 c/s (1s +/- <1s)                   | Progress:		74% (254477) 150030 c/s (1s +/- <1s)                   / Progress:		75% (257916) 150030 c/s (1s +/- <1s)                   - Progress:		76% (261355) 150030 c/s (1s +/- <1s)                   \ Progress:		77% (264793) 150030 c/s (1s +/- <1s)                   | Progress:		78% (268232) 150030 c/s (1s +/- <1s)                   / Progress:		79% (271671) 150030 c/s (1s +/- <1s)                   - Progress:		80% (275110) 150030 c/s (1s +/- <1s)                   \ Progress:		81% (278549) 150030 c/s (1s +/- <1s)                   | Progress:		82% (281988) 150030 c/s (1s +/- <1s)                   / Progress:		83% (285427) 150030 c/s (1s +/- <1s)                   - Progress:		84% (288866) 150030 c/s (1s +/- <1s)                   \ Progress:		85% (292304) 150030 c/s (1s +/- <1s)                   | Progress:		86% (295743) 150030 c/s (1s +/- <1s)                   / Progress:		87% (299182) 150030 c/s (1s +/- <1s)                   - Progress:		88% (302621) 150030 c/s (1s +/- <1s)                   \ Progress:		89% (306060) 150030 c/s (1s +/- <1s)                   | Progress:		90% (309499) 150030 c/s (1s +/- <1s)                   / Progress:		91% (312938) 150030 c/s (1s +/- <1s)                   - Progress:		92% (316377) 150030 c/s (1s +/- <1s)                   \ Progress:		93% (319815) 150030 c/s (1s +/- <1s)                   | Progress:		94% (323254) 150030 c/s (1s +/- <1s)                   / Progress:		95% (326693) 150030 c/s (1s +/- <1s)                   - Progress:		96% (330132) 150030 c/s (1s +/- <1s)                   \ Progress:		97% (333571) 150030 c/s (1s +/- <1s)                   | Progress:		98% (337010) 150030 c/s (1s +/- <1s)                   / Progress:		99% (340449) 150030 c/s (1s +/- <1s)                   * Time:    		Compressing the database took 0.751587 seconds.		
 * Result:		(122a,38u,1684,11589,3139,14728)
** Writing FIC database to file
 * File:		train30.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		auto-all-24d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		955
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(108a,0u,1576,9669,1631,11300)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (10) ? c/s  		 | Progress:		2% (20) ? c/s  		 / Progress:		3% (29) ? c/s  		 - Progress:		4% (39) ? c/s  		 \ Progress:		5% (48) ? c/s  		 | Progress:		6% (58) ? c/s  		 / Progress:		7% (67) ? c/s  		 - Progress:		8% (77) ? c/s  		 \ Progress:		9% (86) ? c/s  		 | Progress:		10% (96) ? c/s  		 / Progress:		11% (106) ? c/s  		 - Progress:		12% (115) ? c/s  		 \ Progress:		13% (125) ? c/s  		 | Progress:		14% (134) ? c/s  		 / Progress:		15% (144) ? c/s  		 - Progress:		16% (153) ? c/s  		 \ Progress:		17% (163) ? c/s  		 | Progress:		18% (172) ? c/s  		 / Progress:		19% (182) ? c/s  		 - Progress:		20% (191) ? c/s  		 \ Progress:		21% (201) ? c/s  		 | Progress:		22% (211) ? c/s  		 / Progress:		23% (220) ? c/s  		 - Progress:		24% (230) ? c/s  		 \ Progress:		25% (239) ? c/s  		 | Progress:		26% (249) ? c/s  		 / Progress:		27% (258) ? c/s  		 - Progress:		28% (268) ? c/s  		 \ Progress:		29% (277) ? c/s  		 | Progress:		30% (287) ? c/s  		 / Progress:		31% (297) ? c/s  		 - Progress:		32% (306) ? c/s  		 \ Progress:		33% (316) ? c/s  		 | Progress:		34% (325) ? c/s  		 / Progress:		35% (335) ? c/s  		 - Progress:		36% (344) ? c/s  		 \ Progress:		37% (354) ? c/s  		 | Progress:		38% (363) ? c/s  		 / Progress:		39% (373) ? c/s  		 - Progress:		40% (382) ? c/s  		 \ Progress:		41% (392) ? c/s  		 | Progress:		42% (402) ? c/s  		 / Progress:		43% (411) ? c/s  		 - Progress:		44% (421) ? c/s  		 \ Progress:		45% (430) ? c/s  		 | Progress:		46% (440) ? c/s  		 / Progress:		47% (449) ? c/s  		 - Progress:		48% (459) ? c/s  		 \ Progress:		49% (468) ? c/s  		 | Progress:		50% (478) ? c/s  		 / Progress:		51% (488) ? c/s  		 - Progress:		52% (497) ? c/s  		 \ Progress:		53% (507) ? c/s  		 | Progress:		54% (516) ? c/s  		 / Progress:		55% (526) ? c/s  		 - Progress:		56% (535) ? c/s  		 \ Progress:		57% (545) ? c/s  		 | Progress:		58% (554) ? c/s  		 / Progress:		59% (564) ? c/s  		 - Progress:		60% (573) ? c/s  		 \ Progress:		61% (583) ? c/s  		 | Progress:		62% (593) ? c/s  		 / Progress:		63% (602) ? c/s  		 - Progress:		64% (612) ? c/s  		 \ Progress:		65% (621) ? c/s  		 | Progress:		66% (631) ? c/s  		 / Progress:		67% (640) ? c/s  		 - Progress:		68% (650) ? c/s  		 \ Progress:		69% (659) ? c/s  		 | Progress:		70% (669) ? c/s  		 / Progress:		71% (679) ? c/s  		 - Progress:		72% (688) ? c/s  		 \ Progress:		73% (698) ? c/s  		 | Progress:		74% (707) ? c/s  		 / Progress:		75% (717) ? c/s  		 - Progress:		76% (726) ? c/s  		 \ Progress:		77% (736) ? c/s  		 | Progress:		78% (745) ? c/s  		 / Progress:		79% (755) ? c/s  		 - Progress:		80% (764) ? c/s  		 \ Progress:		81% (774) ? c/s  		 | Progress:		82% (784) ? c/s  		 / Progress:		83% (793) ? c/s  		 - Progress:		84% (803) ? c/s  		 \ Progress:		85% (812) ? c/s  		 | Progress:		86% (822) ? c/s  		 / Progress:		87% (831) ? c/s  		 - Progress:		88% (841) ? c/s  		 \ Progress:		89% (850) ? c/s  		 | Progress:		90% (860) ? c/s  		 / Progress:		91% (870) ? c/s  		 - Progress:		92% (879) ? c/s  		 \ Progress:		93% (889) ? c/s  		 | Progress:		94% (898) ? c/s  		 / Progress:		95% (908) ? c/s  		 - Progress:		96% (917) ? c/s  		 \ Progress:		97% (927) ? c/s  		 | Progress:		98% (936) ? c/s  		 / Progress:		99% (946) ? c/s  		 * Time:    		Compressing the database took 0.007941 seconds.		
 * Result:		(101a,21u,1143,7401,2026,9427)
 * Creating:			fold 2
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 2
** Writing FIC database to file
 * File:		train6.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		auto-all-24d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		208619
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(127a,0u,3041,19138,1998,21137)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (2087) ? c/s  		 | Progress:		2% (4173) ? c/s  		 | Progress:		2% (5000) 5000 c/s (0s +/- 40s)                        / Progress:		3% (6259) 5000 c/s (0s +/- 40s)                        - Progress:		4% (8345) 5000 c/s (0s +/- 40s)                        \ Progress:		5% (10431) 5000 c/s (0s +/- 39s)                       | Progress:		6% (12518) 5000 c/s (0s +/- 39s)                       / Progress:		7% (14604) 5000 c/s (0s +/- 38s)                       - Progress:		8% (16690) 5000 c/s (0s +/- 38s)                       \ Progress:		9% (18776) 5000 c/s (0s +/- 37s)                       | Progress:		10% (20862) 5000 c/s (0s +/- 37s)                      / Progress:		11% (22949) 5000 c/s (0s +/- 37s)                      - Progress:		12% (25035) 5000 c/s (0s +/- 36s)                      \ Progress:		13% (27121) 5000 c/s (0s +/- 36s)                      | Progress:		14% (29207) 5000 c/s (0s +/- 35s)                      / Progress:		15% (31293) 5000 c/s (0s +/- 35s)                      - Progress:		16% (33380) 5000 c/s (0s +/- 35s)                      \ Progress:		17% (35466) 5000 c/s (0s +/- 34s)                      | Progress:		18% (37552) 5000 c/s (0s +/- 34s)                      / Progress:		19% (39638) 5000 c/s (0s +/- 33s)                      - Progress:		20% (41724) 5000 c/s (0s +/- 33s)                      \ Progress:		21% (43810) 5000 c/s (0s +/- 32s)                      | Progress:		22% (45897) 5000 c/s (0s +/- 32s)                      / Progress:		23% (47983) 5000 c/s (0s +/- 32s)                      - Progress:		24% (50069) 5000 c/s (0s +/- 31s)                      \ Progress:		25% (52155) 5000 c/s (0s +/- 31s)                      | Progress:		26% (54241) 5000 c/s (0s +/- 30s)                      / Progress:		27% (56328) 5000 c/s (0s +/- 30s)                      - Progress:		28% (58414) 5000 c/s (0s +/- 30s)                      \ Progress:		29% (60500) 5000 c/s (0s +/- 29s)                      | Progress:		30% (62586) 5000 c/s (0s +/- 29s)                      / Progress:		31% (64672) 5000 c/s (0s +/- 28s)                      - Progress:		32% (66759) 5000 c/s (0s +/- 28s)                      \ Progress:		33% (68845) 5000 c/s (0s +/- 27s)                      | Progress:		34% (70931) 5000 c/s (0s +/- 27s)                      / Progress:		35% (73017) 5000 c/s (0s +/- 27s)                      - Progress:		36% (75103) 5000 c/s (0s +/- 26s)                      \ Progress:		37% (77190) 5000 c/s (0s +/- 26s)                      | Progress:		38% (79276) 5000 c/s (0s +/- 25s)                      / Progress:		39% (81362) 5000 c/s (0s +/- 25s)                      - Progress:		40% (83448) 5000 c/s (0s +/- 25s)                      \ Progress:		41% (85534) 5000 c/s (0s +/- 24s)                      | Progress:		42% (87620) 5000 c/s (1s +/- 24s)                      / Progress:		43% (89707) 5000 c/s (1s +/- 23s)                      - Progress:		44% (91793) 5000 c/s (1s +/- 23s)                      \ Progress:		45% (93879) 5000 c/s (1s +/- 22s)                      | Progress:		46% (95965) 5000 c/s (1s +/- 22s)                      / Progress:		47% (98051) 5000 c/s (1s +/- 22s)                      - Progress:		48% (100138) 5000 c/s (1s +/- 21s)                     \ Progress:		49% (102224) 5000 c/s (1s +/- 21s)                     | Progress:		50% (104310) 5000 c/s (1s +/- 20s)                     / Progress:		51% (106396) 5000 c/s (1s +/- 20s)                     - Progress:		52% (108482) 5000 c/s (1s +/- 20s)                     \ Progress:		53% (110569) 5000 c/s (1s +/- 19s)                     | Progress:		54% (112655) 5000 c/s (1s +/- 19s)                     / Progress:		55% (114741) 5000 c/s (1s +/- 18s)                     - Progress:		56% (116827) 5000 c/s (1s +/- 18s)                     \ Progress:		57% (118913) 5000 c/s (1s +/- 17s)                     | Progress:		58% (121000) 5000 c/s (1s +/- 17s)                     / Progress:		59% (123086) 5000 c/s (1s +/- 17s)                     - Progress:		60% (125172) 5000 c/s (1s +/- 16s)                     \ Progress:		61% (127258) 5000 c/s (1s +/- 16s)                     | Progress:		62% (129344) 5000 c/s (1s +/- 15s)                     / Progress:		63% (131430) 5000 c/s (1s +/- 15s)                     - Progress:		64% (133517) 5000 c/s (1s +/- 15s)                     \ Progress:		65% (135603) 5000 c/s (1s +/- 14s)                     | Progress:		66% (137689) 5000 c/s (1s +/- 14s)                     / Progress:		67% (139775) 5000 c/s (1s +/- 13s)                     - Progress:		68% (141861) 5000 c/s (1s +/- 13s)                     \ Progress:		69% (143948) 5000 c/s (1s +/- 12s)                     | Progress:		70% (146034) 5000 c/s (1s +/- 12s)                     / Progress:		71% (148120) 5000 c/s (1s +/- 12s)                     - Progress:		72% (150206) 5000 c/s (1s +/- 11s)                     \ Progress:		73% (152292) 5000 c/s (1s +/- 11s)                     | Progress:		74% (154379) 5000 c/s (1s +/- 10s)                     | Progress:		74% (155030) 150030 c/s (1s +/- <1s)                   / Progress:		75% (156465) 150030 c/s (1s +/- <1s)                   - Progress:		76% (158551) 150030 c/s (1s +/- <1s)                   \ Progress:		77% (160637) 150030 c/s (1s +/- <1s)                   | Progress:		78% (162723) 150030 c/s (1s +/- <1s)                   / Progress:		79% (164810) 150030 c/s (1s +/- <1s)                   - Progress:		80% (166896) 150030 c/s (1s +/- <1s)                   \ Progress:		81% (168982) 150030 c/s (1s +/- <1s)                   | Progress:		82% (171068) 150030 c/s (1s +/- <1s)                   / Progress:		83% (173154) 150030 c/s (1s +/- <1s)                   - Progress:		84% (175240) 150030 c/s (1s +/- <1s)                   \ Progress:		85% (177327) 150030 c/s (1s +/- <1s)                   | Progress:		86% (179413) 150030 c/s (1s +/- <1s)                   / Progress:		87% (181499) 150030 c/s (1s +/- <1s)                   - Progress:		88% (183585) 150030 c/s (1s +/- <1s)                   \ Progress:		89% (185671) 150030 c/s (1s +/- <1s)                   | Progress:		90% (187758) 150030 c/s (1s +/- <1s)                   / Progress:		91% (189844) 150030 c/s (1s +/- <1s)                   - Progress:		92% (191930) 150030 c/s (1s +/- <1s)                   \ Progress:		93% (194016) 150030 c/s (1s +/- <1s)                   | Progress:		94% (196102) 150030 c/s (1s +/- <1s)                   / Progress:		95% (198189) 150030 c/s (1s +/- <1s)                   - Progress:		96% (200275) 150030 c/s (1s +/- <1s)                   \ Progress:		97% (202361) 150030 c/s (1s +/- <1s)                   | Progress:		98% (204447) 150030 c/s (1s +/- <1s)                   / Progress:		99% (206533) 150030 c/s (1s +/- <1s)                   * Time:    		Compressing the database took 0.991794 seconds.		
 * Result:		(119a,43u,1733,11929,3219,15147)
** Writing FIC database to file
 * File:		train30.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		auto-all-24d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		819
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(109a,0u,1502,9224,1652,10876)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (9) ? c/s  		 | Progress:		2% (17) ? c/s  		 / Progress:		3% (25) ? c/s  		 - Progress:		4% (33) ? c/s  		 \ Progress:		5% (41) ? c/s  		 | Progress:		6% (50) ? c/s  		 / Progress:		7% (58) ? c/s  		 - Progress:		8% (66) ? c/s  		 \ Progress:		9% (74) ? c/s  		 | Progress:		10% (82) ? c/s  		 / Progress:		11% (91) ? c/s  		 - Progress:		12% (99) ? c/s  		 \ Progress:		13% (107) ? c/s  		 | Progress:		14% (115) ? c/s  		 / Progress:		15% (123) ? c/s  		 - Progress:		16% (132) ? c/s  		 \ Progress:		17% (140) ? c/s  		 | Progress:		18% (148) ? c/s  		 / Progress:		19% (156) ? c/s  		 - Progress:		20% (164) ? c/s  		 \ Progress:		21% (172) ? c/s  		 | Progress:		22% (181) ? c/s  		 / Progress:		23% (189) ? c/s  		 - Progress:		24% (197) ? c/s  		 \ Progress:		25% (205) ? c/s  		 | Progress:		26% (213) ? c/s  		 / Progress:		27% (222) ? c/s  		 - Progress:		28% (230) ? c/s  		 \ Progress:		29% (238) ? c/s  		 | Progress:		30% (246) ? c/s  		 / Progress:		31% (254) ? c/s  		 - Progress:		32% (263) ? c/s  		 \ Progress:		33% (271) ? c/s  		 | Progress:		34% (279) ? c/s  		 / Progress:		35% (287) ? c/s  		 - Progress:		36% (295) ? c/s  		 \ Progress:		37% (304) ? c/s  		 | Progress:		38% (312) ? c/s  		 / Progress:		39% (320) ? c/s  		 - Progress:		40% (328) ? c/s  		 \ Progress:		41% (336) ? c/s  		 | Progress:		42% (344) ? c/s  		 / Progress:		43% (353) ? c/s  		 - Progress:		44% (361) ? c/s  		 \ Progress:		45% (369) ? c/s  		 | Progress:		46% (377) ? c/s  		 / Progress:		47% (385) ? c/s  		 - Progress:		48% (394) ? c/s  		 \ Progress:		49% (402) ? c/s  		 | Progress:		50% (410) ? c/s  		 / Progress:		51% (418) ? c/s  		 - Progress:		52% (426) ? c/s  		 \ Progress:		53% (435) ? c/s  		 | Progress:		54% (443) ? c/s  		 / Progress:		55% (451) ? c/s  		 - Progress:		56% (459) ? c/s  		 \ Progress:		57% (467) ? c/s  		 | Progress:		58% (476) ? c/s  		 / Progress:		59% (484) ? c/s  		 - Progress:		60% (492) ? c/s  		 \ Progress:		61% (500) ? c/s  		 | Progress:		62% (508) ? c/s  		 / Progress:		63% (516) ? c/s  		 - Progress:		64% (525) ? c/s  		 \ Progress:		65% (533) ? c/s  		 | Progress:		66% (541) ? c/s  		 / Progress:		67% (549) ? c/s  		 - Progress:		68% (557) ? c/s  		 \ Progress:		69% (566) ? c/s  		 | Progress:		70% (574) ? c/s  		 / Progress:		71% (582) ? c/s  		 - Progress:		72% (590) ? c/s  		 \ Progress:		73% (598) ? c/s  		 | Progress:		74% (607) ? c/s  		 / Progress:		75% (615) ? c/s  		 - Progress:		76% (623) ? c/s  		 \ Progress:		77% (631) ? c/s  		 | Progress:		78% (639) ? c/s  		 / Progress:		79% (648) ? c/s  		 - Progress:		80% (656) ? c/s  		 \ Progress:		81% (664) ? c/s  		 | Progress:		82% (672) ? c/s  		 / Progress:		83% (680) ? c/s  		 - Progress:		84% (688) ? c/s  		 \ Progress:		85% (697) ? c/s  		 | Progress:		86% (705) ? c/s  		 / Progress:		87% (713) ? c/s  		 - Progress:		88% (721) ? c/s  		 \ Progress:		89% (729) ? c/s  		 | Progress:		90% (738) ? c/s  		 / Progress:		91% (746) ? c/s  		 - Progress:		92% (754) ? c/s  		 \ Progress:		93% (762) ? c/s  		 | Progress:		94% (770) ? c/s  		 / Progress:		95% (779) ? c/s  		 - Progress:		96% (787) ? c/s  		 \ Progress:		97% (795) ? c/s  		 | Progress:		98% (803) ? c/s  		 / Progress:		99% (811) ? c/s  		 * Time:    		Compressing the database took 0.006260 seconds.		
 * Result:		(104a,18u,1088,7041,2018,9060)
 * Creating:			fold 3
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 3
** Writing FIC database to file
 * File:		train6.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		auto-all-24d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		397607
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(127a,0u,3092,19334,2009,21343)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (3977) ? c/s  		 \ Progress:		1% (5000) 5000 c/s (0s +/- 1m18)                       | Progress:		2% (7953) 5000 c/s (0s +/- 1m17)                       / Progress:		3% (11929) 5000 c/s (0s +/- 1m17)                      - Progress:		4% (15905) 5000 c/s (0s +/- 1m16)                      \ Progress:		5% (19881) 5000 c/s (0s +/- 1m15)                      | Progress:		6% (23857) 5000 c/s (0s +/- 1m14)                      / Progress:		7% (27833) 5000 c/s (0s +/- 1m13)                      - Progress:		8% (31809) 5000 c/s (0s +/- 1m13)                      \ Progress:		9% (35785) 5000 c/s (0s +/- 1m12)                      | Progress:		10% (39761) 5000 c/s (0s +/- 1m11)                     / Progress:		11% (43737) 5000 c/s (0s +/- 1m10)                     - Progress:		12% (47713) 5000 c/s (0s +/- 1m09)                     \ Progress:		13% (51689) 5000 c/s (0s +/- 1m09)                     | Progress:		14% (55665) 5000 c/s (0s +/- 1m08)                     / Progress:		15% (59642) 5000 c/s (0s +/- 1m07)                     - Progress:		16% (63618) 5000 c/s (0s +/- 1m06)                     \ Progress:		17% (67594) 5000 c/s (0s +/- 1m06)                     | Progress:		18% (71570) 5000 c/s (0s +/- 1m05)                     / Progress:		19% (75546) 5000 c/s (0s +/- 1m04)                     - Progress:		20% (79522) 5000 c/s (0s +/- 1m03)                     \ Progress:		21% (83498) 5000 c/s (0s +/- 1m02)                     | Progress:		22% (87474) 5000 c/s (0s +/- 1m02)                     / Progress:		23% (91450) 5000 c/s (0s +/- 1m01)                     - Progress:		24% (95426) 5000 c/s (0s +/- 1m00)                     \ Progress:		25% (99402) 5000 c/s (0s +/- 59s)                      | Progress:		26% (103378) 5000 c/s (0s +/- 58s)                     / Progress:		27% (107354) 5000 c/s (1s +/- 58s)                     - Progress:		28% (111330) 5000 c/s (1s +/- 57s)                     \ Progress:		29% (115307) 5000 c/s (1s +/- 56s)                     | Progress:		30% (119283) 5000 c/s (1s +/- 55s)                     / Progress:		31% (123259) 5000 c/s (1s +/- 54s)                     - Progress:		32% (127235) 5000 c/s (1s +/- 54s)                     \ Progress:		33% (131211) 5000 c/s (1s +/- 53s)                     | Progress:		34% (135187) 5000 c/s (1s +/- 52s)                     / Progress:		35% (139163) 5000 c/s (1s +/- 51s)                     - Progress:		36% (143139) 5000 c/s (1s +/- 50s)                     \ Progress:		37% (147115) 5000 c/s (1s +/- 50s)                     | Progress:		38% (151091) 5000 c/s (1s +/- 49s)                     | Progress:		38% (155030) 150030 c/s (1s +/- 1s)                    / Progress:		39% (155067) 150030 c/s (1s +/- 1s)                    - Progress:		40% (159043) 150030 c/s (1s +/- 1s)                    \ Progress:		41% (163019) 150030 c/s (1s +/- 1s)                    | Progress:		42% (166995) 150030 c/s (1s +/- 1s)                    / Progress:		43% (170972) 150030 c/s (1s +/- 1s)                    - Progress:		44% (174948) 150030 c/s (1s +/- 1s)                    \ Progress:		45% (178924) 150030 c/s (1s +/- 1s)                    | Progress:		46% (182900) 150030 c/s (1s +/- 1s)                    / Progress:		47% (186876) 150030 c/s (1s +/- 1s)                    - Progress:		48% (190852) 150030 c/s (1s +/- 1s)                    \ Progress:		49% (194828) 150030 c/s (1s +/- 1s)                    | Progress:		50% (198804) 150030 c/s (1s +/- 1s)                    / Progress:		51% (202780) 150030 c/s (1s +/- 1s)                    - Progress:		52% (206756) 150030 c/s (1s +/- 1s)                    \ Progress:		53% (210732) 150030 c/s (1s +/- 1s)                    | Progress:		54% (214708) 150030 c/s (1s +/- 1s)                    / Progress:		55% (218684) 150030 c/s (1s +/- 1s)                    - Progress:		56% (222660) 150030 c/s (1s +/- 1s)                    \ Progress:		57% (226636) 150030 c/s (1s +/- 1s)                    | Progress:		58% (230613) 150030 c/s (1s +/- 1s)                    / Progress:		59% (234589) 150030 c/s (1s +/- 1s)                    - Progress:		60% (238565) 150030 c/s (1s +/- 1s)                    \ Progress:		61% (242541) 150030 c/s (1s +/- 1s)                    | Progress:		62% (246517) 150030 c/s (1s +/- 1s)                    / Progress:		63% (250493) 150030 c/s (1s +/- <1s)                   - Progress:		64% (254469) 150030 c/s (1s +/- <1s)                   \ Progress:		65% (258445) 150030 c/s (1s +/- <1s)                   | Progress:		66% (262421) 150030 c/s (1s +/- <1s)                   / Progress:		67% (266397) 150030 c/s (1s +/- <1s)                   - Progress:		68% (270373) 150030 c/s (1s +/- <1s)                   \ Progress:		69% (274349) 150030 c/s (1s +/- <1s)                   | Progress:		70% (278325) 150030 c/s (1s +/- <1s)                   / Progress:		71% (282301) 150030 c/s (1s +/- <1s)                   - Progress:		72% (286278) 150030 c/s (1s +/- <1s)                   \ Progress:		73% (290254) 150030 c/s (1s +/- <1s)                   | Progress:		74% (294230) 150030 c/s (1s +/- <1s)                   / Progress:		75% (298206) 150030 c/s (1s +/- <1s)                   - Progress:		76% (302182) 150030 c/s (1s +/- <1s)                   \ Progress:		77% (306158) 150030 c/s (1s +/- <1s)                   | Progress:		78% (310134) 150030 c/s (1s +/- <1s)                   / Progress:		79% (314110) 150030 c/s (1s +/- <1s)                   - Progress:		80% (318086) 150030 c/s (1s +/- <1s)                   \ Progress:		81% (322062) 150030 c/s (1s +/- <1s)                   | Progress:		82% (326038) 150030 c/s (1s +/- <1s)                   / Progress:		83% (330014) 150030 c/s (1s +/- <1s)                   - Progress:		84% (333990) 150030 c/s (1s +/- <1s)                   \ Progress:		85% (337966) 150030 c/s (1s +/- <1s)                   | Progress:		86% (341943) 150030 c/s (1s +/- <1s)                   / Progress:		87% (345919) 150030 c/s (1s +/- <1s)                   - Progress:		88% (349895) 150030 c/s (1s +/- <1s)                   \ Progress:		89% (353871) 150030 c/s (1s +/- <1s)                   | Progress:		90% (357847) 150030 c/s (1s +/- <1s)                   / Progress:		91% (361823) 150030 c/s (1s +/- <1s)                   - Progress:		92% (365799) 150030 c/s (1s +/- <1s)                   \ Progress:		93% (369775) 150030 c/s (1s +/- <1s)                   | Progress:		94% (373751) 150030 c/s (1s +/- <1s)                   / Progress:		95% (377727) 150030 c/s (1s +/- <1s)                   - Progress:		96% (381703) 150030 c/s (1s +/- <1s)                   \ Progress:		97% (385679) 150030 c/s (1s +/- <1s)                   | Progress:		98% (389655) 150030 c/s (1s +/- <1s)                   / Progress:		99% (393631) 150030 c/s (1s +/- <1s)                   * Time:    		Compressing the database took 1.219547 seconds.		
 * Result:		(119a,50u,1610,11265,3484,14749)
** Writing FIC database to file
 * File:		train30.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		auto-all-24d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		419
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(108a,0u,1456,8950,1627,10577)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (5) ? c/s  		 | Progress:		2% (9) ? c/s  		 / Progress:		3% (13) ? c/s  		 - Progress:		4% (17) ? c/s  		 \ Progress:		5% (21) ? c/s  		 | Progress:		6% (26) ? c/s  		 / Progress:		7% (30) ? c/s  		 - Progress:		8% (34) ? c/s  		 \ Progress:		9% (38) ? c/s  		 | Progress:		10% (42) ? c/s  		 / Progress:		11% (47) ? c/s  		 - Progress:		12% (51) ? c/s  		 \ Progress:		13% (55) ? c/s  		 | Progress:		14% (59) ? c/s  		 / Progress:		15% (63) ? c/s  		 - Progress:		16% (68) ? c/s  		 \ Progress:		17% (72) ? c/s  		 | Progress:		18% (76) ? c/s  		 / Progress:		19% (80) ? c/s  		 - Progress:		20% (84) ? c/s  		 \ Progress:		21% (88) ? c/s  		 | Progress:		22% (93) ? c/s  		 / Progress:		23% (97) ? c/s  		 - Progress:		24% (101) ? c/s  		 \ Progress:		25% (105) ? c/s  		 | Progress:		26% (109) ? c/s  		 / Progress:		27% (114) ? c/s  		 - Progress:		28% (118) ? c/s  		 \ Progress:		29% (122) ? c/s  		 | Progress:		30% (126) ? c/s  		 / Progress:		31% (130) ? c/s  		 - Progress:		32% (135) ? c/s  		 \ Progress:		33% (139) ? c/s  		 | Progress:		34% (143) ? c/s  		 / Progress:		35% (147) ? c/s  		 - Progress:		36% (151) ? c/s  		 \ Progress:		37% (156) ? c/s  		 | Progress:		38% (160) ? c/s  		 / Progress:		39% (164) ? c/s  		 - Progress:		40% (168) ? c/s  		 \ Progress:		41% (172) ? c/s  		 | Progress:		42% (176) ? c/s  		 / Progress:		43% (181) ? c/s  		 - Progress:		44% (185) ? c/s  		 \ Progress:		45% (189) ? c/s  		 | Progress:		46% (193) ? c/s  		 / Progress:		47% (197) ? c/s  		 - Progress:		48% (202) ? c/s  		 \ Progress:		49% (206) ? c/s  		 | Progress:		50% (210) ? c/s  		 / Progress:		51% (214) ? c/s  		 - Progress:		52% (218) ? c/s  		 \ Progress:		53% (223) ? c/s  		 | Progress:		54% (227) ? c/s  		 / Progress:		55% (231) ? c/s  		 - Progress:		56% (235) ? c/s  		 \ Progress:		57% (239) ? c/s  		 | Progress:		58% (244) ? c/s  		 / Progress:		59% (248) ? c/s  		 - Progress:		60% (252) ? c/s  		 \ Progress:		61% (256) ? c/s  		 | Progress:		62% (260) ? c/s  		 / Progress:		63% (264) ? c/s  		 - Progress:		64% (269) ? c/s  		 \ Progress:		65% (273) ? c/s  		 | Progress:		66% (277) ? c/s  		 / Progress:		67% (281) ? c/s  		 - Progress:		68% (285) ? c/s  		 \ Progress:		69% (290) ? c/s  		 | Progress:		70% (294) ? c/s  		 / Progress:		71% (298) ? c/s  		 - Progress:		72% (302) ? c/s  		 \ Progress:		73% (306) ? c/s  		 | Progress:		74% (311) ? c/s  		 / Progress:		75% (315) ? c/s  		 - Progress:		76% (319) ? c/s  		 \ Progress:		77% (323) ? c/s  		 | Progress:		78% (327) ? c/s  		 / Progress:		79% (332) ? c/s  		 - Progress:		80% (336) ? c/s  		 \ Progress:		81% (340) ? c/s  		 | Progress:		82% (344) ? c/s  		 / Progress:		83% (348) ? c/s  		 - Progress:		84% (352) ? c/s  		 \ Progress:		85% (357) ? c/s  		 | Progress:		86% (361) ? c/s  		 / Progress:		87% (365) ? c/s  		 - Progress:		88% (369) ? c/s  		 \ Progress:		89% (373) ? c/s  		 | Progress:		90% (378) ? c/s  		 / Progress:		91% (382) ? c/s  		 - Progress:		92% (386) ? c/s  		 \ Progress:		93% (390) ? c/s  		 | Progress:		94% (394) ? c/s  		 / Progress:		95% (399) ? c/s  		 - Progress:		96% (403) ? c/s  		 \ Progress:		97% (407) ? c/s  		 | Progress:		98% (411) ? c/s  		 / Progress:		99% (415) ? c/s  		 * Time:    		Compressing the database took 0.004516 seconds.		
 * Result:		(101a,18u,1097,7037,1990,9027)
 * Creating:			fold 4
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 4
** Writing FIC database to file
 * File:		train6.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		auto-all-24d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		63688
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(126a,0u,2950,18520,1983,20503)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (637) ? c/s  		 | Progress:		2% (1274) ? c/s  		 / Progress:		3% (1911) ? c/s  		 - Progress:		4% (2548) ? c/s  		 \ Progress:		5% (3185) ? c/s  		 | Progress:		6% (3822) ? c/s  		 / Progress:		7% (4459) ? c/s  		 / Progress:		7% (5000) 5000 c/s (0s +/- 11s)                        - Progress:		8% (5096) 5000 c/s (0s +/- 11s)                        \ Progress:		9% (5732) 5000 c/s (0s +/- 11s)                        | Progress:		10% (6369) 5000 c/s (0s +/- 11s)                       / Progress:		11% (7006) 5000 c/s (0s +/- 11s)                       - Progress:		12% (7643) 5000 c/s (0s +/- 11s)                       \ Progress:		13% (8280) 5000 c/s (0s +/- 11s)                       | Progress:		14% (8917) 5000 c/s (0s +/- 10s)                       / Progress:		15% (9554) 5000 c/s (0s +/- 10s)                       - Progress:		16% (10191) 5000 c/s (0s +/- 10s)                      \ Progress:		17% (10827) 5000 c/s (0s +/- 10s)                      | Progress:		18% (11464) 5000 c/s (0s +/- 10s)                      / Progress:		19% (12101) 5000 c/s (0s +/- 10s)                      - Progress:		20% (12738) 5000 c/s (0s +/- 10s)                      \ Progress:		21% (13375) 5000 c/s (0s +/- 10s)                      | Progress:		22% (14012) 5000 c/s (0s +/- 9s)                       / Progress:		23% (14649) 5000 c/s (0s +/- 9s)                       - Progress:		24% (15286) 5000 c/s (0s +/- 9s)                       \ Progress:		25% (15922) 5000 c/s (0s +/- 9s)                       | Progress:		26% (16559) 5000 c/s (0s +/- 9s)                       / Progress:		27% (17196) 5000 c/s (0s +/- 9s)                       - Progress:		28% (17833) 5000 c/s (0s +/- 9s)                       \ Progress:		29% (18470) 5000 c/s (0s +/- 9s)                       | Progress:		30% (19107) 5000 c/s (0s +/- 8s)                       / Progress:		31% (19744) 5000 c/s (0s +/- 8s)                       - Progress:		32% (20381) 5000 c/s (0s +/- 8s)                       \ Progress:		33% (21018) 5000 c/s (0s +/- 8s)                       | Progress:		34% (21654) 5000 c/s (0s +/- 8s)                       / Progress:		35% (22291) 5000 c/s (0s +/- 8s)                       - Progress:		36% (22928) 5000 c/s (0s +/- 8s)                       \ Progress:		37% (23565) 5000 c/s (0s +/- 8s)                       | Progress:		38% (24202) 5000 c/s (0s +/- 7s)                       / Progress:		39% (24839) 5000 c/s (0s +/- 7s)                       - Progress:		40% (25476) 5000 c/s (0s +/- 7s)                       \ Progress:		41% (26113) 5000 c/s (0s +/- 7s)                       | Progress:		42% (26749) 5000 c/s (0s +/- 7s)                       / Progress:		43% (27386) 5000 c/s (0s +/- 7s)                       - Progress:		44% (28023) 5000 c/s (0s +/- 7s)                       \ Progress:		45% (28660) 5000 c/s (0s +/- 7s)                       | Progress:		46% (29297) 5000 c/s (0s +/- 6s)                       / Progress:		47% (29934) 5000 c/s (0s +/- 6s)                       - Progress:		48% (30571) 5000 c/s (0s +/- 6s)                       \ Progress:		49% (31208) 5000 c/s (0s +/- 6s)                       | Progress:		50% (31844) 5000 c/s (0s +/- 6s)                       / Progress:		51% (32481) 5000 c/s (0s +/- 6s)                       - Progress:		52% (33118) 5000 c/s (0s +/- 6s)                       \ Progress:		53% (33755) 5000 c/s (0s +/- 5s)                       | Progress:		54% (34392) 5000 c/s (0s +/- 5s)                       / Progress:		55% (35029) 5000 c/s (0s +/- 5s)                       - Progress:		56% (35666) 5000 c/s (0s +/- 5s)                       \ Progress:		57% (36303) 5000 c/s (0s +/- 5s)                       | Progress:		58% (36940) 5000 c/s (0s +/- 5s)                       / Progress:		59% (37576) 5000 c/s (0s +/- 5s)                       - Progress:		60% (38213) 5000 c/s (0s +/- 5s)                       \ Progress:		61% (38850) 5000 c/s (0s +/- 4s)                       | Progress:		62% (39487) 5000 c/s (0s +/- 4s)                       / Progress:		63% (40124) 5000 c/s (0s +/- 4s)                       - Progress:		64% (40761) 5000 c/s (0s +/- 4s)                       \ Progress:		65% (41398) 5000 c/s (0s +/- 4s)                       | Progress:		66% (42035) 5000 c/s (0s +/- 4s)                       / Progress:		67% (42671) 5000 c/s (0s +/- 4s)                       - Progress:		68% (43308) 5000 c/s (0s +/- 4s)                       \ Progress:		69% (43945) 5000 c/s (0s +/- 3s)                       | Progress:		70% (44582) 5000 c/s (0s +/- 3s)                       / Progress:		71% (45219) 5000 c/s (0s +/- 3s)                       - Progress:		72% (45856) 5000 c/s (0s +/- 3s)                       \ Progress:		73% (46493) 5000 c/s (0s +/- 3s)                       | Progress:		74% (47130) 5000 c/s (0s +/- 3s)                       / Progress:		75% (47766) 5000 c/s (0s +/- 3s)                       - Progress:		76% (48403) 5000 c/s (0s +/- 3s)                       \ Progress:		77% (49040) 5000 c/s (0s +/- 2s)                       | Progress:		78% (49677) 5000 c/s (0s +/- 2s)                       / Progress:		79% (50314) 5000 c/s (0s +/- 2s)                       - Progress:		80% (50951) 5000 c/s (0s +/- 2s)                       \ Progress:		81% (51588) 5000 c/s (0s +/- 2s)                       | Progress:		82% (52225) 5000 c/s (0s +/- 2s)                       / Progress:		83% (52862) 5000 c/s (0s +/- 2s)                       - Progress:		84% (53498) 5000 c/s (0s +/- 2s)                       \ Progress:		85% (54135) 5000 c/s (0s +/- 1s)                       | Progress:		86% (54772) 5000 c/s (0s +/- 1s)                       / Progress:		87% (55409) 5000 c/s (0s +/- 1s)                       - Progress:		88% (56046) 5000 c/s (0s +/- 1s)                       \ Progress:		89% (56683) 5000 c/s (0s +/- 1s)                       | Progress:		90% (57320) 5000 c/s (0s +/- 1s)                       / Progress:		91% (57957) 5000 c/s (0s +/- 1s)                       - Progress:		92% (58593) 5000 c/s (0s +/- 1s)                       \ Progress:		93% (59230) 5000 c/s (0s +/- <1s)                      | Progress:		94% (59867) 5000 c/s (0s +/- <1s)                      / Progress:		95% (60504) 5000 c/s (0s +/- <1s)                      - Progress:		96% (61141) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (61778) 5000 c/s (0s +/- <1s)                      | Progress:		98% (62415) 5000 c/s (0s +/- <1s)                      / Progress:		99% (63052) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.537866 seconds.		
 * Result:		(121a,41u,1684,11665,3090,14754)
** Writing FIC database to file
 * File:		train30.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		auto-all-24d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		883
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(110a,0u,1601,9862,1668,11531)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (9) ? c/s  		 | Progress:		2% (18) ? c/s  		 / Progress:		3% (27) ? c/s  		 - Progress:		4% (36) ? c/s  		 \ Progress:		5% (45) ? c/s  		 | Progress:		6% (53) ? c/s  		 / Progress:		7% (62) ? c/s  		 - Progress:		8% (71) ? c/s  		 \ Progress:		9% (80) ? c/s  		 | Progress:		10% (89) ? c/s  		 / Progress:		11% (98) ? c/s  		 - Progress:		12% (106) ? c/s  		 \ Progress:		13% (115) ? c/s  		 | Progress:		14% (124) ? c/s  		 / Progress:		15% (133) ? c/s  		 - Progress:		16% (142) ? c/s  		 \ Progress:		17% (151) ? c/s  		 | Progress:		18% (159) ? c/s  		 / Progress:		19% (168) ? c/s  		 - Progress:		20% (177) ? c/s  		 \ Progress:		21% (186) ? c/s  		 | Progress:		22% (195) ? c/s  		 / Progress:		23% (204) ? c/s  		 - Progress:		24% (212) ? c/s  		 \ Progress:		25% (221) ? c/s  		 | Progress:		26% (230) ? c/s  		 / Progress:		27% (239) ? c/s  		 - Progress:		28% (248) ? c/s  		 \ Progress:		29% (257) ? c/s  		 | Progress:		30% (265) ? c/s  		 / Progress:		31% (274) ? c/s  		 - Progress:		32% (283) ? c/s  		 \ Progress:		33% (292) ? c/s  		 | Progress:		34% (301) ? c/s  		 / Progress:		35% (310) ? c/s  		 - Progress:		36% (318) ? c/s  		 \ Progress:		37% (327) ? c/s  		 | Progress:		38% (336) ? c/s  		 / Progress:		39% (345) ? c/s  		 - Progress:		40% (354) ? c/s  		 \ Progress:		41% (363) ? c/s  		 | Progress:		42% (371) ? c/s  		 / Progress:		43% (380) ? c/s  		 - Progress:		44% (389) ? c/s  		 \ Progress:		45% (398) ? c/s  		 | Progress:		46% (407) ? c/s  		 / Progress:		47% (416) ? c/s  		 - Progress:		48% (424) ? c/s  		 \ Progress:		49% (433) ? c/s  		 | Progress:		50% (442) ? c/s  		 / Progress:		51% (451) ? c/s  		 - Progress:		52% (460) ? c/s  		 \ Progress:		53% (468) ? c/s  		 | Progress:		54% (477) ? c/s  		 / Progress:		55% (486) ? c/s  		 - Progress:		56% (495) ? c/s  		 \ Progress:		57% (504) ? c/s  		 | Progress:		58% (513) ? c/s  		 / Progress:		59% (521) ? c/s  		 - Progress:		60% (530) ? c/s  		 \ Progress:		61% (539) ? c/s  		 | Progress:		62% (548) ? c/s  		 / Progress:		63% (557) ? c/s  		 - Progress:		64% (566) ? c/s  		 \ Progress:		65% (574) ? c/s  		 | Progress:		66% (583) ? c/s  		 / Progress:		67% (592) ? c/s  		 - Progress:		68% (601) ? c/s  		 \ Progress:		69% (610) ? c/s  		 | Progress:		70% (619) ? c/s  		 / Progress:		71% (627) ? c/s  		 - Progress:		72% (636) ? c/s  		 \ Progress:		73% (645) ? c/s  		 | Progress:		74% (654) ? c/s  		 / Progress:		75% (663) ? c/s  		 - Progress:		76% (672) ? c/s  		 \ Progress:		77% (680) ? c/s  		 | Progress:		78% (689) ? c/s  		 / Progress:		79% (698) ? c/s  		 - Progress:		80% (707) ? c/s  		 \ Progress:		81% (716) ? c/s  		 | Progress:		82% (725) ? c/s  		 / Progress:		83% (733) ? c/s  		 - Progress:		84% (742) ? c/s  		 \ Progress:		85% (751) ? c/s  		 | Progress:		86% (760) ? c/s  		 / Progress:		87% (769) ? c/s  		 - Progress:		88% (778) ? c/s  		 \ Progress:		89% (786) ? c/s  		 | Progress:		90% (795) ? c/s  		 / Progress:		91% (804) ? c/s  		 - Progress:		92% (813) ? c/s  		 \ Progress:		93% (822) ? c/s  		 | Progress:		94% (831) ? c/s  		 / Progress:		95% (839) ? c/s  		 - Progress:		96% (848) ? c/s  		 \ Progress:		97% (857) ? c/s  		 | Progress:		98% (866) ? c/s  		 / Progress:		99% (875) ? c/s  		 * Time:    		Compressing the database took 0.009827 seconds.		
 * Result:		(106a,16u,1182,7693,1977,9670)
 * Creating:			fold 5
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 5
** Writing FIC database to file
 * File:		train6.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		auto-all-24d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		210812
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(127a,0u,3121,19538,2011,21549)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (2109) ? c/s  		 | Progress:		2% (4217) ? c/s  		 | Progress:		2% (5000) 5000 c/s (0s +/- 41s)                        / Progress:		3% (6325) 5000 c/s (0s +/- 40s)                        - Progress:		4% (8433) 5000 c/s (0s +/- 40s)                        \ Progress:		5% (10541) 5000 c/s (0s +/- 40s)                       | Progress:		6% (12649) 5000 c/s (0s +/- 39s)                       / Progress:		7% (14757) 5000 c/s (0s +/- 39s)                       - Progress:		8% (16865) 5000 c/s (0s +/- 38s)                       \ Progress:		9% (18974) 5000 c/s (0s +/- 38s)                       | Progress:		10% (21082) 5000 c/s (0s +/- 37s)                      / Progress:		11% (23190) 5000 c/s (0s +/- 37s)                      - Progress:		12% (25298) 5000 c/s (0s +/- 37s)                      \ Progress:		13% (27406) 5000 c/s (0s +/- 36s)                      | Progress:		14% (29514) 5000 c/s (0s +/- 36s)                      / Progress:		15% (31622) 5000 c/s (0s +/- 35s)                      - Progress:		16% (33730) 5000 c/s (0s +/- 35s)                      \ Progress:		17% (35839) 5000 c/s (0s +/- 34s)                      | Progress:		18% (37947) 5000 c/s (0s +/- 34s)                      / Progress:		19% (40055) 5000 c/s (0s +/- 34s)                      - Progress:		20% (42163) 5000 c/s (0s +/- 33s)                      \ Progress:		21% (44271) 5000 c/s (0s +/- 33s)                      | Progress:		22% (46379) 5000 c/s (0s +/- 32s)                      / Progress:		23% (48487) 5000 c/s (0s +/- 32s)                      - Progress:		24% (50595) 5000 c/s (0s +/- 32s)                      \ Progress:		25% (52703) 5000 c/s (1s +/- 31s)                      | Progress:		26% (54812) 5000 c/s (1s +/- 31s)                      / Progress:		27% (56920) 5000 c/s (1s +/- 30s)                      - Progress:		28% (59028) 5000 c/s (1s +/- 30s)                      \ Progress:		29% (61136) 5000 c/s (1s +/- 29s)                      | Progress:		30% (63244) 5000 c/s (1s +/- 29s)                      / Progress:		31% (65352) 5000 c/s (1s +/- 29s)                      - Progress:		32% (67460) 5000 c/s (1s +/- 28s)                      \ Progress:		33% (69568) 5000 c/s (1s +/- 28s)                      | Progress:		34% (71677) 5000 c/s (1s +/- 27s)                      / Progress:		35% (73785) 5000 c/s (1s +/- 27s)                      - Progress:		36% (75893) 5000 c/s (1s +/- 26s)                      \ Progress:		37% (78001) 5000 c/s (1s +/- 26s)                      | Progress:		38% (80109) 5000 c/s (1s +/- 26s)                      / Progress:		39% (82217) 5000 c/s (1s +/- 25s)                      - Progress:		40% (84325) 5000 c/s (1s +/- 25s)                      \ Progress:		41% (86433) 5000 c/s (1s +/- 24s)                      | Progress:		42% (88542) 5000 c/s (1s +/- 24s)                      / Progress:		43% (90650) 5000 c/s (1s +/- 24s)                      - Progress:		44% (92758) 5000 c/s (1s +/- 23s)                      \ Progress:		45% (94866) 5000 c/s (1s +/- 23s)                      | Progress:		46% (96974) 5000 c/s (1s +/- 22s)                      / Progress:		47% (99082) 5000 c/s (1s +/- 22s)                      - Progress:		48% (101190) 5000 c/s (1s +/- 21s)                     \ Progress:		49% (103298) 5000 c/s (1s +/- 21s)                     | Progress:		50% (105406) 5000 c/s (1s +/- 21s)                     / Progress:		51% (107515) 5000 c/s (1s +/- 20s)                     - Progress:		52% (109623) 5000 c/s (1s +/- 20s)                     \ Progress:		53% (111731) 5000 c/s (1s +/- 19s)                     | Progress:		54% (113839) 5000 c/s (1s +/- 19s)                     / Progress:		55% (115947) 5000 c/s (1s +/- 18s)                     - Progress:		56% (118055) 5000 c/s (1s +/- 18s)                     \ Progress:		57% (120163) 5000 c/s (1s +/- 18s)                     | Progress:		58% (122271) 5000 c/s (1s +/- 17s)                     / Progress:		59% (124380) 5000 c/s (1s +/- 17s)                     - Progress:		60% (126488) 5000 c/s (1s +/- 16s)                     \ Progress:		61% (128596) 5000 c/s (1s +/- 16s)                     | Progress:		62% (130704) 5000 c/s (1s +/- 16s)                     / Progress:		63% (132812) 5000 c/s (1s +/- 15s)                     - Progress:		64% (134920) 5000 c/s (1s +/- 15s)                     \ Progress:		65% (137028) 5000 c/s (1s +/- 14s)                     | Progress:		66% (139136) 5000 c/s (1s +/- 14s)                     / Progress:		67% (141245) 5000 c/s (1s +/- 13s)                     - Progress:		68% (143353) 5000 c/s (1s +/- 13s)                     \ Progress:		69% (145461) 5000 c/s (1s +/- 13s)                     | Progress:		70% (147569) 5000 c/s (1s +/- 12s)                     / Progress:		71% (149677) 5000 c/s (1s +/- 12s)                     - Progress:		72% (151785) 5000 c/s (1s +/- 11s)                     \ Progress:		73% (153893) 5000 c/s (1s +/- 11s)                     \ Progress:		73% (155030) 150030 c/s (1s +/- <1s)                   | Progress:		74% (156001) 150030 c/s (1s +/- <1s)                   / Progress:		75% (158109) 150030 c/s (1s +/- <1s)                   - Progress:		76% (160218) 150030 c/s (1s +/- <1s)                   \ Progress:		77% (162326) 150030 c/s (1s +/- <1s)                   | Progress:		78% (164434) 150030 c/s (1s +/- <1s)                   / Progress:		79% (166542) 150030 c/s (1s +/- <1s)                   - Progress:		80% (168650) 150030 c/s (1s +/- <1s)                   \ Progress:		81% (170758) 150030 c/s (1s +/- <1s)                   | Progress:		82% (172866) 150030 c/s (1s +/- <1s)                   / Progress:		83% (174974) 150030 c/s (1s +/- <1s)                   - Progress:		84% (177083) 150030 c/s (1s +/- <1s)                   \ Progress:		85% (179191) 150030 c/s (1s +/- <1s)                   | Progress:		86% (181299) 150030 c/s (1s +/- <1s)                   / Progress:		87% (183407) 150030 c/s (1s +/- <1s)                   - Progress:		88% (185515) 150030 c/s (1s +/- <1s)                   \ Progress:		89% (187623) 150030 c/s (1s +/- <1s)                   | Progress:		90% (189731) 150030 c/s (1s +/- <1s)                   / Progress:		91% (191839) 150030 c/s (1s +/- <1s)                   - Progress:		92% (193948) 150030 c/s (1s +/- <1s)                   \ Progress:		93% (196056) 150030 c/s (2s +/- <1s)                   | Progress:		94% (198164) 150030 c/s (2s +/- <1s)                   / Progress:		95% (200272) 150030 c/s (2s +/- <1s)                   - Progress:		96% (202380) 150030 c/s (2s +/- <1s)                   \ Progress:		97% (204488) 150030 c/s (2s +/- <1s)                   | Progress:		98% (206596) 150030 c/s (2s +/- <1s)                   / Progress:		99% (208704) 150030 c/s (2s +/- <1s)                   * Time:    		Compressing the database took 1.281365 seconds.		
 * Result:		(119a,50u,1697,11781,3476,15257)
** Writing FIC database to file
 * File:		train30.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		auto-all-24d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		501
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(108a,0u,1430,8767,1633,10401)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (6) ? c/s  		 | Progress:		2% (11) ? c/s  		 / Progress:		3% (16) ? c/s  		 - Progress:		4% (21) ? c/s  		 \ Progress:		5% (26) ? c/s  		 | Progress:		6% (31) ? c/s  		 / Progress:		7% (36) ? c/s  		 - Progress:		8% (41) ? c/s  		 \ Progress:		9% (46) ? c/s  		 | Progress:		10% (51) ? c/s  		 / Progress:		11% (56) ? c/s  		 - Progress:		12% (61) ? c/s  		 \ Progress:		13% (66) ? c/s  		 | Progress:		14% (71) ? c/s  		 / Progress:		15% (76) ? c/s  		 - Progress:		16% (81) ? c/s  		 \ Progress:		17% (86) ? c/s  		 | Progress:		18% (91) ? c/s  		 / Progress:		19% (96) ? c/s  		 - Progress:		20% (101) ? c/s  		 \ Progress:		21% (106) ? c/s  		 | Progress:		22% (111) ? c/s  		 / Progress:		23% (116) ? c/s  		 - Progress:		24% (121) ? c/s  		 \ Progress:		25% (126) ? c/s  		 | Progress:		26% (131) ? c/s  		 / Progress:		27% (136) ? c/s  		 - Progress:		28% (141) ? c/s  		 \ Progress:		29% (146) ? c/s  		 | Progress:		30% (151) ? c/s  		 / Progress:		31% (156) ? c/s  		 - Progress:		32% (161) ? c/s  		 \ Progress:		33% (166) ? c/s  		 | Progress:		34% (171) ? c/s  		 / Progress:		35% (176) ? c/s  		 - Progress:		36% (181) ? c/s  		 \ Progress:		37% (186) ? c/s  		 | Progress:		38% (191) ? c/s  		 / Progress:		39% (196) ? c/s  		 - Progress:		40% (201) ? c/s  		 \ Progress:		41% (206) ? c/s  		 | Progress:		42% (211) ? c/s  		 / Progress:		43% (216) ? c/s  		 - Progress:		44% (221) ? c/s  		 \ Progress:		45% (226) ? c/s  		 | Progress:		46% (231) ? c/s  		 / Progress:		47% (236) ? c/s  		 - Progress:		48% (241) ? c/s  		 \ Progress:		49% (246) ? c/s  		 | Progress:		50% (251) ? c/s  		 / Progress:		51% (256) ? c/s  		 - Progress:		52% (261) ? c/s  		 \ Progress:		53% (266) ? c/s  		 | Progress:		54% (271) ? c/s  		 / Progress:		55% (276) ? c/s  		 - Progress:		56% (281) ? c/s  		 \ Progress:		57% (286) ? c/s  		 | Progress:		58% (291) ? c/s  		 / Progress:		59% (296) ? c/s  		 - Progress:		60% (301) ? c/s  		 \ Progress:		61% (306) ? c/s  		 | Progress:		62% (311) ? c/s  		 / Progress:		63% (316) ? c/s  		 - Progress:		64% (321) ? c/s  		 \ Progress:		65% (326) ? c/s  		 | Progress:		66% (331) ? c/s  		 / Progress:		67% (336) ? c/s  		 - Progress:		68% (341) ? c/s  		 \ Progress:		69% (346) ? c/s  		 | Progress:		70% (351) ? c/s  		 / Progress:		71% (356) ? c/s  		 - Progress:		72% (361) ? c/s  		 \ Progress:		73% (366) ? c/s  		 | Progress:		74% (371) ? c/s  		 / Progress:		75% (376) ? c/s  		 - Progress:		76% (381) ? c/s  		 \ Progress:		77% (386) ? c/s  		 | Progress:		78% (391) ? c/s  		 / Progress:		79% (396) ? c/s  		 - Progress:		80% (401) ? c/s  		 \ Progress:		81% (406) ? c/s  		 | Progress:		82% (411) ? c/s  		 / Progress:		83% (416) ? c/s  		 - Progress:		84% (421) ? c/s  		 \ Progress:		85% (426) ? c/s  		 | Progress:		86% (431) ? c/s  		 / Progress:		87% (436) ? c/s  		 - Progress:		88% (441) ? c/s  		 \ Progress:		89% (446) ? c/s  		 | Progress:		90% (451) ? c/s  		 / Progress:		91% (456) ? c/s  		 - Progress:		92% (461) ? c/s  		 \ Progress:		93% (466) ? c/s  		 | Progress:		94% (471) ? c/s  		 / Progress:		95% (476) ? c/s  		 - Progress:		96% (481) ? c/s  		 \ Progress:		97% (486) ? c/s  		 | Progress:		98% (491) ? c/s  		 / Progress:		99% (496) ? c/s  		 * Time:    		Compressing the database took 0.005378 seconds.		
 * Result:		(103a,14u,1080,6930,1878,8808)
 * Creating:			fold 6
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 6
** Writing FIC database to file
 * File:		train6.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		auto-all-24d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		386827
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(123a,0u,3070,19186,1918,21103)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (3869) ? c/s  		 \ Progress:		1% (5000) 5000 c/s (0s +/- 1m16)                       | Progress:		2% (7737) 5000 c/s (0s +/- 1m15)                       / Progress:		3% (11605) 5000 c/s (0s +/- 1m15)                      - Progress:		4% (15474) 5000 c/s (0s +/- 1m14)                      \ Progress:		5% (19342) 5000 c/s (0s +/- 1m13)                      | Progress:		6% (23210) 5000 c/s (0s +/- 1m12)                      / Progress:		7% (27078) 5000 c/s (0s +/- 1m11)                      - Progress:		8% (30947) 5000 c/s (0s +/- 1m11)                      \ Progress:		9% (34815) 5000 c/s (0s +/- 1m10)                      | Progress:		10% (38683) 5000 c/s (0s +/- 1m09)                     / Progress:		11% (42551) 5000 c/s (0s +/- 1m08)                     - Progress:		12% (46420) 5000 c/s (0s +/- 1m08)                     \ Progress:		13% (50288) 5000 c/s (0s +/- 1m07)                     | Progress:		14% (54156) 5000 c/s (0s +/- 1m06)                     / Progress:		15% (58025) 5000 c/s (0s +/- 1m05)                     - Progress:		16% (61893) 5000 c/s (0s +/- 1m04)                     \ Progress:		17% (65761) 5000 c/s (0s +/- 1m04)                     | Progress:		18% (69629) 5000 c/s (0s +/- 1m03)                     / Progress:		19% (73498) 5000 c/s (0s +/- 1m02)                     - Progress:		20% (77366) 5000 c/s (0s +/- 1m01)                     \ Progress:		21% (81234) 5000 c/s (0s +/- 1m01)                     | Progress:		22% (85102) 5000 c/s (0s +/- 1m00)                     / Progress:		23% (88971) 5000 c/s (0s +/- 59s)                      - Progress:		24% (92839) 5000 c/s (0s +/- 58s)                      \ Progress:		25% (96707) 5000 c/s (0s +/- 58s)                      | Progress:		26% (100576) 5000 c/s (0s +/- 57s)                     / Progress:		27% (104444) 5000 c/s (0s +/- 56s)                     - Progress:		28% (108312) 5000 c/s (0s +/- 55s)                     \ Progress:		29% (112180) 5000 c/s (0s +/- 54s)                     | Progress:		30% (116049) 5000 c/s (0s +/- 54s)                     / Progress:		31% (119917) 5000 c/s (0s +/- 53s)                     - Progress:		32% (123785) 5000 c/s (0s +/- 52s)                     \ Progress:		33% (127653) 5000 c/s (0s +/- 51s)                     | Progress:		34% (131522) 5000 c/s (0s +/- 51s)                     / Progress:		35% (135390) 5000 c/s (0s +/- 50s)                     - Progress:		36% (139258) 5000 c/s (0s +/- 49s)                     \ Progress:		37% (143126) 5000 c/s (0s +/- 48s)                     | Progress:		38% (146995) 5000 c/s (0s +/- 47s)                     / Progress:		39% (150863) 5000 c/s (0s +/- 47s)                     - Progress:		40% (154731) 5000 c/s (0s +/- 46s)                     - Progress:		40% (155030) 150030 c/s (0s +/- 1s)                    \ Progress:		41% (158600) 150030 c/s (0s +/- 1s)                    | Progress:		42% (162468) 150030 c/s (0s +/- 1s)                    / Progress:		43% (166336) 150030 c/s (0s +/- 1s)                    - Progress:		44% (170204) 150030 c/s (0s +/- 1s)                    \ Progress:		45% (174073) 150030 c/s (0s +/- 1s)                    | Progress:		46% (177941) 150030 c/s (0s +/- 1s)                    / Progress:		47% (181809) 150030 c/s (0s +/- 1s)                    - Progress:		48% (185677) 150030 c/s (0s +/- 1s)                    \ Progress:		49% (189546) 150030 c/s (0s +/- 1s)                    | Progress:		50% (193414) 150030 c/s (0s +/- 1s)                    / Progress:		51% (197282) 150030 c/s (0s +/- 1s)                    - Progress:		52% (201151) 150030 c/s (0s +/- 1s)                    \ Progress:		53% (205019) 150030 c/s (0s +/- 1s)                    | Progress:		54% (208887) 150030 c/s (0s +/- 1s)                    / Progress:		55% (212755) 150030 c/s (0s +/- 1s)                    - Progress:		56% (216624) 150030 c/s (0s +/- 1s)                    \ Progress:		57% (220492) 150030 c/s (0s +/- 1s)                    | Progress:		58% (224360) 150030 c/s (0s +/- 1s)                    / Progress:		59% (228228) 150030 c/s (0s +/- 1s)                    - Progress:		60% (232097) 150030 c/s (0s +/- 1s)                    \ Progress:		61% (235965) 150030 c/s (0s +/- 1s)                    | Progress:		62% (239833) 150030 c/s (0s +/- <1s)                   / Progress:		63% (243702) 150030 c/s (0s +/- <1s)                   - Progress:		64% (247570) 150030 c/s (0s +/- <1s)                   \ Progress:		65% (251438) 150030 c/s (0s +/- <1s)                   | Progress:		66% (255306) 150030 c/s (0s +/- <1s)                   / Progress:		67% (259175) 150030 c/s (0s +/- <1s)                   - Progress:		68% (263043) 150030 c/s (0s +/- <1s)                   \ Progress:		69% (266911) 150030 c/s (0s +/- <1s)                   | Progress:		70% (270779) 150030 c/s (0s +/- <1s)                   / Progress:		71% (274648) 150030 c/s (0s +/- <1s)                   - Progress:		72% (278516) 150030 c/s (0s +/- <1s)                   \ Progress:		73% (282384) 150030 c/s (0s +/- <1s)                   | Progress:		74% (286252) 150030 c/s (0s +/- <1s)                   / Progress:		75% (290121) 150030 c/s (0s +/- <1s)                   - Progress:		76% (293989) 150030 c/s (0s +/- <1s)                   \ Progress:		77% (297857) 150030 c/s (0s +/- <1s)                   | Progress:		78% (301726) 150030 c/s (0s +/- <1s)                   / Progress:		79% (305594) 150030 c/s (0s +/- <1s)                   - Progress:		80% (309462) 150030 c/s (0s +/- <1s)                   \ Progress:		81% (313330) 150030 c/s (0s +/- <1s)                   | Progress:		82% (317199) 150030 c/s (0s +/- <1s)                   / Progress:		83% (321067) 150030 c/s (0s +/- <1s)                   - Progress:		84% (324935) 150030 c/s (0s +/- <1s)                   \ Progress:		85% (328803) 150030 c/s (0s +/- <1s)                   | Progress:		86% (332672) 150030 c/s (0s +/- <1s)                   / Progress:		87% (336540) 150030 c/s (0s +/- <1s)                   - Progress:		88% (340408) 150030 c/s (0s +/- <1s)                   \ Progress:		89% (344277) 150030 c/s (0s +/- <1s)                   | Progress:		90% (348145) 150030 c/s (0s +/- <1s)                   / Progress:		91% (352013) 150030 c/s (0s +/- <1s)                   - Progress:		92% (355881) 150030 c/s (0s +/- <1s)                   \ Progress:		93% (359750) 150030 c/s (0s +/- <1s)                   | Progress:		94% (363618) 150030 c/s (0s +/- <1s)                   / Progress:		95% (367486) 150030 c/s (0s +/- <1s)                   - Progress:		96% (371354) 150030 c/s (0s +/- <1s)                   \ Progress:		97% (375223) 150030 c/s (0s +/- <1s)                   | Progress:		98% (379091) 150030 c/s (0s +/- <1s)                   / Progress:		99% (382959) 150030 c/s (0s +/- <1s)                   * Time:    		Compressing the database took 0.373109 seconds.		
 * Result:		(117a,47u,1640,11434,3397,14832)
** Writing FIC database to file
 * File:		train30.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		auto-all-24d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		489
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(110a,0u,1478,9109,1664,10773)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (5) ? c/s  		 | Progress:		2% (10) ? c/s  		 / Progress:		3% (15) ? c/s  		 - Progress:		4% (20) ? c/s  		 \ Progress:		5% (25) ? c/s  		 | Progress:		6% (30) ? c/s  		 / Progress:		7% (35) ? c/s  		 - Progress:		8% (40) ? c/s  		 \ Progress:		9% (45) ? c/s  		 | Progress:		10% (49) ? c/s  		 / Progress:		11% (54) ? c/s  		 - Progress:		12% (59) ? c/s  		 \ Progress:		13% (64) ? c/s  		 | Progress:		14% (69) ? c/s  		 / Progress:		15% (74) ? c/s  		 - Progress:		16% (79) ? c/s  		 \ Progress:		17% (84) ? c/s  		 | Progress:		18% (89) ? c/s  		 / Progress:		19% (93) ? c/s  		 - Progress:		20% (98) ? c/s  		 \ Progress:		21% (103) ? c/s  		 | Progress:		22% (108) ? c/s  		 / Progress:		23% (113) ? c/s  		 - Progress:		24% (118) ? c/s  		 \ Progress:		25% (123) ? c/s  		 | Progress:		26% (128) ? c/s  		 / Progress:		27% (133) ? c/s  		 - Progress:		28% (137) ? c/s  		 \ Progress:		29% (142) ? c/s  		 | Progress:		30% (147) ? c/s  		 / Progress:		31% (152) ? c/s  		 - Progress:		32% (157) ? c/s  		 \ Progress:		33% (162) ? c/s  		 | Progress:		34% (167) ? c/s  		 / Progress:		35% (172) ? c/s  		 - Progress:		36% (177) ? c/s  		 \ Progress:		37% (181) ? c/s  		 | Progress:		38% (186) ? c/s  		 / Progress:		39% (191) ? c/s  		 - Progress:		40% (196) ? c/s  		 \ Progress:		41% (201) ? c/s  		 | Progress:		42% (206) ? c/s  		 / Progress:		43% (211) ? c/s  		 - Progress:		44% (216) ? c/s  		 \ Progress:		45% (221) ? c/s  		 | Progress:		46% (225) ? c/s  		 / Progress:		47% (230) ? c/s  		 - Progress:		48% (235) ? c/s  		 \ Progress:		49% (240) ? c/s  		 | Progress:		50% (245) ? c/s  		 / Progress:		51% (250) ? c/s  		 - Progress:		52% (255) ? c/s  		 \ Progress:		53% (260) ? c/s  		 | Progress:		54% (265) ? c/s  		 / Progress:		55% (269) ? c/s  		 - Progress:		56% (274) ? c/s  		 \ Progress:		57% (279) ? c/s  		 | Progress:		58% (284) ? c/s  		 / Progress:		59% (289) ? c/s  		 - Progress:		60% (294) ? c/s  		 \ Progress:		61% (299) ? c/s  		 | Progress:		62% (304) ? c/s  		 / Progress:		63% (309) ? c/s  		 - Progress:		64% (313) ? c/s  		 \ Progress:		65% (318) ? c/s  		 | Progress:		66% (323) ? c/s  		 / Progress:		67% (328) ? c/s  		 - Progress:		68% (333) ? c/s  		 \ Progress:		69% (338) ? c/s  		 | Progress:		70% (343) ? c/s  		 / Progress:		71% (348) ? c/s  		 - Progress:		72% (353) ? c/s  		 \ Progress:		73% (357) ? c/s  		 | Progress:		74% (362) ? c/s  		 / Progress:		75% (367) ? c/s  		 - Progress:		76% (372) ? c/s  		 \ Progress:		77% (377) ? c/s  		 | Progress:		78% (382) ? c/s  		 / Progress:		79% (387) ? c/s  		 - Progress:		80% (392) ? c/s  		 \ Progress:		81% (397) ? c/s  		 | Progress:		82% (401) ? c/s  		 / Progress:		83% (406) ? c/s  		 - Progress:		84% (411) ? c/s  		 \ Progress:		85% (416) ? c/s  		 | Progress:		86% (421) ? c/s  		 / Progress:		87% (426) ? c/s  		 - Progress:		88% (431) ? c/s  		 \ Progress:		89% (436) ? c/s  		 | Progress:		90% (441) ? c/s  		 / Progress:		91% (445) ? c/s  		 - Progress:		92% (450) ? c/s  		 \ Progress:		93% (455) ? c/s  		 | Progress:		94% (460) ? c/s  		 / Progress:		95% (465) ? c/s  		 - Progress:		96% (470) ? c/s  		 \ Progress:		97% (475) ? c/s  		 | Progress:		98% (480) ? c/s  		 / Progress:		99% (485) ? c/s  		 * Time:    		Compressing the database took 0.006335 seconds.		
 * Result:		(103a,17u,1120,7241,1942,9183)
 * Creating:			fold 7
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 7
** Writing FIC database to file
 * File:		train6.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		auto-all-24d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		230240
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(127a,0u,3040,19086,2005,21091)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (2303) ? c/s  		 | Progress:		2% (4605) ? c/s  		 | Progress:		2% (5000) 5000 c/s (0s +/- 45s)                        / Progress:		3% (6908) 5000 c/s (0s +/- 44s)                        - Progress:		4% (9210) 5000 c/s (0s +/- 44s)                        \ Progress:		5% (11512) 5000 c/s (0s +/- 43s)                       | Progress:		6% (13815) 5000 c/s (0s +/- 43s)                       / Progress:		7% (16117) 5000 c/s (0s +/- 42s)                       - Progress:		8% (18420) 5000 c/s (0s +/- 42s)                       \ Progress:		9% (20722) 5000 c/s (0s +/- 41s)                       | Progress:		10% (23024) 5000 c/s (0s +/- 41s)                      / Progress:		11% (25327) 5000 c/s (0s +/- 40s)                      - Progress:		12% (27629) 5000 c/s (0s +/- 40s)                      \ Progress:		13% (29932) 5000 c/s (0s +/- 40s)                      | Progress:		14% (32234) 5000 c/s (0s +/- 39s)                      / Progress:		15% (34536) 5000 c/s (0s +/- 39s)                      - Progress:		16% (36839) 5000 c/s (0s +/- 38s)                      \ Progress:		17% (39141) 5000 c/s (0s +/- 38s)                      | Progress:		18% (41444) 5000 c/s (0s +/- 37s)                      / Progress:		19% (43746) 5000 c/s (0s +/- 37s)                      - Progress:		20% (46048) 5000 c/s (0s +/- 36s)                      \ Progress:		21% (48351) 5000 c/s (0s +/- 36s)                      | Progress:		22% (50653) 5000 c/s (0s +/- 35s)                      / Progress:		23% (52956) 5000 c/s (0s +/- 35s)                      - Progress:		24% (55258) 5000 c/s (0s +/- 34s)                      \ Progress:		25% (57560) 5000 c/s (0s +/- 34s)                      | Progress:		26% (59863) 5000 c/s (0s +/- 34s)                      / Progress:		27% (62165) 5000 c/s (0s +/- 33s)                      - Progress:		28% (64468) 5000 c/s (0s +/- 33s)                      \ Progress:		29% (66770) 5000 c/s (0s +/- 32s)                      | Progress:		30% (69072) 5000 c/s (0s +/- 32s)                      / Progress:		31% (71375) 5000 c/s (1s +/- 31s)                      - Progress:		32% (73677) 5000 c/s (1s +/- 31s)                      \ Progress:		33% (75980) 5000 c/s (1s +/- 30s)                      | Progress:		34% (78282) 5000 c/s (1s +/- 30s)                      / Progress:		35% (80584) 5000 c/s (1s +/- 29s)                      - Progress:		36% (82887) 5000 c/s (1s +/- 29s)                      \ Progress:		37% (85189) 5000 c/s (1s +/- 29s)                      | Progress:		38% (87492) 5000 c/s (1s +/- 28s)                      / Progress:		39% (89794) 5000 c/s (1s +/- 28s)                      - Progress:		40% (92096) 5000 c/s (1s +/- 27s)                      \ Progress:		41% (94399) 5000 c/s (1s +/- 27s)                      | Progress:		42% (96701) 5000 c/s (1s +/- 26s)                      / Progress:		43% (99004) 5000 c/s (1s +/- 26s)                      - Progress:		44% (101306) 5000 c/s (1s +/- 25s)                     \ Progress:		45% (103608) 5000 c/s (1s +/- 25s)                     | Progress:		46% (105911) 5000 c/s (1s +/- 24s)                     / Progress:		47% (108213) 5000 c/s (1s +/- 24s)                     - Progress:		48% (110516) 5000 c/s (1s +/- 23s)                     \ Progress:		49% (112818) 5000 c/s (1s +/- 23s)                     | Progress:		50% (115120) 5000 c/s (1s +/- 23s)                     / Progress:		51% (117423) 5000 c/s (1s +/- 22s)                     - Progress:		52% (119725) 5000 c/s (1s +/- 22s)                     \ Progress:		53% (122028) 5000 c/s (1s +/- 21s)                     | Progress:		54% (124330) 5000 c/s (1s +/- 21s)                     / Progress:		55% (126632) 5000 c/s (1s +/- 20s)                     - Progress:		56% (128935) 5000 c/s (1s +/- 20s)                     \ Progress:		57% (131237) 5000 c/s (1s +/- 19s)                     | Progress:		58% (133540) 5000 c/s (1s +/- 19s)                     / Progress:		59% (135842) 5000 c/s (1s +/- 18s)                     - Progress:		60% (138144) 5000 c/s (1s +/- 18s)                     \ Progress:		61% (140447) 5000 c/s (1s +/- 17s)                     | Progress:		62% (142749) 5000 c/s (1s +/- 17s)                     / Progress:		63% (145052) 5000 c/s (1s +/- 17s)                     - Progress:		64% (147354) 5000 c/s (1s +/- 16s)                     \ Progress:		65% (149656) 5000 c/s (1s +/- 16s)                     | Progress:		66% (151959) 5000 c/s (1s +/- 15s)                     / Progress:		67% (154261) 5000 c/s (1s +/- 15s)                     / Progress:		67% (155030) 150030 c/s (1s +/- <1s)                   - Progress:		68% (156564) 150030 c/s (1s +/- <1s)                   \ Progress:		69% (158866) 150030 c/s (1s +/- <1s)                   | Progress:		70% (161168) 150030 c/s (1s +/- <1s)                   / Progress:		71% (163471) 150030 c/s (1s +/- <1s)                   - Progress:		72% (165773) 150030 c/s (1s +/- <1s)                   \ Progress:		73% (168076) 150030 c/s (1s +/- <1s)                   | Progress:		74% (170378) 150030 c/s (1s +/- <1s)                   / Progress:		75% (172680) 150030 c/s (1s +/- <1s)                   - Progress:		76% (174983) 150030 c/s (1s +/- <1s)                   \ Progress:		77% (177285) 150030 c/s (1s +/- <1s)                   | Progress:		78% (179588) 150030 c/s (1s +/- <1s)                   / Progress:		79% (181890) 150030 c/s (1s +/- <1s)                   - Progress:		80% (184192) 150030 c/s (1s +/- <1s)                   \ Progress:		81% (186495) 150030 c/s (1s +/- <1s)                   | Progress:		82% (188797) 150030 c/s (1s +/- <1s)                   / Progress:		83% (191100) 150030 c/s (1s +/- <1s)                   - Progress:		84% (193402) 150030 c/s (1s +/- <1s)                   \ Progress:		85% (195704) 150030 c/s (1s +/- <1s)                   | Progress:		86% (198007) 150030 c/s (1s +/- <1s)                   / Progress:		87% (200309) 150030 c/s (1s +/- <1s)                   - Progress:		88% (202612) 150030 c/s (1s +/- <1s)                   \ Progress:		89% (204914) 150030 c/s (1s +/- <1s)                   | Progress:		90% (207216) 150030 c/s (1s +/- <1s)                   / Progress:		91% (209519) 150030 c/s (1s +/- <1s)                   - Progress:		92% (211821) 150030 c/s (1s +/- <1s)                   \ Progress:		93% (214124) 150030 c/s (1s +/- <1s)                   | Progress:		94% (216426) 150030 c/s (1s +/- <1s)                   / Progress:		95% (218728) 150030 c/s (1s +/- <1s)                   - Progress:		96% (221031) 150030 c/s (1s +/- <1s)                   \ Progress:		97% (223333) 150030 c/s (1s +/- <1s)                   | Progress:		98% (225636) 150030 c/s (1s +/- <1s)                   / Progress:		99% (227938) 150030 c/s (1s +/- <1s)                   * Time:    		Compressing the database took 0.429810 seconds.		
 * Result:		(118a,49u,1704,11822,3319,15141)
** Writing FIC database to file
 * File:		train30.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		auto-all-24d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		401
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(110a,0u,1501,9259,1666,10925)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (5) ? c/s  		 | Progress:		2% (9) ? c/s  		 / Progress:		3% (13) ? c/s  		 - Progress:		4% (17) ? c/s  		 \ Progress:		5% (21) ? c/s  		 | Progress:		6% (25) ? c/s  		 / Progress:		7% (29) ? c/s  		 - Progress:		8% (33) ? c/s  		 \ Progress:		9% (37) ? c/s  		 | Progress:		10% (41) ? c/s  		 / Progress:		11% (45) ? c/s  		 - Progress:		12% (49) ? c/s  		 \ Progress:		13% (53) ? c/s  		 | Progress:		14% (57) ? c/s  		 / Progress:		15% (61) ? c/s  		 - Progress:		16% (65) ? c/s  		 \ Progress:		17% (69) ? c/s  		 | Progress:		18% (73) ? c/s  		 / Progress:		19% (77) ? c/s  		 - Progress:		20% (81) ? c/s  		 \ Progress:		21% (85) ? c/s  		 | Progress:		22% (89) ? c/s  		 / Progress:		23% (93) ? c/s  		 - Progress:		24% (97) ? c/s  		 \ Progress:		25% (101) ? c/s  		 | Progress:		26% (105) ? c/s  		 / Progress:		27% (109) ? c/s  		 - Progress:		28% (113) ? c/s  		 \ Progress:		29% (117) ? c/s  		 | Progress:		30% (121) ? c/s  		 / Progress:		31% (125) ? c/s  		 - Progress:		32% (129) ? c/s  		 \ Progress:		33% (133) ? c/s  		 | Progress:		34% (137) ? c/s  		 / Progress:		35% (141) ? c/s  		 - Progress:		36% (145) ? c/s  		 \ Progress:		37% (149) ? c/s  		 | Progress:		38% (153) ? c/s  		 / Progress:		39% (157) ? c/s  		 - Progress:		40% (161) ? c/s  		 \ Progress:		41% (165) ? c/s  		 | Progress:		42% (169) ? c/s  		 / Progress:		43% (173) ? c/s  		 - Progress:		44% (177) ? c/s  		 \ Progress:		45% (181) ? c/s  		 | Progress:		46% (185) ? c/s  		 / Progress:		47% (189) ? c/s  		 - Progress:		48% (193) ? c/s  		 \ Progress:		49% (197) ? c/s  		 | Progress:		50% (201) ? c/s  		 / Progress:		51% (205) ? c/s  		 - Progress:		52% (209) ? c/s  		 \ Progress:		53% (213) ? c/s  		 | Progress:		54% (217) ? c/s  		 / Progress:		55% (221) ? c/s  		 - Progress:		56% (225) ? c/s  		 \ Progress:		57% (229) ? c/s  		 | Progress:		58% (233) ? c/s  		 / Progress:		59% (237) ? c/s  		 - Progress:		60% (241) ? c/s  		 \ Progress:		61% (245) ? c/s  		 | Progress:		62% (249) ? c/s  		 / Progress:		63% (253) ? c/s  		 - Progress:		64% (257) ? c/s  		 \ Progress:		65% (261) ? c/s  		 | Progress:		66% (265) ? c/s  		 / Progress:		67% (269) ? c/s  		 - Progress:		68% (273) ? c/s  		 \ Progress:		69% (277) ? c/s  		 | Progress:		70% (281) ? c/s  		 / Progress:		71% (285) ? c/s  		 - Progress:		72% (289) ? c/s  		 \ Progress:		73% (293) ? c/s  		 | Progress:		74% (297) ? c/s  		 / Progress:		75% (301) ? c/s  		 - Progress:		76% (305) ? c/s  		 \ Progress:		77% (309) ? c/s  		 | Progress:		78% (313) ? c/s  		 / Progress:		79% (317) ? c/s  		 - Progress:		80% (321) ? c/s  		 \ Progress:		81% (325) ? c/s  		 | Progress:		82% (329) ? c/s  		 / Progress:		83% (333) ? c/s  		 - Progress:		84% (337) ? c/s  		 \ Progress:		85% (341) ? c/s  		 | Progress:		86% (345) ? c/s  		 / Progress:		87% (349) ? c/s  		 - Progress:		88% (353) ? c/s  		 \ Progress:		89% (357) ? c/s  		 | Progress:		90% (361) ? c/s  		 / Progress:		91% (365) ? c/s  		 - Progress:		92% (369) ? c/s  		 \ Progress:		93% (373) ? c/s  		 | Progress:		94% (377) ? c/s  		 / Progress:		95% (381) ? c/s  		 - Progress:		96% (385) ? c/s  		 \ Progress:		97% (389) ? c/s  		 | Progress:		98% (393) ? c/s  		 / Progress:		99% (397) ? c/s  		 * Time:    		Compressing the database took 0.007045 seconds.		
 * Result:		(106a,16u,1119,7254,1967,9222)
 * Creating:			fold 8
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 8
** Writing FIC database to file
 * File:		train6.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		auto-all-24d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		336170
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(127a,0u,3144,19697,2009,21706)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (3362) ? c/s  		 \ Progress:		1% (5000) 5000 c/s (0s +/- 1m06)                       | Progress:		2% (6724) 5000 c/s (0s +/- 1m05)                       / Progress:		3% (10086) 5000 c/s (0s +/- 1m05)                      - Progress:		4% (13447) 5000 c/s (0s +/- 1m04)                      \ Progress:		5% (16809) 5000 c/s (0s +/- 1m03)                      | Progress:		6% (20171) 5000 c/s (0s +/- 1m03)                      / Progress:		7% (23532) 5000 c/s (0s +/- 1m02)                      - Progress:		8% (26894) 5000 c/s (0s +/- 1m01)                      \ Progress:		9% (30256) 5000 c/s (0s +/- 1m01)                      | Progress:		10% (33617) 5000 c/s (0s +/- 1m00)                     / Progress:		11% (36979) 5000 c/s (0s +/- 59s)                      - Progress:		12% (40341) 5000 c/s (0s +/- 59s)                      \ Progress:		13% (43703) 5000 c/s (0s +/- 58s)                      | Progress:		14% (47064) 5000 c/s (0s +/- 57s)                      / Progress:		15% (50426) 5000 c/s (1s +/- 57s)                      - Progress:		16% (53788) 5000 c/s (1s +/- 56s)                      \ Progress:		17% (57149) 5000 c/s (1s +/- 55s)                      | Progress:		18% (60511) 5000 c/s (1s +/- 55s)                      / Progress:		19% (63873) 5000 c/s (1s +/- 54s)                      - Progress:		20% (67234) 5000 c/s (1s +/- 53s)                      \ Progress:		21% (70596) 5000 c/s (1s +/- 53s)                      | Progress:		22% (73958) 5000 c/s (1s +/- 52s)                      / Progress:		23% (77320) 5000 c/s (1s +/- 51s)                      - Progress:		24% (80681) 5000 c/s (1s +/- 51s)                      \ Progress:		25% (84043) 5000 c/s (1s +/- 50s)                      | Progress:		26% (87405) 5000 c/s (1s +/- 49s)                      / Progress:		27% (90766) 5000 c/s (1s +/- 49s)                      - Progress:		28% (94128) 5000 c/s (1s +/- 48s)                      \ Progress:		29% (97490) 5000 c/s (1s +/- 47s)                      | Progress:		30% (100851) 5000 c/s (1s +/- 47s)                     / Progress:		31% (104213) 5000 c/s (2s +/- 46s)                     - Progress:		32% (107575) 5000 c/s (2s +/- 45s)                     \ Progress:		33% (110937) 5000 c/s (2s +/- 45s)                     | Progress:		34% (114298) 5000 c/s (2s +/- 44s)                     / Progress:		35% (117660) 5000 c/s (2s +/- 43s)                     - Progress:		36% (121022) 5000 c/s (2s +/- 43s)                     \ Progress:		37% (124383) 5000 c/s (2s +/- 42s)                     | Progress:		38% (127745) 5000 c/s (2s +/- 41s)                     / Progress:		39% (131107) 5000 c/s (2s +/- 41s)                     - Progress:		40% (134468) 5000 c/s (2s +/- 40s)                     \ Progress:		41% (137830) 5000 c/s (2s +/- 39s)                     | Progress:		42% (141192) 5000 c/s (2s +/- 38s)                     / Progress:		43% (144554) 5000 c/s (2s +/- 38s)                     - Progress:		44% (147915) 5000 c/s (2s +/- 37s)                     \ Progress:		45% (151277) 5000 c/s (2s +/- 36s)                     | Progress:		46% (154639) 5000 c/s (2s +/- 36s)                     | Progress:		46% (155030) 75015 c/s (2s +/- 2s)                     / Progress:		47% (158000) 75015 c/s (2s +/- 2s)                     - Progress:		48% (161362) 75015 c/s (2s +/- 2s)                     \ Progress:		49% (164724) 75015 c/s (2s +/- 2s)                     | Progress:		50% (168085) 75015 c/s (2s +/- 2s)                     / Progress:		51% (171447) 75015 c/s (2s +/- 2s)                     - Progress:		52% (174809) 75015 c/s (2s +/- 2s)                     \ Progress:		53% (178171) 75015 c/s (2s +/- 2s)                     | Progress:		54% (181532) 75015 c/s (2s +/- 2s)                     / Progress:		55% (184894) 75015 c/s (2s +/- 2s)                     - Progress:		56% (188256) 75015 c/s (3s +/- 1s)                     \ Progress:		57% (191617) 75015 c/s (3s +/- 1s)                     | Progress:		58% (194979) 75015 c/s (3s +/- 1s)                     / Progress:		59% (198341) 75015 c/s (3s +/- 1s)                     - Progress:		60% (201702) 75015 c/s (3s +/- 1s)                     \ Progress:		61% (205064) 75015 c/s (3s +/- 1s)                     | Progress:		62% (208426) 75015 c/s (3s +/- 1s)                     / Progress:		63% (211788) 75015 c/s (3s +/- 1s)                     - Progress:		64% (215149) 75015 c/s (3s +/- 1s)                     \ Progress:		65% (218511) 75015 c/s (3s +/- 1s)                     | Progress:		66% (221873) 75015 c/s (3s +/- 1s)                     / Progress:		67% (225234) 75015 c/s (3s +/- 1s)                     - Progress:		68% (228596) 75015 c/s (3s +/- 1s)                     \ Progress:		69% (231958) 75015 c/s (3s +/- 1s)                     | Progress:		70% (235319) 75015 c/s (3s +/- 1s)                     / Progress:		71% (238681) 75015 c/s (3s +/- 1s)                     - Progress:		72% (242043) 75015 c/s (3s +/- 1s)                     \ Progress:		73% (245405) 75015 c/s (3s +/- 1s)                     | Progress:		74% (248766) 75015 c/s (3s +/- 1s)                     / Progress:		75% (252128) 75015 c/s (3s +/- 1s)                     - Progress:		76% (255490) 75015 c/s (3s +/- 1s)                     \ Progress:		77% (258851) 75015 c/s (3s +/- 1s)                     | Progress:		78% (262213) 75015 c/s (3s +/- <1s)                    / Progress:		79% (265575) 75015 c/s (3s +/- <1s)                    - Progress:		80% (268936) 75015 c/s (3s +/- <1s)                    \ Progress:		81% (272298) 75015 c/s (3s +/- <1s)                    | Progress:		82% (275660) 75015 c/s (3s +/- <1s)                    / Progress:		83% (279022) 75015 c/s (3s +/- <1s)                    - Progress:		84% (282383) 75015 c/s (3s +/- <1s)                    \ Progress:		85% (285745) 75015 c/s (3s +/- <1s)                    | Progress:		86% (289107) 75015 c/s (3s +/- <1s)                    / Progress:		87% (292468) 75015 c/s (3s +/- <1s)                    - Progress:		88% (295830) 75015 c/s (3s +/- <1s)                    \ Progress:		89% (299192) 75015 c/s (3s +/- <1s)                    | Progress:		90% (302553) 75015 c/s (3s +/- <1s)                    / Progress:		91% (305915) 75015 c/s (3s +/- <1s)                    - Progress:		92% (309277) 75015 c/s (3s +/- <1s)                    \ Progress:		93% (312639) 75015 c/s (3s +/- <1s)                    | Progress:		94% (316000) 75015 c/s (3s +/- <1s)                    / Progress:		95% (319362) 75015 c/s (3s +/- <1s)                    - Progress:		96% (322724) 75015 c/s (3s +/- <1s)                    \ Progress:		97% (326085) 75015 c/s (3s +/- <1s)                    | Progress:		98% (329447) 75015 c/s (3s +/- <1s)                    / Progress:		99% (332809) 75015 c/s (3s +/- <1s)                    * Time:    		Compressing the database took 3.175814 seconds.		
 * Result:		(120a,45u,1715,11929,3315,15244)
** Writing FIC database to file
 * File:		train30.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		auto-all-24d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		445
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(109a,0u,1407,8658,1644,10302)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (5) ? c/s  		 | Progress:		2% (9) ? c/s  		 / Progress:		3% (14) ? c/s  		 - Progress:		4% (18) ? c/s  		 \ Progress:		5% (23) ? c/s  		 | Progress:		6% (27) ? c/s  		 / Progress:		7% (32) ? c/s  		 - Progress:		8% (36) ? c/s  		 \ Progress:		9% (41) ? c/s  		 | Progress:		10% (45) ? c/s  		 / Progress:		11% (49) ? c/s  		 - Progress:		12% (54) ? c/s  		 \ Progress:		13% (58) ? c/s  		 | Progress:		14% (63) ? c/s  		 / Progress:		15% (67) ? c/s  		 - Progress:		16% (72) ? c/s  		 \ Progress:		17% (76) ? c/s  		 | Progress:		18% (81) ? c/s  		 / Progress:		19% (85) ? c/s  		 - Progress:		20% (89) ? c/s  		 \ Progress:		21% (94) ? c/s  		 | Progress:		22% (98) ? c/s  		 / Progress:		23% (103) ? c/s  		 - Progress:		24% (107) ? c/s  		 \ Progress:		25% (112) ? c/s  		 | Progress:		26% (116) ? c/s  		 / Progress:		27% (121) ? c/s  		 - Progress:		28% (125) ? c/s  		 \ Progress:		29% (130) ? c/s  		 | Progress:		30% (134) ? c/s  		 / Progress:		31% (138) ? c/s  		 - Progress:		32% (143) ? c/s  		 \ Progress:		33% (147) ? c/s  		 | Progress:		34% (152) ? c/s  		 / Progress:		35% (156) ? c/s  		 - Progress:		36% (161) ? c/s  		 \ Progress:		37% (165) ? c/s  		 | Progress:		38% (170) ? c/s  		 / Progress:		39% (174) ? c/s  		 - Progress:		40% (178) ? c/s  		 \ Progress:		41% (183) ? c/s  		 | Progress:		42% (187) ? c/s  		 / Progress:		43% (192) ? c/s  		 - Progress:		44% (196) ? c/s  		 \ Progress:		45% (201) ? c/s  		 | Progress:		46% (205) ? c/s  		 / Progress:		47% (210) ? c/s  		 - Progress:		48% (214) ? c/s  		 \ Progress:		49% (219) ? c/s  		 | Progress:		50% (223) ? c/s  		 / Progress:		51% (227) ? c/s  		 - Progress:		52% (232) ? c/s  		 \ Progress:		53% (236) ? c/s  		 | Progress:		54% (241) ? c/s  		 / Progress:		55% (245) ? c/s  		 - Progress:		56% (250) ? c/s  		 \ Progress:		57% (254) ? c/s  		 | Progress:		58% (259) ? c/s  		 / Progress:		59% (263) ? c/s  		 - Progress:		60% (267) ? c/s  		 \ Progress:		61% (272) ? c/s  		 | Progress:		62% (276) ? c/s  		 / Progress:		63% (281) ? c/s  		 - Progress:		64% (285) ? c/s  		 \ Progress:		65% (290) ? c/s  		 | Progress:		66% (294) ? c/s  		 / Progress:		67% (299) ? c/s  		 - Progress:		68% (303) ? c/s  		 \ Progress:		69% (308) ? c/s  		 | Progress:		70% (312) ? c/s  		 / Progress:		71% (316) ? c/s  		 - Progress:		72% (321) ? c/s  		 \ Progress:		73% (325) ? c/s  		 | Progress:		74% (330) ? c/s  		 / Progress:		75% (334) ? c/s  		 - Progress:		76% (339) ? c/s  		 \ Progress:		77% (343) ? c/s  		 | Progress:		78% (348) ? c/s  		 / Progress:		79% (352) ? c/s  		 - Progress:		80% (356) ? c/s  		 \ Progress:		81% (361) ? c/s  		 | Progress:		82% (365) ? c/s  		 / Progress:		83% (370) ? c/s  		 - Progress:		84% (374) ? c/s  		 \ Progress:		85% (379) ? c/s  		 | Progress:		86% (383) ? c/s  		 / Progress:		87% (388) ? c/s  		 - Progress:		88% (392) ? c/s  		 \ Progress:		89% (397) ? c/s  		 | Progress:		90% (401) ? c/s  		 / Progress:		91% (405) ? c/s  		 - Progress:		92% (410) ? c/s  		 \ Progress:		93% (414) ? c/s  		 | Progress:		94% (419) ? c/s  		 / Progress:		95% (423) ? c/s  		 - Progress:		96% (428) ? c/s  		 \ Progress:		97% (432) ? c/s  		 | Progress:		98% (437) ? c/s  		 / Progress:		99% (441) ? c/s  		 * Time:    		Compressing the database took 0.006110 seconds.		
 * Result:		(103a,15u,1076,6933,1888,8820)
 * Creating:			fold 9
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 9
** Writing FIC database to file
 * File:		train6.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		auto-all-24d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		389804
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(127a,0u,3141,19659,2007,21666)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (3899) ? c/s  		 \ Progress:		1% (5000) 5000 c/s (0s +/- 1m16)                       | Progress:		2% (7797) 5000 c/s (0s +/- 1m16)                       / Progress:		3% (11695) 5000 c/s (0s +/- 1m15)                      - Progress:		4% (15593) 5000 c/s (0s +/- 1m14)                      \ Progress:		5% (19491) 5000 c/s (0s +/- 1m14)                      | Progress:		6% (23389) 5000 c/s (0s +/- 1m13)                      / Progress:		7% (27287) 5000 c/s (0s +/- 1m12)                      - Progress:		8% (31185) 5000 c/s (0s +/- 1m11)                      \ Progress:		9% (35083) 5000 c/s (0s +/- 1m10)                      | Progress:		10% (38981) 5000 c/s (0s +/- 1m10)                     / Progress:		11% (42879) 5000 c/s (0s +/- 1m09)                     - Progress:		12% (46777) 5000 c/s (0s +/- 1m08)                     \ Progress:		13% (50675) 5000 c/s (0s +/- 1m07)                     | Progress:		14% (54573) 5000 c/s (0s +/- 1m07)                     / Progress:		15% (58471) 5000 c/s (0s +/- 1m06)                     - Progress:		16% (62369) 5000 c/s (0s +/- 1m05)                     \ Progress:		17% (66267) 5000 c/s (0s +/- 1m04)                     | Progress:		18% (70165) 5000 c/s (0s +/- 1m03)                     / Progress:		19% (74063) 5000 c/s (0s +/- 1m03)                     - Progress:		20% (77961) 5000 c/s (0s +/- 1m02)                     \ Progress:		21% (81859) 5000 c/s (0s +/- 1m01)                     | Progress:		22% (85757) 5000 c/s (0s +/- 1m00)                     / Progress:		23% (89655) 5000 c/s (0s +/- 1m00)                     - Progress:		24% (93553) 5000 c/s (0s +/- 59s)                      \ Progress:		25% (97451) 5000 c/s (0s +/- 58s)                      | Progress:		26% (101350) 5000 c/s (0s +/- 57s)                     / Progress:		27% (105248) 5000 c/s (0s +/- 56s)                     - Progress:		28% (109146) 5000 c/s (0s +/- 56s)                     \ Progress:		29% (113044) 5000 c/s (0s +/- 55s)                     | Progress:		30% (116942) 5000 c/s (0s +/- 54s)                     / Progress:		31% (120840) 5000 c/s (0s +/- 53s)                     - Progress:		32% (124738) 5000 c/s (0s +/- 53s)                     \ Progress:		33% (128636) 5000 c/s (0s +/- 52s)                     | Progress:		34% (132534) 5000 c/s (0s +/- 51s)                     / Progress:		35% (136432) 5000 c/s (0s +/- 50s)                     - Progress:		36% (140330) 5000 c/s (0s +/- 49s)                     \ Progress:		37% (144228) 5000 c/s (0s +/- 49s)                     | Progress:		38% (148126) 5000 c/s (0s +/- 48s)                     / Progress:		39% (152024) 5000 c/s (0s +/- 47s)                     / Progress:		39% (155030) 150030 c/s (0s +/- 1s)                    - Progress:		40% (155922) 150030 c/s (0s +/- 1s)                    \ Progress:		41% (159820) 150030 c/s (0s +/- 1s)                    | Progress:		42% (163718) 150030 c/s (0s +/- 1s)                    / Progress:		43% (167616) 150030 c/s (0s +/- 1s)                    - Progress:		44% (171514) 150030 c/s (0s +/- 1s)                    \ Progress:		45% (175412) 150030 c/s (0s +/- 1s)                    | Progress:		46% (179310) 150030 c/s (0s +/- 1s)                    / Progress:		47% (183208) 150030 c/s (0s +/- 1s)                    - Progress:		48% (187106) 150030 c/s (0s +/- 1s)                    \ Progress:		49% (191004) 150030 c/s (0s +/- 1s)                    | Progress:		50% (194902) 150030 c/s (0s +/- 1s)                    / Progress:		51% (198801) 150030 c/s (0s +/- 1s)                    - Progress:		52% (202699) 150030 c/s (0s +/- 1s)                    \ Progress:		53% (206597) 150030 c/s (0s +/- 1s)                    | Progress:		54% (210495) 150030 c/s (0s +/- 1s)                    / Progress:		55% (214393) 150030 c/s (0s +/- 1s)                    - Progress:		56% (218291) 150030 c/s (0s +/- 1s)                    \ Progress:		57% (222189) 150030 c/s (0s +/- 1s)                    | Progress:		58% (226087) 150030 c/s (0s +/- 1s)                    / Progress:		59% (229985) 150030 c/s (0s +/- 1s)                    - Progress:		60% (233883) 150030 c/s (0s +/- 1s)                    \ Progress:		61% (237781) 150030 c/s (0s +/- 1s)                    | Progress:		62% (241679) 150030 c/s (0s +/- <1s)                   / Progress:		63% (245577) 150030 c/s (0s +/- <1s)                   - Progress:		64% (249475) 150030 c/s (0s +/- <1s)                   \ Progress:		65% (253373) 150030 c/s (0s +/- <1s)                   | Progress:		66% (257271) 150030 c/s (0s +/- <1s)                   / Progress:		67% (261169) 150030 c/s (0s +/- <1s)                   - Progress:		68% (265067) 150030 c/s (0s +/- <1s)                   \ Progress:		69% (268965) 150030 c/s (0s +/- <1s)                   | Progress:		70% (272863) 150030 c/s (1s +/- <1s)                   / Progress:		71% (276761) 150030 c/s (1s +/- <1s)                   - Progress:		72% (280659) 150030 c/s (1s +/- <1s)                   \ Progress:		73% (284557) 150030 c/s (1s +/- <1s)                   | Progress:		74% (288455) 150030 c/s (1s +/- <1s)                   / Progress:		75% (292353) 150030 c/s (1s +/- <1s)                   - Progress:		76% (296252) 150030 c/s (1s +/- <1s)                   \ Progress:		77% (300150) 150030 c/s (1s +/- <1s)                   | Progress:		78% (304048) 150030 c/s (1s +/- <1s)                   / Progress:		79% (307946) 150030 c/s (1s +/- <1s)                   - Progress:		80% (311844) 150030 c/s (1s +/- <1s)                   \ Progress:		81% (315742) 150030 c/s (1s +/- <1s)                   | Progress:		82% (319640) 150030 c/s (1s +/- <1s)                   / Progress:		83% (323538) 150030 c/s (1s +/- <1s)                   - Progress:		84% (327436) 150030 c/s (1s +/- <1s)                   \ Progress:		85% (331334) 150030 c/s (1s +/- <1s)                   | Progress:		86% (335232) 150030 c/s (1s +/- <1s)                   / Progress:		87% (339130) 150030 c/s (1s +/- <1s)                   - Progress:		88% (343028) 150030 c/s (1s +/- <1s)                   \ Progress:		89% (346926) 150030 c/s (1s +/- <1s)                   | Progress:		90% (350824) 150030 c/s (1s +/- <1s)                   / Progress:		91% (354722) 150030 c/s (1s +/- <1s)                   - Progress:		92% (358620) 150030 c/s (1s +/- <1s)                   \ Progress:		93% (362518) 150030 c/s (1s +/- <1s)                   | Progress:		94% (366416) 150030 c/s (1s +/- <1s)                   / Progress:		95% (370314) 150030 c/s (1s +/- <1s)                   - Progress:		96% (374212) 150030 c/s (1s +/- <1s)                   \ Progress:		97% (378110) 150030 c/s (1s +/- <1s)                   | Progress:		98% (382008) 150030 c/s (1s +/- <1s)                   / Progress:		99% (385906) 150030 c/s (1s +/- <1s)                   * Time:    		Compressing the database took 0.825976 seconds.		
 * Result:		(120a,44u,1709,11861,3316,15177)
** Writing FIC database to file
 * File:		train30.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		auto-all-24d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		491
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(106a,0u,1404,8616,1583,10199)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (5) ? c/s  		 | Progress:		2% (10) ? c/s  		 / Progress:		3% (15) ? c/s  		 - Progress:		4% (20) ? c/s  		 \ Progress:		5% (25) ? c/s  		 | Progress:		6% (30) ? c/s  		 / Progress:		7% (35) ? c/s  		 - Progress:		8% (40) ? c/s  		 \ Progress:		9% (45) ? c/s  		 | Progress:		10% (50) ? c/s  		 / Progress:		11% (55) ? c/s  		 - Progress:		12% (59) ? c/s  		 \ Progress:		13% (64) ? c/s  		 | Progress:		14% (69) ? c/s  		 / Progress:		15% (74) ? c/s  		 - Progress:		16% (79) ? c/s  		 \ Progress:		17% (84) ? c/s  		 | Progress:		18% (89) ? c/s  		 / Progress:		19% (94) ? c/s  		 - Progress:		20% (99) ? c/s  		 \ Progress:		21% (104) ? c/s  		 | Progress:		22% (109) ? c/s  		 / Progress:		23% (113) ? c/s  		 - Progress:		24% (118) ? c/s  		 \ Progress:		25% (123) ? c/s  		 | Progress:		26% (128) ? c/s  		 / Progress:		27% (133) ? c/s  		 - Progress:		28% (138) ? c/s  		 \ Progress:		29% (143) ? c/s  		 | Progress:		30% (148) ? c/s  		 / Progress:		31% (153) ? c/s  		 - Progress:		32% (158) ? c/s  		 \ Progress:		33% (163) ? c/s  		 | Progress:		34% (167) ? c/s  		 / Progress:		35% (172) ? c/s  		 - Progress:		36% (177) ? c/s  		 \ Progress:		37% (182) ? c/s  		 | Progress:		38% (187) ? c/s  		 / Progress:		39% (192) ? c/s  		 - Progress:		40% (197) ? c/s  		 \ Progress:		41% (202) ? c/s  		 | Progress:		42% (207) ? c/s  		 / Progress:		43% (212) ? c/s  		 - Progress:		44% (217) ? c/s  		 \ Progress:		45% (221) ? c/s  		 | Progress:		46% (226) ? c/s  		 / Progress:		47% (231) ? c/s  		 - Progress:		48% (236) ? c/s  		 \ Progress:		49% (241) ? c/s  		 | Progress:		50% (246) ? c/s  		 / Progress:		51% (251) ? c/s  		 - Progress:		52% (256) ? c/s  		 \ Progress:		53% (261) ? c/s  		 | Progress:		54% (266) ? c/s  		 / Progress:		55% (271) ? c/s  		 - Progress:		56% (275) ? c/s  		 \ Progress:		57% (280) ? c/s  		 | Progress:		58% (285) ? c/s  		 / Progress:		59% (290) ? c/s  		 - Progress:		60% (295) ? c/s  		 \ Progress:		61% (300) ? c/s  		 | Progress:		62% (305) ? c/s  		 / Progress:		63% (310) ? c/s  		 - Progress:		64% (315) ? c/s  		 \ Progress:		65% (320) ? c/s  		 | Progress:		66% (325) ? c/s  		 / Progress:		67% (329) ? c/s  		 - Progress:		68% (334) ? c/s  		 \ Progress:		69% (339) ? c/s  		 | Progress:		70% (344) ? c/s  		 / Progress:		71% (349) ? c/s  		 - Progress:		72% (354) ? c/s  		 \ Progress:		73% (359) ? c/s  		 | Progress:		74% (364) ? c/s  		 / Progress:		75% (369) ? c/s  		 - Progress:		76% (374) ? c/s  		 \ Progress:		77% (379) ? c/s  		 | Progress:		78% (383) ? c/s  		 / Progress:		79% (388) ? c/s  		 - Progress:		80% (393) ? c/s  		 \ Progress:		81% (398) ? c/s  		 | Progress:		82% (403) ? c/s  		 / Progress:		83% (408) ? c/s  		 - Progress:		84% (413) ? c/s  		 \ Progress:		85% (418) ? c/s  		 | Progress:		86% (423) ? c/s  		 / Progress:		87% (428) ? c/s  		 - Progress:		88% (433) ? c/s  		 \ Progress:		89% (437) ? c/s  		 | Progress:		90% (442) ? c/s  		 / Progress:		91% (447) ? c/s  		 - Progress:		92% (452) ? c/s  		 \ Progress:		93% (457) ? c/s  		 | Progress:		94% (462) ? c/s  		 / Progress:		95% (467) ? c/s  		 - Progress:		96% (472) ? c/s  		 \ Progress:		97% (477) ? c/s  		 | Progress:		98% (482) ? c/s  		 / Progress:		99% (487) ? c/s  		 * Time:    		Compressing the database took 0.006369 seconds.		
 * Result:		(99a,13u,1103,6988,1782,8770)
 * Creating:			fold 10
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 10
** Writing FIC database to file
 * File:		train6.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		auto-all-24d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		326575
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(126a,0u,3166,19854,1985,21839)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (3266) ? c/s  		 \ Progress:		1% (5000) 5000 c/s (0s +/- 1m04)                       | Progress:		2% (6532) 5000 c/s (0s +/- 1m04)                       / Progress:		3% (9798) 5000 c/s (0s +/- 1m03)                       - Progress:		4% (13063) 5000 c/s (0s +/- 1m02)                      \ Progress:		5% (16329) 5000 c/s (0s +/- 1m02)                      | Progress:		6% (19595) 5000 c/s (0s +/- 1m01)                      / Progress:		7% (22861) 5000 c/s (0s +/- 1m00)                      - Progress:		8% (26126) 5000 c/s (0s +/- 1m00)                      \ Progress:		9% (29392) 5000 c/s (0s +/- 59s)                       | Progress:		10% (32658) 5000 c/s (0s +/- 58s)                      / Progress:		11% (35924) 5000 c/s (0s +/- 58s)                      - Progress:		12% (39189) 5000 c/s (0s +/- 57s)                      \ Progress:		13% (42455) 5000 c/s (0s +/- 56s)                      | Progress:		14% (45721) 5000 c/s (0s +/- 56s)                      / Progress:		15% (48987) 5000 c/s (1s +/- 55s)                      - Progress:		16% (52252) 5000 c/s (1s +/- 54s)                      \ Progress:		17% (55518) 5000 c/s (1s +/- 54s)                      | Progress:		18% (58784) 5000 c/s (1s +/- 53s)                      / Progress:		19% (62050) 5000 c/s (1s +/- 52s)                      - Progress:		20% (65315) 5000 c/s (1s +/- 52s)                      \ Progress:		21% (68581) 5000 c/s (1s +/- 51s)                      | Progress:		22% (71847) 5000 c/s (1s +/- 50s)                      / Progress:		23% (75113) 5000 c/s (1s +/- 50s)                      - Progress:		24% (78378) 5000 c/s (1s +/- 49s)                      \ Progress:		25% (81644) 5000 c/s (1s +/- 48s)                      | Progress:		26% (84910) 5000 c/s (1s +/- 48s)                      / Progress:		27% (88176) 5000 c/s (1s +/- 47s)                      - Progress:		28% (91441) 5000 c/s (1s +/- 47s)                      \ Progress:		29% (94707) 5000 c/s (1s +/- 46s)                      | Progress:		30% (97973) 5000 c/s (1s +/- 45s)                      / Progress:		31% (101239) 5000 c/s (1s +/- 45s)                     - Progress:		32% (104504) 5000 c/s (1s +/- 44s)                     \ Progress:		33% (107770) 5000 c/s (1s +/- 43s)                     | Progress:		34% (111036) 5000 c/s (1s +/- 43s)                     / Progress:		35% (114302) 5000 c/s (1s +/- 42s)                     - Progress:		36% (117567) 5000 c/s (1s +/- 41s)                     \ Progress:		37% (120833) 5000 c/s (2s +/- 41s)                     | Progress:		38% (124099) 5000 c/s (2s +/- 40s)                     / Progress:		39% (127365) 5000 c/s (2s +/- 39s)                     - Progress:		40% (130630) 5000 c/s (2s +/- 39s)                     \ Progress:		41% (133896) 5000 c/s (2s +/- 38s)                     | Progress:		42% (137162) 5000 c/s (2s +/- 37s)                     / Progress:		43% (140428) 5000 c/s (2s +/- 37s)                     - Progress:		44% (143693) 5000 c/s (2s +/- 36s)                     \ Progress:		45% (146959) 5000 c/s (2s +/- 35s)                     | Progress:		46% (150225) 5000 c/s (2s +/- 35s)                     / Progress:		47% (153491) 5000 c/s (2s +/- 34s)                     / Progress:		47% (155030) 75015 c/s (2s +/- 2s)                     - Progress:		48% (156756) 75015 c/s (2s +/- 2s)                     \ Progress:		49% (160022) 75015 c/s (2s +/- 2s)                     | Progress:		50% (163288) 75015 c/s (2s +/- 2s)                     / Progress:		51% (166554) 75015 c/s (2s +/- 2s)                     - Progress:		52% (169819) 75015 c/s (2s +/- 2s)                     \ Progress:		53% (173085) 75015 c/s (2s +/- 2s)                     | Progress:		54% (176351) 75015 c/s (2s +/- 2s)                     / Progress:		55% (179617) 75015 c/s (2s +/- 1s)                     - Progress:		56% (182882) 75015 c/s (2s +/- 1s)                     \ Progress:		57% (186148) 75015 c/s (2s +/- 1s)                     | Progress:		58% (189414) 75015 c/s (2s +/- 1s)                     / Progress:		59% (192680) 75015 c/s (2s +/- 1s)                     - Progress:		60% (195945) 75015 c/s (3s +/- 1s)                     \ Progress:		61% (199211) 75015 c/s (3s +/- 1s)                     | Progress:		62% (202477) 75015 c/s (3s +/- 1s)                     / Progress:		63% (205743) 75015 c/s (3s +/- 1s)                     - Progress:		64% (209008) 75015 c/s (3s +/- 1s)                     \ Progress:		65% (212274) 75015 c/s (3s +/- 1s)                     | Progress:		66% (215540) 75015 c/s (3s +/- 1s)                     / Progress:		67% (218806) 75015 c/s (3s +/- 1s)                     - Progress:		68% (222071) 75015 c/s (3s +/- 1s)                     \ Progress:		69% (225337) 75015 c/s (3s +/- 1s)                     | Progress:		70% (228603) 75015 c/s (3s +/- 1s)                     / Progress:		71% (231869) 75015 c/s (3s +/- 1s)                     - Progress:		72% (235134) 75015 c/s (3s +/- 1s)                     \ Progress:		73% (238400) 75015 c/s (3s +/- 1s)                     | Progress:		74% (241666) 75015 c/s (3s +/- 1s)                     / Progress:		75% (244932) 75015 c/s (3s +/- 1s)                     - Progress:		76% (248197) 75015 c/s (3s +/- 1s)                     \ Progress:		77% (251463) 75015 c/s (3s +/- 1s)                     | Progress:		78% (254729) 75015 c/s (3s +/- <1s)                    / Progress:		79% (257995) 75015 c/s (3s +/- <1s)                    - Progress:		80% (261260) 75015 c/s (3s +/- <1s)                    \ Progress:		81% (264526) 75015 c/s (3s +/- <1s)                    | Progress:		82% (267792) 75015 c/s (3s +/- <1s)                    / Progress:		83% (271058) 75015 c/s (3s +/- <1s)                    - Progress:		84% (274323) 75015 c/s (3s +/- <1s)                    \ Progress:		85% (277589) 75015 c/s (3s +/- <1s)                    | Progress:		86% (280855) 75015 c/s (3s +/- <1s)                    / Progress:		87% (284121) 75015 c/s (3s +/- <1s)                    - Progress:		88% (287386) 75015 c/s (3s +/- <1s)                    \ Progress:		89% (290652) 75015 c/s (3s +/- <1s)                    | Progress:		90% (293918) 75015 c/s (3s +/- <1s)                    / Progress:		91% (297184) 75015 c/s (3s +/- <1s)                    - Progress:		92% (300449) 75015 c/s (3s +/- <1s)                    \ Progress:		93% (303715) 75015 c/s (3s +/- <1s)                    | Progress:		94% (306981) 75015 c/s (3s +/- <1s)                    / Progress:		95% (310247) 75015 c/s (3s +/- <1s)                    - Progress:		96% (313512) 75015 c/s (3s +/- <1s)                    \ Progress:		97% (316778) 75015 c/s (3s +/- <1s)                    | Progress:		98% (320044) 75015 c/s (3s +/- <1s)                    / Progress:		99% (323310) 75015 c/s (3s +/- <1s)                    * Time:    		Compressing the database took 3.514535 seconds.		
 * Result:		(117a,51u,1718,11936,3510,15446)
** Writing FIC database to file
 * File:		train30.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		auto-all-24d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		513
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(109a,0u,1504,9252,1650,10902)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (6) ? c/s  		 | Progress:		2% (11) ? c/s  		 / Progress:		3% (16) ? c/s  		 - Progress:		4% (21) ? c/s  		 \ Progress:		5% (26) ? c/s  		 | Progress:		6% (31) ? c/s  		 / Progress:		7% (36) ? c/s  		 - Progress:		8% (42) ? c/s  		 \ Progress:		9% (47) ? c/s  		 | Progress:		10% (52) ? c/s  		 / Progress:		11% (57) ? c/s  		 - Progress:		12% (62) ? c/s  		 \ Progress:		13% (67) ? c/s  		 | Progress:		14% (72) ? c/s  		 / Progress:		15% (77) ? c/s  		 - Progress:		16% (83) ? c/s  		 \ Progress:		17% (88) ? c/s  		 | Progress:		18% (93) ? c/s  		 / Progress:		19% (98) ? c/s  		 - Progress:		20% (103) ? c/s  		 \ Progress:		21% (108) ? c/s  		 | Progress:		22% (113) ? c/s  		 / Progress:		23% (118) ? c/s  		 - Progress:		24% (124) ? c/s  		 \ Progress:		25% (129) ? c/s  		 | Progress:		26% (134) ? c/s  		 / Progress:		27% (139) ? c/s  		 - Progress:		28% (144) ? c/s  		 \ Progress:		29% (149) ? c/s  		 | Progress:		30% (154) ? c/s  		 / Progress:		31% (160) ? c/s  		 - Progress:		32% (165) ? c/s  		 \ Progress:		33% (170) ? c/s  		 | Progress:		34% (175) ? c/s  		 / Progress:		35% (180) ? c/s  		 - Progress:		36% (185) ? c/s  		 \ Progress:		37% (190) ? c/s  		 | Progress:		38% (195) ? c/s  		 / Progress:		39% (201) ? c/s  		 - Progress:		40% (206) ? c/s  		 \ Progress:		41% (211) ? c/s  		 | Progress:		42% (216) ? c/s  		 / Progress:		43% (221) ? c/s  		 - Progress:		44% (226) ? c/s  		 \ Progress:		45% (231) ? c/s  		 | Progress:		46% (236) ? c/s  		 / Progress:		47% (242) ? c/s  		 - Progress:		48% (247) ? c/s  		 \ Progress:		49% (252) ? c/s  		 | Progress:		50% (257) ? c/s  		 / Progress:		51% (262) ? c/s  		 - Progress:		52% (267) ? c/s  		 \ Progress:		53% (272) ? c/s  		 | Progress:		54% (278) ? c/s  		 / Progress:		55% (283) ? c/s  		 - Progress:		56% (288) ? c/s  		 \ Progress:		57% (293) ? c/s  		 | Progress:		58% (298) ? c/s  		 / Progress:		59% (303) ? c/s  		 - Progress:		60% (308) ? c/s  		 \ Progress:		61% (313) ? c/s  		 | Progress:		62% (319) ? c/s  		 / Progress:		63% (324) ? c/s  		 - Progress:		64% (329) ? c/s  		 \ Progress:		65% (334) ? c/s  		 | Progress:		66% (339) ? c/s  		 / Progress:		67% (344) ? c/s  		 - Progress:		68% (349) ? c/s  		 \ Progress:		69% (354) ? c/s  		 | Progress:		70% (360) ? c/s  		 / Progress:		71% (365) ? c/s  		 - Progress:		72% (370) ? c/s  		 \ Progress:		73% (375) ? c/s  		 | Progress:		74% (380) ? c/s  		 / Progress:		75% (385) ? c/s  		 - Progress:		76% (390) ? c/s  		 \ Progress:		77% (396) ? c/s  		 | Progress:		78% (401) ? c/s  		 / Progress:		79% (406) ? c/s  		 - Progress:		80% (411) ? c/s  		 \ Progress:		81% (416) ? c/s  		 | Progress:		82% (421) ? c/s  		 / Progress:		83% (426) ? c/s  		 - Progress:		84% (431) ? c/s  		 \ Progress:		85% (437) ? c/s  		 | Progress:		86% (442) ? c/s  		 / Progress:		87% (447) ? c/s  		 - Progress:		88% (452) ? c/s  		 \ Progress:		89% (457) ? c/s  		 | Progress:		90% (462) ? c/s  		 / Progress:		91% (467) ? c/s  		 - Progress:		92% (472) ? c/s  		 \ Progress:		93% (478) ? c/s  		 | Progress:		94% (483) ? c/s  		 / Progress:		95% (488) ? c/s  		 - Progress:		96% (493) ? c/s  		 \ Progress:		97% (498) ? c/s  		 | Progress:		98% (503) ? c/s  		 / Progress:		99% (508) ? c/s  		 * Time:    		Compressing the database took 0.005516 seconds.		
 * Result:		(104a,16u,1138,7319,1949,9268)

 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/classify/auto-all-24d-pop-cccp-20210117082116/

Task `classify`, command `classifycompress` finished. This took 29 seconds.

 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: 'classify.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Classification ::
 * Processing Fold:	1
Starting classification
 * Classifying ct sup:	20     * Classifying ct sup:	10     * Classifying ct sup:	0      * Classifying:		done
 * Processing Fold:	2
Starting classification
 * Classifying ct sup:	20     * Classifying ct sup:	10     * Classifying ct sup:	0      * Classifying:		done
 * Processing Fold:	3
Starting classification
 * Classifying ct sup:	20     * Classifying ct sup:	10     * Classifying ct sup:	0      * Classifying:		done
 * Processing Fold:	4
Starting classification
 * Classifying ct sup:	20     * Classifying ct sup:	10     * Classifying ct sup:	0      * Classifying:		done
 * Processing Fold:	5
Starting classification
 * Classifying ct sup:	20     * Classifying ct sup:	10     * Classifying ct sup:	0      * Classifying:		done
 * Processing Fold:	6
Starting classification
 * Classifying ct sup:	20     * Classifying ct sup:	10     * Classifying ct sup:	0      * Classifying:		done
 * Processing Fold:	7
Starting classification
 * Classifying ct sup:	20     * Classifying ct sup:	10     * Classifying ct sup:	0      * Classifying:		done
 * Processing Fold:	8
Starting classification
 * Classifying ct sup:	20     * Classifying ct sup:	10     * Classifying ct sup:	0      * Classifying:		done
 * Processing Fold:	9
Starting classification
 * Classifying ct sup:	20     * Classifying ct sup:	10     * Classifying ct sup:	0      * Classifying:		done
 * Processing Fold:	10
Starting classification
 * Classifying ct sup:	20     * Classifying ct sup:	10     * Classifying ct sup:	0      * Classifying:		done
 * Processing Fold:	1
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	2
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	3
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	4
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	5
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	6
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	7
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	8
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	9
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	10
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done


 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/classify/auto-all-24d-pop-cccp-20210117082116/

Task `classify`, command `classifyanalyse` finished. This took 2 seconds.



Comparing on auto.dat with nb_rows = 205 and minsup = 0.11640381366943867
Running	: ./Resources/Krimp/bin/krimp	9a263052-d752-40c8-a1dc-9de102888325_convertdb.conf
Running	: ./Resources/Krimp/bin/krimp	963037b9-090d-4be7-a4ad-d034364f7be0_analysedb.conf
Running	: ./Resources/Krimp/bin/krimp	a387a9b2-085d-4f41-9d40-ad3e030c2918_classifycompress.conf
res_path = /home/arcchitjain/Documents/Mistle/Output/xps/classify/auto-all-24d-pop-cccp-20210117082116
krimp_item_dict = {0: 41, 1: 28, 2: 29, 3: 76, 4: 70, 5: 109, 6: 133, 7: 39, 8: 31, 9: 62, 10: 127, 11: 112, 12: 126, 13: 35, 14: 106, 15: 90, 16: 95, 17: 32, 18: 93, 19: 59, 20: 3, 21: 43, 22: 82, 23: 47, 24: 49, 25: 40, 26: 120, 27: 46, 28: 36, 29: 99, 30: 132, 31: 87, 32: 81, 33: 53, 34: 105, 35: 121, 36: 55, 37: 118, 38: 130, 39: 52, 40: 123, 41: 66, 42: 100, 43: 115, 44: 107, 45: 58, 46: 44, 47: 98, 48: 30, 49: 61, 50: 102, 51: 128, 52: 24, 53: 113, 54: 110, 55: 1, 56: 34, 57: 85, 58: 77, 59: 124, 60: 60, 61: 4, 62: 2, 63: 65, 64: 56, 65: 89, 66: 84, 67: 27, 68: 64, 69: 57, 70: 51, 71: 18, 72: 122, 73: 14, 74: 125, 75: 83, 76: 50, 77: 48, 78: 108, 79: 71, 80: 116, 81: 111, 82: 13, 83: 114, 84: 72, 85: 17, 86: 11, 87: 117, 88: 101, 89: 69, 90: 67, 91: 25, 92: 23, 93: 96, 94: 86, 95: 75, 96: 26, 97: 54, 98: 129, 99: 94, 100: 91, 101: 38, 102: 10, 103: 33, 104: 15, 105: 8, 106: 5, 107: 103, 108: 19, 109: 7, 110: 45, 111: 37, 112: 22, 113: 74, 114: 20, 115: 119, 116: 88, 117: 80, 118: 73, 119: 63, 120: 12, 121: 42, 122: 9, 123: 6, 124: 97, 125: 21, 126: 92, 127: 79, 128: 78, 129: 68, 130: 16}
# of frequent itemsets	: 5187
Time of DCI Closed		: 0.27245640754699707
DL of initial theory	: 32734.976938600088
4786	itemsets left after T operation 	: [frozenset({-128, -127, -63, -30, -29, -94, -122, -82, -48, -77, -44, -42, -71})]
3988	itemsets left after T operation 	: [frozenset({-29, -121, -110, -77, -42, -71})]
3277	itemsets left after T operation 	: [frozenset({-119, -29, -91, -42})]
1848	itemsets left after T operation 	: [frozenset({-63, -30, -29, -53, -48, -110, -77, -44, -42, -33})]
924	itemsets left after T operation 	: [frozenset({-128, -127, -94, -63, -122, -77, -42, -71})]
464	itemsets left after T operation 	: [frozenset({-30, -29, -48, -44, -33})]
216	itemsets left after T operation 	: [frozenset({-29, -77, -42, -40, -71, -37, -33})]
49	itemsets left after W operation 	: [frozenset({-47, 132, -42, -41, -131, -67}), frozenset({-60, -123, -57, -118, -52, -113, -112, -106, -101, -34, -97, -33, -30, -29, -91, -86, -16, -75, -73, -132}), frozenset({-62, -124, -57, -120, -52, -113, -110, -108, -103, -36, -96, -32, -31, -28, -90, -86, -16, -76, -71, -132, -3}), frozenset({-62, -123, -57, -118, -52, -113, -111, -106, -100, -36, -96, -32, -30, -29, -91, -86, -16, -75, -73, -132}), frozenset({-61, -124, -121, -57, -51, -113, -110, -108, -101, -36, -32, -31, -94, -28, -27, -90, -84, -78, -71, -132, -3})]
17	itemsets left after W operation 	: [frozenset({-71, -77, 133, -42}), frozenset({-128, -127, -64, -60, -122, -56, -50, -113, -47, -110, -108, -40, -101, -36, -32, -95, -31, -28, -90, -25, -83, -133, -2}), frozenset({-110, -29, -133, -121}), frozenset({-128, -127, -94, -63, -122, -133}), frozenset({-29, -37, -40, -133, -33})]
1	itemsets left after V operation 	: [frozenset({-123, -59, -57, -118, -50, -113, -111, -45, -106, -41, 119, -38, -100, -33, -96, -30, -86, -67, -16, -75, -73, -4, -131}), frozenset({-119, -29, -91, -42})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.13843798637390137
Initial DL				: 37091.8604641262
Final DL				: 7717.781825383902
Compression (wrt me)	: 0.7919278858269123
Operator Counters		: {'D': 0, 'W': 2, 'V': 1, 'S': 0, 'R': 0, 'T': 7}
Misle Learning Runtime	: 0.6477420330047607

# of frequent itemsets	: 4754
Time of DCI Closed		: 0.24231910705566406
DL of initial theory	: 32734.97693860008
3519	itemsets left after T operation 	: [frozenset({-32, -30, -29, -110, -77, -42})]
3352	itemsets left after T operation 	: [frozenset({-30, -29, -123, -91, -86, -118, -67, -112, -47, -42, -41, -36, -131})]
2473	itemsets left after T operation 	: [frozenset({-32, -28, -90, -113, -77, -108, -42})]
1411	itemsets left after T operation 	: [frozenset({-96, -29, -91, -119, -50, -47, -42, -100})]
660	itemsets left after W operation 	: [frozenset({-128, -127, -30, -29, 132, -121, -77, -42, -71}), frozenset({-63, -60, -54, -116, -48, -110, -45, -107, -40, -103, -37, -33, -94, -87, -4, -83, -12, -132}), frozenset({-62, -53, -113, -48, -109, -44, -107, -39, -35, -99, -32, -94, -25, -88, -82, -67, -132, -3}), frozenset({-63, -62, -53, -113, -48, -109, -44, -107, -39, -35, -99, -32, -94, -25, -88, -82, -132, -2}), frozenset({-96, -32, -60, -91, -56, -22, -83, -50, -45, -106, -40, -103, -132, -35, -65})]
231	itemsets left after T operation 	: [frozenset({-96, -32, -29, -60, -121, -24, -54, -83, -110, -45, -77, -42, -72, -99})]
46	itemsets left after W operation 	: [frozenset({-47, -29, -91, 133, -42}), frozenset({-124, -60, -56, -119, -116, -50, -110, -106, -40, -101, -36, -32, -94, -30, -26, -83, -76, -129, -71, -133, -65}), frozenset({-123, -59, -56, -118, -116, -50, -111, -104, -39, -101, -37, -33, -31, -94, -83, -76, -8, -71, -133, -67}), frozenset({-30, -123, -86, -118, -67, -112, -41, -133, -36, -131}), frozenset({-96, -119, -133, -100, -50})]
18	itemsets left after W operation 	: [frozenset({-128, -127, -30, -77, -42, 134, -71}), frozenset({-63, -61, -122, -56, -50, -113, -46, -109, -108, -40, -101, -36, -96, -28, -90, -83, -15, -134}), frozenset({-134, -29, 132, -121})]
7	itemsets left after V operation 	: [frozenset({-32, -110, -29, -77, -30, -42}), frozenset({-96, -60, -121, -24, -54, -83, -45, -72, -99, 30})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.14803099632263184
Initial DL				: 37091.86046412619
Final DL				: 6716.286487474717
Compression (wrt me)	: 0.8189282930692989
Operator Counters		: {'D': 0, 'W': 3, 'V': 1, 'S': 0, 'R': 0, 'T': 5}
Misle Learning Runtime	: 0.6364717483520508

# of frequent itemsets	: 4691
Time of DCI Closed		: 0.25681185722351074
DL of initial theory	: 32334.018655501968
4575	itemsets left after T operation 	: [frozenset({-128, -127, -94, -63, -30, -29, -122, -82, -48, -77, -44, -42, -40, -71})]
3885	itemsets left after T operation 	: [frozenset({-30, -29, -110, -77, -42, -71})]
3597	itemsets left after T operation 	: [frozenset({-29, -124, -91, -119, -42})]
2312	itemsets left after T operation 	: [frozenset({-128, -63, -94, -77, -42, -40, -71})]
1085	itemsets left after T operation 	: [frozenset({-29, -44, -42, -37, -33})]
725	itemsets left after W operation 	: [frozenset({-47, 132, -42, -41, -131, -67}), frozenset({-60, -123, -57, -118, -52, -113, -112, -106, -101, -34, -97, -33, -30, -29, -91, -86, -16, -75, -73, -132}), frozenset({-62, -124, -57, -120, -52, -113, -110, -108, -103, -36, -96, -32, -31, -28, -90, -86, -16, -76, -71, -132, -3}), frozenset({-62, -123, -57, -118, -52, -113, -111, -106, -100, -36, -96, -32, -30, -29, -91, -86, -16, -75, -73, -132}), frozenset({-61, -124, -121, -57, -51, -113, -110, -108, -101, -36, -32, -31, -94, -28, -27, -90, -84, -78, -71, -132, -3}), frozenset({-62, -123, -56, -119, -51, -113, -111, -106, -100, -36, -96, -32, -31, -29, -91, -27, -4, -83, -77, -71, -132}), frozenset({-62, -123, -56, -119, -51, -113, -111, -106, -100, -35, -96, -32, -31, -29, -91, -27, -83, -77, -71, -132, -2}), frozenset({-62, -124, -57, -120, -52, -113, -110, -108, -103, -35, -96, -32, -31, -28, -90, -86, -16, -76, -71, -132, -3})]
266	itemsets left after T operation 	: [frozenset({-30, -29, -91, -33})]
26	itemsets left after W operation 	: [frozenset({-32, -47, 133, -42, -71, -36}), frozenset({-60, -123, -56, -119, -116, -50, -110, -106, -39, -101, -94, -30, -29, -91, -5, -83, -76, -8, -133, -131, -66}), frozenset({-61, -123, -57, -119, -116, -52, -111, -106, -40, -101, -31, -94, -29, -91, -5, -83, -131, -76, -8, -133, -67}), frozenset({-128, -127, -64, -60, -122, -56, -50, -113, -110, -108, -40, -101, -95, -31, -28, -90, -25, -83, -77, -133, -2})]
17	itemsets left after T operation 	: [frozenset({-119, -29, -91})]
16	itemsets left after V operation 	: [frozenset({-30, -29, -91, -33}), frozenset({-62, -123, -57, -118, -52, -113, -111, -106, -100, -36, -96, -32, 33, -86, -16, -75, -73, -132})]
11	itemsets left after V operation 	: [frozenset({-119, -29, -91}), frozenset({-30, 119, -33})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.15095114707946777
Initial DL				: 37068.7040526363
Final DL				: 7702.447330938049
Compression (wrt me)	: 0.7922115831187183
Operator Counters		: {'D': 0, 'W': 2, 'V': 2, 'S': 0, 'R': 0, 'T': 7}
Misle Learning Runtime	: 0.6356508731842041

# of frequent itemsets	: 3674
Time of DCI Closed		: 0.22806286811828613
DL of initial theory	: 32334.01865550196
2518	itemsets left after T operation 	: [frozenset({-32, -30, -29, -110, -77, -42})]
2338	itemsets left after T operation 	: [frozenset({-30, -29, -123, -91, -86, -118, -67, -112, -47, -42, -41, -36, -131})]
2131	itemsets left after T operation 	: [frozenset({-96, -32, -62, -56, -47, -14, -77, -42, -41, -70, -67})]
1315	itemsets left after W operation 	: [frozenset({-128, -127, -30, -77, 132, -42, -71}), frozenset({-63, -62, -122, -53, -113, -48, -109, -44, -107, -40, -35, -99, -32, -94, -29, -25, -88, -82, -132, -2}), frozenset({-63, -60, -122, -54, -113, -48, -109, -108, -44, -40, -37, -101, -32, -95, -28, -90, -25, -83, -132, -3}), frozenset({-63, -61, -122, -56, -50, -113, -46, -109, -108, -40, -101, -36, -96, -28, -90, -83, -15, -132}), frozenset({-63, -60, -121, -54, -116, -48, -110, -45, -107, -40, -103, -37, -33, -94, -29, -87, -4, -83, -12, -132}), frozenset({-62, -121, -53, -113, -48, -109, -44, -107, -39, -35, -99, -32, -94, -29, -25, -88, -82, -67, -132, -3}), frozenset({-60, -121, -56, -50, -45, -106, -40, -103, -35, -96, -32, -29, -91, -22, -83, -132, -65})]
490	itemsets left after W operation 	: [frozenset({-96, -29, -91, 133, -119, -50, -47, -42, -100}), frozenset({-125, -60, -54, -113, -110, -107, -41, -36, -33, -30, -5, -85, -78, -9, -71, -133, -131, -65}), frozenset({-62, -123, -56, -114, -111, -107, -40, -35, -32, -30, -86, -19, -78, -73, -133, -4, -67, -129}), frozenset({-125, -60, -54, -113, -110, -107, -41, -36, -32, -30, -5, -85, -78, -9, -71, -133, -131, -66}), frozenset({-60, -123, -56, -114, -111, -107, -40, -36, -32, -30, -86, -19, -78, -73, -133, -4, -67, -129})]
56	itemsets left after W operation 	: [frozenset({-28, -90, 134, -113, -47, -110, -108, -42}), frozenset({-124, -60, -57, -120, -51, -41, -103, -34, -33, -96, -31, -86, -131, -16, -3, -76, -71, -134, -67}), frozenset({-127, -60, -122, -55, -50, -41, -103, -36, -96, -32, -30, -83, -15, -77, -71, -134, -131, -65}), frozenset({-127, -60, -122, -56, -50, -40, -101, -36, -32, -31, -94, -26, -82, -77, -129, -71, -134, -65})]
32	itemsets left after W operation 	: [frozenset({-29, -91, -123, 135, -118, -47, -42, -67}), frozenset({-59, -56, -116, -50, -111, -104, -39, -37, -101, -71, -33, -31, -94, -83, -76, -8, -135}), frozenset({-112, -30, -41, -135, -86, -36, -131})]
15	itemsets left after V operation 	: [frozenset({-64, -125, -60, -121, -54, -113, -49, -45, -106, -39, -36, -99, 30, -96, -31, -91, -24, -83, -72, -4, -129}), frozenset({-32, -110, -29, -77, -30, -42})]
# of frequent itemsets	: 12
Time of DCI Closed		: 0.1433274745941162
Initial DL				: 37068.7040526363
Final DL				: 7591.233585735274
Compression (wrt me)	: 0.7952117890348694
Operator Counters		: {'D': 0, 'W': 4, 'V': 1, 'S': 0, 'R': 0, 'T': 3}
Misle Learning Runtime	: 0.7880573272705078

# of frequent itemsets	: 4885
Time of DCI Closed		: 0.26714634895324707
DL of initial theory	: 31759.70257179972
4681	itemsets left after T operation 	: [frozenset({-128, -127, -63, -30, -29, -94, -122, -82, -48, -77, -44, -42, -71})]
3751	itemsets left after T operation 	: [frozenset({-30, -29, -110, -77, -42, -71})]
3495	itemsets left after T operation 	: [frozenset({-29, -124, -91, -119, -42})]
2049	itemsets left after T operation 	: [frozenset({-128, -63, -29, -53, -48, -110, -77, -44, -42})]
1585	itemsets left after T operation 	: [frozenset({-29, -91, -42, -106, -131})]
795	itemsets left after T operation 	: [frozenset({-33, -37, -42, -29})]
430	itemsets left after T operation 	: [frozenset({-128, -127, -63, -94, -122, -82, -77, -42, -71})]
165	itemsets left after T operation 	: [frozenset({-32, -71, -110, -42})]
19	itemsets left after T operation 	: [frozenset({-119, -29, -124, -91})]
11	itemsets left after V operation 	: [frozenset({32, -30, -29, -77}), frozenset({-32, -71, -110, -42})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.1470179557800293
Initial DL				: 37107.30263009843
Final DL				: 7433.319739607471
Compression (wrt me)	: 0.799680407554653
Operator Counters		: {'D': 0, 'W': 0, 'V': 1, 'S': 0, 'R': 0, 'T': 9}
Misle Learning Runtime	: 0.6052951812744141

# of frequent itemsets	: 3923
Time of DCI Closed		: 0.22246885299682617
DL of initial theory	: 31759.702571799717
2907	itemsets left after W operation 	: [frozenset({-32, -30, -29, -110, -77, -42, 132}), frozenset({-128, -127, -63, -60, -121, -54, -113, -48, -44, -107, -40, -37, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-62, -124, -56, -119, -50, -113, -47, -106, -41, -36, -99, -96, -91, -83, -14, -70, -5, -132, -67, -130}), frozenset({-128, -127, -63, -60, -121, -54, -116, -50, -45, -107, -40, -103, -36, -94, -87, -83, -12, -71, -132, -2}), frozenset({-128, -127, -63, -60, -122, -54, -113, -48, -44, -107, -40, -36, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-128, -63, -124, -60, -121, -54, -113, -49, -45, -107, -39, -36, -99, -96, -88, -24, -4, -83, -72, -132}), frozenset({-128, -127, -63, -60, -121, -54, -114, -50, -45, -106, -40, -102, -37, -96, -88, -4, -83, -19, -71, -132}), frozenset({-62, -124, -56, -119, -52, -113, -47, -106, -41, -100, -35, -96, -91, -83, -14, -70, -132, -67, -129}), frozenset({-62, -124, -56, -119, -52, -113, -47, -106, -41, -35, -99, -96, -91, -83, -131, -14, -70, -132, -67}), frozenset({-63, -125, -60, -121, -54, -116, -50, -47, -106, -41, -36, -99, -96, -91, -83, -9, -71, -6, -132, -131}), frozenset({-128, -127, -63, -60, -122, -117, -53, -48, -45, -107, -40, -101, -36, -94, -87, -4, -82, -12, -71, -132}), frozenset({-127, -63, -61, -121, -56, -50, -113, -46, -106, -40, -37, -101, -96, -88, -4, -83, -15, -71, -132, -129}), frozenset({-128, -127, -63, -60, -122, -54, -113, -49, -45, -108, -40, -36, -99, -96, -88, -24, -4, -83, -72, -132}), frozenset({-128, -63, -125, -60, -121, -54, -50, -113, -45, -107, -39, -35, -99, -96, -88, -24, -83, -72, -132, -2}), frozenset({-62, -124, -56, -119, -50, -113, -47, -106, -41, -36, -100, -96, -91, -83, -131, -14, -70, -5, -132, -67}), frozenset({-128, -127, -63, -60, -121, -54, -114, -50, -45, -106, -40, -102, -36, -96, -88, -4, -83, -19, -71, -132}), frozenset({-128, -127, -63, -61, -121, -56, -50, -113, -46, -106, -40, -101, -36, -96, -88, -4, -83, -15, -71, -132}), frozenset({-128, -127, -63, -60, -121, -54, -113, -49, -45, -108, -40, -36, -99, -96, -88, -24, -4, -83, -72, -132}), frozenset({-63, -125, -60, -121, -54, -116, -50, -45, -107, -40, -103, -36, -94, -91, -83, -12, -71, -132, -2, -129}), frozenset({-128, -127, -63, -60, -121, -54, -50, -113, -45, -107, -40, -35, -99, -96, -88, -24, -83, -72, -132, -2}), frozenset({-128, -127, -63, -60, -121, -54, -114, -50, -45, -107, -40, -35, -99, -96, -91, -24, -83, -72, -132, -2}), frozenset({-128, -127, -63, -60, -122, -54, -113, -48, -44, -107, -40, -37, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-124, -60, -119, -55, -50, -113, -47, -106, -41, -36, -100, -97, -91, -84, -4, -15, -71, -132, -131, -65}), frozenset({-128, -63, -125, -60, -121, -53, -113, -49, -44, -106, -41, -36, -100, -96, -88, -83, -13, -71, -132}), frozenset({-128, -127, -63, -62, -122, -117, -53, -48, -45, -107, -40, -101, -35, -94, -87, -82, -12, -71, -132, -2}), frozenset({-127, -60, -121, -56, -116, -50, -47, -107, -40, -101, -35, -94, -91, -26, -83, -129, -71, -132, -65}), frozenset({-62, -124, -56, -119, -50, -113, -47, -106, -41, -36, -100, -96, -91, -83, -14, -70, -5, -132, -67, -129}), frozenset({-128, -127, -63, -60, -121, -53, -116, -50, -45, -107, -40, -103, -36, -94, -87, -83, -12, -71, -132, -2})]
2735	itemsets left after T operation 	: [frozenset({-96, -32, -30, -29, -91, -86, -47, -78, -42, -67})]
2031	itemsets left after T operation 	: [frozenset({-32, -28, -90, -113, -77, -108, -42})]
1514	itemsets left after W operation 	: [frozenset({-128, -127, -30, -94, -29, 133, -48, -77, -107, -42, -71}), frozenset({-63, -62, -121, -53, -113, -109, -44, -39, -35, -99, -32, -25, -88, -82, -133, -2}), frozenset({-63, -62, -122, -53, -113, -109, -44, -40, -35, -99, -32, -25, -88, -82, -133, -2}), frozenset({-63, -60, -121, -54, -116, -110, -45, -40, -103, -37, -33, -87, -83, -12, -133, -4}), frozenset({-62, -121, -53, -113, -109, -44, -39, -35, -99, -32, -25, -88, -82, -3, -133, -67})]
688	itemsets left after T operation 	: [frozenset({-30, -29, -91, -113, -47, -42, -41, -36, -131})]
38	itemsets left after W operation 	: [frozenset({-29, -91, -42, 134, -83, -50}), frozenset({-124, -60, -56, -119, -116, -47, -110, -106, -40, -101, -36, -32, -94, -30, -26, -76, -129, -71, -134, -65}), frozenset({-124, -60, -121, -54, -113, -110, -45, -106, -39, -99, -35, -96, -32, -31, -24, -77, -129, -72, -134, -2, -65}), frozenset({-128, -127, -60, -121, -56, -45, -106, -40, -103, -35, -96, -32, -30, -22, -77, -71, -134, -65}), frozenset({-62, -124, -56, -119, -116, -111, -47, -41, -104, -100, -36, -96, -32, -31, -70, -131, -14, -77, -134, -5, -67}), frozenset({-123, -59, -56, -118, -116, -111, -47, -104, -39, -37, -101, -33, -31, -94, -76, -8, -71, -134, -67})]
5	itemsets left after W operation 	: [frozenset({-30, -29, -42, 135}), frozenset({-32, -110, -77, 132, -135}), frozenset({-47, -91, -41, -135, -36, -131, -113}), frozenset({-96, -32, -91, -86, -47, -78, -135, -67}), frozenset({-128, -127, -94, 133, -48, -77, -107, -71, -135})]
# of frequent itemsets	: 537
Time of DCI Closed		: 0.17290616035461426
480	itemsets left after T operation 	: [frozenset({-128, -127, -63, -60, -40, -132})]
325	itemsets left after T operation 	: [frozenset({-96, -63, -121, -88, -83, -113, -132})]
311	itemsets left after W operation 	: [frozenset({-96, -106, 136, -132, -83, -113}), frozenset({-62, -124, -56, -119, -50, -47, -41, -100, -36, -91, -14, -136, -70, -5, -67, -129}), frozenset({-62, -124, -56, -119, -50, -47, -41, -36, -99, -91, -14, -136, -70, -5, -67, -130}), frozenset({-62, -124, -91, -56, -119, -52, -35, -47, -14, -41, -136, -70, -100, -67, -129}), frozenset({-62, -124, -91, -56, -119, -52, -99, -67, -35, -47, -14, -41, -136, -70, -131})]
164	itemsets left after W operation 	: [frozenset({-60, -121, 137, -71, -132, -83, -50}), frozenset({-96, -63, -125, -91, -54, -116, -99, -47, -41, -9, -106, -137, -6, -36, -131}), frozenset({-63, -94, -125, -91, -54, -116, -45, -12, -107, -137, -40, -103, -36, -2, -129}), frozenset({-127, -94, -91, -26, -56, -116, -47, -129, -107, -137, -40, -101, -35, -65})]
159	itemsets left after W operation 	: [frozenset({-47, 138, -67}), frozenset({-124, -60, -57, -120, -51, -113, -110, -108, -42, -41, -103, -34, -33, -96, -31, -28, -90, -86, -131, -16, -76, -138, -71, -3}), frozenset({-62, -124, -56, -119, -116, -111, -41, -104, -100, -36, -96, -32, -31, -70, -14, -77, -138, -134, -5, -131}), frozenset({-123, -59, -56, -118, -116, -111, -104, -39, -37, -101, -33, -31, -94, -76, -138, -8, -71, -134}), frozenset({-96, -32, -78, -91, -138, -135, -86}), frozenset({-62, -124, -91, -56, -119, -100, -50, -14, -138, -41, -136, -70, -5, -36, -129}), frozenset({-62, -124, -91, -56, -119, -50, -14, -138, -41, -136, -70, -5, -36, -99, -130}), frozenset({-62, -124, -91, -56, -119, -52, -14, -138, -41, -136, -70, -100, -35, -129}), frozenset({-62, -124, -91, -56, -119, -52, -99, -35, -14, -138, -41, -136, -70, -131})]
116	itemsets left after T operation 	: [frozenset({-35, -99, -113})]
96	itemsets left after V operation 	: [frozenset({-62, -122, -117, -53, -48, -45, -107, -101, -35, -94, -87, -82, -12, -71, 60, -2}), frozenset({-128, -127, -63, -60, -40, -132})]
57	itemsets left after T operation 	: [frozenset({-40, -45, -60, -121})]
49	itemsets left after W operation 	: [frozenset({-96, 139, -132, -83, -113}), frozenset({136, -139, -106}), frozenset({-88, -63, -139, -121})]
Unpacking W operator applied earlier using 137 on frozenset({-60, -121, -83, -50, -71, -132})
Unpacking W operator applied earlier using 136 on frozenset({-96, -83, -113, -106, -132})
# of frequent itemsets	: 9
Time of DCI Closed		: 0.1870865821838379
Clause Pruned	: frozenset({-128, -127, -94, 133, -48, -77, -107, -71, -135})
Initial DL				: 37107.30263009843
Final DL				: 4083.2089604270423
Compression (wrt me)	: 0.8899621187470771
Operator Counters		: {'D': 0, 'W': 6, 'V': 1, 'S': 0, 'R': 0, 'T': 7}
Misle Learning Runtime	: 1.5486347675323486

# of frequent itemsets	: 4727
Time of DCI Closed		: 0.2934386730194092
DL of initial theory	: 33009.066871793206
4276	itemsets left after T operation 	: [frozenset({-30, -29, -110, -77, -42, -71})]
2830	itemsets left after T operation 	: [frozenset({-128, -63, -29, -53, -48, -77, -44, -42})]
2313	itemsets left after T operation 	: [frozenset({-29, -124, -91, -119, -42})]
1129	itemsets left after T operation 	: [frozenset({-128, -63, -94, -77, -42, -40, -71})]
730	itemsets left after W operation 	: [frozenset({-32, -47, 132, -42, -41, -131, -67}), frozenset({-62, -124, -57, -120, -52, -113, -110, -108, -103, -36, -96, -31, -28, -90, -86, -16, -76, -71, -132, -3}), frozenset({-62, -123, -57, -118, -52, -113, -111, -106, -36, -100, -96, -30, -29, -91, -86, -16, -75, -73, -132}), frozenset({-61, -124, -121, -57, -51, -113, -110, -108, -101, -36, -31, -94, -28, -27, -90, -84, -78, -71, -132, -3}), frozenset({-62, -123, -56, -119, -51, -113, -111, -106, -36, -100, -96, -31, -29, -91, -27, -4, -83, -77, -71, -132}), frozenset({-62, -123, -56, -119, -51, -113, -111, -106, -100, -35, -96, -31, -29, -91, -27, -83, -77, -71, -132, -2}), frozenset({-62, -124, -57, -120, -52, -113, -110, -108, -103, -35, -96, -31, -28, -90, -86, -16, -76, -71, -132, -3})]
332	itemsets left after T operation 	: [frozenset({-29, -119, -42, -37, -33})]
249	itemsets left after W operation 	: [frozenset({-119, -29, -91, 133}), frozenset({-60, -123, -56, -116, -50, -47, -110, -106, -42, -39, -101, -36, -32, -94, -30, -5, -83, -76, -8, -71, -133, -131, -66}), frozenset({-124, -59, -54, -117, -112, -48, -108, -44, -43, -41, -99, -34, -33, -96, -30, -86, -21, -78, -72, -133, -131, -66}), frozenset({-133, -124, -42}), frozenset({-62, -123, -56, -51, -113, -111, -106, -36, -100, -96, -31, -27, -4, -83, -77, -71, -133, -132}), frozenset({-62, -123, -56, -51, -113, -111, -106, -100, -35, -96, -31, -27, -83, -77, -71, -133, -132, -2})]
147	itemsets left after T operation 	: [frozenset({-128, -63, -29, -53, -48, -44, -42})]
50	itemsets left after W operation 	: [frozenset({-32, -47, -110, -42, 134, -71, -36}), frozenset({-128, -127, -64, -60, -122, -56, -50, -113, -108, -40, -101, -95, -31, -28, -90, -25, -83, -77, -134, -2}), frozenset({-60, -123, -56, -116, -50, -106, -39, -101, -94, -30, -133, -83, -76, -8, -134, -5, -131, -66})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.14616775512695312
Initial DL				: 37130.48626305705
Final DL				: 8008.710974292208
Compression (wrt me)	: 0.7843090198831986
Operator Counters		: {'D': 0, 'W': 3, 'V': 0, 'S': 0, 'R': 0, 'T': 6}
Misle Learning Runtime	: 0.8195483684539795

# of frequent itemsets	: 4618
Time of DCI Closed		: 0.2394421100616455
DL of initial theory	: 33009.066871793206
4369	itemsets left after W operation 	: [frozenset({-128, -63, -30, -127, -29, -32, 132, -110, -77, -42, -40}), frozenset({-60, -121, -54, -113, -48, -44, -107, -37, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-60, -122, -54, -113, -49, -45, -108, -36, -99, -96, -88, -24, -4, -83, -72, -132}), frozenset({-60, -121, -54, -114, -50, -45, -106, -102, -36, -96, -88, -4, -83, -19, -71, -132}), frozenset({-61, -121, -56, -50, -113, -46, -106, -101, -36, -96, -88, -4, -83, -15, -71, -132}), frozenset({-60, -121, -54, -116, -50, -45, -107, -103, -36, -94, -87, -83, -12, -71, -132, -2}), frozenset({-60, -122, -54, -113, -48, -44, -107, -36, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-60, -121, -54, -113, -49, -45, -108, -36, -99, -96, -88, -24, -4, -83, -72, -132}), frozenset({-59, -122, -53, -115, -48, -108, -44, -36, -100, -94, -88, -82, -10, -71, -132, -2}), frozenset({-60, -121, -54, -50, -113, -45, -107, -35, -99, -96, -88, -24, -83, -72, -132, -2}), frozenset({-60, -121, -54, -114, -50, -45, -107, -35, -99, -96, -91, -24, -83, -72, -132, -2}), frozenset({-60, -122, -54, -113, -48, -44, -107, -37, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-60, -121, -54, -114, -50, -45, -106, -102, -37, -96, -88, -4, -83, -19, -71, -132}), frozenset({-60, -121, -54, -114, -49, -45, -107, -36, -99, -96, -91, -24, -4, -83, -72, -132}), frozenset({-62, -122, -117, -53, -48, -45, -107, -101, -35, -94, -87, -82, -12, -71, -132, -2}), frozenset({-60, -121, -54, -113, -48, -44, -107, -36, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-60, -121, -53, -116, -50, -45, -107, -103, -36, -94, -87, -83, -12, -71, -132, -2}), frozenset({-60, -122, -117, -53, -48, -45, -107, -101, -36, -94, -87, -4, -82, -12, -71, -132})]
4352	itemsets left after T operation 	: [frozenset({-96, -32, -62, -56, -113, -47, -14, -77, -110, -42, -41, -70, -67})]
4266	itemsets left after T operation 	: [frozenset({-30, -29, -123, -91, -86, -118, -67, -112, -47, -42, -41, -36, -131})]
2396	itemsets left after W operation 	: [frozenset({-32, -30, -77, 133, -42, -71}), frozenset({-127, -63, -59, -122, -53, -115, -48, -110, -108, -44, -40, -36, -100, -94, -29, -88, -82, -13, -133}), frozenset({-128, -127, -63, -62, -122, -53, -113, -48, -109, -44, -107, -40, -99, -35, -94, -29, -25, -88, -82, -133, -2}), frozenset({-128, -127, -63, -60, -122, -54, -113, -48, -109, -108, -44, -40, -101, -37, -95, -28, -90, -25, -83, -133, -3}), frozenset({-128, -127, -62, -121, -53, -113, -48, -109, -44, -107, -39, -99, -35, -94, -29, -25, -88, -82, -3, -133, -67}), frozenset({-127, -60, -122, -55, -50, -113, -47, -110, -108, -41, -103, -36, -96, -28, -90, -83, -15, -133, -131, -65}), frozenset({-63, -125, -60, -121, -54, -116, -50, -47, -110, -106, -41, -36, -99, -96, -29, -91, -83, -9, -6, -133, -131}), frozenset({-127, -63, -61, -121, -56, -50, -113, -110, -46, -106, -40, -101, -37, -96, -29, -88, -83, -15, -133, -4, -129}), frozenset({-128, -127, -63, -60, -122, -54, -113, -48, -109, -108, -44, -40, -101, -36, -95, -28, -90, -25, -83, -133, -3}), frozenset({-128, -127, -63, -62, -121, -53, -113, -48, -109, -44, -107, -39, -99, -35, -94, -29, -25, -88, -82, -133, -2}), frozenset({-63, -125, -60, -121, -54, -116, -50, -110, -45, -107, -40, -103, -36, -94, -29, -91, -83, -12, -133, -2, -129}), frozenset({-128, -127, -60, -121, -56, -50, -45, -106, -40, -103, -35, -96, -29, -91, -22, -83, -133, -65}), frozenset({-124, -60, -119, -55, -50, -113, -47, -110, -106, -41, -100, -36, -97, -29, -91, -84, -15, -133, -4, -131, -65}), frozenset({-128, -63, -125, -60, -121, -53, -113, -49, -110, -44, -106, -41, -100, -36, -96, -29, -88, -83, -13, -133}), frozenset({-127, -60, -121, -56, -116, -50, -47, -110, -107, -40, -101, -35, -94, -29, -91, -26, -83, -129, -133, -65})]
1403	itemsets left after W operation 	: [frozenset({-96, -29, -91, 134, -119, -50, -47, -42, -100}), frozenset({-62, -123, -56, -114, -111, -107, -40, -35, -32, -30, -86, -19, -78, -73, -134, -4, -67, -129}), frozenset({-125, -60, -54, -113, -110, -107, -41, -36, -32, -30, -85, -78, -9, -71, -134, -5, -131, -66}), frozenset({-124, -60, -56, -114, -111, -107, -40, -36, -32, -30, -86, -19, -78, -73, -134, -4, -67, -129}), frozenset({-60, -123, -56, -114, -111, -107, -40, -36, -32, -30, -86, -19, -78, -73, -134, -4, -67, -129}), frozenset({-62, -124, -56, -116, -111, -41, -104, -36, -32, -31, -70, -83, -131, -14, -77, -134, -5, -67}), frozenset({-125, -60, -54, -113, -110, -107, -41, -36, -33, -30, -85, -78, -9, -71, -134, -5, -131, -65})]
751	itemsets left after T operation 	: [frozenset({-96, -32, -29, -60, -121, -24, -54, -83, -110, -45, -77, -42, -72, -99})]
407	itemsets left after W operation 	: [frozenset({-128, -63, -30, -127, 135, -77, -42, -40}), frozenset({-61, -122, -56, -50, -113, -46, -109, -108, -101, -36, -71, -96, -28, -90, -83, -15, -135}), frozenset({-60, -121, -54, -116, -48, -110, -45, -107, -103, -37, -71, -33, -94, -29, -87, -83, -12, -135, -4}), frozenset({-32, -110, -29, 132, -135})]
122	itemsets left after W operation 	: [frozenset({-47, -29, -91, -42, 136}), frozenset({-123, -59, -56, -118, -116, -50, -111, -104, -39, -8, -101, -37, -33, -31, -94, -83, -76, -136, -71, -67}), frozenset({-124, -60, -56, -119, -116, -50, -110, -106, -40, -101, -36, -32, -94, -30, -26, -83, -76, -129, -136, -71, -65}), frozenset({-96, 134, -136, -119, -100, -50}), frozenset({-30, -123, -86, -118, -67, -112, -41, -136, -36, -131})]
24	itemsets left after W operation 	: [frozenset({-28, -90, 137, -113, -47, -110, -108, -42}), frozenset({-124, -60, -57, -120, -51, -41, -103, -34, -33, -96, -31, -86, -131, -16, -3, -76, -137, -71, -67}), frozenset({-127, -60, -122, -56, -50, -129, -40, -101, -36, -32, -31, -94, -26, -82, -77, -137, -71, -65})]
# of frequent itemsets	: 241
Time of DCI Closed		: 0.16021347045898438
240	itemsets left after W operation 	: [frozenset({-94, -25, -88, 138, -82, -113, -48, -44, -107, -99}), frozenset({-60, -121, -54, -138, -71, -37, -132, -3}), frozenset({-60, -122, -132, -54, -138, -71, -36, -3}), frozenset({-60, -122, -54, -138, -71, -37, -132, -3}), frozenset({-60, -121, -132, -54, -138, -71, -36, -3}), frozenset({-128, -127, -62, -63, -29, -122, -53, -109, -138, -40, -133, -35, -2}), frozenset({-128, -127, -62, -29, -121, -53, -35, -3, -109, -138, -39, -133, -67}), frozenset({-128, -127, -62, -63, -29, -121, -53, -109, -138, -39, -133, -35, -2})]
231	itemsets left after T operation 	: [frozenset({-45, -60, -83, -121})]
175	itemsets left after W operation 	: [frozenset({-36, -60, 139}), frozenset({-96, -122, -88, -24, -54, -4, -83, -113, -49, -45, -108, -139, -72, -132, -99}), frozenset({-127, -122, -56, -50, -129, -40, -101, -32, -31, -94, -26, -82, -77, -139, -137, -71, -65}), frozenset({-139, -122, -138, -71, -54, -132, -3}), frozenset({-94, -122, -87, -117, -53, -4, -82, -48, -45, -12, -107, -139, -71, -101, -132}), frozenset({-139, -138, -121, -71, -54, -132, -3}), frozenset({-127, -122, -55, -50, -113, -47, -110, -108, -41, -103, -96, -28, -90, -83, -15, -139, -133, -131, -65}), frozenset({-63, -125, -121, -54, -116, -50, -47, -110, -106, -41, -99, -96, -29, -91, -83, -139, -9, -6, -133, -131}), frozenset({-128, -127, -63, -122, -54, -113, -48, -109, -108, -44, -40, -101, -95, -28, -90, -25, -83, -139, -133, -3}), frozenset({-124, -119, -55, -50, -113, -47, -110, -106, -41, -100, -97, -29, -91, -84, -15, -139, -133, -4, -131, -65}), frozenset({-128, -63, -125, -121, -53, -113, -49, -110, -44, -106, -41, -100, -96, -29, -88, -83, -13, -139, -133}), frozenset({-125, -54, -113, -110, -107, -41, -32, -30, -85, -78, -139, -9, -71, -134, -5, -131, -66}), frozenset({-124, -56, -114, -111, -107, -40, -32, -30, -86, -19, -78, -139, -73, -134, -4, -67, -129}), frozenset({-123, -56, -114, -111, -107, -40, -32, -30, -86, -19, -78, -139, -73, -134, -4, -67, -129}), frozenset({-125, -54, -113, -110, -107, -41, -33, -30, -85, -78, -139, -9, -71, -134, -5, -131, -65}), frozenset({-124, -56, -119, -116, -50, -110, -106, -40, -101, -32, -94, -30, -26, -83, -76, -139, -129, -136, -71, -65})]
165	itemsets left after T operation 	: [frozenset({-40, -56, -129})]
147	itemsets left after W operation 	: [frozenset({-48, -94, -53, 140, -82}), frozenset({-59, -122, -88, -132, -36, -115, -44, -108, -10, -140, -71, -100, -2}), frozenset({-62, -122, -87, -117, -45, -12, -107, -140, -71, -101, -132, -35, -2}), frozenset({-122, -87, -117, -4, -45, -12, -107, -139, -140, -71, -101, -132}), frozenset({-127, -63, -59, -122, -115, -110, -108, -44, -40, -100, -36, -29, -88, -13, -140, -133})]
140	itemsets left after W operation 	: [frozenset({-63, -29, 141, -133}), frozenset({-127, -59, -122, -88, -100, -115, -110, -13, -108, -44, -140, -141, -40, -36}), frozenset({-128, -127, -62, -122, -53, -109, -141, -138, -40, -35, -2}), frozenset({-128, -127, -62, -121, -53, -109, -141, -138, -39, -35, -2}), frozenset({-125, -121, -54, -116, -50, -47, -110, -106, -41, -99, -96, -91, -83, -141, -139, -9, -6, -131}), frozenset({-128, -125, -121, -53, -113, -49, -110, -44, -106, -41, -100, -96, -88, -83, -13, -141, -139})]
122	itemsets left after W operation 	: [frozenset({-71, -132, 142}), frozenset({-96, -61, -121, -56, -88, -36, -83, -50, -113, -15, -46, -142, -106, -101, -4}), frozenset({-122, -87, -117, -142, -45, -12, -107, -139, -140, -101, -4}), frozenset({-142, -60, -138, -121, -54, -37, -3}), frozenset({-142, -60, -122, -138, -54, -37, -3}), frozenset({-142, -139, -122, -138, -54, -3}), frozenset({-142, -139, -138, -121, -54, -3}), frozenset({-59, -122, -88, -36, -115, -142, -44, -108, -10, -140, -100, -2}), frozenset({-62, -122, -87, -117, -142, -45, -12, -107, -140, -101, -35, -2})]
119	itemsets left after W operation 	: [frozenset({-41, -131, 143}), frozenset({-62, -124, -56, -116, -111, -104, -36, -32, -31, -70, -83, -143, -14, -77, -134, -5, -67}), frozenset({-30, -123, -86, -118, -112, -143, -136, -36, -67}), frozenset({-124, -60, -57, -120, -51, -103, -34, -33, -96, -31, -86, -16, -143, -3, -76, -137, -71, -67}), frozenset({-127, -122, -55, -50, -113, -47, -110, -108, -103, -96, -28, -90, -83, -15, -143, -139, -133, -65}), frozenset({-124, -119, -55, -50, -113, -47, -110, -106, -100, -97, -29, -91, -84, -15, -143, -139, -133, -4, -65}), frozenset({-125, -54, -113, -110, -107, -32, -30, -85, -143, -78, -139, -9, -71, -134, -5, -66}), frozenset({-125, -54, -113, -110, -107, -33, -30, -85, -143, -78, -139, -9, -71, -134, -5, -65}), frozenset({-125, -121, -54, -116, -50, -47, -110, -106, -99, -96, -91, -83, -143, -141, -139, -9, -6})]
107	itemsets left after W operation 	: [frozenset({-96, 144, -106, -121, -83}), frozenset({-61, -56, -88, -36, -50, -113, -144, -15, -46, -142, -101, -4}), frozenset({-125, -91, -54, -116, -50, -144, -47, -110, -143, -141, -139, -9, -6, -99}), frozenset({-128, -125, -88, -53, -49, -113, -144, -110, -13, -44, -141, -139, -41, -100})]
96	itemsets left after W operation 	: [frozenset({-48, 145, -44, -25, -113}), frozenset({-128, -127, -63, -60, -122, -54, -109, -108, -40, -101, -37, -95, -28, -90, -83, -145, -133, -3}), frozenset({-94, -107, -88, 138, -99, -82, -145}), frozenset({-128, -127, -63, -122, -54, -109, -108, -40, -101, -95, -28, -90, -83, -145, -139, -133, -3})]
87	itemsets left after W operation 	: [frozenset({-110, 146, -113}), frozenset({-96, -32, -62, -56, -146, -47, -14, -77, -42, -41, -70, -67}), frozenset({-32, -30, -125, -54, -85, -146, -143, -78, -107, -139, -9, -71, -134, -5, -66}), frozenset({-124, -119, -55, -50, -47, -106, -100, -97, -29, -91, -84, -146, -15, -143, -139, -133, -4, -65}), frozenset({-30, -125, -33, -54, -85, -146, -143, -78, -107, -139, -9, -71, -134, -5, -65}), frozenset({-128, -125, -88, -53, -146, -49, -144, -13, -44, -141, -139, -41, -100}), frozenset({-47, -28, -108, -90, -42, 137, -146}), frozenset({-127, -122, -55, -50, -47, -108, -103, -96, -28, -90, -83, -146, -15, -143, -139, -133, -65})]
83	itemsets left after W operation 	: [frozenset({147, -108, -122}), frozenset({-128, -127, -63, -60, -54, -109, -40, -101, -37, -95, -28, -90, -83, -147, -145, -133, -3}), frozenset({-61, -56, -50, -113, -46, -109, -135, -101, -36, -96, -28, -90, -83, -147, -15, -71}), frozenset({-128, -127, -63, -54, -109, -40, -101, -95, -28, -90, -83, -147, -145, -139, -133, -3}), frozenset({-96, -88, -24, -54, -4, -83, -147, -113, -49, -45, -139, -72, -132, -99}), frozenset({-127, -55, -50, -47, -103, -96, -28, -90, -83, -146, -147, -15, -143, -139, -133, -65}), frozenset({-127, -59, -88, -100, -115, -147, -110, -13, -44, -140, -141, -40, -36}), frozenset({-59, -88, -36, -115, -147, -142, -44, -140, -10, -100, -2})]
77	itemsets left after W operation 	: [frozenset({-128, -127, 148}), frozenset({-63, -30, -77, -42, 135, -40, -148}), frozenset({-63, -60, -54, -109, -40, -37, -101, -95, -28, -90, -148, -83, -147, -145, -133, -3}), frozenset({-62, -29, -121, -53, -148, -67, -3, -109, -138, -39, -133, -35}), frozenset({-63, -95, -133, -28, -90, -54, -148, -83, -147, -145, -109, -139, -40, -101, -3}), frozenset({-62, -122, -53, -148, -109, -141, -138, -40, -35, -2}), frozenset({-62, -121, -53, -148, -109, -141, -138, -39, -35, -2})]
66	itemsets left after W operation 	: [frozenset({-56, -101, 149, -50}), frozenset({-96, -61, -28, -90, -149, -83, -147, -113, -15, -46, -109, -135, -71, -36}), frozenset({-123, -59, -118, -116, -111, -104, -39, -8, -37, -33, -31, -94, -149, -83, -76, -136, -71, -67}), frozenset({-61, -88, -149, -36, -113, -144, -15, -46, -142, -4})]
54	itemsets left after T operation 	: [frozenset({-60, -3})]
52	itemsets left after W operation 	: [frozenset({-88, -44, 150}), frozenset({-128, -125, -150, -53, -146, -49, -144, -13, -141, -139, -41, -100}), frozenset({-127, -59, -100, -150, -115, -147, -110, -13, -140, -141, -40, -36}), frozenset({-59, -150, -36, -147, -115, -142, -140, -10, -100, -2})]
Unpacking W operator applied earlier using 148 on frozenset({-128, -127})
Unpacking W operator applied earlier using 147 on frozenset({-108, -122})
Unpacking W operator applied earlier using 145 on frozenset({-48, -113, -44, -25})
Unpacking W operator applied earlier using 142 on frozenset({-71, -132})
Unpacking W operator applied earlier using 139 on frozenset({-60, -36})
Unpacking W operator applied earlier using 138 on frozenset({-94, -25, -88, -82, -113, -48, -44, -107, -99})
Unpacking W operator applied earlier using 133 on frozenset({-32, -30, -77, -42, -71})
# of frequent itemsets	: 15
Time of DCI Closed		: 0.1408228874206543
Clause Pruned	: frozenset({-47, -28, -108, -90, -42, 137, -146})
Initial DL				: 37130.48626305706
Final DL				: 4225.730578738056
Compression (wrt me)	: 0.8861924255771882
Operator Counters		: {'D': 0, 'W': 12, 'V': 0, 'S': 0, 'R': 0, 'T': 6}
Misle Learning Runtime	: 2.2888081073760986

# of frequent itemsets	: 5412
Time of DCI Closed		: 0.28499937057495117
DL of initial theory	: 32985.7889124641
4805	itemsets left after T operation 	: [frozenset({-128, -127, -63, -30, -29, -94, -122, -82, -48, -77, -44, -42, -71})]
3957	itemsets left after T operation 	: [frozenset({-29, -121, -110, -77, -42, -71})]
3341	itemsets left after T operation 	: [frozenset({-119, -29, -91, -42})]
1388	itemsets left after W operation 	: [frozenset({-128, -127, -63, -30, -77, 132, -42}), frozenset({-60, -122, -53, -113, -48, -109, -108, -44, -40, -102, -36, -33, -94, -28, -90, -4, -83, -19, -71, -132}), frozenset({-61, -121, -53, -113, -48, -110, -44, -106, -39, -37, -99, -33, -96, -29, -88, -24, -83, -72, -132, -2}), frozenset({-61, -122, -54, -113, -49, -109, -108, -45, -40, -101, -36, -32, -94, -28, -90, -26, -82, -71, -132, -3}), frozenset({-59, -121, -56, -50, -45, -106, -40, -103, -37, -33, -96, -29, -91, -22, -83, -71, -132}), frozenset({-60, -122, -53, -113, -48, -110, -44, -107, -40, -37, -99, -33, -96, -29, -88, -24, -82, -72, -132, -2}), frozenset({-61, -122, -54, -113, -49, -109, -108, -45, -40, -101, -36, -33, -94, -28, -90, -26, -4, -82, -71, -132}), frozenset({-60, -122, -56, -50, -113, -47, -110, -106, -40, -103, -36, -96, -32, -29, -91, -25, -83, -71, -132, -2}), frozenset({-60, -121, -53, -113, -48, -110, -44, -106, -40, -37, -99, -33, -96, -29, -88, -24, -83, -72, -132, -2}), frozenset({-94, -29, -122, -82, -48, -44, -71, -132})]
460	itemsets left after T operation 	: [frozenset({-30, -29, -82, -48, -44, -42, -33})]
263	itemsets left after T operation 	: [frozenset({-32, -113, -110, -42, -71})]
100	itemsets left after T operation 	: [frozenset({-96, -29, -50, -77, -42, -71, -33})]
81	itemsets left after T operation 	: [frozenset({-48, -29, -44, -33})]
17	itemsets left after W operation 	: [frozenset({-30, -29, -91, -42, -41, 133, -33}), frozenset({-123, -59, -57, -118, -50, -113, -111, -45, -106, -38, -100, -96, -86, -131, -16, -75, -73, -133, -4, -67}), frozenset({-60, -123, -57, -118, -52, -113, -112, -47, -106, -101, -34, -97, -86, -131, -16, -75, -73, -133, -67})]
10	itemsets left after V operation 	: [frozenset({-119, -29, -91, -42}), frozenset({-30, 119, 133, -41, -33})]
9	itemsets left after V operation 	: [frozenset({-48, -29, -44, -33}), frozenset({33, -94, -122, -71, -132, -82})]
7	itemsets left after T operation 	: [frozenset({-48, -44, -33})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.15331697463989258
Initial DL				: 37130.44536665142
Final DL				: 6774.466342453452
Compression (wrt me)	: 0.8175495533232167
Operator Counters		: {'D': 0, 'W': 2, 'V': 2, 'S': 0, 'R': 0, 'T': 8}
Misle Learning Runtime	: 0.6736452579498291

# of frequent itemsets	: 4345
Time of DCI Closed		: 0.23472332954406738
DL of initial theory	: 32985.7889124641
4056	itemsets left after W operation 	: [frozenset({-128, -63, -30, -127, -29, -32, 132, -110, -77, -42, -40}), frozenset({-60, -121, -54, -113, -48, -44, -107, -37, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-60, -121, -54, -114, -50, -45, -106, -102, -36, -96, -88, -4, -83, -19, -71, -132}), frozenset({-61, -121, -56, -50, -113, -46, -106, -101, -36, -96, -88, -4, -83, -15, -71, -132}), frozenset({-60, -121, -54, -113, -49, -45, -108, -36, -99, -96, -88, -24, -4, -83, -72, -132}), frozenset({-60, -122, -54, -113, -48, -44, -107, -36, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-59, -122, -53, -115, -48, -108, -44, -36, -100, -94, -88, -82, -10, -71, -132, -2}), frozenset({-60, -121, -54, -114, -50, -45, -107, -35, -99, -96, -91, -24, -83, -72, -132, -2}), frozenset({-60, -122, -54, -113, -48, -44, -107, -37, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-60, -121, -54, -114, -50, -45, -106, -102, -37, -96, -88, -4, -83, -19, -71, -132}), frozenset({-60, -121, -54, -114, -49, -45, -107, -36, -99, -96, -91, -24, -4, -83, -72, -132}), frozenset({-60, -121, -54, -116, -50, -45, -107, -103, -36, -94, -87, -83, -12, -71, -132, -2}), frozenset({-62, -122, -117, -53, -48, -45, -107, -101, -35, -94, -87, -82, -12, -71, -132, -2}), frozenset({-60, -121, -53, -116, -50, -45, -107, -103, -36, -94, -87, -83, -12, -71, -132, -2}), frozenset({-60, -121, -54, -113, -48, -44, -107, -36, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-60, -122, -54, -113, -49, -45, -108, -36, -99, -96, -88, -24, -4, -83, -72, -132}), frozenset({-60, -122, -117, -53, -48, -45, -107, -101, -36, -94, -87, -4, -82, -12, -71, -132})]
3970	itemsets left after T operation 	: [frozenset({-96, -32, -62, -56, -113, -47, -14, -77, -110, -42, -41, -70, -67})]
1971	itemsets left after W operation 	: [frozenset({-32, -30, -29, 133, -42}), frozenset({-127, -63, -59, -122, -53, -115, -48, -110, -108, -44, -40, -100, -36, -94, -88, -82, -77, -13, -71, -133}), frozenset({-128, -127, -63, -62, -122, -53, -113, -48, -109, -44, -107, -40, -99, -35, -94, -25, -88, -82, -77, -71, -133, -2}), frozenset({-128, -63, -124, -60, -121, -54, -113, -49, -110, -45, -107, -39, -36, -99, -96, -88, -24, -83, -77, -72, -133, -4}), frozenset({-125, -60, -119, -54, -50, -113, -47, -110, -107, -41, -100, -36, -96, -91, -5, -85, -78, -9, -71, -133, -131, -66}), frozenset({-124, -60, -56, -119, -116, -50, -47, -110, -106, -40, -101, -36, -94, -91, -26, -83, -76, -129, -71, -133, -65}), frozenset({-128, -127, -62, -121, -53, -113, -48, -109, -44, -107, -39, -99, -35, -94, -25, -88, -82, -3, -77, -71, -133, -67}), frozenset({-60, -123, -57, -118, -52, -113, -112, -47, -106, -41, -103, -36, -96, -91, -86, -131, -78, -14, -133, -68, -67}), frozenset({-62, -123, -57, -118, -52, -115, -112, -47, -106, -41, -101, -36, -96, -91, -86, -131, -78, -9, -71, -133, -67}), frozenset({-62, -123, -57, -118, -52, -113, -112, -47, -106, -41, -101, -36, -97, -91, -86, -131, -16, -75, -73, -133, -67}), frozenset({-124, -60, -56, -119, -114, -50, -111, -47, -107, -40, -100, -36, -96, -91, -86, -19, -78, -73, -133, -4, -67, -129}), frozenset({-60, -123, -56, -119, -114, -50, -111, -47, -107, -40, -100, -36, -96, -91, -86, -19, -78, -73, -133, -4, -67, -129}), frozenset({-128, -63, -125, -60, -121, -54, -50, -113, -110, -45, -107, -39, -99, -35, -96, -88, -24, -83, -77, -72, -133, -2}), frozenset({-128, -127, -63, -62, -121, -53, -113, -48, -109, -44, -107, -39, -99, -35, -94, -25, -88, -82, -77, -71, -133, -2}), frozenset({-63, -125, -60, -121, -54, -116, -50, -110, -45, -107, -40, -103, -36, -94, -91, -83, -77, -12, -71, -133, -2, -129}), frozenset({-128, -127, -60, -121, -56, -50, -45, -106, -40, -103, -35, -96, -91, -22, -83, -77, -71, -133, -65}), frozenset({-124, -60, -119, -55, -50, -113, -47, -110, -106, -41, -100, -36, -97, -91, -84, -15, -77, -71, -133, -4, -131, -65}), frozenset({-127, -60, -121, -56, -116, -50, -47, -110, -107, -40, -101, -35, -94, -91, -26, -83, -77, -129, -71, -133, -65}), frozenset({-128, -63, -127, 132, -110, -77, -40, -133})]
835	itemsets left after W operation 	: [frozenset({-28, -108, -90, -42, 134, -71, -113}), frozenset({-124, -60, -57, -120, -51, -47, -110, -41, -103, -34, -33, -96, -31, -86, -131, -16, -3, -76, -134, -67}), frozenset({-128, -127, -63, -60, -122, -54, -48, -109, -44, -40, -37, -101, -32, -95, -30, -25, -83, -77, -134, -3}), frozenset({-128, -127, -63, -61, -122, -56, -50, -46, -109, -40, -101, -36, -96, -30, -83, -15, -77, -134}), frozenset({-127, -60, -122, -55, -50, -47, -110, -41, -103, -36, -96, -32, -30, -83, -15, -77, -134, -131, -65}), frozenset({-127, -60, -122, -56, -50, -47, -110, -40, -101, -36, -32, -31, -94, -26, -82, -77, -129, -134, -65}), frozenset({-128, -127, -63, -60, -122, -54, -48, -109, -44, -40, -101, -36, -32, -95, -30, -25, -83, -77, -134, -3})]
356	itemsets left after W operation 	: [frozenset({-96, -29, -91, 135, -47, -42, -41, -36, -131}), frozenset({-60, -123, -56, -118, -52, -115, -112, -106, -101, -71, -33, -30, -86, -78, -9, -135, -67}), frozenset({-62, -124, -56, -119, -116, -50, -111, -104, -100, -32, -31, -83, -14, -77, -135, -70, -5, -67}), frozenset({-123, -58, -57, -118, -52, -113, -112, -108, -99, -33, -30, -86, -80, -14, -73, -135, -67}), frozenset({-125, -60, -119, -54, -50, -113, -110, -107, -71, -100, -33, -30, -85, -78, -9, -135, -5, -65})]
12	itemsets left after T operation 	: [frozenset({-29, -60, -121, -54, -83, -110, -45, -77, -42})]
2	itemsets left after W operation 	: [frozenset({-96, -47, -42, -41, 136}), frozenset({-32, -62, -56, -113, -14, -77, -110, -136, -70, -67}), frozenset({-29, -91, 135, -136, -36, -131})]
Unpacking W operator applied earlier using 132 on frozenset({-128, -63, -30, -127, -29, -32, -110, -77, -42, -40})
# of frequent itemsets	: 494
Time of DCI Closed		: 0.16748595237731934
483	itemsets left after T operation 	: [frozenset({-128, -127, -63, -32, -30, -60, -25, -54, -48, -77, -44, -40, -3})]
423	itemsets left after W operation 	: [frozenset({-128, -63, -32, -29, -30, -127, 137, -110, -77, -42, -40, -36}), frozenset({-96, -61, -121, -56, -88, -83, -50, -113, -15, -46, -106, -137, -71, -101, -4}), frozenset({-94, -59, -122, -88, -53, -115, -82, -48, -108, -44, -10, -137, -71, -100, -2}), frozenset({-94, -60, -121, -87, -53, -116, -83, -50, -45, -12, -107, -137, -103, -71, -2}), frozenset({-96, -60, -122, -88, -24, -54, -83, -113, -49, -45, -108, -137, -72, -4, -99}), frozenset({-94, -60, -122, -87, -117, -53, -82, -48, -45, -12, -107, -137, -71, -101, -4})]
304	itemsets left after W operation 	: [frozenset({-127, -94, 138, -53, -82, -48, -77, -71}), frozenset({-128, -63, -62, -122, -117, -110, -45, -107, -42, -40, -101, -35, -32, -30, -29, -87, -12, -138, -2}), frozenset({-63, -59, -122, -88, -36, -115, -110, -13, -108, -44, -138, -40, -133, -100}), frozenset({-128, -63, -62, -122, -113, -109, -44, -107, -40, -35, -99, -25, -88, -138, -133, -2}), frozenset({-128, -62, -121, -113, -109, -44, -107, -39, -35, -99, -25, -88, -67, -138, -133, -3}), frozenset({-128, -63, -62, -121, -113, -109, -44, -107, -39, -35, -99, -25, -88, -138, -133, -2})]
275	itemsets left after W operation 	: [frozenset({-47, -133, -91, 139, -36}), frozenset({-125, -60, -119, -54, -50, -113, -110, -107, -41, -100, -96, -85, -78, -139, -9, -71, -5, -131, -66}), frozenset({-124, -60, -56, -119, -116, -50, -110, -106, -40, -101, -94, -26, -83, -76, -139, -129, -71, -65}), frozenset({-60, -123, -57, -118, -52, -113, -112, -106, -41, -103, -96, -86, -131, -78, -14, -139, -68, -67}), frozenset({-62, -123, -57, -118, -52, -115, -112, -106, -41, -101, -96, -86, -131, -78, -139, -9, -71, -67}), frozenset({-62, -123, -57, -118, -52, -113, -112, -106, -41, -101, -97, -86, -131, -16, -75, -139, -73, -67}), frozenset({-124, -60, -56, -119, -114, -50, -111, -107, -40, -100, -96, -86, -19, -78, -139, -73, -4, -67, -129}), frozenset({-60, -123, -56, -119, -114, -50, -111, -107, -40, -100, -96, -86, -19, -78, -139, -73, -4, -67, -129}), frozenset({-124, -60, -119, -55, -50, -113, -110, -106, -41, -100, -97, -84, -15, -77, -139, -71, -4, -131, -65})]
143	itemsets left after T operation 	: [frozenset({-110, -60, -50, -65})]
108	itemsets left after W operation 	: [frozenset({-128, -63, -127, -30, -77, -40, 140}), frozenset({-96, -61, -122, -56, -83, -50, -15, -46, -109, -140, -134, -101, -36}), frozenset({-32, -60, -25, -54, -48, -44, -140, -3}), frozenset({-32, -110, -29, -140, -42, 137, -36})]
104	itemsets left after T operation 	: [frozenset({-86, -123, -67})]
90	itemsets left after W operation 	: [frozenset({-56, -83, -50, 141}), frozenset({-128, -127, -60, -121, -45, -106, -40, -103, -35, -96, -91, -22, -77, -141, -71, -133, -65}), frozenset({-96, -61, -121, -88, -113, -15, -46, -141, -106, -137, -71, -101, -4}), frozenset({-62, -124, -119, -116, -111, -104, -100, -32, -31, -14, -77, -141, -135, -70, -5, -67}), frozenset({-96, -61, -122, -15, -46, -109, -140, -141, -134, -101, -36})]
71	itemsets left after T operation 	: [frozenset({-60, -107, -50})]
68	itemsets left after V operation 	: [frozenset({-128, -63, -62, -122, -117, -110, -45, -107, -40, -101, -35, -87, -12, -138, -133, -2}), frozenset({-32, -30, -29, 133, -42})]
52	itemsets left after V operation 	: [frozenset({-60, -107, -50}), frozenset({-110, 107, -65})]
50	itemsets left after V operation 	: [frozenset({-94, -122, -87, -117, -53, -82, -48, 50, -45, -12, -137, -71, -101, -4}), frozenset({-60, -107, -50})]
48	itemsets left after V operation 	: [frozenset({-124, -60, -57, -120, -51, -47, -110, -41, -103, -34, -33, -96, -31, -16, -3, -76, -134, 123, -131}), frozenset({-86, -67, -123})]
26	itemsets left after T operation 	: [frozenset({-60, -3})]
19	itemsets left after V operation 	: [frozenset({-29, 3, -121, -54, -83, -110, -45, -77, -42}), frozenset({-96, 3, -122, -88, -24, -54, -83, -113, -49, -45, -108, -137, -72, -4, -99}), frozenset({-128, -127, 3, -121, -45, -106, -40, -103, -35, -96, -91, -22, -77, -141, -71, -133, -65}), frozenset({3, -107, -50}), frozenset({-60, -3})]
4	itemsets left after V operation 	: [frozenset({-128, -62, -121, -113, -109, -44, -107, -39, -99, -35, -25, -88, -138, -133, 60, -67}), frozenset({-60, -3})]
Clause Pruned	: frozenset({-47, -133, -91, 139, -36})
Initial DL				: 37130.445366651424
Final DL				: 2917.0409223758234
Compression (wrt me)	: 0.9214380303394972
Operator Counters		: {'D': 0, 'W': 9, 'V': 6, 'S': 0, 'R': 0, 'T': 7}
Misle Learning Runtime	: 1.840632438659668

# of frequent itemsets	: 4304
Time of DCI Closed		: 0.2609684467315674
DL of initial theory	: 32364.997943963335
4117	itemsets left after T operation 	: [frozenset({-128, -127, -63, -30, -29, -94, -122, -82, -48, -77, -44, -42, -71})]
3512	itemsets left after T operation 	: [frozenset({-30, -29, -110, -77, -42, -71})]
2454	itemsets left after T operation 	: [frozenset({-128, -63, -29, -53, -48, -110, -77, -44, -42})]
1939	itemsets left after T operation 	: [frozenset({-29, -91, -119, -47, -42})]
992	itemsets left after T operation 	: [frozenset({-128, -63, -94, -77, -42, -40, -71})]
531	itemsets left after T operation 	: [frozenset({-29, -124, -119, -42, -33})]
279	itemsets left after T operation 	: [frozenset({-30, -29, -91, -41, -33})]
131	itemsets left after W operation 	: [frozenset({-47, 132, -42, -41, -131, -67}), frozenset({-62, -124, -57, -120, -52, -113, -110, -108, -103, -36, -96, -32, -31, -28, -90, -86, -16, -76, -71, -132, -3}), frozenset({-62, -123, -57, -118, -52, -113, -111, -106, -100, -36, -96, -32, -30, -29, -91, -86, -16, -75, -73, -132}), frozenset({-61, -124, -121, -57, -51, -113, -110, -108, -101, -36, -32, -31, -94, -28, -27, -90, -84, -78, -71, -132, -3}), frozenset({-62, -124, -57, -120, -52, -113, -110, -108, -103, -35, -96, -32, -31, -28, -90, -86, -16, -76, -71, -132, -3})]
32	itemsets left after W operation 	: [frozenset({-128, -63, -77, 133, -42}), frozenset({-127, -59, -121, -56, -50, -45, -106, -40, -103, -37, -33, -96, -30, -29, -91, -22, -83, -71, -133}), frozenset({-127, -94, -30, -29, -122, -82, -48, -44, -71, -133}), frozenset({-48, -110, -29, -44, -53, -133}), frozenset({-40, -71, -94, -133})]
21	itemsets left after T operation 	: [frozenset({-30, -29, -91, -33})]
15	itemsets left after T operation 	: [frozenset({-119, -29, -42})]
12	itemsets left after V operation 	: [frozenset({-30, -110, -77, 119, -71}), frozenset({-119, -29, -42})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.13525032997131348
Clause Pruned	: frozenset({-127, -94, -30, -29, -122, -82, -48, -44, -71, -133})
Initial DL				: 36930.10313904408
Final DL				: 7274.5832711599905
Compression (wrt me)	: 0.8030175208617549
Operator Counters		: {'D': 0, 'W': 2, 'V': 1, 'S': 0, 'R': 0, 'T': 9}
Misle Learning Runtime	: 0.6317670345306396

# of frequent itemsets	: 3853
Time of DCI Closed		: 0.22857236862182617
DL of initial theory	: 32364.99794396333
2780	itemsets left after W operation 	: [frozenset({-32, -30, -29, -110, -77, -42, 132}), frozenset({-62, -124, -56, -119, -50, -113, -47, -106, -41, -36, -99, -96, -91, -83, -14, -70, -5, -132, -67, -130}), frozenset({-127, -63, -59, -122, -53, -115, -48, -108, -44, -40, -36, -100, -94, -88, -82, -13, -71, -132}), frozenset({-128, -127, -63, -60, -122, -54, -113, -48, -44, -107, -40, -36, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-128, -63, -124, -60, -121, -54, -113, -49, -45, -107, -39, -36, -99, -96, -88, -24, -4, -83, -72, -132}), frozenset({-128, -127, -63, -60, -121, -54, -114, -50, -45, -106, -40, -102, -37, -96, -88, -4, -83, -19, -71, -132}), frozenset({-128, -127, -63, -60, -121, -54, -114, -49, -45, -107, -40, -36, -99, -96, -91, -24, -4, -83, -72, -132}), frozenset({-62, -124, -56, -119, -52, -113, -47, -106, -41, -100, -35, -96, -91, -83, -14, -70, -132, -67, -129}), frozenset({-128, -127, -63, -60, -121, -54, -113, -48, -44, -107, -40, -36, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-62, -124, -56, -119, -52, -113, -47, -106, -41, -35, -99, -96, -91, -83, -131, -14, -70, -132, -67}), frozenset({-63, -125, -60, -121, -54, -116, -50, -47, -106, -41, -36, -99, -96, -91, -83, -9, -71, -6, -132, -131}), frozenset({-128, -127, -63, -60, -122, -117, -53, -48, -45, -107, -40, -101, -36, -94, -87, -4, -82, -12, -71, -132}), frozenset({-127, -63, -61, -121, -56, -50, -113, -46, -106, -40, -37, -101, -96, -88, -4, -83, -15, -71, -132, -129}), frozenset({-128, -127, -63, -60, -122, -54, -113, -49, -45, -108, -40, -36, -99, -96, -88, -24, -4, -83, -72, -132}), frozenset({-128, -63, -125, -60, -121, -54, -50, -113, -45, -107, -39, -35, -99, -96, -88, -24, -83, -72, -132, -2}), frozenset({-62, -124, -56, -119, -50, -113, -47, -106, -41, -36, -100, -96, -91, -83, -131, -14, -70, -5, -132, -67}), frozenset({-128, -127, -63, -60, -121, -54, -114, -50, -45, -106, -40, -102, -36, -96, -88, -4, -83, -19, -71, -132}), frozenset({-128, -127, -63, -61, -121, -56, -50, -113, -46, -106, -40, -101, -36, -96, -88, -4, -83, -15, -71, -132}), frozenset({-128, -127, -63, -60, -121, -54, -113, -49, -45, -108, -40, -36, -99, -96, -88, -24, -4, -83, -72, -132}), frozenset({-63, -125, -60, -121, -54, -116, -50, -45, -107, -40, -103, -36, -94, -91, -83, -12, -71, -132, -2, -129}), frozenset({-128, -127, -63, -59, -122, -53, -115, -48, -108, -44, -40, -36, -100, -94, -88, -82, -10, -71, -132, -2}), frozenset({-128, -127, -63, -60, -121, -54, -50, -113, -45, -107, -40, -35, -99, -96, -88, -24, -83, -72, -132, -2}), frozenset({-128, -127, -63, -60, -121, -54, -114, -50, -45, -107, -40, -35, -99, -96, -91, -24, -83, -72, -132, -2}), frozenset({-128, -127, -63, -60, -121, -54, -116, -50, -45, -107, -40, -103, -36, -94, -87, -83, -12, -71, -132, -2}), frozenset({-124, -60, -119, -55, -50, -113, -47, -106, -41, -36, -100, -97, -91, -84, -4, -15, -71, -132, -131, -65}), frozenset({-128, -63, -125, -60, -121, -53, -113, -49, -44, -106, -41, -36, -100, -96, -88, -83, -13, -71, -132}), frozenset({-128, -127, -63, -62, -122, -117, -53, -48, -45, -107, -40, -101, -35, -94, -87, -82, -12, -71, -132, -2}), frozenset({-127, -60, -121, -56, -116, -50, -47, -107, -40, -101, -35, -94, -91, -26, -83, -129, -71, -132, -65}), frozenset({-128, -127, -63, -60, -121, -53, -116, -50, -45, -107, -40, -103, -36, -94, -87, -83, -12, -71, -132, -2})]
2603	itemsets left after T operation 	: [frozenset({-30, -29, -123, -91, -86, -118, -67, -112, -47, -42, -41, -36, -131})]
2110	itemsets left after T operation 	: [frozenset({-128, -127, -30, -32, -25, -113, -48, -77, -44, -42, -71})]
1911	itemsets left after T operation 	: [frozenset({-96, -32, -62, -56, -47, -14, -77, -42, -41, -70, -67})]
1136	itemsets left after T operation 	: [frozenset({-32, -30, -29, -91, -119, -50, -47, -42})]
361	itemsets left after T operation 	: [frozenset({-29, -60, -121, -83, -45, -77, -42})]
55	itemsets left after W operation 	: [frozenset({-127, -30, -77, 133, -42, -71, -113}), frozenset({-128, -32, -48, -44, -25, -133}), frozenset({-128, -63, -61, -122, -56, -50, -46, -109, -108, -40, -101, -36, -96, -28, -90, -83, -15, -133}), frozenset({-60, -122, -55, -50, -47, -110, -108, -41, -103, -36, -96, -32, -28, -90, -83, -15, -133, -131, -65})]
32	itemsets left after W operation 	: [frozenset({-29, -91, -123, 134, -118, -47, -42, -67}), frozenset({-59, -56, -116, -50, -111, -104, -39, -37, -101, -33, -31, -94, -83, -76, -8, -71, -134}), frozenset({-112, -30, -41, -86, -36, -131, -134})]
16	itemsets left after W operation 	: [frozenset({-96, -47, -42, -41, 135, -67}), frozenset({-124, -60, -57, -120, -51, -113, -110, -108, -103, -71, -34, -33, -31, -28, -90, -86, -131, -16, -76, -135, -3}), frozenset({-32, -62, -14, -77, -56, -135, -70})]
# of frequent itemsets	: 26
Time of DCI Closed		: 0.14075160026550293
24	itemsets left after W operation 	: [frozenset({-127, -63, -40, 136, -132}), frozenset({-94, -59, -122, -88, -53, -36, -115, -82, -48, -13, -108, -44, -136, -71, -100}), frozenset({-128, -60, -122, -117, -53, -48, -45, -107, -101, -36, -94, -87, -82, -12, -136, -71, -4}), frozenset({-61, -121, -56, -50, -113, -46, -106, -37, -101, -96, -88, -83, -15, -136, -71, -4, -129}), frozenset({-128, -60, -122, -54, -113, -49, -45, -108, -72, -36, -99, -96, -88, -24, -83, -136, -4}), frozenset({-128, -61, -121, -56, -50, -113, -46, -106, -101, -36, -96, -88, -83, -15, -136, -71, -4}), frozenset({-128, -59, -122, -53, -115, -48, -108, -44, -36, -100, -94, -88, -82, -10, -136, -71, -2}), frozenset({-128, -62, -122, -117, -53, -48, -45, -107, -101, -35, -94, -87, -82, -12, -136, -71, -2})]
23	itemsets left after W operation 	: [frozenset({137, -83, -50}), frozenset({-63, -125, -60, -121, -54, -116, -47, -9, -106, -41, -36, -99, -96, -91, -137, -71, -6, -132, -131}), frozenset({-127, -60, -121, -56, -116, -47, -129, -107, -40, -101, -35, -94, -91, -26, -137, -71, -132, -65}), frozenset({-128, -63, -61, -122, -56, -46, -109, -108, -40, -101, -36, -96, -28, -90, -15, -137, -133}), frozenset({-60, -122, -55, -47, -110, -108, -41, -103, -36, -96, -32, -28, -90, -15, -137, -133, -131, -65}), frozenset({-59, -56, -116, -111, -104, -39, -101, -37, -33, -31, -94, -76, -137, -8, -71, -134}), frozenset({-61, -121, -56, -113, -46, -106, -101, -37, -96, -88, -15, -137, -136, -71, -4, -129}), frozenset({-128, -61, -121, -56, -113, -46, -106, -101, -36, -96, -88, -15, -137, -136, -71, -4})]
Initial DL				: 36930.10313904406
Final DL				: 3536.6290434434313
Compression (wrt me)	: 0.9042345202739399
Operator Counters		: {'D': 0, 'W': 6, 'V': 0, 'S': 0, 'R': 0, 'T': 5}
Misle Learning Runtime	: 1.0362451076507568

# of frequent itemsets	: 5642
Time of DCI Closed		: 0.2795863151550293
DL of initial theory	: 33135.93489348059
4895	itemsets left after T operation 	: [frozenset({-128, -127, -63, -30, -29, -94, -122, -82, -48, -77, -44, -42, -40, -71})]
4035	itemsets left after T operation 	: [frozenset({-30, -29, -110, -77, -42, -71})]
3765	itemsets left after T operation 	: [frozenset({-29, -124, -91, -119, -42})]
2304	itemsets left after T operation 	: [frozenset({-128, -63, -29, -53, -48, -110, -77, -44, -42})]
909	itemsets left after T operation 	: [frozenset({-128, -63, -94, -77, -42, -40, -71})]
342	itemsets left after T operation 	: [frozenset({-33, -37, -42, -29})]
239	itemsets left after W operation 	: [frozenset({-47, 132, -42, -41, -131, -67}), frozenset({-60, -123, -57, -118, -52, -113, -112, -106, -101, -34, -97, -33, -30, -29, -91, -86, -16, -75, -73, -132}), frozenset({-62, -124, -57, -120, -52, -113, -110, -108, -103, -36, -96, -32, -31, -28, -90, -86, -16, -76, -71, -132, -3}), frozenset({-62, -123, -57, -118, -52, -113, -111, -106, -100, -36, -96, -32, -30, -29, -91, -86, -16, -75, -73, -132}), frozenset({-61, -124, -121, -57, -51, -113, -110, -108, -101, -36, -32, -31, -94, -28, -27, -90, -84, -78, -71, -132, -3}), frozenset({-62, -123, -56, -119, -51, -113, -111, -106, -100, -35, -96, -32, -31, -29, -91, -27, -83, -77, -71, -132, -2}), frozenset({-62, -124, -57, -120, -52, -113, -110, -108, -103, -35, -96, -32, -31, -28, -90, -86, -16, -76, -71, -132, -3})]
29	itemsets left after T operation 	: [frozenset({-119, -29, -91})]
5	itemsets left after V operation 	: [frozenset({-62, -123, -57, -118, -52, -113, -111, -106, 119, -100, -36, -96, -32, -30, -86, -16, -75, -73, -132}), frozenset({-119, -29, -91}), frozenset({-60, -123, -57, -118, -52, -113, -112, -106, 119, -101, -34, -97, -33, -30, -86, -16, -75, -73, -132})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.1484076976776123
Initial DL				: 37053.275561600974
Final DL				: 7863.940397495489
Compression (wrt me)	: 0.7877666608874643
Operator Counters		: {'D': 0, 'W': 1, 'V': 1, 'S': 0, 'R': 0, 'T': 7}
Misle Learning Runtime	: 0.7145674228668213

# of frequent itemsets	: 4189
Time of DCI Closed		: 0.23080754280090332
DL of initial theory	: 33135.93489348058
3382	itemsets left after W operation 	: [frozenset({-32, -30, -29, -110, -77, -42, 132}), frozenset({-128, -127, -63, -60, -121, -54, -113, -48, -44, -107, -40, -37, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-62, -124, -56, -119, -50, -113, -47, -106, -41, -36, -99, -96, -91, -83, -14, -70, -5, -132, -67, -130}), frozenset({-127, -63, -59, -122, -53, -115, -48, -108, -44, -40, -36, -100, -94, -88, -82, -13, -71, -132}), frozenset({-128, -127, -63, -60, -122, -54, -113, -48, -44, -107, -40, -36, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-128, -63, -124, -60, -121, -54, -113, -49, -45, -107, -39, -36, -99, -96, -88, -24, -4, -83, -72, -132}), frozenset({-62, -124, -56, -119, -52, -113, -47, -106, -41, -100, -35, -96, -91, -83, -14, -70, -132, -67, -129}), frozenset({-128, -127, -63, -60, -121, -54, -114, -49, -45, -107, -40, -36, -99, -96, -91, -24, -4, -83, -72, -132}), frozenset({-128, -127, -63, -60, -121, -54, -113, -48, -44, -107, -40, -36, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-62, -124, -56, -119, -52, -113, -47, -106, -41, -35, -99, -96, -91, -83, -131, -14, -70, -132, -67}), frozenset({-63, -125, -60, -121, -54, -116, -50, -47, -106, -41, -36, -99, -96, -91, -83, -9, -71, -6, -132, -131}), frozenset({-128, -127, -63, -60, -122, -117, -53, -48, -45, -107, -40, -101, -36, -94, -87, -4, -82, -12, -71, -132}), frozenset({-127, -63, -61, -121, -56, -50, -113, -46, -106, -40, -37, -101, -96, -88, -4, -83, -15, -71, -132, -129}), frozenset({-128, -127, -63, -60, -122, -54, -113, -49, -45, -108, -40, -36, -99, -96, -88, -24, -4, -83, -72, -132}), frozenset({-62, -124, -56, -119, -50, -113, -47, -106, -41, -36, -100, -96, -91, -83, -131, -14, -70, -5, -132, -67}), frozenset({-128, -127, -63, -60, -121, -54, -114, -50, -45, -106, -40, -102, -36, -96, -88, -4, -83, -19, -71, -132}), frozenset({-128, -127, -63, -61, -121, -56, -50, -113, -46, -106, -40, -101, -36, -96, -88, -4, -83, -15, -71, -132}), frozenset({-128, -127, -63, -60, -121, -54, -113, -49, -45, -108, -40, -36, -99, -96, -88, -24, -4, -83, -72, -132}), frozenset({-128, -127, -63, -59, -122, -53, -115, -48, -108, -44, -40, -36, -100, -94, -88, -82, -10, -71, -132, -2}), frozenset({-128, -127, -63, -60, -121, -54, -50, -113, -45, -107, -40, -35, -99, -96, -88, -24, -83, -72, -132, -2}), frozenset({-128, -127, -63, -60, -121, -54, -116, -50, -45, -107, -40, -103, -36, -94, -87, -83, -12, -71, -132, -2}), frozenset({-128, -127, -63, -60, -122, -54, -113, -48, -44, -107, -40, -37, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-124, -60, -119, -55, -50, -113, -47, -106, -41, -36, -100, -97, -91, -84, -4, -15, -71, -132, -131, -65}), frozenset({-128, -63, -125, -60, -121, -53, -113, -49, -44, -106, -41, -36, -100, -96, -88, -83, -13, -71, -132}), frozenset({-128, -127, -63, -62, -122, -117, -53, -48, -45, -107, -40, -101, -35, -94, -87, -82, -12, -71, -132, -2}), frozenset({-127, -60, -121, -56, -116, -50, -47, -107, -40, -101, -35, -94, -91, -26, -83, -129, -71, -132, -65}), frozenset({-62, -124, -56, -119, -50, -113, -47, -106, -41, -36, -100, -96, -91, -83, -14, -70, -5, -132, -67, -129}), frozenset({-128, -127, -63, -60, -121, -53, -116, -50, -45, -107, -40, -103, -36, -94, -87, -83, -12, -71, -132, -2})]
3216	itemsets left after T operation 	: [frozenset({-30, -29, -123, -91, -86, -118, -67, -112, -47, -42, -41, -36, -131})]
2452	itemsets left after T operation 	: [frozenset({-32, -28, -90, -113, -77, -108, -42})]
1450	itemsets left after T operation 	: [frozenset({-96, -29, -91, -119, -50, -47, -42, -100})]
1136	itemsets left after T operation 	: [frozenset({-128, -127, -30, -32, -94, -29, -25, -88, -82, -113, -48, -77, -44, -107, -42, -71, -99})]
254	itemsets left after T operation 	: [frozenset({-29, -60, -121, -83, -45, -77, -42})]
64	itemsets left after W operation 	: [frozenset({-47, -29, -91, 133, -42}), frozenset({-123, -59, -56, -118, -116, -50, -111, -104, -39, -101, -37, -33, -31, -94, -83, -76, -8, -71, -133, -67}), frozenset({-124, -60, -56, -119, -116, -50, -110, -106, -40, -101, -36, -32, -94, -30, -26, -83, -76, -129, -71, -133, -65}), frozenset({-30, -123, -86, -118, -67, -112, -41, -133, -36, -131}), frozenset({-96, -119, -133, -100, -50})]
17	itemsets left after W operation 	: [frozenset({-28, -108, -90, -42, 134, -113}), frozenset({-124, -60, -57, -120, -51, -47, -110, -41, -103, -34, -33, -96, -31, -86, -131, -16, -3, -76, -71, -134, -67}), frozenset({-128, -127, -63, -61, -122, -56, -50, -46, -109, -40, -101, -36, -96, -30, -83, -15, -77, -71, -134}), frozenset({-32, -134, -77})]
4	itemsets left after W operation 	: [frozenset({-32, -30, -29, -77, -42, 135}), frozenset({-135, -110, 132}), frozenset({-128, -127, -94, -25, -88, -82, -113, -48, -44, -107, -135, -71, -99})]
# of frequent itemsets	: 60
Time of DCI Closed		: 0.14489436149597168
57	itemsets left after W operation 	: [frozenset({-96, -106, 136, -132, -83}), frozenset({-62, -124, -56, -119, -50, -113, -47, -41, -36, -99, -91, -14, -136, -70, -5, -67, -130}), frozenset({-62, -124, -56, -119, -52, -113, -47, -41, -100, -35, -91, -14, -136, -70, -67, -129}), frozenset({-62, -124, -56, -119, -52, -113, -47, -41, -99, -35, -91, -67, -14, -136, -70, -131}), frozenset({-63, -125, -60, -121, -54, -116, -50, -47, -41, -36, -99, -91, -9, -136, -71, -6, -131}), frozenset({-127, -63, -61, -121, -56, -50, -113, -46, -40, -37, -101, -88, -15, -136, -71, -4, -129}), frozenset({-128, -127, -63, -61, -121, -56, -50, -113, -46, -40, -101, -36, -88, -15, -136, -71, -4}), frozenset({-128, -63, -125, -60, -121, -53, -113, -49, -44, -41, -100, -36, -88, -13, -136, -71})]
50	itemsets left after W operation 	: [frozenset({-127, -63, -40, 137, -71}), frozenset({-94, -59, -122, -88, -132, -53, -36, -115, -82, -48, -13, -108, -44, -137, -100}), frozenset({-128, -60, -122, -117, -53, -48, -45, -107, -101, -36, -94, -87, -4, -82, -12, -137, -132}), frozenset({-128, -59, -122, -53, -115, -48, -108, -44, -36, -100, -94, -88, -82, -10, -137, -132, -2}), frozenset({-128, -62, -122, -117, -53, -48, -45, -107, -101, -35, -94, -87, -82, -12, -137, -132, -2}), frozenset({-128, -61, -122, -56, -50, -46, -109, -101, -36, -96, -30, -83, -15, -77, -137, -134}), frozenset({-61, -37, -121, -56, -88, -50, -113, -15, -46, -137, -136, -101, -4, -129}), frozenset({-128, -61, -121, -56, -88, -36, -50, -113, -15, -46, -137, -136, -101, -4})]
43	itemsets left after W operation 	: [frozenset({-56, 138, -83, -50}), frozenset({-127, -60, -121, -116, -47, -107, -40, -101, -35, -94, -91, -26, -138, -129, -71, -132, -65}), frozenset({-128, -96, -30, -61, -122, -15, -46, -109, -77, -138, -137, -134, -101, -36}), frozenset({-123, -59, -118, -116, -111, -104, -39, -101, -37, -33, -31, -94, -76, -138, -8, -71, -133, -67}), frozenset({-124, -60, -119, -116, -110, -106, -40, -101, -36, -32, -94, -30, -26, -76, -138, -129, -71, -133, -65})]
42	itemsets left after W operation 	: [frozenset({-47, 139, -91}), frozenset({-124, -60, -119, -55, -50, -113, -106, -41, -36, -100, -97, -84, -4, -15, -139, -71, -132, -131, -65}), frozenset({-139, -29, 133, -42}), frozenset({-62, -124, -56, -119, -50, -113, -41, -36, -99, -14, -139, -136, -70, -5, -67, -130}), frozenset({-62, -124, -56, -119, -52, -113, -35, -14, -139, -41, -136, -70, -100, -67, -129}), frozenset({-62, -124, -56, -119, -52, -99, -113, -35, -67, -14, -139, -41, -136, -70, -131}), frozenset({-63, -125, -60, -121, -54, -116, -50, -41, -36, -99, -139, -9, -136, -71, -6, -131}), frozenset({-127, -60, -121, -116, -107, -40, -101, -35, -94, -26, -139, -138, -129, -71, -132, -65})]
31	itemsets left after W operation 	: [frozenset({-71, -60, 140}), frozenset({-124, -57, -120, -51, -47, -110, -41, -103, -34, -33, -96, -31, -86, -131, -16, -3, -76, -140, -134, -67}), frozenset({-128, -63, -125, -121, -88, -100, -53, -113, -49, -13, -44, -140, -41, -136, -36}), frozenset({-124, -119, -116, -110, -106, -40, -101, -36, -32, -94, -30, -26, -76, -140, -138, -129, -133, -65}), frozenset({-124, -119, -55, -50, -113, -106, -41, -36, -100, -97, -84, -4, -15, -140, -139, -132, -131, -65}), frozenset({-63, -125, -121, -54, -116, -50, -99, -41, -140, -139, -9, -136, -6, -36, -131}), frozenset({-127, -94, -26, -121, -116, -129, -140, -107, -139, -138, -40, -101, -132, -35, -65})]
24	itemsets left after W operation 	: [frozenset({-36, -132, 141}), frozenset({-128, -127, -63, -60, -122, -54, -113, -49, -45, -108, -40, -99, -96, -88, -24, -83, -141, -72, -4}), frozenset({-94, -59, -122, -88, -53, -115, -82, -48, -13, -108, -44, -141, -137, -100}), frozenset({-128, -60, -122, -117, -53, -48, -45, -107, -101, -94, -87, -82, -141, -12, -137, -4}), frozenset({-128, -59, -122, -53, -115, -48, -108, -44, -100, -94, -88, -82, -141, -10, -137, -2}), frozenset({-124, -119, -55, -50, -113, -106, -41, -100, -97, -84, -15, -141, -140, -139, -4, -131, -65})]
Initial DL				: 37053.275561600974
Final DL				: 4895.134349698274
Compression (wrt me)	: 0.8678892951971243
Operator Counters		: {'D': 0, 'W': 10, 'V': 0, 'S': 0, 'R': 0, 'T': 5}
Misle Learning Runtime	: 1.0528438091278076

# of frequent itemsets	: 5882
Time of DCI Closed		: 0.3122122287750244
DL of initial theory	: 32380.50759527451
4819	itemsets left after T operation 	: [frozenset({-128, -127, -63, -30, -29, -94, -122, -82, -48, -77, -44, -42, -71})]
4020	itemsets left after T operation 	: [frozenset({-30, -29, -110, -77, -42, -71})]
3683	itemsets left after T operation 	: [frozenset({-29, -91, -119, -42, -131})]
2097	itemsets left after T operation 	: [frozenset({-128, -63, -29, -53, -48, -110, -77, -44, -42})]
783	itemsets left after T operation 	: [frozenset({-128, -63, -94, -77, -42, -40, -71})]
680	itemsets left after W operation 	: [frozenset({-30, -29, 132, -91, -42, -41, -67}), frozenset({-123, -59, -57, -118, -50, -113, -111, -45, -106, -38, -100, -33, -96, -86, -4, -16, -75, -73, -132, -131}), frozenset({-60, -123, -57, -118, -52, -113, -112, -47, -106, -101, -34, -33, -97, -86, -16, -75, -73, -132, -131}), frozenset({-124, -60, -56, -119, -51, -114, -111, -47, -107, -101, -35, -32, -95, -25, -68, -85, -78, -132, -130}), frozenset({-62, -123, -57, -118, -52, -113, -111, -47, -106, -36, -100, -96, -32, -86, -16, -75, -73, -132, -131}), frozenset({-124, -59, -56, -119, -114, -50, -111, -47, -107, -37, -101, -33, -95, -25, -68, -85, -78, -6, -132, -130}), frozenset({-125, -59, -57, -119, -116, -50, -112, -45, -108, -37, -100, -98, -33, -86, -21, -75, -69, -132})]
222	itemsets left after T operation 	: [frozenset({-29, -44, -42, -37, -33})]
166	itemsets left after T operation 	: [frozenset({-32, -47, -110, -42, -71})]
46	itemsets left after W operation 	: [frozenset({-128, -63, -77, 133, -42}), frozenset({-127, -59, -121, -56, -50, -45, -106, -40, -103, -37, -33, -96, -30, -29, -91, -22, -83, -71, -133}), frozenset({-127, -94, -30, -29, -122, -82, -48, -44, -71, -133}), frozenset({-48, -110, -29, -44, -53, -133}), frozenset({-40, -71, -94, -133})]
12	itemsets left after T operation 	: [frozenset({-48, -30, -29, -44})]
9	itemsets left after T operation 	: [frozenset({-48, -29, -44})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.1478404998779297
Initial DL				: 37130.47258812015
Final DL				: 7193.031411833149
Compression (wrt me)	: 0.8062768688235186
Operator Counters		: {'D': 0, 'W': 2, 'V': 0, 'S': 0, 'R': 0, 'T': 9}
Misle Learning Runtime	: 0.703338623046875

# of frequent itemsets	: 4111
Time of DCI Closed		: 0.232651948928833
DL of initial theory	: 32380.507595274506
3088	itemsets left after W operation 	: [frozenset({-32, -30, -29, -110, -77, -42, 132}), frozenset({-128, -127, -63, -60, -121, -54, -113, -48, -44, -107, -40, -37, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-62, -124, -56, -119, -50, -113, -47, -106, -41, -36, -99, -96, -91, -83, -14, -70, -5, -132, -67, -130}), frozenset({-127, -63, -59, -122, -53, -115, -48, -108, -44, -40, -36, -100, -94, -88, -82, -13, -71, -132}), frozenset({-128, -127, -63, -60, -122, -54, -113, -48, -44, -107, -40, -36, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-128, -63, -124, -60, -121, -54, -113, -49, -45, -107, -39, -36, -99, -96, -88, -24, -4, -83, -72, -132}), frozenset({-128, -127, -63, -60, -121, -54, -114, -50, -45, -106, -40, -102, -37, -96, -88, -4, -83, -19, -71, -132}), frozenset({-128, -127, -63, -60, -121, -54, -114, -49, -45, -107, -40, -36, -99, -96, -91, -24, -4, -83, -72, -132}), frozenset({-128, -127, -63, -60, -121, -54, -113, -48, -44, -107, -40, -36, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-62, -124, -56, -119, -52, -113, -47, -106, -41, -35, -99, -96, -91, -83, -131, -14, -70, -132, -67}), frozenset({-63, -125, -60, -121, -54, -116, -50, -47, -106, -41, -36, -99, -96, -91, -83, -9, -71, -6, -132, -131}), frozenset({-128, -127, -63, -60, -122, -117, -53, -48, -45, -107, -40, -101, -36, -94, -87, -4, -82, -12, -71, -132}), frozenset({-128, -127, -63, -60, -122, -54, -113, -49, -45, -108, -40, -36, -99, -96, -88, -24, -4, -83, -72, -132}), frozenset({-127, -63, -61, -121, -56, -50, -113, -46, -106, -40, -37, -101, -96, -88, -4, -83, -15, -71, -132, -129}), frozenset({-128, -63, -125, -60, -121, -54, -50, -113, -45, -107, -39, -35, -99, -96, -88, -24, -83, -72, -132, -2}), frozenset({-62, -124, -56, -119, -50, -113, -47, -106, -41, -36, -100, -96, -91, -83, -131, -14, -70, -5, -132, -67}), frozenset({-128, -127, -63, -61, -121, -56, -50, -113, -46, -106, -40, -101, -36, -96, -88, -4, -83, -15, -71, -132}), frozenset({-63, -125, -60, -121, -54, -116, -50, -45, -107, -40, -103, -36, -94, -91, -83, -12, -71, -132, -2, -129}), frozenset({-128, -127, -63, -59, -122, -53, -115, -48, -108, -44, -40, -36, -100, -94, -88, -82, -10, -71, -132, -2}), frozenset({-128, -127, -63, -60, -121, -54, -50, -113, -45, -107, -40, -35, -99, -96, -88, -24, -83, -72, -132, -2}), frozenset({-128, -127, -63, -60, -121, -54, -114, -50, -45, -107, -40, -35, -99, -96, -91, -24, -83, -72, -132, -2}), frozenset({-128, -127, -63, -60, -122, -54, -113, -48, -44, -107, -40, -37, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-128, -127, -63, -60, -121, -54, -116, -50, -45, -107, -40, -103, -36, -94, -87, -83, -12, -71, -132, -2}), frozenset({-124, -60, -119, -55, -50, -113, -47, -106, -41, -36, -100, -97, -91, -84, -4, -15, -71, -132, -131, -65}), frozenset({-128, -63, -125, -60, -121, -53, -113, -49, -44, -106, -41, -36, -100, -96, -88, -83, -13, -71, -132}), frozenset({-128, -127, -63, -62, -122, -117, -53, -48, -45, -107, -40, -101, -35, -94, -87, -82, -12, -71, -132, -2}), frozenset({-127, -60, -121, -56, -116, -50, -47, -107, -40, -101, -35, -94, -91, -26, -83, -129, -71, -132, -65}), frozenset({-62, -124, -56, -119, -50, -113, -47, -106, -41, -36, -100, -96, -91, -83, -14, -70, -5, -132, -67, -129})]
2899	itemsets left after T operation 	: [frozenset({-30, -29, -123, -91, -86, -118, -67, -112, -47, -42, -41, -36, -131})]
2276	itemsets left after T operation 	: [frozenset({-128, -127, -32, -30, -25, -113, -48, -77, -44, -42, -71})]
1224	itemsets left after T operation 	: [frozenset({-96, -113, -47, -110, -42, -41})]
734	itemsets left after T operation 	: [frozenset({-29, -60, -121, -54, -83, -110, -45, -77, -42})]
237	itemsets left after W operation 	: [frozenset({-32, -30, -29, -91, 133, -56, -119, -50, -47, -42}), frozenset({-62, -123, -114, -111, -107, -40, -100, -35, -96, -86, -19, -78, -73, -133, -4, -67, -129}), frozenset({-124, -60, -116, -110, -106, -40, -101, -36, -65, -94, -26, -83, -76, -71, -133, -129}), frozenset({-124, -60, -114, -111, -107, -40, -36, -100, -96, -86, -19, -78, -73, -133, -4, -67, -129})]
30	itemsets left after W operation 	: [frozenset({-42, 134, -56, -71, -101, -50}), frozenset({-128, -127, -63, -61, -122, -113, -46, -109, -108, -40, -36, -96, -30, -28, -90, -83, -15, -77, -134}), frozenset({-127, -60, -122, -113, -47, -110, -108, -40, -36, -32, -31, -94, -28, -90, -26, -82, -77, -129, -134, -65}), frozenset({-123, -59, -118, -116, -111, -47, -104, -39, -37, -33, -31, -94, -29, -91, -83, -76, -8, -134, -67})]
18	itemsets left after W operation 	: [frozenset({-47, -30, -29, -91, -42, 135}), frozenset({-32, 133, -56, -119, -135, -50}), frozenset({-123, -86, -118, -67, -112, -41, -135, -36, -131})]
# of frequent itemsets	: 72
Time of DCI Closed		: 0.14284372329711914
71	itemsets left after W operation 	: [frozenset({-63, -127, -40, -71, -132, 136}), frozenset({-94, -59, -122, -88, -53, -36, -115, -82, -48, -13, -108, -44, -136, -100}), frozenset({-128, -60, -122, -117, -53, -48, -45, -107, -101, -36, -94, -87, -82, -12, -136, -4}), frozenset({-61, -121, -56, -50, -113, -46, -106, -101, -37, -96, -88, -83, -15, -136, -4, -129}), frozenset({-128, -61, -121, -56, -50, -113, -46, -106, -101, -36, -96, -88, -83, -15, -136, -4}), frozenset({-128, -59, -122, -53, -115, -48, -108, -44, -100, -36, -94, -88, -82, -10, -136, -2}), frozenset({-128, -62, -122, -117, -53, -48, -45, -107, -101, -35, -94, -87, -82, -12, -136, -2})]
56	itemsets left after W operation 	: [frozenset({137, -36, -60}), frozenset({-63, -125, -121, -54, -116, -50, -47, -9, -106, -41, -99, -96, -91, -83, -137, -71, -6, -132, -131}), frozenset({-128, -127, -63, -122, -54, -113, -49, -45, -108, -40, -99, -96, -88, -24, -4, -83, -137, -72, -132}), frozenset({-124, -119, -55, -50, -113, -47, -106, -41, -100, -97, -91, -84, -4, -15, -137, -71, -132, -131, -65}), frozenset({-128, -63, -125, -121, -53, -113, -49, -44, -106, -41, -100, -96, -88, -83, -13, -137, -71, -132}), frozenset({-94, -124, -101, -26, -116, -83, -110, -76, -106, -137, -40, -71, -133, -65, -129}), frozenset({-124, -114, -111, -73, -107, -40, -100, -96, -86, -19, -78, -137, -133, -4, -67, -129}), frozenset({-127, -122, -113, -47, -110, -129, -108, -40, -32, -31, -94, -28, -90, -26, -82, -77, -137, -134, -65}), frozenset({-128, -94, -122, -87, -117, -53, -82, -48, -45, -12, -107, -137, -136, -101, -4})]
43	itemsets left after W operation 	: [frozenset({-96, -63, 138, -83}), frozenset({-125, -121, -54, -116, -50, -47, -9, -106, -41, -99, -91, -138, -137, -71, -6, -132, -131}), frozenset({-128, -127, -122, -54, -113, -49, -45, -108, -40, -99, -88, -24, -4, -138, -137, -72, -132}), frozenset({-128, -125, -121, -53, -113, -49, -44, -106, -41, -100, -88, -13, -138, -137, -71, -132}), frozenset({-128, -127, -61, -122, -113, -46, -109, -108, -40, -36, -30, -28, -90, -15, -77, -138, -134})]
35	itemsets left after W operation 	: [frozenset({-40, -127, 139, -132}), frozenset({-60, -121, -56, -116, -50, -47, -107, -101, -35, -94, -91, -26, -83, -139, -129, -71, -65}), frozenset({136, -63, -71, -139}), frozenset({-128, -122, -88, -24, -54, -113, -49, -45, -108, -139, -138, -137, -72, -4, -99})]
Initial DL				: 37130.47258812016
Final DL				: 3912.8132020186763
Compression (wrt me)	: 0.8946198922533893
Operator Counters		: {'D': 0, 'W': 8, 'V': 0, 'S': 0, 'R': 0, 'T': 4}
Misle Learning Runtime	: 1.2577500343322754

# of frequent itemsets	: 5858
Time of DCI Closed		: 0.3067317008972168
DL of initial theory	: 32349.50158947477
4776	itemsets left after T operation 	: [frozenset({-128, -127, -63, -30, -29, -94, -122, -82, -48, -77, -44, -42, -71})]
3974	itemsets left after T operation 	: [frozenset({-30, -29, -110, -77, -42, -71})]
3729	itemsets left after T operation 	: [frozenset({-29, -124, -91, -119, -42})]
2230	itemsets left after T operation 	: [frozenset({-128, -63, -29, -53, -48, -110, -77, -44, -42, -33})]
1295	itemsets left after T operation 	: [frozenset({-71, -77, -42, -29})]
474	itemsets left after T operation 	: [frozenset({-128, -127, -94, -63, -30, -122, -42, -40})]
253	itemsets left after T operation 	: [frozenset({-30, -29, -91, -41, -33})]
69	itemsets left after T operation 	: [frozenset({-32, -47, -42, -71, -36})]
17	itemsets left after T operation 	: [frozenset({-63, -29, -48, -110, -44, -42, -33})]
11	itemsets left after T operation 	: [frozenset({-32, -47, -71, -42})]
4	itemsets left after V operation 	: [frozenset({-62, -123, -57, -118, -52, -113, -111, -47, -106, -42, -100, -36, -96, -32, 33, -86, -67, -16, -75, -73, -131}), frozenset({-30, -29, -91, -41, -33})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.14632248878479004
Initial DL				: 37025.6233056233
Final DL				: 7328.26541212683
Compression (wrt me)	: 0.8020758394359335
Operator Counters		: {'D': 0, 'W': 0, 'V': 1, 'S': 0, 'R': 0, 'T': 10}
Misle Learning Runtime	: 0.6372356414794922

# of frequent itemsets	: 4173
Time of DCI Closed		: 0.22619938850402832
DL of initial theory	: 32349.501589474767
3073	itemsets left after W operation 	: [frozenset({-32, -30, -29, -110, -77, -42, 132}), frozenset({-128, -127, -63, -60, -121, -54, -113, -48, -44, -107, -40, -37, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-127, -63, -59, -122, -53, -115, -48, -108, -44, -40, -36, -100, -94, -88, -82, -13, -71, -132}), frozenset({-128, -127, -63, -60, -122, -54, -113, -48, -44, -107, -40, -36, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-128, -63, -124, -60, -121, -54, -113, -49, -45, -107, -39, -36, -99, -96, -88, -24, -4, -83, -72, -132}), frozenset({-128, -127, -63, -60, -121, -54, -114, -50, -45, -106, -40, -102, -37, -96, -88, -4, -83, -19, -71, -132}), frozenset({-128, -127, -63, -60, -121, -54, -114, -49, -45, -107, -40, -36, -99, -96, -91, -24, -4, -83, -72, -132}), frozenset({-62, -124, -56, -119, -52, -113, -47, -106, -41, -100, -35, -96, -91, -83, -14, -70, -132, -67, -129}), frozenset({-128, -127, -63, -60, -121, -54, -113, -48, -44, -107, -40, -36, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-62, -124, -56, -119, -52, -113, -47, -106, -41, -35, -99, -96, -91, -83, -131, -14, -70, -132, -67}), frozenset({-63, -125, -60, -121, -54, -116, -50, -47, -106, -41, -36, -99, -96, -91, -83, -9, -71, -6, -132, -131}), frozenset({-127, -63, -61, -121, -56, -50, -113, -46, -106, -40, -37, -101, -96, -88, -4, -83, -15, -71, -132, -129}), frozenset({-128, -63, -125, -60, -121, -54, -50, -113, -45, -107, -39, -35, -99, -96, -88, -24, -83, -72, -132, -2}), frozenset({-62, -124, -56, -119, -50, -113, -47, -106, -41, -36, -100, -96, -91, -83, -131, -14, -70, -5, -132, -67}), frozenset({-128, -127, -63, -60, -121, -54, -114, -50, -45, -106, -40, -102, -36, -96, -88, -4, -83, -19, -71, -132}), frozenset({-128, -127, -63, -61, -121, -56, -50, -113, -46, -106, -40, -101, -36, -96, -88, -4, -83, -15, -71, -132}), frozenset({-128, -127, -63, -60, -121, -54, -113, -49, -45, -108, -40, -36, -99, -96, -88, -24, -4, -83, -72, -132}), frozenset({-63, -125, -60, -121, -54, -116, -50, -45, -107, -40, -103, -36, -94, -91, -83, -12, -71, -132, -2, -129}), frozenset({-128, -127, -63, -59, -122, -53, -115, -48, -108, -44, -40, -36, -100, -94, -88, -82, -10, -71, -132, -2}), frozenset({-128, -127, -63, -60, -121, -54, -50, -113, -45, -107, -40, -35, -99, -96, -88, -24, -83, -72, -132, -2}), frozenset({-128, -127, -63, -60, -121, -54, -114, -50, -45, -107, -40, -35, -99, -96, -91, -24, -83, -72, -132, -2}), frozenset({-128, -127, -63, -60, -122, -54, -113, -48, -44, -107, -40, -37, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-128, -127, -63, -60, -121, -54, -116, -50, -45, -107, -40, -103, -36, -94, -87, -83, -12, -71, -132, -2}), frozenset({-124, -60, -119, -55, -50, -113, -47, -106, -41, -36, -100, -97, -91, -84, -4, -15, -71, -132, -131, -65}), frozenset({-128, -63, -125, -60, -121, -53, -113, -49, -44, -106, -41, -36, -100, -96, -88, -83, -13, -71, -132}), frozenset({-128, -127, -63, -62, -122, -117, -53, -48, -45, -107, -40, -101, -35, -94, -87, -82, -12, -71, -132, -2}), frozenset({-62, -124, -56, -119, -50, -113, -47, -106, -41, -36, -100, -96, -91, -83, -14, -70, -5, -132, -67, -129}), frozenset({-128, -127, -63, -60, -121, -53, -116, -50, -45, -107, -40, -103, -36, -94, -87, -83, -12, -71, -132, -2})]
2715	itemsets left after T operation 	: [frozenset({-96, -30, -29, -91, -86, -47, -78, -42, -67})]
2198	itemsets left after T operation 	: [frozenset({-96, -28, -90, -113, -47, -110, -108, -42, -41, -103})]
1150	itemsets left after W operation 	: [frozenset({-128, -127, -30, -77, 133, -42, -71}), frozenset({-63, -62, -122, -53, -113, -48, -109, -44, -107, -40, -35, -99, -32, -94, -29, -25, -88, -82, -133, -2}), frozenset({-63, -61, -122, -56, -50, -113, -46, -109, -108, -40, -101, -36, -96, -28, -90, -83, -15, -133}), frozenset({-63, -60, -121, -54, -116, -48, -110, -45, -107, -40, -103, -37, -33, -94, -29, -87, -83, -12, -133, -4}), frozenset({-63, -60, -122, -54, -113, -48, -109, -108, -44, -40, -101, -36, -32, -95, -28, -90, -25, -83, -133, -3}), frozenset({-63, -62, -121, -53, -113, -48, -109, -44, -107, -39, -35, -99, -32, -94, -29, -25, -88, -82, -133, -2}), frozenset({-60, -121, -56, -50, -45, -106, -40, -103, -35, -96, -32, -29, -91, -22, -83, -133, -65})]
382	itemsets left after W operation 	: [frozenset({-47, -29, -91, 134, -42}), frozenset({-124, -60, -56, -119, -116, -50, -110, -106, -40, -101, -36, -32, -94, -30, -26, -83, -76, -129, -71, -134, -65}), frozenset({-62, -123, -57, -118, -52, -113, -112, -106, -41, -101, -36, -97, -32, -30, -86, -131, -16, -75, -73, -134, -67}), frozenset({-62, -124, -56, -119, -116, -50, -111, -41, -104, -100, -36, -96, -32, -31, -70, -83, -131, -14, -77, -134, -5, -67}), frozenset({-96, -30, -78, -86, -67, -134}), frozenset({-123, -59, -56, -118, -116, -50, -111, -104, -39, -101, -37, -33, -31, -94, -83, -76, -8, -71, -134, -67}), frozenset({-125, -60, -119, -54, -50, -113, -110, -107, -41, -100, -36, -33, -96, -30, -85, -78, -9, -71, -134, -5, -131, -65})]
55	itemsets left after T operation 	: [frozenset({-96, -32, -29, -60, -121, -24, -54, -83, -113, -110, -45, -77, -42, -72, -99})]
21	itemsets left after W operation 	: [frozenset({-28, -90, 135, -113, -47, -110, -108, -42}), frozenset({-127, -60, -122, -56, -50, -40, -101, -36, -71, -32, -31, -94, -26, -82, -77, -129, -135, -65}), frozenset({-96, -103, -135, -41})]
# of frequent itemsets	: 604
Time of DCI Closed		: 0.1704728603363037
551	itemsets left after W operation 	: [frozenset({-128, -127, -63, -40, -71, -132, 136}), frozenset({-94, -60, -121, -25, -88, -54, -82, -113, -48, -99, -44, -107, -136, -37, -3}), frozenset({-94, -60, -122, -25, -88, -54, -82, -113, -48, -99, -44, -107, -136, -36, -3}), frozenset({-96, -60, -121, -88, -54, -83, -50, -114, -19, -45, -106, -136, -102, -37, -4}), frozenset({-94, -60, -121, -25, -88, -54, -82, -113, -48, -99, -44, -107, -136, -36, -3}), frozenset({-96, -60, -121, -88, -54, -36, -83, -50, -114, -19, -45, -106, -136, -102, -4}), frozenset({-96, -61, -121, -56, -88, -36, -83, -50, -113, -15, -46, -106, -136, -101, -4}), frozenset({-94, -59, -122, -88, -53, -36, -115, -82, -48, -108, -44, -10, -136, -100, -2}), frozenset({-94, -60, -122, -25, -88, -54, -82, -113, -48, -99, -44, -107, -136, -37, -3}), frozenset({-94, -60, -121, -87, -54, -116, -83, -50, -45, -12, -107, -136, -103, -36, -2}), frozenset({-62, -94, -122, -87, -117, -53, -82, -48, -45, -12, -107, -136, -101, -35, -2}), frozenset({-94, -60, -121, -87, -53, -116, -83, -50, -45, -12, -107, -136, -103, -36, -2})]
425	itemsets left after T operation 	: [frozenset({-60, -121, -54, -83, -45})]
401	itemsets left after W operation 	: [frozenset({-96, -106, -56, 137, -132, -83, -113}), frozenset({-62, -124, -91, -119, -52, -35, -47, -14, -41, -137, -70, -100, -67, -129}), frozenset({-62, -124, -91, -119, -52, -131, -99, -67, -137, -47, -14, -41, -70, -35}), frozenset({-127, -63, -61, -37, -121, -88, -50, -15, -46, -137, -40, -71, -101, -4, -129}), frozenset({-62, -124, -91, -119, -36, -131, -50, -47, -14, -41, -137, -70, -5, -100, -67}), frozenset({-62, -124, -91, -119, -36, -50, -47, -14, -41, -137, -70, -5, -100, -67, -129})]
285	itemsets left after W operation 	: [frozenset({-60, -71, 138, -36, -50}), frozenset({-63, -125, -121, -54, -116, -47, -106, -41, -99, -96, -91, -83, -138, -9, -6, -132, -131}), frozenset({-124, -119, -55, -113, -47, -106, -41, -100, -97, -91, -84, -4, -15, -138, -132, -131, -65}), frozenset({-124, -56, -119, -116, -110, -106, -40, -101, -32, -94, -30, -26, -83, -76, -138, -129, -134, -65}), frozenset({-125, -119, -54, -113, -110, -107, -41, -100, -33, -96, -30, -85, -78, -138, -9, -134, -5, -131, -65}), frozenset({-32, -127, -31, -94, -122, -26, -56, -82, -77, -138, -129, -40, -135, -101, -65})]
240	itemsets left after W operation 	: [frozenset({-48, -63, -94, -44, -88, 139, -82}), frozenset({-127, -59, -122, -100, -53, -36, -115, -13, -108, -139, -40, -71, -132}), frozenset({-32, -62, -29, -122, -25, -53, -113, -35, -109, -107, -139, -40, -133, -99, -2}), frozenset({-32, -62, -29, -121, -25, -53, -113, -35, -109, -107, -139, -39, -133, -99, -2})]
226	itemsets left after W operation 	: [frozenset({-119, -124, 140, -41}), frozenset({-62, -56, -116, -50, -111, -104, -100, -36, -96, -32, -31, -70, -83, -131, -14, -77, -140, -134, -5, -67}), frozenset({-62, -91, -52, -35, -47, -14, -140, -137, -70, -100, -67, -129}), frozenset({-62, -91, -52, -131, -67, -35, -47, -14, -140, -137, -70, -99}), frozenset({-62, -91, -36, -131, -50, -47, -14, -140, -137, -70, -5, -100, -67}), frozenset({-62, -91, -36, -50, -47, -14, -140, -137, -70, -5, -100, -67, -129}), frozenset({-91, -55, -100, -84, -4, -113, -47, -15, -140, -106, -138, -97, -132, -131, -65})]
180	itemsets left after W operation 	: [frozenset({-96, 141, -56, -83, -50}), frozenset({-61, -121, -88, -36, -113, -15, -46, -141, -106, -136, -101, -4}), frozenset({-62, -116, -111, -104, -100, -36, -32, -31, -70, -131, -14, -77, -140, -141, -134, -5, -67}), frozenset({-63, -61, -28, -101, -122, -90, -113, -15, -46, -109, -108, -141, -40, -133, -36}), frozenset({-32, -29, -60, -91, -121, -22, -45, -141, -106, -40, -103, -133, -35, -65})]
160	itemsets left after W operation 	: [frozenset({-54, -60, 142, -113}), frozenset({-63, -122, -48, -109, -108, -44, -40, -101, -36, -32, -95, -28, -90, -25, -83, -142, -133, -3}), frozenset({-94, -25, -88, -121, -82, -99, -48, -142, -44, -107, -136, -37, -3}), frozenset({-94, -122, -25, -88, -82, -99, -48, -142, -44, -107, -136, -36, -3}), frozenset({-94, -25, -88, -121, -82, -99, -48, -142, -44, -107, -136, -36, -3}), frozenset({-94, -122, -25, -88, -82, -99, -48, -142, -44, -107, -136, -37, -3})]
158	itemsets left after W operation 	: [frozenset({-94, -82, 143}), frozenset({-25, -88, -121, -99, -48, -143, -142, -44, -107, -136, -37, -3}), frozenset({-122, -25, -88, -99, -48, -143, -142, -44, -107, -136, -36, -3}), frozenset({-25, -88, -121, -99, -48, -143, -142, -44, -107, -136, -36, -3}), frozenset({-122, -25, -88, -99, -48, -143, -142, -44, -107, -136, -37, -3}), frozenset({-59, -122, -88, -53, -36, -115, -48, -143, -108, -44, -10, -136, -100, -2}), frozenset({-62, -122, -87, -117, -53, -48, -143, -45, -12, -107, -136, -101, -35, -2}), frozenset({-32, -127, -31, -122, -26, -56, -143, -77, -138, -129, -40, -135, -101, -65}), frozenset({-48, -63, -143, -44, -88, 139})]
118	itemsets left after W operation 	: [frozenset({-96, 144, -106, -132, -83}), frozenset({-128, -63, -125, -60, -121, -53, -113, -49, -44, -41, -100, -36, -88, -144, -13, -71}), frozenset({-56, 137, -144, -113}), frozenset({-63, -125, -91, -121, -54, -116, -99, -144, -47, -41, -138, -9, -6, -131})]
114	itemsets left after W operation 	: [frozenset({-47, 145, -91}), frozenset({-29, -42, 134, -145}), frozenset({-63, -125, -121, -54, -116, -99, -145, -144, -41, -138, -9, -6, -131}), frozenset({-62, -52, -145, -35, -14, -140, -137, -70, -100, -67, -129}), frozenset({-62, -52, -131, -67, -35, -145, -14, -140, -137, -70, -99}), frozenset({-62, -36, -131, -50, -145, -14, -140, -137, -70, -5, -100, -67}), frozenset({-62, -36, -50, -145, -14, -140, -137, -70, -5, -100, -67, -129}), frozenset({-55, -100, -84, -4, -113, -145, -15, -140, -106, -138, -97, -132, -131, -65})]
104	itemsets left after W operation 	: [frozenset({-100, 146, -36}), frozenset({-128, -63, -125, -60, -121, -88, -53, -146, -113, -49, -144, -13, -44, -41, -71}), frozenset({-62, -131, -50, -145, -146, -14, -140, -137, -70, -5, -67}), frozenset({-62, -50, -145, -146, -14, -140, -137, -70, -5, -67, -129}), frozenset({-127, -59, -122, -53, -115, -146, -13, -108, -139, -40, -71, -132}), frozenset({-62, -116, -111, -104, -134, -32, -31, -131, -146, -14, -77, -140, -141, -70, -5, -67}), frozenset({-59, -122, -88, -53, -115, -146, -48, -143, -108, -44, -10, -136, -2})]
97	itemsets left after W operation 	: [frozenset({-40, -127, -71, 147}), frozenset({-63, -61, -37, -121, -88, -147, -50, -15, -46, -137, -101, -4, -129}), frozenset({-59, -122, -53, -115, -146, -147, -13, -108, -139, -132}), frozenset({-128, -63, 136, -132, -147})]
83	itemsets left after W operation 	: [frozenset({148, -94, -116, -83}), frozenset({-124, -56, -119, -110, -106, -40, -101, -32, -30, -26, -148, -76, -138, -129, -134, -65}), frozenset({-123, -59, -56, -118, -50, -111, -104, -39, -101, -37, -33, -31, -148, -76, -8, -71, -134, -67}), frozenset({-60, -121, -87, -53, -148, -50, -45, -12, -107, -136, -103, -36, -2})]
Initial DL				: 37025.62330562329
Final DL				: 4958.949559879166
Compression (wrt me)	: 0.8660670876774673
Operator Counters		: {'D': 0, 'W': 17, 'V': 0, 'S': 0, 'R': 0, 'T': 4}
Misle Learning Runtime	: 2.3839430809020996

# of frequent itemsets	: 5287
Time of DCI Closed		: 0.28007054328918457
DL of initial theory	: 33575.59986344779
4830	itemsets left after T operation 	: [frozenset({-128, -127, -63, -30, -29, -94, -122, -82, -48, -77, -44, -42, -71})]
4157	itemsets left after T operation 	: [frozenset({-30, -29, -110, -77, -42, -71})]
3919	itemsets left after T operation 	: [frozenset({-29, -124, -91, -119, -42})]
2449	itemsets left after T operation 	: [frozenset({-128, -63, -29, -53, -48, -110, -77, -44, -42})]
1171	itemsets left after T operation 	: [frozenset({-128, -63, -94, -77, -42, -40, -71})]
901	itemsets left after W operation 	: [frozenset({-47, 132, -42, -41, -131, -67}), frozenset({-60, -123, -57, -118, -52, -113, -112, -106, -101, -34, -97, -33, -30, -29, -91, -86, -16, -75, -73, -132}), frozenset({-62, -124, -57, -120, -52, -113, -110, -108, -103, -36, -96, -32, -31, -28, -90, -86, -16, -76, -71, -132, -3}), frozenset({-62, -123, -57, -118, -52, -113, -111, -106, -100, -36, -96, -32, -30, -29, -91, -86, -16, -75, -73, -132}), frozenset({-61, -124, -121, -57, -51, -113, -110, -108, -101, -36, -32, -31, -94, -28, -27, -90, -84, -78, -71, -132, -3}), frozenset({-62, -123, -56, -119, -51, -113, -111, -106, -100, -36, -96, -32, -31, -29, -91, -27, -4, -83, -77, -71, -132}), frozenset({-62, -123, -56, -119, -51, -113, -111, -106, -100, -35, -96, -32, -31, -29, -91, -27, -83, -77, -71, -132, -2}), frozenset({-62, -124, -57, -120, -52, -113, -110, -108, -103, -35, -96, -32, -31, -28, -90, -86, -16, -76, -71, -132, -3})]
208	itemsets left after T operation 	: [frozenset({-33, -37, -42, -29})]
104	itemsets left after T operation 	: [frozenset({-119, -29, -91})]
39	itemsets left after W operation 	: [frozenset({-128, -63, -29, 133, -48, -77, -44, -42}), frozenset({-127, -94, -30, -122, -71, -133, -82}), frozenset({-110, -53, -133})]
17	itemsets left after T operation 	: [frozenset({-71, -110, -77, -42})]
9	itemsets left after V operation 	: [frozenset({-123, -59, -57, -118, -50, -113, -111, -45, -106, -42, -41, 119, -38, -100, -33, -96, -30, -86, -67, -16, -75, -73, -4, -131}), frozenset({-119, -29, -91}), frozenset({-60, -123, -57, -118, -52, -113, -112, -106, 119, -101, -34, -97, -33, -30, -86, -16, -75, -73, -132}), frozenset({-62, -123, -57, -118, -52, -113, -111, -106, 119, -100, -36, -96, -32, -30, -86, -16, -75, -73, -132})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.14724302291870117
Clause Pruned	: frozenset({-127, -94, -30, -122, -71, -133, -82})
Initial DL				: 38042.57442511923
Final DL				: 7863.591241086119
Compression (wrt me)	: 0.7932949764857699
Operator Counters		: {'D': 0, 'W': 2, 'V': 1, 'S': 0, 'R': 0, 'T': 8}
Misle Learning Runtime	: 0.7156870365142822

# of frequent itemsets	: 3895
Time of DCI Closed		: 0.22197890281677246
DL of initial theory	: 33575.59986344779
2913	itemsets left after W operation 	: [frozenset({-32, -30, -29, -110, -77, -42, 132}), frozenset({-128, -127, -63, -60, -121, -54, -113, -48, -44, -107, -40, -37, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-62, -124, -56, -119, -50, -113, -47, -106, -41, -36, -99, -96, -91, -83, -14, -70, -5, -132, -67, -130}), frozenset({-127, -63, -59, -122, -53, -115, -48, -108, -44, -40, -36, -100, -94, -88, -82, -13, -71, -132}), frozenset({-128, -127, -63, -60, -122, -54, -113, -48, -44, -107, -40, -36, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-128, -63, -124, -60, -121, -54, -113, -49, -45, -107, -39, -36, -99, -96, -88, -24, -4, -83, -72, -132}), frozenset({-128, -127, -63, -60, -121, -54, -114, -50, -45, -106, -40, -102, -37, -96, -88, -4, -83, -19, -71, -132}), frozenset({-128, -127, -63, -60, -121, -54, -114, -49, -45, -107, -40, -36, -99, -96, -91, -24, -4, -83, -72, -132}), frozenset({-62, -124, -56, -119, -52, -113, -47, -106, -41, -100, -35, -96, -91, -83, -14, -70, -132, -67, -129}), frozenset({-128, -127, -63, -60, -121, -54, -113, -48, -44, -107, -40, -36, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-63, -125, -60, -121, -54, -116, -50, -47, -106, -41, -36, -99, -96, -91, -83, -9, -71, -6, -132, -131}), frozenset({-128, -127, -63, -60, -122, -117, -53, -48, -45, -107, -40, -101, -36, -94, -87, -4, -82, -12, -71, -132}), frozenset({-127, -63, -61, -121, -56, -50, -113, -46, -106, -40, -37, -101, -96, -88, -4, -83, -15, -71, -132, -129}), frozenset({-128, -127, -63, -60, -122, -54, -113, -49, -45, -108, -40, -36, -99, -96, -88, -24, -4, -83, -72, -132}), frozenset({-128, -63, -125, -60, -121, -54, -50, -113, -45, -107, -39, -35, -99, -96, -88, -24, -83, -72, -132, -2}), frozenset({-62, -124, -56, -119, -50, -113, -47, -106, -41, -36, -100, -96, -91, -83, -131, -14, -70, -5, -132, -67}), frozenset({-128, -127, -63, -60, -121, -54, -114, -50, -45, -106, -40, -102, -36, -96, -88, -4, -83, -19, -71, -132}), frozenset({-128, -127, -63, -61, -121, -56, -50, -113, -46, -106, -40, -101, -36, -96, -88, -4, -83, -15, -71, -132}), frozenset({-128, -127, -63, -60, -121, -54, -113, -49, -45, -108, -40, -36, -99, -96, -88, -24, -4, -83, -72, -132}), frozenset({-63, -125, -60, -121, -54, -116, -50, -45, -107, -40, -103, -36, -94, -91, -83, -12, -71, -132, -2, -129}), frozenset({-128, -127, -63, -59, -122, -53, -115, -48, -108, -44, -40, -36, -100, -94, -88, -82, -10, -71, -132, -2}), frozenset({-128, -127, -63, -60, -121, -54, -50, -113, -45, -107, -40, -35, -99, -96, -88, -24, -83, -72, -132, -2}), frozenset({-128, -127, -63, -60, -121, -54, -114, -50, -45, -107, -40, -35, -99, -96, -91, -24, -83, -72, -132, -2}), frozenset({-128, -127, -63, -60, -122, -54, -113, -48, -44, -107, -40, -37, -99, -94, -25, -88, -82, -71, -132, -3}), frozenset({-124, -60, -119, -55, -50, -113, -47, -106, -41, -36, -100, -97, -91, -84, -4, -15, -71, -132, -131, -65}), frozenset({-128, -63, -125, -60, -121, -53, -113, -49, -44, -106, -41, -36, -100, -96, -88, -83, -13, -71, -132}), frozenset({-127, -60, -121, -56, -116, -50, -47, -107, -40, -101, -35, -94, -91, -26, -83, -129, -71, -132, -65}), frozenset({-62, -124, -56, -119, -50, -113, -47, -106, -41, -36, -100, -96, -91, -83, -14, -70, -5, -132, -67, -129}), frozenset({-128, -127, -63, -60, -121, -53, -116, -50, -45, -107, -40, -103, -36, -94, -87, -83, -12, -71, -132, -2})]
2534	itemsets left after T operation 	: [frozenset({-96, -30, -29, -91, -47, -42, -41, -36, -131})]
1982	itemsets left after T operation 	: [frozenset({-128, -127, -30, -32, -25, -113, -48, -77, -44, -42, -71})]
1683	itemsets left after T operation 	: [frozenset({-96, -32, -62, -56, -47, -14, -77, -42, -41, -70, -67})]
1031	itemsets left after T operation 	: [frozenset({-32, -30, -29, -91, -56, -119, -50, -47, -42})]
243	itemsets left after T operation 	: [frozenset({-29, -60, -121, -83, -45, -77, -42})]
42	itemsets left after T operation 	: [frozenset({-56, -50, -42, -71, -101})]
18	itemsets left after W operation 	: [frozenset({-96, -47, 133, -42, -41}), frozenset({-124, -60, -57, -120, -51, -113, -110, -108, -103, -34, -33, -31, -28, -90, -86, -131, -16, -3, -76, -71, -133, -67}), frozenset({-30, -29, -91, -133, -36, -131}), frozenset({-32, -62, -56, -14, -77, -70, -133, -67})]
1	itemsets left after W operation 	: [frozenset({-32, -30, -42, 134}), frozenset({-110, -29, 132, -77, -134}), frozenset({-47, -29, -91, -56, -119, -134, -50}), frozenset({-128, -127, -25, -113, -48, -77, -44, -71, -134})]
# of frequent itemsets	: 2
Time of DCI Closed		: 0.1402571201324463
Initial DL				: 38042.574425119215
Final DL				: 3528.068860474762
Compression (wrt me)	: 0.9072599866389377
Operator Counters		: {'D': 0, 'W': 3, 'V': 0, 'S': 0, 'R': 0, 'T': 6}
Misle Learning Runtime	: 0.6262869834899902

Running	: ./Resources/Krimp/bin/krimp	/home/arcchitjain/Documents/Mistle/classify.conf
krimp_accuracy = 0.7659
mistle_fold_accuracy_list = [0.47619047619047616, 0.5714285714285714, 0.6666666666666666, 1.0, 0.7619047619047619, 0.9047619047619048, 0.9047619047619048, 0.8095238095238095, 0.5714285714285714, 0.6875]
mistle_attempted_list = [21, 21, 21, 21, 21, 21, 21, 21, 21, 16]
weighted sum = 151.0
weighted_mistle_accuracy = 0.7365853658536585
mistle_atempted = 205
mistle_coverage = 1.0
naive_mistle_attempted_list = 0.7354166666666666
Mistle MDL Selections = ['T-', 'T-', 'T-', 'T-', 'T-', 'T-', 'T-', 'T-', 'T-', 'T-']
krimp_time = 31.31391739845276
mistle_time = 20.27343201637268
krimp_accuracy_dict = {'auto.dat': '0.7659'}
mistle_accuracy_dict = {'auto.dat': (0.7365853658536585, 205, 1.0)}
