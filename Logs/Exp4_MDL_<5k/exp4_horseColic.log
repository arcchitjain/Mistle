 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: 'cca619a9-a166-474e-bffb-d10c61d36f9b_convertdb.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Database :: 
 * Type:		FIMI database
 * File:		horseColic.dat
 * Scanning file:	in progress... * Scanning file: done                       
 * Database:	368 rows, maximal 23 columns
 * 		has bin sizes: no
 * 		has transaction id's: no
 * Reading database:	in progress... * Reading database:	done          

 * Processing Data:  * Processing Data: Translating Forward * Processing Data: Sorting within Rows * Processing Data: Writing Data              ** Writing FIC database to file
 * File:		/home/arcchitjain/Documents/Mistle/Data/horseColic.db
** Finished writing database.

 * Processing Data: Finished                  

 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/

Task `datatrans`, command `convertdb` finished. This took 0 seconds.

 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: 'dd71bb8f-c0d2-4139-9e27-e62186efe59f_analysedb.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Database :: 
 * File:		horseColic.db
 * Database:		368t 368r, 6539i, 37880.73bits
 * 			pruned below support 0, maximum set length 23
 * Alphabet:		83 items
 * Internal datatype:	uint16 value arrays

** Analysing database
 * Output File:	horseColic.db.analysis.txt
 * Writing analysis:	in progress... * Writing analysis:	done          


 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/analysedb/

Task `main`, command `analysedb` finished. This took 0 seconds.

 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: '5041deb2-10f3-4303-a089-546b200d85c3_classifycompress.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Database :: 
 * File:		horseColic.db
 * Database:		368t 368r, 6539i, 37880.73bits
 * 			pruned below support 0, maximum set length 23
 * Alphabet:		83 items
 * Internal datatype:	32bit bitmap array

** Classification ::
 * Seed:				1234
 * numFolds:			10
 * Split database:		creating 10 partitions
 * Creating:			fold 1
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 1
** Writing FIC database to file
 * File:		train5.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-23d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		4471
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(81a,0u,3587,20395,1176,21570)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (45) ? c/s  		 | Progress:		2% (90) ? c/s  		 / Progress:		3% (135) ? c/s  		 - Progress:		4% (179) ? c/s  		 \ Progress:		5% (224) ? c/s  		 | Progress:		6% (269) ? c/s  		 / Progress:		7% (313) ? c/s  		 - Progress:		8% (358) ? c/s  		 \ Progress:		9% (403) ? c/s  		 | Progress:		10% (448) ? c/s  		 / Progress:		11% (492) ? c/s  		 - Progress:		12% (537) ? c/s  		 \ Progress:		13% (582) ? c/s  		 | Progress:		14% (626) ? c/s  		 / Progress:		15% (671) ? c/s  		 - Progress:		16% (716) ? c/s  		 \ Progress:		17% (761) ? c/s  		 | Progress:		18% (805) ? c/s  		 / Progress:		19% (850) ? c/s  		 - Progress:		20% (895) ? c/s  		 \ Progress:		21% (939) ? c/s  		 | Progress:		22% (984) ? c/s  		 / Progress:		23% (1029) ? c/s  		 - Progress:		24% (1074) ? c/s  		 \ Progress:		25% (1118) ? c/s  		 | Progress:		26% (1163) ? c/s  		 / Progress:		27% (1208) ? c/s  		 - Progress:		28% (1252) ? c/s  		 \ Progress:		29% (1297) ? c/s  		 | Progress:		30% (1342) ? c/s  		 / Progress:		31% (1387) ? c/s  		 - Progress:		32% (1431) ? c/s  		 \ Progress:		33% (1476) ? c/s  		 | Progress:		34% (1521) ? c/s  		 / Progress:		35% (1565) ? c/s  		 - Progress:		36% (1610) ? c/s  		 \ Progress:		37% (1655) ? c/s  		 | Progress:		38% (1699) ? c/s  		 / Progress:		39% (1744) ? c/s  		 - Progress:		40% (1789) ? c/s  		 \ Progress:		41% (1834) ? c/s  		 | Progress:		42% (1878) ? c/s  		 / Progress:		43% (1923) ? c/s  		 - Progress:		44% (1968) ? c/s  		 \ Progress:		45% (2012) ? c/s  		 | Progress:		46% (2057) ? c/s  		 / Progress:		47% (2102) ? c/s  		 - Progress:		48% (2147) ? c/s  		 \ Progress:		49% (2191) ? c/s  		 | Progress:		50% (2236) ? c/s  		 / Progress:		51% (2281) ? c/s  		 - Progress:		52% (2325) ? c/s  		 \ Progress:		53% (2370) ? c/s  		 | Progress:		54% (2415) ? c/s  		 / Progress:		55% (2460) ? c/s  		 - Progress:		56% (2504) ? c/s  		 \ Progress:		57% (2549) ? c/s  		 | Progress:		58% (2594) ? c/s  		 / Progress:		59% (2638) ? c/s  		 - Progress:		60% (2683) ? c/s  		 \ Progress:		61% (2728) ? c/s  		 | Progress:		62% (2773) ? c/s  		 / Progress:		63% (2817) ? c/s  		 - Progress:		64% (2862) ? c/s  		 \ Progress:		65% (2907) ? c/s  		 | Progress:		66% (2951) ? c/s  		 / Progress:		67% (2996) ? c/s  		 - Progress:		68% (3041) ? c/s  		 \ Progress:		69% (3085) ? c/s  		 | Progress:		70% (3130) ? c/s  		 / Progress:		71% (3175) ? c/s  		 - Progress:		72% (3220) ? c/s  		 \ Progress:		73% (3264) ? c/s  		 | Progress:		74% (3309) ? c/s  		 / Progress:		75% (3354) ? c/s  		 - Progress:		76% (3398) ? c/s  		 \ Progress:		77% (3443) ? c/s  		 | Progress:		78% (3488) ? c/s  		 / Progress:		79% (3533) ? c/s  		 - Progress:		80% (3577) ? c/s  		 \ Progress:		81% (3622) ? c/s  		 | Progress:		82% (3667) ? c/s  		 / Progress:		83% (3711) ? c/s  		 - Progress:		84% (3756) ? c/s  		 \ Progress:		85% (3801) ? c/s  		 | Progress:		86% (3846) ? c/s  		 / Progress:		87% (3890) ? c/s  		 - Progress:		88% (3935) ? c/s  		 \ Progress:		89% (3980) ? c/s  		 | Progress:		90% (4024) ? c/s  		 / Progress:		91% (4069) ? c/s  		 - Progress:		92% (4114) ? c/s  		 \ Progress:		93% (4159) ? c/s  		 | Progress:		94% (4203) ? c/s  		 / Progress:		95% (4248) ? c/s  		 - Progress:		96% (4293) ? c/s  		 \ Progress:		97% (4337) ? c/s  		 | Progress:		98% (4382) ? c/s  		 / Progress:		99% (4427) ? c/s  		 * Time:    		Compressing the database took 0.035259 seconds.		
 * Result:		(79a,55u,2118,14235,2415,16651)
** Writing FIC database to file
 * File:		train14.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-23d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		1361
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(80a,0u,1994,11283,1148,12431)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (14) ? c/s  		 | Progress:		2% (28) ? c/s  		 / Progress:		3% (41) ? c/s  		 - Progress:		4% (55) ? c/s  		 \ Progress:		5% (69) ? c/s  		 | Progress:		6% (82) ? c/s  		 / Progress:		7% (96) ? c/s  		 - Progress:		8% (109) ? c/s  		 \ Progress:		9% (123) ? c/s  		 | Progress:		10% (137) ? c/s  		 / Progress:		11% (150) ? c/s  		 - Progress:		12% (164) ? c/s  		 \ Progress:		13% (177) ? c/s  		 | Progress:		14% (191) ? c/s  		 / Progress:		15% (205) ? c/s  		 - Progress:		16% (218) ? c/s  		 \ Progress:		17% (232) ? c/s  		 | Progress:		18% (245) ? c/s  		 / Progress:		19% (259) ? c/s  		 - Progress:		20% (273) ? c/s  		 \ Progress:		21% (286) ? c/s  		 | Progress:		22% (300) ? c/s  		 / Progress:		23% (314) ? c/s  		 - Progress:		24% (327) ? c/s  		 \ Progress:		25% (341) ? c/s  		 | Progress:		26% (354) ? c/s  		 / Progress:		27% (368) ? c/s  		 - Progress:		28% (382) ? c/s  		 \ Progress:		29% (395) ? c/s  		 | Progress:		30% (409) ? c/s  		 / Progress:		31% (422) ? c/s  		 - Progress:		32% (436) ? c/s  		 \ Progress:		33% (450) ? c/s  		 | Progress:		34% (463) ? c/s  		 / Progress:		35% (477) ? c/s  		 - Progress:		36% (490) ? c/s  		 \ Progress:		37% (504) ? c/s  		 | Progress:		38% (518) ? c/s  		 / Progress:		39% (531) ? c/s  		 - Progress:		40% (545) ? c/s  		 \ Progress:		41% (559) ? c/s  		 | Progress:		42% (572) ? c/s  		 / Progress:		43% (586) ? c/s  		 - Progress:		44% (599) ? c/s  		 \ Progress:		45% (613) ? c/s  		 | Progress:		46% (627) ? c/s  		 / Progress:		47% (640) ? c/s  		 - Progress:		48% (654) ? c/s  		 \ Progress:		49% (667) ? c/s  		 | Progress:		50% (681) ? c/s  		 / Progress:		51% (695) ? c/s  		 - Progress:		52% (708) ? c/s  		 \ Progress:		53% (722) ? c/s  		 | Progress:		54% (735) ? c/s  		 / Progress:		55% (749) ? c/s  		 - Progress:		56% (763) ? c/s  		 \ Progress:		57% (776) ? c/s  		 | Progress:		58% (790) ? c/s  		 / Progress:		59% (803) ? c/s  		 - Progress:		60% (817) ? c/s  		 \ Progress:		61% (831) ? c/s  		 | Progress:		62% (844) ? c/s  		 / Progress:		63% (858) ? c/s  		 - Progress:		64% (872) ? c/s  		 \ Progress:		65% (885) ? c/s  		 | Progress:		66% (899) ? c/s  		 / Progress:		67% (912) ? c/s  		 - Progress:		68% (926) ? c/s  		 \ Progress:		69% (940) ? c/s  		 | Progress:		70% (953) ? c/s  		 / Progress:		71% (967) ? c/s  		 - Progress:		72% (980) ? c/s  		 \ Progress:		73% (994) ? c/s  		 | Progress:		74% (1008) ? c/s  		 / Progress:		75% (1021) ? c/s  		 - Progress:		76% (1035) ? c/s  		 \ Progress:		77% (1048) ? c/s  		 | Progress:		78% (1062) ? c/s  		 / Progress:		79% (1076) ? c/s  		 - Progress:		80% (1089) ? c/s  		 \ Progress:		81% (1103) ? c/s  		 | Progress:		82% (1117) ? c/s  		 / Progress:		83% (1130) ? c/s  		 - Progress:		84% (1144) ? c/s  		 \ Progress:		85% (1157) ? c/s  		 | Progress:		86% (1171) ? c/s  		 / Progress:		87% (1185) ? c/s  		 - Progress:		88% (1198) ? c/s  		 \ Progress:		89% (1212) ? c/s  		 | Progress:		90% (1225) ? c/s  		 / Progress:		91% (1239) ? c/s  		 - Progress:		92% (1253) ? c/s  		 \ Progress:		93% (1266) ? c/s  		 | Progress:		94% (1280) ? c/s  		 / Progress:		95% (1293) ? c/s  		 - Progress:		96% (1307) ? c/s  		 \ Progress:		97% (1321) ? c/s  		 | Progress:		98% (1334) ? c/s  		 / Progress:		99% (1348) ? c/s  		 * Time:    		Compressing the database took 0.009845 seconds.		
 * Result:		(78a,24u,1318,8318,1668,9986)
 * Creating:			fold 2
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 2
** Writing FIC database to file
 * File:		train5.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-23d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		4361
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(81a,0u,3491,19858,1175,21033)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (44) ? c/s  		 | Progress:		2% (88) ? c/s  		 / Progress:		3% (131) ? c/s  		 - Progress:		4% (175) ? c/s  		 \ Progress:		5% (219) ? c/s  		 | Progress:		6% (262) ? c/s  		 / Progress:		7% (306) ? c/s  		 - Progress:		8% (349) ? c/s  		 \ Progress:		9% (393) ? c/s  		 | Progress:		10% (437) ? c/s  		 / Progress:		11% (480) ? c/s  		 - Progress:		12% (524) ? c/s  		 \ Progress:		13% (567) ? c/s  		 | Progress:		14% (611) ? c/s  		 / Progress:		15% (655) ? c/s  		 - Progress:		16% (698) ? c/s  		 \ Progress:		17% (742) ? c/s  		 | Progress:		18% (785) ? c/s  		 / Progress:		19% (829) ? c/s  		 - Progress:		20% (873) ? c/s  		 \ Progress:		21% (916) ? c/s  		 | Progress:		22% (960) ? c/s  		 / Progress:		23% (1004) ? c/s  		 - Progress:		24% (1047) ? c/s  		 \ Progress:		25% (1091) ? c/s  		 | Progress:		26% (1134) ? c/s  		 / Progress:		27% (1178) ? c/s  		 - Progress:		28% (1222) ? c/s  		 \ Progress:		29% (1265) ? c/s  		 | Progress:		30% (1309) ? c/s  		 / Progress:		31% (1352) ? c/s  		 - Progress:		32% (1396) ? c/s  		 \ Progress:		33% (1440) ? c/s  		 | Progress:		34% (1483) ? c/s  		 / Progress:		35% (1527) ? c/s  		 - Progress:		36% (1570) ? c/s  		 \ Progress:		37% (1614) ? c/s  		 | Progress:		38% (1658) ? c/s  		 / Progress:		39% (1701) ? c/s  		 - Progress:		40% (1745) ? c/s  		 \ Progress:		41% (1789) ? c/s  		 | Progress:		42% (1832) ? c/s  		 / Progress:		43% (1876) ? c/s  		 - Progress:		44% (1919) ? c/s  		 \ Progress:		45% (1963) ? c/s  		 | Progress:		46% (2007) ? c/s  		 / Progress:		47% (2050) ? c/s  		 - Progress:		48% (2094) ? c/s  		 \ Progress:		49% (2137) ? c/s  		 | Progress:		50% (2181) ? c/s  		 / Progress:		51% (2225) ? c/s  		 - Progress:		52% (2268) ? c/s  		 \ Progress:		53% (2312) ? c/s  		 | Progress:		54% (2355) ? c/s  		 / Progress:		55% (2399) ? c/s  		 - Progress:		56% (2443) ? c/s  		 \ Progress:		57% (2486) ? c/s  		 | Progress:		58% (2530) ? c/s  		 / Progress:		59% (2573) ? c/s  		 - Progress:		60% (2617) ? c/s  		 \ Progress:		61% (2661) ? c/s  		 | Progress:		62% (2704) ? c/s  		 / Progress:		63% (2748) ? c/s  		 - Progress:		64% (2792) ? c/s  		 \ Progress:		65% (2835) ? c/s  		 | Progress:		66% (2879) ? c/s  		 / Progress:		67% (2922) ? c/s  		 - Progress:		68% (2966) ? c/s  		 \ Progress:		69% (3010) ? c/s  		 | Progress:		70% (3053) ? c/s  		 / Progress:		71% (3097) ? c/s  		 - Progress:		72% (3140) ? c/s  		 \ Progress:		73% (3184) ? c/s  		 | Progress:		74% (3228) ? c/s  		 / Progress:		75% (3271) ? c/s  		 - Progress:		76% (3315) ? c/s  		 \ Progress:		77% (3358) ? c/s  		 | Progress:		78% (3402) ? c/s  		 / Progress:		79% (3446) ? c/s  		 - Progress:		80% (3489) ? c/s  		 \ Progress:		81% (3533) ? c/s  		 | Progress:		82% (3577) ? c/s  		 / Progress:		83% (3620) ? c/s  		 - Progress:		84% (3664) ? c/s  		 \ Progress:		85% (3707) ? c/s  		 | Progress:		86% (3751) ? c/s  		 / Progress:		87% (3795) ? c/s  		 - Progress:		88% (3838) ? c/s  		 \ Progress:		89% (3882) ? c/s  		 | Progress:		90% (3925) ? c/s  		 / Progress:		91% (3969) ? c/s  		 - Progress:		92% (4013) ? c/s  		 \ Progress:		93% (4056) ? c/s  		 | Progress:		94% (4100) ? c/s  		 / Progress:		95% (4143) ? c/s  		 - Progress:		96% (4187) ? c/s  		 \ Progress:		97% (4231) ? c/s  		 | Progress:		98% (4274) ? c/s  		 / Progress:		99% (4318) ? c/s  		 * Time:    		Compressing the database took 0.037741 seconds.		
 * Result:		(78a,57u,2063,13928,2441,16369)
** Writing FIC database to file
 * File:		train14.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-23d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		1271
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(79a,0u,2085,11849,1120,12969)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (13) ? c/s  		 | Progress:		2% (26) ? c/s  		 / Progress:		3% (39) ? c/s  		 - Progress:		4% (51) ? c/s  		 \ Progress:		5% (64) ? c/s  		 | Progress:		6% (77) ? c/s  		 / Progress:		7% (89) ? c/s  		 - Progress:		8% (102) ? c/s  		 \ Progress:		9% (115) ? c/s  		 | Progress:		10% (128) ? c/s  		 / Progress:		11% (140) ? c/s  		 - Progress:		12% (153) ? c/s  		 \ Progress:		13% (166) ? c/s  		 | Progress:		14% (178) ? c/s  		 / Progress:		15% (191) ? c/s  		 - Progress:		16% (204) ? c/s  		 \ Progress:		17% (217) ? c/s  		 | Progress:		18% (229) ? c/s  		 / Progress:		19% (242) ? c/s  		 - Progress:		20% (255) ? c/s  		 \ Progress:		21% (267) ? c/s  		 | Progress:		22% (280) ? c/s  		 / Progress:		23% (293) ? c/s  		 - Progress:		24% (306) ? c/s  		 \ Progress:		25% (318) ? c/s  		 | Progress:		26% (331) ? c/s  		 / Progress:		27% (344) ? c/s  		 - Progress:		28% (356) ? c/s  		 \ Progress:		29% (369) ? c/s  		 | Progress:		30% (382) ? c/s  		 / Progress:		31% (395) ? c/s  		 - Progress:		32% (407) ? c/s  		 \ Progress:		33% (420) ? c/s  		 | Progress:		34% (433) ? c/s  		 / Progress:		35% (445) ? c/s  		 - Progress:		36% (458) ? c/s  		 \ Progress:		37% (471) ? c/s  		 | Progress:		38% (483) ? c/s  		 / Progress:		39% (496) ? c/s  		 - Progress:		40% (509) ? c/s  		 \ Progress:		41% (522) ? c/s  		 | Progress:		42% (534) ? c/s  		 / Progress:		43% (547) ? c/s  		 - Progress:		44% (560) ? c/s  		 \ Progress:		45% (572) ? c/s  		 | Progress:		46% (585) ? c/s  		 / Progress:		47% (598) ? c/s  		 - Progress:		48% (611) ? c/s  		 \ Progress:		49% (623) ? c/s  		 | Progress:		50% (636) ? c/s  		 / Progress:		51% (649) ? c/s  		 - Progress:		52% (661) ? c/s  		 \ Progress:		53% (674) ? c/s  		 | Progress:		54% (687) ? c/s  		 / Progress:		55% (700) ? c/s  		 - Progress:		56% (712) ? c/s  		 \ Progress:		57% (725) ? c/s  		 | Progress:		58% (738) ? c/s  		 / Progress:		59% (750) ? c/s  		 - Progress:		60% (763) ? c/s  		 \ Progress:		61% (776) ? c/s  		 | Progress:		62% (789) ? c/s  		 / Progress:		63% (801) ? c/s  		 - Progress:		64% (814) ? c/s  		 \ Progress:		65% (827) ? c/s  		 | Progress:		66% (839) ? c/s  		 / Progress:		67% (852) ? c/s  		 - Progress:		68% (865) ? c/s  		 \ Progress:		69% (877) ? c/s  		 | Progress:		70% (890) ? c/s  		 / Progress:		71% (903) ? c/s  		 - Progress:		72% (916) ? c/s  		 \ Progress:		73% (928) ? c/s  		 | Progress:		74% (941) ? c/s  		 / Progress:		75% (954) ? c/s  		 - Progress:		76% (966) ? c/s  		 \ Progress:		77% (979) ? c/s  		 | Progress:		78% (992) ? c/s  		 / Progress:		79% (1005) ? c/s  		 - Progress:		80% (1017) ? c/s  		 \ Progress:		81% (1030) ? c/s  		 | Progress:		82% (1043) ? c/s  		 / Progress:		83% (1055) ? c/s  		 - Progress:		84% (1068) ? c/s  		 \ Progress:		85% (1081) ? c/s  		 | Progress:		86% (1094) ? c/s  		 / Progress:		87% (1106) ? c/s  		 - Progress:		88% (1119) ? c/s  		 \ Progress:		89% (1132) ? c/s  		 | Progress:		90% (1144) ? c/s  		 / Progress:		91% (1157) ? c/s  		 - Progress:		92% (1170) ? c/s  		 \ Progress:		93% (1183) ? c/s  		 | Progress:		94% (1195) ? c/s  		 / Progress:		95% (1208) ? c/s  		 - Progress:		96% (1221) ? c/s  		 \ Progress:		97% (1233) ? c/s  		 | Progress:		98% (1246) ? c/s  		 / Progress:		99% (1259) ? c/s  		 * Time:    		Compressing the database took 0.012048 seconds.		
 * Result:		(78a,22u,1401,8841,1617,10458)
 * Creating:			fold 3
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 3
** Writing FIC database to file
 * File:		train5.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-23d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		4527
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(80a,0u,3520,19984,1153,21137)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (46) ? c/s  		 | Progress:		2% (91) ? c/s  		 / Progress:		3% (136) ? c/s  		 - Progress:		4% (182) ? c/s  		 \ Progress:		5% (227) ? c/s  		 | Progress:		6% (272) ? c/s  		 / Progress:		7% (317) ? c/s  		 - Progress:		8% (363) ? c/s  		 \ Progress:		9% (408) ? c/s  		 | Progress:		10% (453) ? c/s  		 / Progress:		11% (498) ? c/s  		 - Progress:		12% (544) ? c/s  		 \ Progress:		13% (589) ? c/s  		 | Progress:		14% (634) ? c/s  		 / Progress:		15% (680) ? c/s  		 - Progress:		16% (725) ? c/s  		 \ Progress:		17% (770) ? c/s  		 | Progress:		18% (815) ? c/s  		 / Progress:		19% (861) ? c/s  		 - Progress:		20% (906) ? c/s  		 \ Progress:		21% (951) ? c/s  		 | Progress:		22% (996) ? c/s  		 / Progress:		23% (1042) ? c/s  		 - Progress:		24% (1087) ? c/s  		 \ Progress:		25% (1132) ? c/s  		 | Progress:		26% (1178) ? c/s  		 / Progress:		27% (1223) ? c/s  		 - Progress:		28% (1268) ? c/s  		 \ Progress:		29% (1313) ? c/s  		 | Progress:		30% (1359) ? c/s  		 / Progress:		31% (1404) ? c/s  		 - Progress:		32% (1449) ? c/s  		 \ Progress:		33% (1494) ? c/s  		 | Progress:		34% (1540) ? c/s  		 / Progress:		35% (1585) ? c/s  		 - Progress:		36% (1630) ? c/s  		 \ Progress:		37% (1675) ? c/s  		 | Progress:		38% (1721) ? c/s  		 / Progress:		39% (1766) ? c/s  		 - Progress:		40% (1811) ? c/s  		 \ Progress:		41% (1857) ? c/s  		 | Progress:		42% (1902) ? c/s  		 / Progress:		43% (1947) ? c/s  		 - Progress:		44% (1992) ? c/s  		 \ Progress:		45% (2038) ? c/s  		 | Progress:		46% (2083) ? c/s  		 / Progress:		47% (2128) ? c/s  		 - Progress:		48% (2173) ? c/s  		 \ Progress:		49% (2219) ? c/s  		 | Progress:		50% (2264) ? c/s  		 / Progress:		51% (2309) ? c/s  		 - Progress:		52% (2355) ? c/s  		 \ Progress:		53% (2400) ? c/s  		 | Progress:		54% (2445) ? c/s  		 / Progress:		55% (2490) ? c/s  		 - Progress:		56% (2536) ? c/s  		 \ Progress:		57% (2581) ? c/s  		 | Progress:		58% (2626) ? c/s  		 / Progress:		59% (2671) ? c/s  		 - Progress:		60% (2717) ? c/s  		 \ Progress:		61% (2762) ? c/s  		 | Progress:		62% (2807) ? c/s  		 / Progress:		63% (2853) ? c/s  		 - Progress:		64% (2898) ? c/s  		 \ Progress:		65% (2943) ? c/s  		 | Progress:		66% (2988) ? c/s  		 / Progress:		67% (3034) ? c/s  		 - Progress:		68% (3079) ? c/s  		 \ Progress:		69% (3124) ? c/s  		 | Progress:		70% (3169) ? c/s  		 / Progress:		71% (3215) ? c/s  		 - Progress:		72% (3260) ? c/s  		 \ Progress:		73% (3305) ? c/s  		 | Progress:		74% (3350) ? c/s  		 / Progress:		75% (3396) ? c/s  		 - Progress:		76% (3441) ? c/s  		 \ Progress:		77% (3486) ? c/s  		 | Progress:		78% (3532) ? c/s  		 / Progress:		79% (3577) ? c/s  		 - Progress:		80% (3622) ? c/s  		 \ Progress:		81% (3667) ? c/s  		 | Progress:		82% (3713) ? c/s  		 / Progress:		83% (3758) ? c/s  		 - Progress:		84% (3803) ? c/s  		 \ Progress:		85% (3848) ? c/s  		 | Progress:		86% (3894) ? c/s  		 / Progress:		87% (3939) ? c/s  		 - Progress:		88% (3984) ? c/s  		 \ Progress:		89% (4030) ? c/s  		 | Progress:		90% (4075) ? c/s  		 / Progress:		91% (4120) ? c/s  		 - Progress:		92% (4165) ? c/s  		 \ Progress:		93% (4211) ? c/s  		 | Progress:		94% (4256) ? c/s  		 / Progress:		95% (4301) ? c/s  		 - Progress:		96% (4346) ? c/s  		 \ Progress:		97% (4392) ? c/s  		 | Progress:		98% (4437) ? c/s  		 / Progress:		99% (4482) ? c/s  		 * Time:    		Compressing the database took 0.034383 seconds.		
 * Result:		(76a,50u,2097,13862,2293,16155)
** Writing FIC database to file
 * File:		train14.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-23d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		1200
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(80a,0u,2066,11759,1140,12898)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (12) ? c/s  		 | Progress:		2% (24) ? c/s  		 / Progress:		3% (36) ? c/s  		 - Progress:		4% (48) ? c/s  		 \ Progress:		5% (60) ? c/s  		 | Progress:		6% (72) ? c/s  		 / Progress:		7% (84) ? c/s  		 - Progress:		8% (96) ? c/s  		 \ Progress:		9% (108) ? c/s  		 | Progress:		10% (120) ? c/s  		 / Progress:		11% (132) ? c/s  		 - Progress:		12% (144) ? c/s  		 \ Progress:		13% (156) ? c/s  		 | Progress:		14% (168) ? c/s  		 / Progress:		15% (180) ? c/s  		 - Progress:		16% (192) ? c/s  		 \ Progress:		17% (204) ? c/s  		 | Progress:		18% (216) ? c/s  		 / Progress:		19% (228) ? c/s  		 - Progress:		20% (240) ? c/s  		 \ Progress:		21% (252) ? c/s  		 | Progress:		22% (264) ? c/s  		 / Progress:		23% (276) ? c/s  		 - Progress:		24% (288) ? c/s  		 \ Progress:		25% (300) ? c/s  		 | Progress:		26% (312) ? c/s  		 / Progress:		27% (324) ? c/s  		 - Progress:		28% (336) ? c/s  		 \ Progress:		29% (348) ? c/s  		 | Progress:		30% (360) ? c/s  		 / Progress:		31% (372) ? c/s  		 - Progress:		32% (384) ? c/s  		 \ Progress:		33% (396) ? c/s  		 | Progress:		34% (408) ? c/s  		 / Progress:		35% (420) ? c/s  		 - Progress:		36% (432) ? c/s  		 \ Progress:		37% (444) ? c/s  		 | Progress:		38% (456) ? c/s  		 / Progress:		39% (468) ? c/s  		 - Progress:		40% (480) ? c/s  		 \ Progress:		41% (492) ? c/s  		 | Progress:		42% (504) ? c/s  		 / Progress:		43% (516) ? c/s  		 - Progress:		44% (528) ? c/s  		 \ Progress:		45% (540) ? c/s  		 | Progress:		46% (552) ? c/s  		 / Progress:		47% (564) ? c/s  		 - Progress:		48% (576) ? c/s  		 \ Progress:		49% (588) ? c/s  		 | Progress:		50% (600) ? c/s  		 / Progress:		51% (612) ? c/s  		 - Progress:		52% (624) ? c/s  		 \ Progress:		53% (636) ? c/s  		 | Progress:		54% (648) ? c/s  		 / Progress:		55% (660) ? c/s  		 - Progress:		56% (672) ? c/s  		 \ Progress:		57% (684) ? c/s  		 | Progress:		58% (696) ? c/s  		 / Progress:		59% (708) ? c/s  		 - Progress:		60% (720) ? c/s  		 \ Progress:		61% (732) ? c/s  		 | Progress:		62% (744) ? c/s  		 / Progress:		63% (756) ? c/s  		 - Progress:		64% (768) ? c/s  		 \ Progress:		65% (780) ? c/s  		 | Progress:		66% (792) ? c/s  		 / Progress:		67% (804) ? c/s  		 - Progress:		68% (816) ? c/s  		 \ Progress:		69% (828) ? c/s  		 | Progress:		70% (840) ? c/s  		 / Progress:		71% (852) ? c/s  		 - Progress:		72% (864) ? c/s  		 \ Progress:		73% (876) ? c/s  		 | Progress:		74% (888) ? c/s  		 / Progress:		75% (900) ? c/s  		 - Progress:		76% (912) ? c/s  		 \ Progress:		77% (924) ? c/s  		 | Progress:		78% (936) ? c/s  		 / Progress:		79% (948) ? c/s  		 - Progress:		80% (960) ? c/s  		 \ Progress:		81% (972) ? c/s  		 | Progress:		82% (984) ? c/s  		 / Progress:		83% (996) ? c/s  		 - Progress:		84% (1008) ? c/s  		 \ Progress:		85% (1020) ? c/s  		 | Progress:		86% (1032) ? c/s  		 / Progress:		87% (1044) ? c/s  		 - Progress:		88% (1056) ? c/s  		 \ Progress:		89% (1068) ? c/s  		 | Progress:		90% (1080) ? c/s  		 / Progress:		91% (1092) ? c/s  		 - Progress:		92% (1104) ? c/s  		 \ Progress:		93% (1116) ? c/s  		 | Progress:		94% (1128) ? c/s  		 / Progress:		95% (1140) ? c/s  		 - Progress:		96% (1152) ? c/s  		 \ Progress:		97% (1164) ? c/s  		 | Progress:		98% (1176) ? c/s  		 / Progress:		99% (1188) ? c/s  		 * Time:    		Compressing the database took 0.011721 seconds.		
 * Result:		(75a,33u,1378,8808,1798,10606)
 * Creating:			fold 4
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 4
** Writing FIC database to file
 * File:		train5.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-23d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		4048
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(81a,0u,3423,19452,1177,20630)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (41) ? c/s  		 | Progress:		2% (81) ? c/s  		 / Progress:		3% (122) ? c/s  		 - Progress:		4% (162) ? c/s  		 \ Progress:		5% (203) ? c/s  		 | Progress:		6% (243) ? c/s  		 / Progress:		7% (284) ? c/s  		 - Progress:		8% (324) ? c/s  		 \ Progress:		9% (365) ? c/s  		 | Progress:		10% (405) ? c/s  		 / Progress:		11% (446) ? c/s  		 - Progress:		12% (486) ? c/s  		 \ Progress:		13% (527) ? c/s  		 | Progress:		14% (567) ? c/s  		 / Progress:		15% (608) ? c/s  		 - Progress:		16% (648) ? c/s  		 \ Progress:		17% (689) ? c/s  		 | Progress:		18% (729) ? c/s  		 / Progress:		19% (770) ? c/s  		 - Progress:		20% (810) ? c/s  		 \ Progress:		21% (851) ? c/s  		 | Progress:		22% (891) ? c/s  		 / Progress:		23% (932) ? c/s  		 - Progress:		24% (972) ? c/s  		 \ Progress:		25% (1012) ? c/s  		 | Progress:		26% (1053) ? c/s  		 / Progress:		27% (1093) ? c/s  		 - Progress:		28% (1134) ? c/s  		 \ Progress:		29% (1174) ? c/s  		 | Progress:		30% (1215) ? c/s  		 / Progress:		31% (1255) ? c/s  		 - Progress:		32% (1296) ? c/s  		 \ Progress:		33% (1336) ? c/s  		 | Progress:		34% (1377) ? c/s  		 / Progress:		35% (1417) ? c/s  		 - Progress:		36% (1458) ? c/s  		 \ Progress:		37% (1498) ? c/s  		 | Progress:		38% (1539) ? c/s  		 / Progress:		39% (1579) ? c/s  		 - Progress:		40% (1620) ? c/s  		 \ Progress:		41% (1660) ? c/s  		 | Progress:		42% (1701) ? c/s  		 / Progress:		43% (1741) ? c/s  		 - Progress:		44% (1782) ? c/s  		 \ Progress:		45% (1822) ? c/s  		 | Progress:		46% (1863) ? c/s  		 / Progress:		47% (1903) ? c/s  		 - Progress:		48% (1944) ? c/s  		 \ Progress:		49% (1984) ? c/s  		 | Progress:		50% (2024) ? c/s  		 / Progress:		51% (2065) ? c/s  		 - Progress:		52% (2105) ? c/s  		 \ Progress:		53% (2146) ? c/s  		 | Progress:		54% (2186) ? c/s  		 / Progress:		55% (2227) ? c/s  		 - Progress:		56% (2267) ? c/s  		 \ Progress:		57% (2308) ? c/s  		 | Progress:		58% (2348) ? c/s  		 / Progress:		59% (2389) ? c/s  		 - Progress:		60% (2429) ? c/s  		 \ Progress:		61% (2470) ? c/s  		 | Progress:		62% (2510) ? c/s  		 / Progress:		63% (2551) ? c/s  		 - Progress:		64% (2591) ? c/s  		 \ Progress:		65% (2632) ? c/s  		 | Progress:		66% (2672) ? c/s  		 / Progress:		67% (2713) ? c/s  		 - Progress:		68% (2753) ? c/s  		 \ Progress:		69% (2794) ? c/s  		 | Progress:		70% (2834) ? c/s  		 / Progress:		71% (2875) ? c/s  		 - Progress:		72% (2915) ? c/s  		 \ Progress:		73% (2956) ? c/s  		 | Progress:		74% (2996) ? c/s  		 / Progress:		75% (3036) ? c/s  		 - Progress:		76% (3077) ? c/s  		 \ Progress:		77% (3117) ? c/s  		 | Progress:		78% (3158) ? c/s  		 / Progress:		79% (3198) ? c/s  		 - Progress:		80% (3239) ? c/s  		 \ Progress:		81% (3279) ? c/s  		 | Progress:		82% (3320) ? c/s  		 / Progress:		83% (3360) ? c/s  		 - Progress:		84% (3401) ? c/s  		 \ Progress:		85% (3441) ? c/s  		 | Progress:		86% (3482) ? c/s  		 / Progress:		87% (3522) ? c/s  		 - Progress:		88% (3563) ? c/s  		 \ Progress:		89% (3603) ? c/s  		 | Progress:		90% (3644) ? c/s  		 / Progress:		91% (3684) ? c/s  		 - Progress:		92% (3725) ? c/s  		 \ Progress:		93% (3765) ? c/s  		 | Progress:		94% (3806) ? c/s  		 / Progress:		95% (3846) ? c/s  		 - Progress:		96% (3887) ? c/s  		 \ Progress:		97% (3927) ? c/s  		 | Progress:		98% (3968) ? c/s  		 / Progress:		99% (4008) ? c/s  		 * Time:    		Compressing the database took 0.029689 seconds.		
 * Result:		(80a,55u,2027,13662,2396,16058)
** Writing FIC database to file
 * File:		train14.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-23d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		1488
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(80a,0u,2082,11766,1150,12916)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (15) ? c/s  		 | Progress:		2% (30) ? c/s  		 / Progress:		3% (45) ? c/s  		 - Progress:		4% (60) ? c/s  		 \ Progress:		5% (75) ? c/s  		 | Progress:		6% (90) ? c/s  		 / Progress:		7% (105) ? c/s  		 - Progress:		8% (120) ? c/s  		 \ Progress:		9% (134) ? c/s  		 | Progress:		10% (149) ? c/s  		 / Progress:		11% (164) ? c/s  		 - Progress:		12% (179) ? c/s  		 \ Progress:		13% (194) ? c/s  		 | Progress:		14% (209) ? c/s  		 / Progress:		15% (224) ? c/s  		 - Progress:		16% (239) ? c/s  		 \ Progress:		17% (253) ? c/s  		 | Progress:		18% (268) ? c/s  		 / Progress:		19% (283) ? c/s  		 - Progress:		20% (298) ? c/s  		 \ Progress:		21% (313) ? c/s  		 | Progress:		22% (328) ? c/s  		 / Progress:		23% (343) ? c/s  		 - Progress:		24% (358) ? c/s  		 \ Progress:		25% (372) ? c/s  		 | Progress:		26% (387) ? c/s  		 / Progress:		27% (402) ? c/s  		 - Progress:		28% (417) ? c/s  		 \ Progress:		29% (432) ? c/s  		 | Progress:		30% (447) ? c/s  		 / Progress:		31% (462) ? c/s  		 - Progress:		32% (477) ? c/s  		 \ Progress:		33% (492) ? c/s  		 | Progress:		34% (506) ? c/s  		 / Progress:		35% (521) ? c/s  		 - Progress:		36% (536) ? c/s  		 \ Progress:		37% (551) ? c/s  		 | Progress:		38% (566) ? c/s  		 / Progress:		39% (581) ? c/s  		 - Progress:		40% (596) ? c/s  		 \ Progress:		41% (611) ? c/s  		 | Progress:		42% (625) ? c/s  		 / Progress:		43% (640) ? c/s  		 - Progress:		44% (655) ? c/s  		 \ Progress:		45% (670) ? c/s  		 | Progress:		46% (685) ? c/s  		 / Progress:		47% (700) ? c/s  		 - Progress:		48% (715) ? c/s  		 \ Progress:		49% (730) ? c/s  		 | Progress:		50% (744) ? c/s  		 / Progress:		51% (759) ? c/s  		 - Progress:		52% (774) ? c/s  		 \ Progress:		53% (789) ? c/s  		 | Progress:		54% (804) ? c/s  		 / Progress:		55% (819) ? c/s  		 - Progress:		56% (834) ? c/s  		 \ Progress:		57% (849) ? c/s  		 | Progress:		58% (864) ? c/s  		 / Progress:		59% (878) ? c/s  		 - Progress:		60% (893) ? c/s  		 \ Progress:		61% (908) ? c/s  		 | Progress:		62% (923) ? c/s  		 / Progress:		63% (938) ? c/s  		 - Progress:		64% (953) ? c/s  		 \ Progress:		65% (968) ? c/s  		 | Progress:		66% (983) ? c/s  		 / Progress:		67% (997) ? c/s  		 - Progress:		68% (1012) ? c/s  		 \ Progress:		69% (1027) ? c/s  		 | Progress:		70% (1042) ? c/s  		 / Progress:		71% (1057) ? c/s  		 - Progress:		72% (1072) ? c/s  		 \ Progress:		73% (1087) ? c/s  		 | Progress:		74% (1102) ? c/s  		 / Progress:		75% (1116) ? c/s  		 - Progress:		76% (1131) ? c/s  		 \ Progress:		77% (1146) ? c/s  		 | Progress:		78% (1161) ? c/s  		 / Progress:		79% (1176) ? c/s  		 - Progress:		80% (1191) ? c/s  		 \ Progress:		81% (1206) ? c/s  		 | Progress:		82% (1221) ? c/s  		 / Progress:		83% (1236) ? c/s  		 - Progress:		84% (1250) ? c/s  		 \ Progress:		85% (1265) ? c/s  		 | Progress:		86% (1280) ? c/s  		 / Progress:		87% (1295) ? c/s  		 - Progress:		88% (1310) ? c/s  		 \ Progress:		89% (1325) ? c/s  		 | Progress:		90% (1340) ? c/s  		 / Progress:		91% (1355) ? c/s  		 - Progress:		92% (1369) ? c/s  		 \ Progress:		93% (1384) ? c/s  		 | Progress:		94% (1399) ? c/s  		 / Progress:		95% (1414) ? c/s  		 - Progress:		96% (1429) ? c/s  		 \ Progress:		97% (1444) ? c/s  		 | Progress:		98% (1459) ? c/s  		 / Progress:		99% (1474) ? c/s  		 * Time:    		Compressing the database took 0.015072 seconds.		
 * Result:		(76a,27u,1380,8715,1718,10433)
 * Creating:			fold 5
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 5
** Writing FIC database to file
 * File:		train5.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-23d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		4257
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(81a,0u,3506,19925,1174,21100)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (43) ? c/s  		 | Progress:		2% (86) ? c/s  		 / Progress:		3% (128) ? c/s  		 - Progress:		4% (171) ? c/s  		 \ Progress:		5% (213) ? c/s  		 | Progress:		6% (256) ? c/s  		 / Progress:		7% (298) ? c/s  		 - Progress:		8% (341) ? c/s  		 \ Progress:		9% (384) ? c/s  		 | Progress:		10% (426) ? c/s  		 / Progress:		11% (469) ? c/s  		 - Progress:		12% (511) ? c/s  		 \ Progress:		13% (554) ? c/s  		 | Progress:		14% (596) ? c/s  		 / Progress:		15% (639) ? c/s  		 - Progress:		16% (682) ? c/s  		 \ Progress:		17% (724) ? c/s  		 | Progress:		18% (767) ? c/s  		 / Progress:		19% (809) ? c/s  		 - Progress:		20% (852) ? c/s  		 \ Progress:		21% (894) ? c/s  		 | Progress:		22% (937) ? c/s  		 / Progress:		23% (980) ? c/s  		 - Progress:		24% (1022) ? c/s  		 \ Progress:		25% (1065) ? c/s  		 | Progress:		26% (1107) ? c/s  		 / Progress:		27% (1150) ? c/s  		 - Progress:		28% (1192) ? c/s  		 \ Progress:		29% (1235) ? c/s  		 | Progress:		30% (1278) ? c/s  		 / Progress:		31% (1320) ? c/s  		 - Progress:		32% (1363) ? c/s  		 \ Progress:		33% (1405) ? c/s  		 | Progress:		34% (1448) ? c/s  		 / Progress:		35% (1490) ? c/s  		 - Progress:		36% (1533) ? c/s  		 \ Progress:		37% (1576) ? c/s  		 | Progress:		38% (1618) ? c/s  		 / Progress:		39% (1661) ? c/s  		 - Progress:		40% (1703) ? c/s  		 \ Progress:		41% (1746) ? c/s  		 | Progress:		42% (1788) ? c/s  		 / Progress:		43% (1831) ? c/s  		 - Progress:		44% (1874) ? c/s  		 \ Progress:		45% (1916) ? c/s  		 | Progress:		46% (1959) ? c/s  		 / Progress:		47% (2001) ? c/s  		 - Progress:		48% (2044) ? c/s  		 \ Progress:		49% (2086) ? c/s  		 | Progress:		50% (2129) ? c/s  		 / Progress:		51% (2172) ? c/s  		 - Progress:		52% (2214) ? c/s  		 \ Progress:		53% (2257) ? c/s  		 | Progress:		54% (2299) ? c/s  		 / Progress:		55% (2342) ? c/s  		 - Progress:		56% (2384) ? c/s  		 \ Progress:		57% (2427) ? c/s  		 | Progress:		58% (2470) ? c/s  		 / Progress:		59% (2512) ? c/s  		 - Progress:		60% (2555) ? c/s  		 \ Progress:		61% (2597) ? c/s  		 | Progress:		62% (2640) ? c/s  		 / Progress:		63% (2682) ? c/s  		 - Progress:		64% (2725) ? c/s  		 \ Progress:		65% (2768) ? c/s  		 | Progress:		66% (2810) ? c/s  		 / Progress:		67% (2853) ? c/s  		 - Progress:		68% (2895) ? c/s  		 \ Progress:		69% (2938) ? c/s  		 | Progress:		70% (2980) ? c/s  		 / Progress:		71% (3023) ? c/s  		 - Progress:		72% (3066) ? c/s  		 \ Progress:		73% (3108) ? c/s  		 | Progress:		74% (3151) ? c/s  		 / Progress:		75% (3193) ? c/s  		 - Progress:		76% (3236) ? c/s  		 \ Progress:		77% (3278) ? c/s  		 | Progress:		78% (3321) ? c/s  		 / Progress:		79% (3364) ? c/s  		 - Progress:		80% (3406) ? c/s  		 \ Progress:		81% (3449) ? c/s  		 | Progress:		82% (3491) ? c/s  		 / Progress:		83% (3534) ? c/s  		 - Progress:		84% (3576) ? c/s  		 \ Progress:		85% (3619) ? c/s  		 | Progress:		86% (3662) ? c/s  		 / Progress:		87% (3704) ? c/s  		 - Progress:		88% (3747) ? c/s  		 \ Progress:		89% (3789) ? c/s  		 | Progress:		90% (3832) ? c/s  		 / Progress:		91% (3874) ? c/s  		 - Progress:		92% (3917) ? c/s  		 \ Progress:		93% (3960) ? c/s  		 | Progress:		94% (4002) ? c/s  		 / Progress:		95% (4045) ? c/s  		 - Progress:		96% (4087) ? c/s  		 \ Progress:		97% (4130) ? c/s  		 | Progress:		98% (4172) ? c/s  		 / Progress:		99% (4215) ? c/s  		 * Time:    		Compressing the database took 0.033802 seconds.		
 * Result:		(79a,49u,2139,14201,2274,16475)
** Writing FIC database to file
 * File:		train14.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-23d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		1182
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(80a,0u,2030,11528,1142,12669)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (12) ? c/s  		 | Progress:		2% (24) ? c/s  		 / Progress:		3% (36) ? c/s  		 - Progress:		4% (48) ? c/s  		 \ Progress:		5% (60) ? c/s  		 | Progress:		6% (71) ? c/s  		 / Progress:		7% (83) ? c/s  		 - Progress:		8% (95) ? c/s  		 \ Progress:		9% (107) ? c/s  		 | Progress:		10% (119) ? c/s  		 / Progress:		11% (131) ? c/s  		 - Progress:		12% (142) ? c/s  		 \ Progress:		13% (154) ? c/s  		 | Progress:		14% (166) ? c/s  		 / Progress:		15% (178) ? c/s  		 - Progress:		16% (190) ? c/s  		 \ Progress:		17% (201) ? c/s  		 | Progress:		18% (213) ? c/s  		 / Progress:		19% (225) ? c/s  		 - Progress:		20% (237) ? c/s  		 \ Progress:		21% (249) ? c/s  		 | Progress:		22% (261) ? c/s  		 / Progress:		23% (272) ? c/s  		 - Progress:		24% (284) ? c/s  		 \ Progress:		25% (296) ? c/s  		 | Progress:		26% (308) ? c/s  		 / Progress:		27% (320) ? c/s  		 - Progress:		28% (331) ? c/s  		 \ Progress:		29% (343) ? c/s  		 | Progress:		30% (355) ? c/s  		 / Progress:		31% (367) ? c/s  		 - Progress:		32% (379) ? c/s  		 \ Progress:		33% (391) ? c/s  		 | Progress:		34% (402) ? c/s  		 / Progress:		35% (414) ? c/s  		 - Progress:		36% (426) ? c/s  		 \ Progress:		37% (438) ? c/s  		 | Progress:		38% (450) ? c/s  		 / Progress:		39% (461) ? c/s  		 - Progress:		40% (473) ? c/s  		 \ Progress:		41% (485) ? c/s  		 | Progress:		42% (497) ? c/s  		 / Progress:		43% (509) ? c/s  		 - Progress:		44% (521) ? c/s  		 \ Progress:		45% (532) ? c/s  		 | Progress:		46% (544) ? c/s  		 / Progress:		47% (556) ? c/s  		 - Progress:		48% (568) ? c/s  		 \ Progress:		49% (580) ? c/s  		 | Progress:		50% (591) ? c/s  		 / Progress:		51% (603) ? c/s  		 - Progress:		52% (615) ? c/s  		 \ Progress:		53% (627) ? c/s  		 | Progress:		54% (639) ? c/s  		 / Progress:		55% (651) ? c/s  		 - Progress:		56% (662) ? c/s  		 \ Progress:		57% (674) ? c/s  		 | Progress:		58% (686) ? c/s  		 / Progress:		59% (698) ? c/s  		 - Progress:		60% (710) ? c/s  		 \ Progress:		61% (722) ? c/s  		 | Progress:		62% (733) ? c/s  		 / Progress:		63% (745) ? c/s  		 - Progress:		64% (757) ? c/s  		 \ Progress:		65% (769) ? c/s  		 | Progress:		66% (781) ? c/s  		 / Progress:		67% (792) ? c/s  		 - Progress:		68% (804) ? c/s  		 \ Progress:		69% (816) ? c/s  		 | Progress:		70% (828) ? c/s  		 / Progress:		71% (840) ? c/s  		 - Progress:		72% (852) ? c/s  		 \ Progress:		73% (863) ? c/s  		 | Progress:		74% (875) ? c/s  		 / Progress:		75% (887) ? c/s  		 - Progress:		76% (899) ? c/s  		 \ Progress:		77% (911) ? c/s  		 | Progress:		78% (922) ? c/s  		 / Progress:		79% (934) ? c/s  		 - Progress:		80% (946) ? c/s  		 \ Progress:		81% (958) ? c/s  		 | Progress:		82% (970) ? c/s  		 / Progress:		83% (982) ? c/s  		 - Progress:		84% (993) ? c/s  		 \ Progress:		85% (1005) ? c/s  		 | Progress:		86% (1017) ? c/s  		 / Progress:		87% (1029) ? c/s  		 - Progress:		88% (1041) ? c/s  		 \ Progress:		89% (1052) ? c/s  		 | Progress:		90% (1064) ? c/s  		 / Progress:		91% (1076) ? c/s  		 - Progress:		92% (1088) ? c/s  		 \ Progress:		93% (1100) ? c/s  		 | Progress:		94% (1112) ? c/s  		 / Progress:		95% (1123) ? c/s  		 - Progress:		96% (1135) ? c/s  		 \ Progress:		97% (1147) ? c/s  		 | Progress:		98% (1159) ? c/s  		 / Progress:		99% (1171) ? c/s  		 * Time:    		Compressing the database took 0.011000 seconds.		
 * Result:		(78a,28u,1342,8547,1723,10270)
 * Creating:			fold 6
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 6
** Writing FIC database to file
 * File:		train5.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-23d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		4594
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(81a,0u,3529,20076,1172,21247)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (46) ? c/s  		 | Progress:		2% (92) ? c/s  		 / Progress:		3% (138) ? c/s  		 - Progress:		4% (184) ? c/s  		 \ Progress:		5% (230) ? c/s  		 | Progress:		6% (276) ? c/s  		 / Progress:		7% (322) ? c/s  		 - Progress:		8% (368) ? c/s  		 \ Progress:		9% (414) ? c/s  		 | Progress:		10% (460) ? c/s  		 / Progress:		11% (506) ? c/s  		 - Progress:		12% (552) ? c/s  		 \ Progress:		13% (598) ? c/s  		 | Progress:		14% (644) ? c/s  		 / Progress:		15% (690) ? c/s  		 - Progress:		16% (736) ? c/s  		 \ Progress:		17% (781) ? c/s  		 | Progress:		18% (827) ? c/s  		 / Progress:		19% (873) ? c/s  		 - Progress:		20% (919) ? c/s  		 \ Progress:		21% (965) ? c/s  		 | Progress:		22% (1011) ? c/s  		 / Progress:		23% (1057) ? c/s  		 - Progress:		24% (1103) ? c/s  		 \ Progress:		25% (1149) ? c/s  		 | Progress:		26% (1195) ? c/s  		 / Progress:		27% (1241) ? c/s  		 - Progress:		28% (1287) ? c/s  		 \ Progress:		29% (1333) ? c/s  		 | Progress:		30% (1379) ? c/s  		 / Progress:		31% (1425) ? c/s  		 - Progress:		32% (1471) ? c/s  		 \ Progress:		33% (1517) ? c/s  		 | Progress:		34% (1562) ? c/s  		 / Progress:		35% (1608) ? c/s  		 - Progress:		36% (1654) ? c/s  		 \ Progress:		37% (1700) ? c/s  		 | Progress:		38% (1746) ? c/s  		 / Progress:		39% (1792) ? c/s  		 - Progress:		40% (1838) ? c/s  		 \ Progress:		41% (1884) ? c/s  		 | Progress:		42% (1930) ? c/s  		 / Progress:		43% (1976) ? c/s  		 - Progress:		44% (2022) ? c/s  		 \ Progress:		45% (2068) ? c/s  		 | Progress:		46% (2114) ? c/s  		 / Progress:		47% (2160) ? c/s  		 - Progress:		48% (2206) ? c/s  		 \ Progress:		49% (2252) ? c/s  		 | Progress:		50% (2297) ? c/s  		 / Progress:		51% (2343) ? c/s  		 - Progress:		52% (2389) ? c/s  		 \ Progress:		53% (2435) ? c/s  		 | Progress:		54% (2481) ? c/s  		 / Progress:		55% (2527) ? c/s  		 - Progress:		56% (2573) ? c/s  		 \ Progress:		57% (2619) ? c/s  		 | Progress:		58% (2665) ? c/s  		 / Progress:		59% (2711) ? c/s  		 - Progress:		60% (2757) ? c/s  		 \ Progress:		61% (2803) ? c/s  		 | Progress:		62% (2849) ? c/s  		 / Progress:		63% (2895) ? c/s  		 - Progress:		64% (2941) ? c/s  		 \ Progress:		65% (2987) ? c/s  		 | Progress:		66% (3033) ? c/s  		 / Progress:		67% (3078) ? c/s  		 - Progress:		68% (3124) ? c/s  		 \ Progress:		69% (3170) ? c/s  		 | Progress:		70% (3216) ? c/s  		 / Progress:		71% (3262) ? c/s  		 - Progress:		72% (3308) ? c/s  		 \ Progress:		73% (3354) ? c/s  		 | Progress:		74% (3400) ? c/s  		 / Progress:		75% (3446) ? c/s  		 - Progress:		76% (3492) ? c/s  		 \ Progress:		77% (3538) ? c/s  		 | Progress:		78% (3584) ? c/s  		 / Progress:		79% (3630) ? c/s  		 - Progress:		80% (3676) ? c/s  		 \ Progress:		81% (3722) ? c/s  		 | Progress:		82% (3768) ? c/s  		 / Progress:		83% (3814) ? c/s  		 - Progress:		84% (3859) ? c/s  		 \ Progress:		85% (3905) ? c/s  		 | Progress:		86% (3951) ? c/s  		 / Progress:		87% (3997) ? c/s  		 - Progress:		88% (4043) ? c/s  		 \ Progress:		89% (4089) ? c/s  		 | Progress:		90% (4135) ? c/s  		 / Progress:		91% (4181) ? c/s  		 - Progress:		92% (4227) ? c/s  		 \ Progress:		93% (4273) ? c/s  		 | Progress:		94% (4319) ? c/s  		 / Progress:		95% (4365) ? c/s  		 - Progress:		96% (4411) ? c/s  		 \ Progress:		97% (4457) ? c/s  		 | Progress:		98% (4503) ? c/s  		 / Progress:		99% (4549) ? c/s  		 * Time:    		Compressing the database took 0.037236 seconds.		
 * Result:		(78a,49u,2134,14145,2266,16411)
** Writing FIC database to file
 * File:		train14.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-23d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		1122
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(78a,0u,2001,11317,1101,12418)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (12) ? c/s  		 | Progress:		2% (23) ? c/s  		 / Progress:		3% (34) ? c/s  		 - Progress:		4% (45) ? c/s  		 \ Progress:		5% (57) ? c/s  		 | Progress:		6% (68) ? c/s  		 / Progress:		7% (79) ? c/s  		 - Progress:		8% (90) ? c/s  		 \ Progress:		9% (101) ? c/s  		 | Progress:		10% (113) ? c/s  		 / Progress:		11% (124) ? c/s  		 - Progress:		12% (135) ? c/s  		 \ Progress:		13% (146) ? c/s  		 | Progress:		14% (158) ? c/s  		 / Progress:		15% (169) ? c/s  		 - Progress:		16% (180) ? c/s  		 \ Progress:		17% (191) ? c/s  		 | Progress:		18% (202) ? c/s  		 / Progress:		19% (214) ? c/s  		 - Progress:		20% (225) ? c/s  		 \ Progress:		21% (236) ? c/s  		 | Progress:		22% (247) ? c/s  		 / Progress:		23% (259) ? c/s  		 - Progress:		24% (270) ? c/s  		 \ Progress:		25% (281) ? c/s  		 | Progress:		26% (292) ? c/s  		 / Progress:		27% (303) ? c/s  		 - Progress:		28% (315) ? c/s  		 \ Progress:		29% (326) ? c/s  		 | Progress:		30% (337) ? c/s  		 / Progress:		31% (348) ? c/s  		 - Progress:		32% (360) ? c/s  		 \ Progress:		33% (371) ? c/s  		 | Progress:		34% (382) ? c/s  		 / Progress:		35% (393) ? c/s  		 - Progress:		36% (404) ? c/s  		 \ Progress:		37% (416) ? c/s  		 | Progress:		38% (427) ? c/s  		 / Progress:		39% (438) ? c/s  		 - Progress:		40% (449) ? c/s  		 \ Progress:		41% (461) ? c/s  		 | Progress:		42% (472) ? c/s  		 / Progress:		43% (483) ? c/s  		 - Progress:		44% (494) ? c/s  		 \ Progress:		45% (505) ? c/s  		 | Progress:		46% (517) ? c/s  		 / Progress:		47% (528) ? c/s  		 - Progress:		48% (539) ? c/s  		 \ Progress:		49% (550) ? c/s  		 | Progress:		50% (561) ? c/s  		 / Progress:		51% (573) ? c/s  		 - Progress:		52% (584) ? c/s  		 \ Progress:		53% (595) ? c/s  		 | Progress:		54% (606) ? c/s  		 / Progress:		55% (618) ? c/s  		 - Progress:		56% (629) ? c/s  		 \ Progress:		57% (640) ? c/s  		 | Progress:		58% (651) ? c/s  		 / Progress:		59% (662) ? c/s  		 - Progress:		60% (674) ? c/s  		 \ Progress:		61% (685) ? c/s  		 | Progress:		62% (696) ? c/s  		 / Progress:		63% (707) ? c/s  		 - Progress:		64% (719) ? c/s  		 \ Progress:		65% (730) ? c/s  		 | Progress:		66% (741) ? c/s  		 / Progress:		67% (752) ? c/s  		 - Progress:		68% (763) ? c/s  		 \ Progress:		69% (775) ? c/s  		 | Progress:		70% (786) ? c/s  		 / Progress:		71% (797) ? c/s  		 - Progress:		72% (808) ? c/s  		 \ Progress:		73% (820) ? c/s  		 | Progress:		74% (831) ? c/s  		 / Progress:		75% (842) ? c/s  		 - Progress:		76% (853) ? c/s  		 \ Progress:		77% (864) ? c/s  		 | Progress:		78% (876) ? c/s  		 / Progress:		79% (887) ? c/s  		 - Progress:		80% (898) ? c/s  		 \ Progress:		81% (909) ? c/s  		 | Progress:		82% (921) ? c/s  		 / Progress:		83% (932) ? c/s  		 - Progress:		84% (943) ? c/s  		 \ Progress:		85% (954) ? c/s  		 | Progress:		86% (965) ? c/s  		 / Progress:		87% (977) ? c/s  		 - Progress:		88% (988) ? c/s  		 \ Progress:		89% (999) ? c/s  		 | Progress:		90% (1010) ? c/s  		 / Progress:		91% (1022) ? c/s  		 - Progress:		92% (1033) ? c/s  		 \ Progress:		93% (1044) ? c/s  		 | Progress:		94% (1055) ? c/s  		 / Progress:		95% (1066) ? c/s  		 - Progress:		96% (1078) ? c/s  		 \ Progress:		97% (1089) ? c/s  		 | Progress:		98% (1100) ? c/s  		 / Progress:		99% (1111) ? c/s  		 * Time:    		Compressing the database took 0.009799 seconds.		
 * Result:		(76a,22u,1368,8559,1576,10135)
 * Creating:			fold 7
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 7
** Writing FIC database to file
 * File:		train5.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-23d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		4986
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(81a,0u,3555,20173,1178,21351)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (50) ? c/s  		 | Progress:		2% (100) ? c/s  		 / Progress:		3% (150) ? c/s  		 - Progress:		4% (200) ? c/s  		 \ Progress:		5% (250) ? c/s  		 | Progress:		6% (300) ? c/s  		 / Progress:		7% (350) ? c/s  		 - Progress:		8% (399) ? c/s  		 \ Progress:		9% (449) ? c/s  		 | Progress:		10% (499) ? c/s  		 / Progress:		11% (549) ? c/s  		 - Progress:		12% (599) ? c/s  		 \ Progress:		13% (649) ? c/s  		 | Progress:		14% (699) ? c/s  		 / Progress:		15% (748) ? c/s  		 - Progress:		16% (798) ? c/s  		 \ Progress:		17% (848) ? c/s  		 | Progress:		18% (898) ? c/s  		 / Progress:		19% (948) ? c/s  		 - Progress:		20% (998) ? c/s  		 \ Progress:		21% (1048) ? c/s  		 | Progress:		22% (1097) ? c/s  		 / Progress:		23% (1147) ? c/s  		 - Progress:		24% (1197) ? c/s  		 \ Progress:		25% (1247) ? c/s  		 | Progress:		26% (1297) ? c/s  		 / Progress:		27% (1347) ? c/s  		 - Progress:		28% (1397) ? c/s  		 \ Progress:		29% (1446) ? c/s  		 | Progress:		30% (1496) ? c/s  		 / Progress:		31% (1546) ? c/s  		 - Progress:		32% (1596) ? c/s  		 \ Progress:		33% (1646) ? c/s  		 | Progress:		34% (1696) ? c/s  		 / Progress:		35% (1746) ? c/s  		 - Progress:		36% (1795) ? c/s  		 \ Progress:		37% (1845) ? c/s  		 | Progress:		38% (1895) ? c/s  		 / Progress:		39% (1945) ? c/s  		 - Progress:		40% (1995) ? c/s  		 \ Progress:		41% (2045) ? c/s  		 | Progress:		42% (2095) ? c/s  		 / Progress:		43% (2144) ? c/s  		 - Progress:		44% (2194) ? c/s  		 \ Progress:		45% (2244) ? c/s  		 | Progress:		46% (2294) ? c/s  		 / Progress:		47% (2344) ? c/s  		 - Progress:		48% (2394) ? c/s  		 \ Progress:		49% (2444) ? c/s  		 | Progress:		50% (2493) ? c/s  		 / Progress:		51% (2543) ? c/s  		 - Progress:		52% (2593) ? c/s  		 \ Progress:		53% (2643) ? c/s  		 | Progress:		54% (2693) ? c/s  		 / Progress:		55% (2743) ? c/s  		 - Progress:		56% (2793) ? c/s  		 \ Progress:		57% (2843) ? c/s  		 | Progress:		58% (2892) ? c/s  		 / Progress:		59% (2942) ? c/s  		 - Progress:		60% (2992) ? c/s  		 \ Progress:		61% (3042) ? c/s  		 | Progress:		62% (3092) ? c/s  		 / Progress:		63% (3142) ? c/s  		 - Progress:		64% (3192) ? c/s  		 \ Progress:		65% (3241) ? c/s  		 | Progress:		66% (3291) ? c/s  		 / Progress:		67% (3341) ? c/s  		 - Progress:		68% (3391) ? c/s  		 \ Progress:		69% (3441) ? c/s  		 | Progress:		70% (3491) ? c/s  		 / Progress:		71% (3541) ? c/s  		 - Progress:		72% (3590) ? c/s  		 \ Progress:		73% (3640) ? c/s  		 | Progress:		74% (3690) ? c/s  		 / Progress:		75% (3740) ? c/s  		 - Progress:		76% (3790) ? c/s  		 \ Progress:		77% (3840) ? c/s  		 | Progress:		78% (3890) ? c/s  		 / Progress:		79% (3939) ? c/s  		 - Progress:		80% (3989) ? c/s  		 \ Progress:		81% (4039) ? c/s  		 | Progress:		82% (4089) ? c/s  		 / Progress:		83% (4139) ? c/s  		 - Progress:		84% (4189) ? c/s  		 \ Progress:		85% (4239) ? c/s  		 | Progress:		86% (4288) ? c/s  		 / Progress:		87% (4338) ? c/s  		 - Progress:		88% (4388) ? c/s  		 \ Progress:		89% (4438) ? c/s  		 | Progress:		90% (4488) ? c/s  		 / Progress:		91% (4538) ? c/s  		 - Progress:		92% (4588) ? c/s  		 \ Progress:		93% (4637) ? c/s  		 | Progress:		94% (4687) ? c/s  		 / Progress:		95% (4737) ? c/s  		 - Progress:		96% (4787) ? c/s  		 \ Progress:		97% (4837) ? c/s  		 | Progress:		98% (4887) ? c/s  		 / Progress:		99% (4937) ? c/s  		 * Time:    		Compressing the database took 0.042215 seconds.		
 * Result:		(78a,57u,2075,13977,2452,16429)
** Writing FIC database to file
 * File:		train14.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-23d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		1222
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(80a,0u,2016,11444,1143,12586)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (13) ? c/s  		 | Progress:		2% (25) ? c/s  		 / Progress:		3% (37) ? c/s  		 - Progress:		4% (49) ? c/s  		 \ Progress:		5% (62) ? c/s  		 | Progress:		6% (74) ? c/s  		 / Progress:		7% (86) ? c/s  		 - Progress:		8% (98) ? c/s  		 \ Progress:		9% (110) ? c/s  		 | Progress:		10% (123) ? c/s  		 / Progress:		11% (135) ? c/s  		 - Progress:		12% (147) ? c/s  		 \ Progress:		13% (159) ? c/s  		 | Progress:		14% (172) ? c/s  		 / Progress:		15% (184) ? c/s  		 - Progress:		16% (196) ? c/s  		 \ Progress:		17% (208) ? c/s  		 | Progress:		18% (220) ? c/s  		 / Progress:		19% (233) ? c/s  		 - Progress:		20% (245) ? c/s  		 \ Progress:		21% (257) ? c/s  		 | Progress:		22% (269) ? c/s  		 / Progress:		23% (282) ? c/s  		 - Progress:		24% (294) ? c/s  		 \ Progress:		25% (306) ? c/s  		 | Progress:		26% (318) ? c/s  		 / Progress:		27% (330) ? c/s  		 - Progress:		28% (343) ? c/s  		 \ Progress:		29% (355) ? c/s  		 | Progress:		30% (367) ? c/s  		 / Progress:		31% (379) ? c/s  		 - Progress:		32% (392) ? c/s  		 \ Progress:		33% (404) ? c/s  		 | Progress:		34% (416) ? c/s  		 / Progress:		35% (428) ? c/s  		 - Progress:		36% (440) ? c/s  		 \ Progress:		37% (453) ? c/s  		 | Progress:		38% (465) ? c/s  		 / Progress:		39% (477) ? c/s  		 - Progress:		40% (489) ? c/s  		 \ Progress:		41% (502) ? c/s  		 | Progress:		42% (514) ? c/s  		 / Progress:		43% (526) ? c/s  		 - Progress:		44% (538) ? c/s  		 \ Progress:		45% (550) ? c/s  		 | Progress:		46% (563) ? c/s  		 / Progress:		47% (575) ? c/s  		 - Progress:		48% (587) ? c/s  		 \ Progress:		49% (599) ? c/s  		 | Progress:		50% (611) ? c/s  		 / Progress:		51% (624) ? c/s  		 - Progress:		52% (636) ? c/s  		 \ Progress:		53% (648) ? c/s  		 | Progress:		54% (660) ? c/s  		 / Progress:		55% (673) ? c/s  		 - Progress:		56% (685) ? c/s  		 \ Progress:		57% (697) ? c/s  		 | Progress:		58% (709) ? c/s  		 / Progress:		59% (721) ? c/s  		 - Progress:		60% (734) ? c/s  		 \ Progress:		61% (746) ? c/s  		 | Progress:		62% (758) ? c/s  		 / Progress:		63% (770) ? c/s  		 - Progress:		64% (783) ? c/s  		 \ Progress:		65% (795) ? c/s  		 | Progress:		66% (807) ? c/s  		 / Progress:		67% (819) ? c/s  		 - Progress:		68% (831) ? c/s  		 \ Progress:		69% (844) ? c/s  		 | Progress:		70% (856) ? c/s  		 / Progress:		71% (868) ? c/s  		 - Progress:		72% (880) ? c/s  		 \ Progress:		73% (893) ? c/s  		 | Progress:		74% (905) ? c/s  		 / Progress:		75% (917) ? c/s  		 - Progress:		76% (929) ? c/s  		 \ Progress:		77% (941) ? c/s  		 | Progress:		78% (954) ? c/s  		 / Progress:		79% (966) ? c/s  		 - Progress:		80% (978) ? c/s  		 \ Progress:		81% (990) ? c/s  		 | Progress:		82% (1003) ? c/s  		 / Progress:		83% (1015) ? c/s  		 - Progress:		84% (1027) ? c/s  		 \ Progress:		85% (1039) ? c/s  		 | Progress:		86% (1051) ? c/s  		 / Progress:		87% (1064) ? c/s  		 - Progress:		88% (1076) ? c/s  		 \ Progress:		89% (1088) ? c/s  		 | Progress:		90% (1100) ? c/s  		 / Progress:		91% (1113) ? c/s  		 - Progress:		92% (1125) ? c/s  		 \ Progress:		93% (1137) ? c/s  		 | Progress:		94% (1149) ? c/s  		 / Progress:		95% (1161) ? c/s  		 - Progress:		96% (1174) ? c/s  		 \ Progress:		97% (1186) ? c/s  		 | Progress:		98% (1198) ? c/s  		 / Progress:		99% (1210) ? c/s  		 * Time:    		Compressing the database took 0.013194 seconds.		
 * Result:		(77a,23u,1358,8566,1617,10183)
 * Creating:			fold 8
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 8
** Writing FIC database to file
 * File:		train5.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-23d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		4634
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(80a,0u,3516,19959,1154,21113)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (47) ? c/s  		 | Progress:		2% (93) ? c/s  		 / Progress:		3% (140) ? c/s  		 - Progress:		4% (186) ? c/s  		 \ Progress:		5% (232) ? c/s  		 | Progress:		6% (279) ? c/s  		 / Progress:		7% (325) ? c/s  		 - Progress:		8% (371) ? c/s  		 \ Progress:		9% (418) ? c/s  		 | Progress:		10% (464) ? c/s  		 / Progress:		11% (510) ? c/s  		 - Progress:		12% (557) ? c/s  		 \ Progress:		13% (603) ? c/s  		 | Progress:		14% (649) ? c/s  		 / Progress:		15% (696) ? c/s  		 - Progress:		16% (742) ? c/s  		 \ Progress:		17% (788) ? c/s  		 | Progress:		18% (835) ? c/s  		 / Progress:		19% (881) ? c/s  		 - Progress:		20% (927) ? c/s  		 \ Progress:		21% (974) ? c/s  		 | Progress:		22% (1020) ? c/s  		 / Progress:		23% (1066) ? c/s  		 - Progress:		24% (1113) ? c/s  		 \ Progress:		25% (1159) ? c/s  		 | Progress:		26% (1205) ? c/s  		 / Progress:		27% (1252) ? c/s  		 - Progress:		28% (1298) ? c/s  		 \ Progress:		29% (1344) ? c/s  		 | Progress:		30% (1391) ? c/s  		 / Progress:		31% (1437) ? c/s  		 - Progress:		32% (1483) ? c/s  		 \ Progress:		33% (1530) ? c/s  		 | Progress:		34% (1576) ? c/s  		 / Progress:		35% (1622) ? c/s  		 - Progress:		36% (1669) ? c/s  		 \ Progress:		37% (1715) ? c/s  		 | Progress:		38% (1761) ? c/s  		 / Progress:		39% (1808) ? c/s  		 - Progress:		40% (1854) ? c/s  		 \ Progress:		41% (1900) ? c/s  		 | Progress:		42% (1947) ? c/s  		 / Progress:		43% (1993) ? c/s  		 - Progress:		44% (2039) ? c/s  		 \ Progress:		45% (2086) ? c/s  		 | Progress:		46% (2132) ? c/s  		 / Progress:		47% (2178) ? c/s  		 - Progress:		48% (2225) ? c/s  		 \ Progress:		49% (2271) ? c/s  		 | Progress:		50% (2317) ? c/s  		 / Progress:		51% (2364) ? c/s  		 - Progress:		52% (2410) ? c/s  		 \ Progress:		53% (2457) ? c/s  		 | Progress:		54% (2503) ? c/s  		 / Progress:		55% (2549) ? c/s  		 - Progress:		56% (2596) ? c/s  		 \ Progress:		57% (2642) ? c/s  		 | Progress:		58% (2688) ? c/s  		 / Progress:		59% (2735) ? c/s  		 - Progress:		60% (2781) ? c/s  		 \ Progress:		61% (2827) ? c/s  		 | Progress:		62% (2874) ? c/s  		 / Progress:		63% (2920) ? c/s  		 - Progress:		64% (2966) ? c/s  		 \ Progress:		65% (3013) ? c/s  		 | Progress:		66% (3059) ? c/s  		 / Progress:		67% (3105) ? c/s  		 - Progress:		68% (3152) ? c/s  		 \ Progress:		69% (3198) ? c/s  		 | Progress:		70% (3244) ? c/s  		 / Progress:		71% (3291) ? c/s  		 - Progress:		72% (3337) ? c/s  		 \ Progress:		73% (3383) ? c/s  		 | Progress:		74% (3430) ? c/s  		 / Progress:		75% (3476) ? c/s  		 - Progress:		76% (3522) ? c/s  		 \ Progress:		77% (3569) ? c/s  		 | Progress:		78% (3615) ? c/s  		 / Progress:		79% (3661) ? c/s  		 - Progress:		80% (3708) ? c/s  		 \ Progress:		81% (3754) ? c/s  		 | Progress:		82% (3800) ? c/s  		 / Progress:		83% (3847) ? c/s  		 - Progress:		84% (3893) ? c/s  		 \ Progress:		85% (3939) ? c/s  		 | Progress:		86% (3986) ? c/s  		 / Progress:		87% (4032) ? c/s  		 - Progress:		88% (4078) ? c/s  		 \ Progress:		89% (4125) ? c/s  		 | Progress:		90% (4171) ? c/s  		 / Progress:		91% (4217) ? c/s  		 - Progress:		92% (4264) ? c/s  		 \ Progress:		93% (4310) ? c/s  		 | Progress:		94% (4356) ? c/s  		 / Progress:		95% (4403) ? c/s  		 - Progress:		96% (4449) ? c/s  		 \ Progress:		97% (4495) ? c/s  		 | Progress:		98% (4542) ? c/s  		 / Progress:		99% (4588) ? c/s  		 * Time:    		Compressing the database took 0.033411 seconds.		
 * Result:		(79a,56u,2044,13759,2457,16216)
** Writing FIC database to file
 * File:		train14.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-23d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		1300
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(80a,0u,2041,11571,1147,12717)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (13) ? c/s  		 | Progress:		2% (26) ? c/s  		 / Progress:		3% (39) ? c/s  		 - Progress:		4% (52) ? c/s  		 \ Progress:		5% (65) ? c/s  		 | Progress:		6% (78) ? c/s  		 / Progress:		7% (91) ? c/s  		 - Progress:		8% (104) ? c/s  		 \ Progress:		9% (117) ? c/s  		 | Progress:		10% (130) ? c/s  		 / Progress:		11% (143) ? c/s  		 - Progress:		12% (156) ? c/s  		 \ Progress:		13% (169) ? c/s  		 | Progress:		14% (182) ? c/s  		 / Progress:		15% (195) ? c/s  		 - Progress:		16% (208) ? c/s  		 \ Progress:		17% (221) ? c/s  		 | Progress:		18% (234) ? c/s  		 / Progress:		19% (247) ? c/s  		 - Progress:		20% (260) ? c/s  		 \ Progress:		21% (273) ? c/s  		 | Progress:		22% (286) ? c/s  		 / Progress:		23% (299) ? c/s  		 - Progress:		24% (312) ? c/s  		 \ Progress:		25% (325) ? c/s  		 | Progress:		26% (338) ? c/s  		 / Progress:		27% (351) ? c/s  		 - Progress:		28% (364) ? c/s  		 \ Progress:		29% (377) ? c/s  		 | Progress:		30% (390) ? c/s  		 / Progress:		31% (403) ? c/s  		 - Progress:		32% (416) ? c/s  		 \ Progress:		33% (429) ? c/s  		 | Progress:		34% (442) ? c/s  		 / Progress:		35% (455) ? c/s  		 - Progress:		36% (468) ? c/s  		 \ Progress:		37% (481) ? c/s  		 | Progress:		38% (494) ? c/s  		 / Progress:		39% (507) ? c/s  		 - Progress:		40% (520) ? c/s  		 \ Progress:		41% (533) ? c/s  		 | Progress:		42% (546) ? c/s  		 / Progress:		43% (559) ? c/s  		 - Progress:		44% (572) ? c/s  		 \ Progress:		45% (585) ? c/s  		 | Progress:		46% (598) ? c/s  		 / Progress:		47% (611) ? c/s  		 - Progress:		48% (624) ? c/s  		 \ Progress:		49% (637) ? c/s  		 | Progress:		50% (650) ? c/s  		 / Progress:		51% (663) ? c/s  		 - Progress:		52% (676) ? c/s  		 \ Progress:		53% (689) ? c/s  		 | Progress:		54% (702) ? c/s  		 / Progress:		55% (715) ? c/s  		 - Progress:		56% (728) ? c/s  		 \ Progress:		57% (741) ? c/s  		 | Progress:		58% (754) ? c/s  		 / Progress:		59% (767) ? c/s  		 - Progress:		60% (780) ? c/s  		 \ Progress:		61% (793) ? c/s  		 | Progress:		62% (806) ? c/s  		 / Progress:		63% (819) ? c/s  		 - Progress:		64% (832) ? c/s  		 \ Progress:		65% (845) ? c/s  		 | Progress:		66% (858) ? c/s  		 / Progress:		67% (871) ? c/s  		 - Progress:		68% (884) ? c/s  		 \ Progress:		69% (897) ? c/s  		 | Progress:		70% (910) ? c/s  		 / Progress:		71% (923) ? c/s  		 - Progress:		72% (936) ? c/s  		 \ Progress:		73% (949) ? c/s  		 | Progress:		74% (962) ? c/s  		 / Progress:		75% (975) ? c/s  		 - Progress:		76% (988) ? c/s  		 \ Progress:		77% (1001) ? c/s  		 | Progress:		78% (1014) ? c/s  		 / Progress:		79% (1027) ? c/s  		 - Progress:		80% (1040) ? c/s  		 \ Progress:		81% (1053) ? c/s  		 | Progress:		82% (1066) ? c/s  		 / Progress:		83% (1079) ? c/s  		 - Progress:		84% (1092) ? c/s  		 \ Progress:		85% (1105) ? c/s  		 | Progress:		86% (1118) ? c/s  		 / Progress:		87% (1131) ? c/s  		 - Progress:		88% (1144) ? c/s  		 \ Progress:		89% (1157) ? c/s  		 | Progress:		90% (1170) ? c/s  		 / Progress:		91% (1183) ? c/s  		 - Progress:		92% (1196) ? c/s  		 \ Progress:		93% (1209) ? c/s  		 | Progress:		94% (1222) ? c/s  		 / Progress:		95% (1235) ? c/s  		 - Progress:		96% (1248) ? c/s  		 \ Progress:		97% (1261) ? c/s  		 | Progress:		98% (1274) ? c/s  		 / Progress:		99% (1287) ? c/s  		 * Time:    		Compressing the database took 0.010051 seconds.		
 * Result:		(78a,26u,1337,8507,1722,10229)
 * Creating:			fold 9
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 9
** Writing FIC database to file
 * File:		train5.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-23d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		4829
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(81a,0u,3558,20227,1173,21400)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (49) ? c/s  		 | Progress:		2% (97) ? c/s  		 / Progress:		3% (145) ? c/s  		 - Progress:		4% (194) ? c/s  		 \ Progress:		5% (242) ? c/s  		 | Progress:		6% (290) ? c/s  		 / Progress:		7% (339) ? c/s  		 - Progress:		8% (387) ? c/s  		 \ Progress:		9% (435) ? c/s  		 | Progress:		10% (483) ? c/s  		 / Progress:		11% (532) ? c/s  		 - Progress:		12% (580) ? c/s  		 \ Progress:		13% (628) ? c/s  		 | Progress:		14% (677) ? c/s  		 / Progress:		15% (725) ? c/s  		 - Progress:		16% (773) ? c/s  		 \ Progress:		17% (821) ? c/s  		 | Progress:		18% (870) ? c/s  		 / Progress:		19% (918) ? c/s  		 - Progress:		20% (966) ? c/s  		 \ Progress:		21% (1015) ? c/s  		 | Progress:		22% (1063) ? c/s  		 / Progress:		23% (1111) ? c/s  		 - Progress:		24% (1159) ? c/s  		 \ Progress:		25% (1208) ? c/s  		 | Progress:		26% (1256) ? c/s  		 / Progress:		27% (1304) ? c/s  		 - Progress:		28% (1353) ? c/s  		 \ Progress:		29% (1401) ? c/s  		 | Progress:		30% (1449) ? c/s  		 / Progress:		31% (1497) ? c/s  		 - Progress:		32% (1546) ? c/s  		 \ Progress:		33% (1594) ? c/s  		 | Progress:		34% (1642) ? c/s  		 / Progress:		35% (1691) ? c/s  		 - Progress:		36% (1739) ? c/s  		 \ Progress:		37% (1787) ? c/s  		 | Progress:		38% (1836) ? c/s  		 / Progress:		39% (1884) ? c/s  		 - Progress:		40% (1932) ? c/s  		 \ Progress:		41% (1980) ? c/s  		 | Progress:		42% (2029) ? c/s  		 / Progress:		43% (2077) ? c/s  		 - Progress:		44% (2125) ? c/s  		 \ Progress:		45% (2174) ? c/s  		 | Progress:		46% (2222) ? c/s  		 / Progress:		47% (2270) ? c/s  		 - Progress:		48% (2318) ? c/s  		 \ Progress:		49% (2367) ? c/s  		 | Progress:		50% (2415) ? c/s  		 / Progress:		51% (2463) ? c/s  		 - Progress:		52% (2512) ? c/s  		 \ Progress:		53% (2560) ? c/s  		 | Progress:		54% (2608) ? c/s  		 / Progress:		55% (2656) ? c/s  		 - Progress:		56% (2705) ? c/s  		 \ Progress:		57% (2753) ? c/s  		 | Progress:		58% (2801) ? c/s  		 / Progress:		59% (2850) ? c/s  		 - Progress:		60% (2898) ? c/s  		 \ Progress:		61% (2946) ? c/s  		 | Progress:		62% (2994) ? c/s  		 / Progress:		63% (3043) ? c/s  		 - Progress:		64% (3091) ? c/s  		 \ Progress:		65% (3139) ? c/s  		 | Progress:		66% (3188) ? c/s  		 / Progress:		67% (3236) ? c/s  		 - Progress:		68% (3284) ? c/s  		 \ Progress:		69% (3333) ? c/s  		 | Progress:		70% (3381) ? c/s  		 / Progress:		71% (3429) ? c/s  		 - Progress:		72% (3477) ? c/s  		 \ Progress:		73% (3526) ? c/s  		 | Progress:		74% (3574) ? c/s  		 / Progress:		75% (3622) ? c/s  		 - Progress:		76% (3671) ? c/s  		 \ Progress:		77% (3719) ? c/s  		 | Progress:		78% (3767) ? c/s  		 / Progress:		79% (3815) ? c/s  		 - Progress:		80% (3864) ? c/s  		 \ Progress:		81% (3912) ? c/s  		 | Progress:		82% (3960) ? c/s  		 / Progress:		83% (4009) ? c/s  		 - Progress:		84% (4057) ? c/s  		 \ Progress:		85% (4105) ? c/s  		 | Progress:		86% (4153) ? c/s  		 / Progress:		87% (4202) ? c/s  		 - Progress:		88% (4250) ? c/s  		 \ Progress:		89% (4298) ? c/s  		 | Progress:		90% (4347) ? c/s  		 / Progress:		91% (4395) ? c/s  		 - Progress:		92% (4443) ? c/s  		 \ Progress:		93% (4491) ? c/s  		 | Progress:		94% (4540) ? c/s  		 / Progress:		95% (4588) ? c/s  		 - Progress:		96% (4636) ? c/s  		 \ Progress:		97% (4685) ? c/s  		 | Progress:		98% (4733) ? c/s  		 / Progress:		99% (4781) ? c/s  		 * Time:    		Compressing the database took 0.030005 seconds.		
 * Result:		(79a,53u,2114,14166,2400,16566)
** Writing FIC database to file
 * File:		train14.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-23d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		1226
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(79a,0u,1984,11204,1128,12333)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (13) ? c/s  		 | Progress:		2% (25) ? c/s  		 / Progress:		3% (37) ? c/s  		 - Progress:		4% (50) ? c/s  		 \ Progress:		5% (62) ? c/s  		 | Progress:		6% (74) ? c/s  		 / Progress:		7% (86) ? c/s  		 - Progress:		8% (99) ? c/s  		 \ Progress:		9% (111) ? c/s  		 | Progress:		10% (123) ? c/s  		 / Progress:		11% (135) ? c/s  		 - Progress:		12% (148) ? c/s  		 \ Progress:		13% (160) ? c/s  		 | Progress:		14% (172) ? c/s  		 / Progress:		15% (184) ? c/s  		 - Progress:		16% (197) ? c/s  		 \ Progress:		17% (209) ? c/s  		 | Progress:		18% (221) ? c/s  		 / Progress:		19% (233) ? c/s  		 - Progress:		20% (246) ? c/s  		 \ Progress:		21% (258) ? c/s  		 | Progress:		22% (270) ? c/s  		 / Progress:		23% (282) ? c/s  		 - Progress:		24% (295) ? c/s  		 \ Progress:		25% (307) ? c/s  		 | Progress:		26% (319) ? c/s  		 / Progress:		27% (332) ? c/s  		 - Progress:		28% (344) ? c/s  		 \ Progress:		29% (356) ? c/s  		 | Progress:		30% (368) ? c/s  		 / Progress:		31% (381) ? c/s  		 - Progress:		32% (393) ? c/s  		 \ Progress:		33% (405) ? c/s  		 | Progress:		34% (417) ? c/s  		 / Progress:		35% (430) ? c/s  		 - Progress:		36% (442) ? c/s  		 \ Progress:		37% (454) ? c/s  		 | Progress:		38% (466) ? c/s  		 / Progress:		39% (479) ? c/s  		 - Progress:		40% (491) ? c/s  		 \ Progress:		41% (503) ? c/s  		 | Progress:		42% (515) ? c/s  		 / Progress:		43% (528) ? c/s  		 - Progress:		44% (540) ? c/s  		 \ Progress:		45% (552) ? c/s  		 | Progress:		46% (564) ? c/s  		 / Progress:		47% (577) ? c/s  		 - Progress:		48% (589) ? c/s  		 \ Progress:		49% (601) ? c/s  		 | Progress:		50% (613) ? c/s  		 / Progress:		51% (626) ? c/s  		 - Progress:		52% (638) ? c/s  		 \ Progress:		53% (650) ? c/s  		 | Progress:		54% (663) ? c/s  		 / Progress:		55% (675) ? c/s  		 - Progress:		56% (687) ? c/s  		 \ Progress:		57% (699) ? c/s  		 | Progress:		58% (712) ? c/s  		 / Progress:		59% (724) ? c/s  		 - Progress:		60% (736) ? c/s  		 \ Progress:		61% (748) ? c/s  		 | Progress:		62% (761) ? c/s  		 / Progress:		63% (773) ? c/s  		 - Progress:		64% (785) ? c/s  		 \ Progress:		65% (797) ? c/s  		 | Progress:		66% (810) ? c/s  		 / Progress:		67% (822) ? c/s  		 - Progress:		68% (834) ? c/s  		 \ Progress:		69% (846) ? c/s  		 | Progress:		70% (859) ? c/s  		 / Progress:		71% (871) ? c/s  		 - Progress:		72% (883) ? c/s  		 \ Progress:		73% (895) ? c/s  		 | Progress:		74% (908) ? c/s  		 / Progress:		75% (920) ? c/s  		 - Progress:		76% (932) ? c/s  		 \ Progress:		77% (945) ? c/s  		 | Progress:		78% (957) ? c/s  		 / Progress:		79% (969) ? c/s  		 - Progress:		80% (981) ? c/s  		 \ Progress:		81% (994) ? c/s  		 | Progress:		82% (1006) ? c/s  		 / Progress:		83% (1018) ? c/s  		 - Progress:		84% (1030) ? c/s  		 \ Progress:		85% (1043) ? c/s  		 | Progress:		86% (1055) ? c/s  		 / Progress:		87% (1067) ? c/s  		 - Progress:		88% (1079) ? c/s  		 \ Progress:		89% (1092) ? c/s  		 | Progress:		90% (1104) ? c/s  		 / Progress:		91% (1116) ? c/s  		 - Progress:		92% (1128) ? c/s  		 \ Progress:		93% (1141) ? c/s  		 | Progress:		94% (1153) ? c/s  		 / Progress:		95% (1165) ? c/s  		 - Progress:		96% (1177) ? c/s  		 \ Progress:		97% (1190) ? c/s  		 | Progress:		98% (1202) ? c/s  		 / Progress:		99% (1214) ? c/s  		 * Time:    		Compressing the database took 0.008851 seconds.		
 * Result:		(75a,24u,1329,8331,1630,9960)
 * Creating:			fold 10
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 10
** Writing FIC database to file
 * File:		train5.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-23d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		4310
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(81a,0u,3469,19692,1180,20872)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (44) ? c/s  		 | Progress:		2% (87) ? c/s  		 / Progress:		3% (130) ? c/s  		 - Progress:		4% (173) ? c/s  		 \ Progress:		5% (216) ? c/s  		 | Progress:		6% (259) ? c/s  		 / Progress:		7% (302) ? c/s  		 - Progress:		8% (345) ? c/s  		 \ Progress:		9% (388) ? c/s  		 | Progress:		10% (431) ? c/s  		 / Progress:		11% (475) ? c/s  		 - Progress:		12% (518) ? c/s  		 \ Progress:		13% (561) ? c/s  		 | Progress:		14% (604) ? c/s  		 / Progress:		15% (647) ? c/s  		 - Progress:		16% (690) ? c/s  		 \ Progress:		17% (733) ? c/s  		 | Progress:		18% (776) ? c/s  		 / Progress:		19% (819) ? c/s  		 - Progress:		20% (862) ? c/s  		 \ Progress:		21% (906) ? c/s  		 | Progress:		22% (949) ? c/s  		 / Progress:		23% (992) ? c/s  		 - Progress:		24% (1035) ? c/s  		 \ Progress:		25% (1078) ? c/s  		 | Progress:		26% (1121) ? c/s  		 / Progress:		27% (1164) ? c/s  		 - Progress:		28% (1207) ? c/s  		 \ Progress:		29% (1250) ? c/s  		 | Progress:		30% (1293) ? c/s  		 / Progress:		31% (1337) ? c/s  		 - Progress:		32% (1380) ? c/s  		 \ Progress:		33% (1423) ? c/s  		 | Progress:		34% (1466) ? c/s  		 / Progress:		35% (1509) ? c/s  		 - Progress:		36% (1552) ? c/s  		 \ Progress:		37% (1595) ? c/s  		 | Progress:		38% (1638) ? c/s  		 / Progress:		39% (1681) ? c/s  		 - Progress:		40% (1724) ? c/s  		 \ Progress:		41% (1768) ? c/s  		 | Progress:		42% (1811) ? c/s  		 / Progress:		43% (1854) ? c/s  		 - Progress:		44% (1897) ? c/s  		 \ Progress:		45% (1940) ? c/s  		 | Progress:		46% (1983) ? c/s  		 / Progress:		47% (2026) ? c/s  		 - Progress:		48% (2069) ? c/s  		 \ Progress:		49% (2112) ? c/s  		 | Progress:		50% (2155) ? c/s  		 / Progress:		51% (2199) ? c/s  		 - Progress:		52% (2242) ? c/s  		 \ Progress:		53% (2285) ? c/s  		 | Progress:		54% (2328) ? c/s  		 / Progress:		55% (2371) ? c/s  		 - Progress:		56% (2414) ? c/s  		 \ Progress:		57% (2457) ? c/s  		 | Progress:		58% (2500) ? c/s  		 / Progress:		59% (2543) ? c/s  		 - Progress:		60% (2586) ? c/s  		 \ Progress:		61% (2630) ? c/s  		 | Progress:		62% (2673) ? c/s  		 / Progress:		63% (2716) ? c/s  		 - Progress:		64% (2759) ? c/s  		 \ Progress:		65% (2802) ? c/s  		 | Progress:		66% (2845) ? c/s  		 / Progress:		67% (2888) ? c/s  		 - Progress:		68% (2931) ? c/s  		 \ Progress:		69% (2974) ? c/s  		 | Progress:		70% (3017) ? c/s  		 / Progress:		71% (3061) ? c/s  		 - Progress:		72% (3104) ? c/s  		 \ Progress:		73% (3147) ? c/s  		 | Progress:		74% (3190) ? c/s  		 / Progress:		75% (3233) ? c/s  		 - Progress:		76% (3276) ? c/s  		 \ Progress:		77% (3319) ? c/s  		 | Progress:		78% (3362) ? c/s  		 / Progress:		79% (3405) ? c/s  		 - Progress:		80% (3448) ? c/s  		 \ Progress:		81% (3492) ? c/s  		 | Progress:		82% (3535) ? c/s  		 / Progress:		83% (3578) ? c/s  		 - Progress:		84% (3621) ? c/s  		 \ Progress:		85% (3664) ? c/s  		 | Progress:		86% (3707) ? c/s  		 / Progress:		87% (3750) ? c/s  		 - Progress:		88% (3793) ? c/s  		 \ Progress:		89% (3836) ? c/s  		 | Progress:		90% (3879) ? c/s  		 / Progress:		91% (3923) ? c/s  		 - Progress:		92% (3966) ? c/s  		 \ Progress:		93% (4009) ? c/s  		 | Progress:		94% (4052) ? c/s  		 / Progress:		95% (4095) ? c/s  		 - Progress:		96% (4138) ? c/s  		 \ Progress:		97% (4181) ? c/s  		 | Progress:		98% (4224) ? c/s  		 / Progress:		99% (4267) ? c/s  		 * Time:    		Compressing the database took 0.033716 seconds.		
 * Result:		(80a,51u,2038,13718,2362,16080)
** Writing FIC database to file
 * File:		train14.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		horseColic-all-23d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		1317
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(80a,0u,2086,11820,1146,12966)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (14) ? c/s  		 | Progress:		2% (27) ? c/s  		 / Progress:		3% (40) ? c/s  		 - Progress:		4% (53) ? c/s  		 \ Progress:		5% (66) ? c/s  		 | Progress:		6% (80) ? c/s  		 / Progress:		7% (93) ? c/s  		 - Progress:		8% (106) ? c/s  		 \ Progress:		9% (119) ? c/s  		 | Progress:		10% (132) ? c/s  		 / Progress:		11% (145) ? c/s  		 - Progress:		12% (159) ? c/s  		 \ Progress:		13% (172) ? c/s  		 | Progress:		14% (185) ? c/s  		 / Progress:		15% (198) ? c/s  		 - Progress:		16% (211) ? c/s  		 \ Progress:		17% (224) ? c/s  		 | Progress:		18% (238) ? c/s  		 / Progress:		19% (251) ? c/s  		 - Progress:		20% (264) ? c/s  		 \ Progress:		21% (277) ? c/s  		 | Progress:		22% (290) ? c/s  		 / Progress:		23% (303) ? c/s  		 - Progress:		24% (317) ? c/s  		 \ Progress:		25% (330) ? c/s  		 | Progress:		26% (343) ? c/s  		 / Progress:		27% (356) ? c/s  		 - Progress:		28% (369) ? c/s  		 \ Progress:		29% (382) ? c/s  		 | Progress:		30% (396) ? c/s  		 / Progress:		31% (409) ? c/s  		 - Progress:		32% (422) ? c/s  		 \ Progress:		33% (435) ? c/s  		 | Progress:		34% (448) ? c/s  		 / Progress:		35% (461) ? c/s  		 - Progress:		36% (475) ? c/s  		 \ Progress:		37% (488) ? c/s  		 | Progress:		38% (501) ? c/s  		 / Progress:		39% (514) ? c/s  		 - Progress:		40% (527) ? c/s  		 \ Progress:		41% (540) ? c/s  		 | Progress:		42% (554) ? c/s  		 / Progress:		43% (567) ? c/s  		 - Progress:		44% (580) ? c/s  		 \ Progress:		45% (593) ? c/s  		 | Progress:		46% (606) ? c/s  		 / Progress:		47% (619) ? c/s  		 - Progress:		48% (633) ? c/s  		 \ Progress:		49% (646) ? c/s  		 | Progress:		50% (659) ? c/s  		 / Progress:		51% (672) ? c/s  		 - Progress:		52% (685) ? c/s  		 \ Progress:		53% (699) ? c/s  		 | Progress:		54% (712) ? c/s  		 / Progress:		55% (725) ? c/s  		 - Progress:		56% (738) ? c/s  		 \ Progress:		57% (751) ? c/s  		 | Progress:		58% (764) ? c/s  		 / Progress:		59% (778) ? c/s  		 - Progress:		60% (791) ? c/s  		 \ Progress:		61% (804) ? c/s  		 | Progress:		62% (817) ? c/s  		 / Progress:		63% (830) ? c/s  		 - Progress:		64% (843) ? c/s  		 \ Progress:		65% (857) ? c/s  		 | Progress:		66% (870) ? c/s  		 / Progress:		67% (883) ? c/s  		 - Progress:		68% (896) ? c/s  		 \ Progress:		69% (909) ? c/s  		 | Progress:		70% (922) ? c/s  		 / Progress:		71% (936) ? c/s  		 - Progress:		72% (949) ? c/s  		 \ Progress:		73% (962) ? c/s  		 | Progress:		74% (975) ? c/s  		 / Progress:		75% (988) ? c/s  		 - Progress:		76% (1001) ? c/s  		 \ Progress:		77% (1015) ? c/s  		 | Progress:		78% (1028) ? c/s  		 / Progress:		79% (1041) ? c/s  		 - Progress:		80% (1054) ? c/s  		 \ Progress:		81% (1067) ? c/s  		 | Progress:		82% (1080) ? c/s  		 / Progress:		83% (1094) ? c/s  		 - Progress:		84% (1107) ? c/s  		 \ Progress:		85% (1120) ? c/s  		 | Progress:		86% (1133) ? c/s  		 / Progress:		87% (1146) ? c/s  		 - Progress:		88% (1159) ? c/s  		 \ Progress:		89% (1173) ? c/s  		 | Progress:		90% (1186) ? c/s  		 / Progress:		91% (1199) ? c/s  		 - Progress:		92% (1212) ? c/s  		 \ Progress:		93% (1225) ? c/s  		 | Progress:		94% (1238) ? c/s  		 / Progress:		95% (1252) ? c/s  		 - Progress:		96% (1265) ? c/s  		 \ Progress:		97% (1278) ? c/s  		 | Progress:		98% (1291) ? c/s  		 / Progress:		99% (1304) ? c/s  		 * Time:    		Compressing the database took 0.013866 seconds.		
 * Result:		(77a,27u,1368,8692,1732,10424)

 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/classify/horseColic-all-23d-pop-cccp-20210117082208/

Task `classify`, command `classifycompress` finished. This took 1 seconds.

 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: 'classify.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Classification ::
 * Processing Fold:	1
Starting classification
 * Classifying ct sup:	23     * Classifying:		done
 * Processing Fold:	2
Starting classification
 * Classifying ct sup:	23     * Classifying:		done
 * Processing Fold:	3
Starting classification
 * Classifying ct sup:	23     * Classifying:		done
 * Processing Fold:	4
Starting classification
 * Classifying ct sup:	23     * Classifying:		done
 * Processing Fold:	5
Starting classification
 * Classifying ct sup:	23     * Classifying:		done
 * Processing Fold:	6
Starting classification
 * Classifying ct sup:	23     * Classifying:		done
 * Processing Fold:	7
Starting classification
 * Classifying ct sup:	23     * Classifying:		done
 * Processing Fold:	8
Starting classification
 * Classifying ct sup:	23     * Classifying:		done
 * Processing Fold:	9
Starting classification
 * Classifying ct sup:	23     * Classifying:		done
 * Processing Fold:	10
Starting classification
 * Classifying ct sup:	23     * Classifying:		done
 * Processing Fold:	1
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	2
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	3
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	4
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	5
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	6
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	7
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	8
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	9
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	10
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done


 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/classify/horseColic-all-23d-pop-cccp-20210117082208/

Task `classify`, command `classifyanalyse` finished. This took 2 seconds.



Comparing on horseColic.dat with nb_rows = 368 and minsup = 0.06149123818307586
Running	: ./Resources/Krimp/bin/krimp	cca619a9-a166-474e-bffb-d10c61d36f9b_convertdb.conf
Running	: ./Resources/Krimp/bin/krimp	dd71bb8f-c0d2-4139-9e27-e62186efe59f_analysedb.conf
Running	: ./Resources/Krimp/bin/krimp	5041deb2-10f3-4303-a089-546b200d85c3_classifycompress.conf
res_path = /home/arcchitjain/Documents/Mistle/Output/xps/classify/horseColic-all-23d-pop-cccp-20210117082208
krimp_item_dict = {0: 3, 1: 5, 2: 71, 3: 20, 4: 72, 5: 84, 6: 35, 7: 1, 8: 16, 9: 45, 10: 2, 11: 25, 12: 54, 13: 9, 14: 85, 15: 23, 16: 52, 17: 27, 18: 81, 19: 47, 20: 29, 21: 61, 22: 66, 23: 36, 24: 21, 25: 46, 26: 51, 27: 49, 28: 40, 29: 31, 30: 39, 31: 48, 32: 57, 33: 58, 34: 15, 35: 11, 36: 7, 37: 78, 38: 60, 39: 79, 40: 13, 41: 74, 42: 65, 43: 77, 44: 42, 45: 32, 46: 56, 47: 43, 48: 38, 49: 41, 50: 55, 51: 6, 52: 70, 53: 50, 54: 22, 55: 30, 56: 24, 57: 18, 58: 62, 59: 33, 60: 4, 61: 53, 62: 34, 63: 63, 64: 44, 65: 10, 66: 64, 67: 73, 68: 59, 69: 83, 70: 28, 71: 8, 72: 82, 73: 69, 74: 67, 75: 12, 76: 26, 77: 75, 78: 19, 79: 76, 80: 68, 81: 37, 82: 17}
# of frequent itemsets	: 8762
Time of DCI Closed		: 0.3351569175720215
44  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-21, -16, -8, -6, -4, -3}), frozenset({-6, -4, -3}), frozenset({-7, -4, -2}), frozenset({-21, -17, -3, -72, -73, -8, -6, -37, -4, -35})}
DL of initial theory	: 41078.23723673924
4208	itemsets left after T operation 	: [frozenset({-21, -72, -6, -4, -3})]
2632	itemsets left after T operation 	: [frozenset({-26, -36, -6, -4, -3})]
1260	itemsets left after W operation 	: [frozenset({-6, -21, -4, 85}), frozenset({-30, -61, -26, -71, -22, -85, -17, -48, -46, -75, -10, -39, -37, -3}), frozenset({-63, -59, -55, -52, -48, -44, -39, -36, -30, -23, -85, -16, -12, -75, -71, -3}), frozenset({-61, -55, -52, -48, -45, -9, -41, -30, -26, -22, -85, -14, -73, -71, -3, -65}), frozenset({-32, -28, -24, -55, -53, -85, -82, -17, -46, -66, -74, -72, -36, -2}), frozenset({-63, -59, -53, -48, -45, -39, -37, -30, -26, -22, -85, -84, -16, -79, -10, -73, -72, -2}), frozenset({-32, -24, -85, -84, -17, -48, -80, -45, -40, -8, -70, -37, -3, -65}), frozenset({-64, -62, -85, -82, -49, -17, -47, -79, -77, -12, -41, -72, -36, -2, -33}), frozenset({-63, -62, -85, -82, -78, -14, -74, -8, -71, -2}), frozenset({-16, -8, -85, -3}), frozenset({-59, -55, -52, -48, -45, -39, -36, -31, -26, -22, -85, -16, -10, -73, -72, -2}), frozenset({-63, -30, -28, -59, -24, -85, -46, -14, -75, -10, -39, -71, -36, -2}), frozenset({-62, -85, -52, -50, -82, -17, -46, -78, -12, -75, -34, -72, -36, -2}), frozenset({-29, -25, -85, -82, -17, -47, -79, -12, -43, -37, -2}), frozenset({-25, -85, -17, -47, -75, -72, -40, -37, -67, -2, -33}), frozenset({-10, -85, -36, -3, -17}), frozenset({-63, -59, -53, -48, -45, -39, -36, -30, -26, -22, -85, -84, -16, -79, -10, -73, -72, -2}), frozenset({-62, -58, -56, -54, -51, -47, -40, -8, -36, -35, -28, -24, -85, -17, -76, -72, -67, -2}), frozenset({-61, -58, -57, -54, -49, -45, -42, -36, -30, -26, -24, -85, -82, -79, -13, -75, -10, -72, -2}), frozenset({-32, -85, -82, -50, -17, -46, -74, -40, -8, -70, -36, -2}), frozenset({-59, -55, -85, -52, -16, -12, -44, -74, -39, -71, -3}), frozenset({-72, -85, -3})]
420	itemsets left after W operation 	: [frozenset({-10, -73, -72, 86, -36}), frozenset({-63, -59, -58, -54, -49, -46, -39, -31, -26, -22, -21, -86, -17, -78, -7, -5, -3}), frozenset({-31, -59, -26, -55, -22, -85, -52, -86, -48, -16, -45, -39, -2}), frozenset({-31, -60, -26, -23, -86, -53, -19, -16, -48, -78, -41, -7, -4, -3}), frozenset({-58, -54, -49, -46, -39, -31, -26, -22, -21, -86, -82, -17, -78, -7, -5, -3}), frozenset({-32, -64, -24, -86, -19, -48, -14, -39, -6, -4, -3}), frozenset({-63, -30, -59, -26, -22, -53, -85, -84, -86, -48, -16, -79, -45, -39, -2}), frozenset({-32, -63, -24, -86, -19, -48, -14, -44, -39, -6, -4, -3}), frozenset({-59, -55, -52, -49, -46, -30, -26, -24, -86, -19, -82, -16, -79, -6, -4, -2, -65}), frozenset({-30, -61, -55, -22, -53, -86, -82, -17, -48, -46, -78, -43, -7, -5, -3})]
71	itemsets left after S operation 	: [frozenset({-6, -4, -3})]
51	itemsets left after T operation 	: [frozenset({-46, -22, -3, -26})]
28	itemsets left after V operation 	: [frozenset({-62, 3, -55, -54, -50, -46, -41, -36, -30, -26, -23, -19, -14, -73, -8, -67, -2}), frozenset({-6, -4, -3}), frozenset({3, -58, -57, -53, -50, -47, -40, -37, -34, -28, -25, -82, -17, -80, -12, -73, -72, -2}), frozenset({3, -37, -55, -52, -51, -17, -47, -43, -75, -69, -67, -2, -33}), frozenset({3, -21, 85}), frozenset({3, -59, -55, -52, -49, -46, -30, -26, -24, -86, -19, -82, -16, -79, -2, -65})]
20	itemsets left after T operation 	: [frozenset({-48, -30, -3})]
4	itemsets left after V operation 	: [frozenset({-6, -4, -3}), frozenset({-31, -60, -26, 6, -23, -86, -53, -19, -16, -48, -78, -41, -7})]
# of frequent itemsets	: 33
Time of DCI Closed		: 0.14100909233093262
32	itemsets left after W operation 	: [frozenset({-72, -2, 87, -17}), frozenset({-62, -54, -50, -47, -42, -37, -33, -28, -24, -87, -21, -82, -80, -73, -7, -5, -67}), frozenset({-58, -55, -54, -50, -46, -41, -37, -31, -28, -87, -22, -21, -78, -12, -73, -7, -5}), frozenset({-32, -28, -24, -55, -87, -53, -85, -82, -46, -74, -36, -66}), frozenset({-64, -62, -87, -85, -82, -49, -47, -79, -77, -12, -41, -36, -33}), frozenset({-62, -87, -85, -52, -82, -50, -46, -78, -12, -75, -36, -34}), frozenset({-25, -87, -85, -47, -75, -40, -37, -67, -33}), frozenset({-62, -58, -56, -54, -51, -47, -40, -36, -35, -28, -24, -87, -85, -76, -8, -67}), frozenset({3, -58, -57, -53, -50, -47, -40, -37, -34, -28, -25, -87, -82, -80, -12, -73})]
20	itemsets left after W operation 	: [frozenset({88, -85, -2}), frozenset({-63, -59, -53, -48, -45, -39, -37, -30, -26, -88, -22, -84, -16, -79, -10, -73, -72}), frozenset({-63, -62, -88, -82, -78, -14, -74, -8, -71}), frozenset({-63, -30, -28, -59, -24, -88, -46, -14, -75, -10, -39, -71, -36}), frozenset({-29, -25, -88, -82, -17, -47, -79, -12, -43, -37}), frozenset({-61, -58, -57, -54, -49, -45, -42, -36, -30, -26, -24, -88, -82, -79, -13, -75, -10, -72}), frozenset({-32, -88, -82, -50, -17, -46, -74, -40, -8, -70, -36}), frozenset({-31, -59, -26, -88, -55, -22, -86, -52, -48, -16, -45, -39}), frozenset({-63, -30, -59, -26, -88, -22, -53, -84, -86, -48, -16, -79, -45, -39})]
Clause Pruned	: frozenset({-32, -24, -85, -84, -17, -48, -80, -45, -40, -8, -70, -37, -3, -65})
Clause Pruned	: frozenset({-16, -8, -85, -3})
Clause Pruned	: frozenset({-10, -85, -36, -3, -17})
Clause Pruned	: frozenset({-59, -55, -85, -52, -16, -12, -44, -74, -39, -71, -3})
Clause Pruned	: frozenset({-72, -85, -3})
Initial DL				: 42190.92589730811
Final DL				: 8233.283299364852
Compression (wrt me)	: 0.8048565390718254
Operator Counters		: {'D': 0, 'W': 4, 'V': 2, 'S': 1, 'R': 0, 'T': 4}
Misle Learning Runtime	: 1.7473578453063965

# of frequent itemsets	: 12029
Time of DCI Closed		: 0.4044315814971924
19  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-73, -72, -7, -5, -2}), frozenset({-6, -4, -2}), frozenset({-21, -17, -12, -7, -5, -2}), frozenset({-73, -72, -6, -4, -2}), frozenset({-28, -51, -17, -47, -6, -4, -67, -2})}
DL of initial theory	: 41078.23723673925
3917	itemsets left after T operation 	: [frozenset({-72, -6, -4, -2})]
2115	itemsets left after T operation 	: [frozenset({-6, -4, -17})]
1483	itemsets left after T operation 	: [frozenset({-73, -21, -2, -17})]
577	itemsets left after W operation 	: [frozenset({-6, -36, -4, 85}), frozenset({-31, -27, -22, -21, -85, -14, -45, -10, -40, -2}), frozenset({-32, -23, -21, -85, -82, -46, -13, -12, -75, -40, -71, -2}), frozenset({-55, -52, -48, -47, -8, -39, -31, -28, -24, -21, -85, -3, -14, -73, -72, -67}), frozenset({-32, -26, -24, -85, -49, -47, -79, -12, -43, -73, -71, -2}), frozenset({-32, -26, -24, -53, -21, -85, -82, -49, -47, -78, -12, -42, -73, -71, -2}), frozenset({-63, -59, -55, -53, -50, -44, -8, -39, -33, -26, -24, -21, -85, -16, -73, -72, -3}), frozenset({-31, -62, -58, -57, -26, -23, -21, -85, -50, -16, -46, -9, -40, -67, -2}), frozenset({-55, -53, -50, -45, -41, -32, -26, -24, -21, -85, -82, -3, -14, -78, -73, -8, -70, -67}), frozenset({-85, -21, -82, -79, -14, -73, -72, -3}), frozenset({-30, -85, -21, -14, -10, -73, -68, -3}), frozenset({-59, -58, -56, -52, -50, -47, -41, -32, -26, -23, -85, -19, -14, -10, -73, -71, -3, -66}), frozenset({-62, -30, -58, -57, -26, -24, -85, -52, -50, -79, -46, -66, -40, -2}), frozenset({-61, -55, -52, -48, -46, -41, -33, -26, -85, -18, -80, -14, -73, -8, -68, -2, -65}), frozenset({-32, -26, -24, -55, -21, -52, -85, -48, -16, -44, -42, -73, -8, -68, -2}), frozenset({-61, -55, -53, -48, -46, -42, -32, -26, -24, -21, -85, -82, -16, -79, -75, -10, -72, -67}), frozenset({-62, -30, -26, -56, -22, -53, -85, -51, -16, -45, -10, -39, -67, -2}), frozenset({-30, -26, -22, -21, -85, -48, -46, -14, -10, -73, -40, -72, -3, -65}), frozenset({-62, -56, -53, -50, -47, -41, -30, -24, -21, -85, -16, -79, -3, -73, -8, -69, -67}), frozenset({-61, -55, -54, -49, -46, -40, -30, -28, -85, -82, -80, -14, -8, -71, -67, -2}), frozenset({-62, -30, -28, -24, -55, -85, -52, -50, -3, -46, -43, -73, -72, -67}), frozenset({-32, -26, -22, -53, -21, -51, -85, -67, -16, -46, -12, -75, -41, -72, -3})]
257	itemsets left after W operation 	: [frozenset({-72, -21, 86, -73}), frozenset({-59, -55, -53, -48, -47, -42, -36, -28, -24, -86, -82, -16, -79, -8, -7, -4, -2}), frozenset({-79, -14, -86, -85, -3, -82}), frozenset({-13, -11, -7, -86, -4, -2}), frozenset({-30, -26, -22, -85, -86, -48, -46, -14, -10, -40, -3, -65}), frozenset({-28, -24, -55, -86, -52, -51, -43, -10, -7, -37, -4, -35, -2}), frozenset({-59, -55, -53, -48, -47, -36, -32, -26, -22, -86, -16, -78, -66, -7, -4, -2}), frozenset({-12, -7, -86, -5, -3, -82, -17}), frozenset({-31, -28, -24, -55, -86, -85, -52, -67, -48, -47, -14, -8, -39, -3}), frozenset({-63, -59, -26, -24, -55, -86, -53, -85, -50, -16, -44, -8, -39, -3, -33})]
154	itemsets left after T operation 	: [frozenset({-4, -2})]
144	itemsets left after W operation 	: [frozenset({-73, 87, -21, -24, -53}), frozenset({-61, -55, -48, -46, -40, -37, -7, -32, -28, -87, -80, -14, -10, -71, -4, -3}), frozenset({-62, -30, -56, -87, -85, -50, -16, -47, -79, -3, -41, -8, -69, -67}), frozenset({-32, -26, -55, -87, -85, -50, -82, -67, -14, -45, -78, -41, -8, -70, -3})]
47	itemsets left after T operation 	: [frozenset({-24, -73, -72, -17})]
13	itemsets left after T operation 	: [frozenset({-21, -2, -17})]
8	itemsets left after V operation 	: [frozenset({-62, -30, -28, -55, -85, -52, -50, -67, 17, -46, -43, -3}), frozenset({-24, -17, -72, -73})]
3	itemsets left after V operation 	: [frozenset({-35, -3, 17, -29, -42, -24, -51}), frozenset({-6, -4, -17}), frozenset({17, -36, 85})]
# of frequent itemsets	: 1
Time of DCI Closed		: 0.13542580604553223
Initial DL				: 42190.925897308116
Final DL				: 8388.536228872748
Compression (wrt me)	: 0.8011767684527644
Operator Counters		: {'D': 0, 'W': 3, 'V': 2, 'S': 0, 'R': 0, 'T': 6}
Misle Learning Runtime	: 1.2407491207122803

# of frequent itemsets	: 7512
Time of DCI Closed		: 0.31586408615112305
42  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-21, -16, -8, -6, -4, -3}), frozenset({-6, -4, -3}), frozenset({-7, -4, -2}), frozenset({-21, -17, -3, -72, -73, -8, -6, -37, -4, -35})}
DL of initial theory	: 41370.780931031986
3831	itemsets left after T operation 	: [frozenset({-26, -36, -6, -4, -3})]
1676	itemsets left after W operation 	: [frozenset({85, -72, -6, -21, -4}), frozenset({-32, -62, -28, -24, -55, -53, -85, -82, -17, -48, -79, -44, -75, -10, -3}), frozenset({-62, -28, -24, -85, -82, -17, -80, -47, -49, -43, -73, -37, -3, -33}), frozenset({-63, -30, -60, -26, -22, -85, -48, -14, -78, -44, -41, -10, -73, -36, -2}), frozenset({-30, -61, -85, -14, -46, -10, -74, -36, -2}), frozenset({-63, -59, -55, -54, -48, -44, -39, -36, -31, -27, -23, -85, -17, -75, -10, -3}), frozenset({-62, -28, -57, -24, -85, -82, -17, -48, -47, -3, -12, -43, -73, -36, -35}), frozenset({-32, -28, -24, -55, -53, -85, -82, -17, -46, -74, -2, -36, -66}), frozenset({-63, -59, -53, -48, -45, -39, -37, -30, -26, -22, -85, -84, -16, -79, -10, -73, -2}), frozenset({-55, -52, -51, -47, -40, -37, -33, -28, -25, -85, -82, -17, -79, -76, -10, -3}), frozenset({-61, -28, -24, -85, -51, -17, -67, -47, -11, -43, -73, -37, -3}), frozenset({-64, -62, -85, -82, -49, -17, -47, -79, -77, -12, -41, -36, -2, -33}), frozenset({-58, -56, -53, -50, -47, -40, -36, -30, -28, -25, -85, -82, -17, -78, -10, -73, -3}), frozenset({-32, -28, -58, -23, -54, -55, -85, -49, -16, -46, -73, -8, -39, -36, -3}), frozenset({-60, -55, -53, -48, -45, -40, -37, -34, -26, -22, -85, -82, -17, -79, -11, -73, -3, -65}), frozenset({-62, -58, -57, -50, -46, -40, -36, -33, -28, -24, -85, -17, -10, -74, -67, -2}), frozenset({-31, -59, -26, -55, -22, -85, -52, -16, -48, -45, -10, -73, -39, -36, -2}), frozenset({-64, -58, -53, -49, -47, -39, -36, -33, -28, -24, -85, -16, -78, -10, -73, -3}), frozenset({-30, -24, -85, -14, -10, -73, -40, -36, -3}), frozenset({-28, -56, -85, -52, -82, -17, -48, -79, -67, -10, -73, -37, -3, -34}), frozenset({-62, -85, -52, -82, -50, -17, -46, -78, -12, -75, -2, -36, -34}), frozenset({-32, -28, -56, -23, -53, -85, -49, -16, -73, -44, -10, -41, -38, -3, -66}), frozenset({-35, -37, -73, -8, -85, -3, -17}), frozenset({-62, -57, -54, -49, -46, -41, -37, -32, -26, -24, -85, -82, -17, -79, -10, -73, -3, -66}), frozenset({-25, -85, -17, -47, -75, -40, -37, -67, -2, -33}), frozenset({-30, -85, -83, -16, -46, -78, -73, -8, -36, -3}), frozenset({-64, -31, -58, -26, -56, -53, -85, -16, -47, -48, -73, -11, -41, -37, -3}), frozenset({-63, -60, -56, -52, -49, -44, -42, -37, -34, -28, -24, -85, -82, -17, -79, -73, -8, -3}), frozenset({-63, -59, -53, -48, -45, -39, -36, -30, -26, -22, -85, -84, -16, -79, -10, -73, -2}), frozenset({-61, -56, -52, -50, -47, -40, -37, -35, -28, -24, -85, -82, -17, -79, -3, -12, -73, -67}), frozenset({-62, -58, -56, -54, -51, -47, -40, -36, -35, -28, -24, -85, -17, -76, -8, -67, -2}), frozenset({-62, -58, -57, -53, -48, -46, -39, -36, -30, -22, -85, -16, -10, -73, -3, -65}), frozenset({-63, -59, -56, -53, -48, -45, -41, -36, -31, -27, -24, -85, -17, -10, -73, -3}), frozenset({-61, -58, -57, -54, -49, -45, -42, -36, -30, -26, -24, -85, -82, -79, -13, -75, -10, -2}), frozenset({-14, -12, -73, -85, -36, -3}), frozenset({-28, -25, -85, -50, -17, -3, -46, -12, -73, -35})]
1056	itemsets left after T operation 	: [frozenset({-73, -3, -17})]
380	itemsets left after S operation 	: [frozenset({-6, -4, -3})]
138	itemsets left after W operation 	: [frozenset({86, -6, -4, -2}), frozenset({-62, -55, -54, -50, -46, -41, -36, -30, -26, -23, -86, -19, -14, -73, -8, -67}), frozenset({-55, -52, -50, -47, -42, -37, -33, -26, -24, -86, -21, -82, -17, -80, -74, -8, -71}), frozenset({-58, -57, -53, -50, -47, -40, -37, -34, -28, -25, -86, -82, -17, -80, -12, -73, -72}), frozenset({-59, -55, -52, -49, -46, -36, -30, -26, -24, -86, -19, -82, -16, -79, -10, -73, -72, -65}), frozenset({-63, -62, -86, -21, -82, -14, -78, -74, -8, -71}), frozenset({-63, -30, -28, -59, -24, -86, -21, -46, -14, -75, -10, -39, -71, -36}), frozenset({-62, -55, -52, -48, -45, -40, -36, -30, -26, -24, -86, -19, -14, -10, -73, -70, -67}), frozenset({-37, -55, -86, -52, -51, -17, -47, -43, -75, -69, -67, -33}), frozenset({-30, -86, -19, -16, -12, -75, -44, -39, -71}), frozenset({-32, -8, -86, -21, -50, -17, -82, -46, -74, -40, -70, -36})]
51	itemsets left after W operation 	: [frozenset({-36, 87, -10, -73}), frozenset({-31, -60, -26, -23, -87, -53, -19, -48, -16, -78, -41, -72, -7, -4, -3}), frozenset({-59, -55, -52, -49, -46, -30, -26, -24, -87, -86, -19, -82, -16, -79, -72, -65}), frozenset({-62, -30, -26, -24, -55, -86, -87, -52, -19, -48, -14, -45, -40, -70, -67}), frozenset({-63, -30, -60, -26, -87, -22, -85, -48, -14, -78, -44, -41, -2}), frozenset({-31, -59, -26, -55, -22, -85, -52, -87, -16, -48, -45, -39, -2}), frozenset({-64, -28, -58, -24, -87, -53, -85, -49, -16, -47, -78, -39, -3, -33}), frozenset({-30, -14, -85, -40, -24, -87, -3}), frozenset({-63, -30, -59, -26, -87, -22, -53, -85, -84, -48, -16, -79, -45, -39, -2}), frozenset({-62, -30, -58, -57, -87, -22, -53, -85, -48, -16, -46, -39, -3, -65})]
33	itemsets left after W operation 	: [frozenset({88, -46, -36}), frozenset({-30, -61, -88, -85, -14, -10, -74, -2}), frozenset({-32, -28, -24, -55, -88, -53, -85, -82, -17, -66, -74, -2}), frozenset({-32, -28, -58, -88, -23, -54, -55, -85, -49, -16, -73, -8, -39, -3}), frozenset({-62, -28, -58, -57, -24, -88, -85, -50, -17, -10, -74, -40, -67, -2, -33}), frozenset({-62, -88, -85, -52, -82, -50, -17, -78, -12, -75, -2, -34}), frozenset({-30, -88, -85, -83, -16, -78, -73, -8, -3}), frozenset({-62, -30, -26, -88, -55, -54, -23, -86, -19, -50, -14, -41, -73, -8, -67}), frozenset({-63, -30, -28, -59, -24, -88, -86, -21, -14, -75, -10, -39, -71}), frozenset({-32, -88, -8, -86, -21, -50, -17, -82, -74, -40, -70})]
22	itemsets left after T operation 	: [frozenset({-3, -73})]
10	itemsets left after W operation 	: [frozenset({-72, -73, 89, -17}), frozenset({-62, -54, -50, -47, -42, -37, -33, -28, -89, -24, -21, -82, -80, -7, -5, -67, -2}), frozenset({-58, -55, -54, -50, -46, -41, -37, -31, -28, -89, -22, -21, -78, -12, -7, -5, -2}), frozenset({-28, -58, -57, -25, -89, -86, -53, -50, -82, -80, -47, -12, -40, -37, -34})]
5	itemsets left after T operation 	: [frozenset({-48, -3, -10})]
4	itemsets left after V operation 	: [frozenset({-6, -4, -3}), frozenset({-72, 3, -21, 85}), frozenset({3, 86, -2})]
3	itemsets left after T operation 	: [frozenset({-3, -10})]
Unpacking W operator applied earlier using 87 on frozenset({-36, -10, -73})
# of frequent itemsets	: 15
Time of DCI Closed		: 0.19991517066955566
Clause Pruned	: frozenset({-3, -10})
Initial DL				: 42154.18312133131
Final DL				: 8805.636851171263
Compression (wrt me)	: 0.7911088248151738
Operator Counters		: {'D': 0, 'W': 4, 'V': 1, 'S': 1, 'R': 0, 'T': 5}
Misle Learning Runtime	: 1.5550484657287598

# of frequent itemsets	: 12286
Time of DCI Closed		: 0.4020254611968994
24  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-73, -72, -7, -5, -2}), frozenset({-6, -4, -2}), frozenset({-21, -17, -12, -7, -5, -2}), frozenset({-73, -72, -6, -4, -2}), frozenset({-28, -51, -17, -47, -6, -4, -67, -2})}
DL of initial theory	: 41370.780931032015
3720	itemsets left after T operation 	: [frozenset({-72, -6, -4, -2})]
2226	itemsets left after W operation 	: [frozenset({-6, -21, -4, 85}), frozenset({-32, -64, -61, -55, -53, -85, -17, -48, -46, -73, -72, -36, -3}), frozenset({-31, -27, -22, -85, -14, -45, -10, -40, -36, -2}), frozenset({-32, -23, -85, -82, -46, -13, -12, -75, -40, -71, -36, -2}), frozenset({-62, -58, -56, -54, -51, -47, -9, -43, -37, -33, -28, -24, -85, -17, -3, -73, -72, -67}), frozenset({-28, -56, -24, -85, -84, -50, -17, -80, -46, -41, -12, -73, -72, -3, -34}), frozenset({-62, -55, -52, -49, -44, -40, -36, -31, -23, -85, -17, -12, -73, -72, -3, -66}), frozenset({-55, -52, -48, -47, -8, -39, -36, -31, -28, -24, -85, -3, -14, -73, -72, -67}), frozenset({-62, -55, -54, -50, -46, -42, -8, -37, -33, -27, -24, -85, -82, -17, -80, -72, -3, -66}), frozenset({-62, -28, -25, -55, -85, -17, -47, -43, -37, -67, -2, -33}), frozenset({-30, -55, -22, -85, -82, -17, -48, -79, -46, -43, -75, -8, -71, -36, -2}), frozenset({-32, -62, -22, -85, -17, -80, -49, -46, -41, -8, -37, -67, -2}), frozenset({-28, -24, -85, -51, -17, -46, -11, -42, -36, -2}), frozenset({-32, -26, -24, -53, -85, -82, -49, -47, -78, -12, -42, -73, -71, -36, -2}), frozenset({-31, -61, -28, -24, -55, -53, -85, -50, -17, -46, -76, -40, -72, -36, -3}), frozenset({-63, -59, -55, -53, -50, -44, -8, -39, -36, -33, -26, -24, -85, -16, -73, -72, -3}), frozenset({-26, -85, -17, -46, -43, -10, -75, -71, -36, -67, -2}), frozenset({-31, -62, -58, -57, -26, -23, -85, -50, -16, -46, -9, -40, -36, -67, -2}), frozenset({-55, -53, -50, -45, -41, -36, -32, -26, -24, -85, -82, -3, -14, -78, -73, -8, -70, -67}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -85, -82, -17, -80, -3, -12, -73, -72, -67}), frozenset({-85, -82, -79, -14, -73, -72, -36, -3}), frozenset({-62, -58, -56, -24, -8, -53, -85, -50, -17, -41, -73, -72, -36, -3, -66}), frozenset({-10, -73, -71, -85, -2, -17}), frozenset({-30, -68, -85, -14, -10, -73, -36, -3}), frozenset({-62, -56, -52, -49, -47, -40, -37, -28, -24, -85, -17, -3, -11, -73, -72, -67}), frozenset({-61, -55, -52, -49, -46, -41, -36, -32, -26, -24, -85, -82, -17, -79, -66, -75, -68, -2}), frozenset({-62, -57, -54, -50, -46, -41, -36, -30, -28, -25, -85, -82, -17, -80, -10, -73, -70, -67, -2}), frozenset({-32, -26, -24, -55, -68, -85, -52, -48, -16, -44, -42, -73, -8, -36, -2}), frozenset({-61, -55, -53, -48, -46, -42, -36, -32, -26, -24, -85, -82, -16, -79, -75, -10, -72, -67}), frozenset({-55, -52, -49, -45, -42, -36, -32, -26, -22, -85, -17, -78, -12, -73, -72, -3}), frozenset({-61, -28, -23, -53, -85, -50, -17, -80, -46, -66, -42, -10, -36, -2, -33}), frozenset({-32, -28, -23, -85, -50, -17, -46, -78, -42, -73, -8, -71, -36, -2}), frozenset({-26, -85, -17, -10, -40, -37, -67, -33}), frozenset({-59, -52, -50, -46, -42, -36, -31, -28, -22, -85, -17, -79, -73, -8, -71, -67, -2}), frozenset({-62, -55, -52, -50, -47, -40, -8, -37, -35, -28, -25, -85, -82, -17, -79, -3, -73, -72, -67}), frozenset({-30, -26, -22, -85, -48, -46, -14, -10, -73, -40, -72, -36, -3, -65}), frozenset({-62, -56, -53, -50, -47, -41, -36, -30, -24, -85, -16, -79, -3, -73, -8, -69, -67}), frozenset({-58, -57, -52, -49, -46, -41, -8, -36, -30, -26, -24, -85, -17, -73, -72, -3}), frozenset({-8, -85, -84, -2, -17}), frozenset({-55, -54, -85, -51, -17, -43, -37, -67, -2}), frozenset({-63, -59, -58, -57, -85, -16, -77, -10, -72, -40, -3}), frozenset({-32, -26, -22, -53, -85, -51, -67, -16, -46, -12, -75, -41, -72, -36, -3}), frozenset({-64, -32, -28, -57, -25, -85, -50, -17, -47, -42, -73, -72, -37, -3})]
1491	itemsets left after W operation 	: [frozenset({-72, -73, 86, -17}), frozenset({-63, -62, -55, -52, -48, -46, -40, -36, -34, -28, -24, -86, -12, -6, -4, -3}), frozenset({-61, -58, -56, -52, -51, -47, -40, -37, -35, -26, -25, -86, -21, -83, -80, -12, -7, -5, -2}), frozenset({-63, -30, -60, -26, -22, -21, -86, -49, -46, -10, -41, -7, -5, -36, -2}), frozenset({-29, -59, -25, -86, -21, -50, -82, -80, -46, -10, -41, -7, -5, -35, -2}), frozenset({-30, -28, -56, -23, -86, -21, -52, -4, -48, -46, -12, -7, -36, -2}), frozenset({-62, -55, -52, -51, -47, -43, -37, -33, -28, -25, -86, -80, -3, -6, -4, -67}), frozenset({-30, -26, -57, -24, -86, -52, -19, -50, -42, -10, -7, -37, -4, -3}), frozenset({-62, -55, -52, -51, -46, -40, -36, -31, -26, -24, -86, -21, -80, -12, -2, -7, -5, -66}), frozenset({-28, -5, -55, -22, -21, -52, -86, -49, -46, -12, -43, -7, -37, -35, -2}), frozenset({-28, -5, -24, -86, -82, -79, -46, -12, -34, -40, -6, -37, -2}), frozenset({-62, -55, -53, -48, -46, -41, -36, -30, -26, -22, -21, -86, -78, -11, -7, -4, -67, -2}), frozenset({-10, -37, -7, -86, -21, -4, -2}), frozenset({-31, -28, -22, -21, -86, -51, -46, -78, -10, -40, -7, -5, -36, -2}), frozenset({-57, -53, -49, -46, -41, -36, -32, -28, -24, -86, -82, -80, -8, -6, -4, -3, -66}), frozenset({-58, -56, -52, -49, -47, -40, -36, -34, -26, -24, -86, -19, -82, -79, -12, -7, -4, -3, -66}), frozenset({-12, -5, -7, -86, -21, -3, -82}), frozenset({-32, -64, -61, -55, -86, -53, -85, -48, -46, -36, -3}), frozenset({-62, -58, -56, -54, -51, -47, -43, -37, -33, -28, -24, -86, -85, -3, -9, -67}), frozenset({-28, -56, -24, -86, -85, -84, -50, -80, -46, -12, -41, -3, -34}), frozenset({-31, -62, -55, -23, -85, -52, -86, -49, -44, -12, -40, -36, -3, -66}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -86, -85, -82, -67, -80, -12, -3}), frozenset({-62, -58, -56, -24, -86, -53, -85, -50, -41, -8, -36, -3, -66}), frozenset({-62, -28, -56, -24, -86, -85, -52, -49, -67, -47, -11, -40, -37, -3}), frozenset({-32, -26, -55, -22, -85, -52, -86, -49, -78, -45, -12, -42, -36, -3}), frozenset({-62, -55, -52, -50, -47, -40, -37, -35, -28, -25, -86, -85, -82, -67, -79, -8, -3}), frozenset({-30, -58, -57, -26, -24, -86, -85, -52, -49, -46, -41, -8, -36, -3}), frozenset({-64, -32, -28, -25, -57, -86, -85, -50, -47, -42, -37, -3})]
1144	itemsets left after T operation 	: [frozenset({-46, -36, -2})]
532	itemsets left after T operation 	: [frozenset({-4, -2})]
206	itemsets left after T operation 	: [frozenset({-62, -28, -43, -72, -6, -4, -67})]
96	itemsets left after T operation 	: [frozenset({-21, -2, -17})]
92	itemsets left after W operation 	: [frozenset({-46, -26, 87, -72, -36}), frozenset({-30, -87, -22, -85, -48, -14, -10, -73, -40, -3, -65}), frozenset({-32, -87, -22, -53, -85, -51, -67, -16, -12, -75, -41, -3}), frozenset({-32, -61, -24, -55, -87, -53, -85, -82, -48, -16, -79, -75, -42, -10, -67})]
41	itemsets left after W operation 	: [frozenset({-24, 88, -28, -4}), frozenset({-61, -55, -53, -48, -46, -40, -37, -7, -32, -88, -21, -80, -14, -10, -73, -71, -3}), frozenset({-62, -58, -57, -88, -50, -67, -47, -78, -41, -12, -73, -7, -37, -3, -33}), frozenset({-63, -62, -88, -55, -86, -52, -48, -46, -12, -40, -6, -36, -3, -34}), frozenset({-32, -57, -88, -86, -53, -82, -49, -80, -46, -41, -8, -6, -36, -3, -66})]
8	itemsets left after T operation 	: [frozenset({-72, -2, -73})]
6	itemsets left after W operation 	: [frozenset({-72, 89, -50, -17}), frozenset({-62, -55, -54, -46, -42, -37, -33, -27, -89, -24, -85, -82, -80, -8, -3, -66}), frozenset({-31, -61, -28, -89, -24, -55, -53, -85, -46, -76, -40, -36, -3})]
3	itemsets left after V operation 	: [frozenset({2, -29, -25, -5, -51, -47, -43, -7, -37, -3, -33}), frozenset({-21, -2, -17})]
# of frequent itemsets	: 13
Time of DCI Closed		: 0.13917040824890137
12	itemsets left after W operation 	: [frozenset({90, -85, -36, -3}), frozenset({-31, -28, -90, -24, -55, -8, -52, -48, -47, -14, -73, -72, -39, -67}), frozenset({-63, -59, -26, -90, -24, -55, -8, -53, -50, -16, -44, -73, -72, -39, -33}), frozenset({-55, -53, -50, -45, -41, -32, -26, -90, -24, -82, -14, -78, -73, -8, -70, -67}), frozenset({-79, -14, -90, -73, -72, -82}), frozenset({-30, -14, -10, -73, -90, -68}), frozenset({-31, -61, -28, -90, -89, -24, -55, -53, -46, -76, -40}), frozenset({-62, -30, -90, -56, -24, -53, -50, -16, -47, -79, -41, -73, -8, -69, -67}), frozenset({-32, -64, -61, -90, -55, -86, -53, -48, -46}), frozenset({-31, -62, -90, -55, -23, -86, -52, -49, -44, -12, -40, -66}), frozenset({-62, -58, -90, -56, -24, -86, -53, -50, -41, -8, -66}), frozenset({-32, -26, -90, -55, -22, -86, -52, -49, -78, -45, -12, -42}), frozenset({-30, -26, -58, -24, -57, -86, -90, -52, -49, -46, -41, -8})]
10	itemsets left after W operation 	: [frozenset({-3, 91, -85}), frozenset({-63, -59, -58, -57, -91, -16, -77, -10, -72, -40}), frozenset({-28, -91, -56, -24, -86, -84, -50, -80, -46, -12, -41, -34}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -91, -24, -86, -82, -80, -12, -67}), frozenset({-62, -28, -91, -56, -24, -86, -52, -49, -47, -11, -40, -37, -67}), frozenset({-62, -55, -52, -50, -47, -40, -37, -35, -28, -91, -25, -86, -82, -79, -8, -67}), frozenset({-64, -32, -28, -91, -25, -57, -86, -50, -47, -42, -37}), frozenset({-30, -91, -87, -22, -48, -14, -10, -73, -40, -65}), frozenset({-32, -91, -87, -22, -53, -51, -16, -12, -75, -41, -67}), frozenset({-62, -27, -91, -89, -24, -55, -54, -82, -80, -46, -42, -8, -37, -66, -33}), frozenset({90, -36, -91})]
Clause Pruned	: frozenset({-46, -36, -2})
Initial DL				: 42154.18312133132
Final DL				: 6896.89486394997
Compression (wrt me)	: 0.8363888384671383
Operator Counters		: {'D': 0, 'W': 7, 'V': 1, 'S': 0, 'R': 0, 'T': 6}
Misle Learning Runtime	: 2.0384771823883057

# of frequent itemsets	: 7083
Time of DCI Closed		: 0.306459903717041
15  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-21, -16, -8, -6, -4, -3}), frozenset({-7, -4, -2}), frozenset({-21, -17, -3, -72, -73, -8, -6, -37, -4, -35})}
DL of initial theory	: 41618.994081967714
4006	itemsets left after T operation 	: [frozenset({-26, -36, -6, -4, -3})]
1967	itemsets left after W operation 	: [frozenset({85, -72, -6, -21, -4}), frozenset({-32, -62, -28, -24, -55, -53, -85, -82, -17, -48, -79, -44, -75, -10, -3}), frozenset({-62, -28, -24, -85, -82, -17, -80, -47, -49, -43, -73, -37, -3, -33}), frozenset({-63, -30, -60, -26, -22, -85, -48, -14, -78, -44, -41, -10, -73, -36, -2}), frozenset({-30, -61, -85, -14, -46, -10, -74, -36, -2}), frozenset({-63, -59, -55, -54, -48, -44, -39, -36, -31, -27, -23, -85, -17, -75, -10, -3}), frozenset({-62, -28, -57, -24, -85, -82, -17, -48, -47, -3, -12, -43, -73, -36, -35}), frozenset({-32, -28, -24, -55, -53, -85, -82, -17, -46, -74, -2, -36, -66}), frozenset({-63, -59, -53, -48, -45, -39, -37, -30, -26, -22, -85, -84, -16, -79, -10, -73, -2}), frozenset({-55, -52, -51, -47, -40, -37, -33, -28, -25, -85, -82, -17, -79, -76, -10, -3}), frozenset({-61, -28, -24, -85, -51, -17, -67, -47, -11, -43, -73, -37, -3}), frozenset({-64, -62, -85, -82, -49, -17, -47, -79, -77, -12, -41, -36, -2, -33}), frozenset({-58, -56, -53, -50, -47, -40, -36, -30, -28, -25, -85, -82, -17, -78, -10, -73, -3}), frozenset({-60, -55, -53, -48, -45, -40, -37, -34, -26, -22, -85, -82, -17, -79, -11, -73, -3, -65}), frozenset({-62, -58, -57, -50, -46, -40, -36, -33, -28, -24, -85, -17, -10, -74, -67, -2}), frozenset({-31, -59, -26, -55, -22, -85, -52, -16, -48, -45, -10, -73, -39, -36, -2}), frozenset({-64, -58, -53, -49, -47, -39, -36, -33, -28, -24, -85, -16, -78, -10, -73, -3}), frozenset({-14, -73, -8, -85, -36, -3, -34}), frozenset({-28, -56, -85, -52, -82, -17, -48, -79, -67, -10, -73, -37, -3, -34}), frozenset({-62, -85, -52, -82, -50, -17, -46, -78, -12, -75, -2, -36, -34}), frozenset({-32, -28, -56, -23, -53, -85, -49, -16, -73, -44, -10, -41, -38, -3, -66}), frozenset({-35, -37, -73, -8, -85, -3, -17}), frozenset({-62, -57, -54, -49, -46, -41, -37, -32, -26, -24, -85, -82, -17, -79, -10, -73, -3, -66}), frozenset({-25, -85, -17, -47, -75, -40, -37, -67, -2, -33}), frozenset({-32, -58, -57, -22, -53, -85, -16, -73, -36, -3}), frozenset({-30, -85, -83, -16, -46, -78, -73, -8, -36, -3}), frozenset({-64, -31, -58, -26, -56, -53, -85, -16, -47, -48, -73, -11, -41, -37, -3}), frozenset({-63, -60, -56, -52, -49, -44, -42, -37, -34, -28, -24, -85, -82, -17, -79, -73, -8, -3}), frozenset({-63, -59, -53, -48, -45, -39, -36, -30, -26, -22, -85, -84, -16, -79, -10, -73, -2}), frozenset({-61, -56, -52, -50, -47, -40, -37, -35, -28, -24, -85, -82, -17, -79, -3, -12, -73, -67}), frozenset({-62, -58, -56, -54, -51, -47, -40, -36, -35, -28, -24, -85, -17, -76, -8, -67, -2}), frozenset({-62, -58, -57, -53, -48, -46, -39, -36, -30, -22, -85, -16, -10, -73, -3, -65}), frozenset({-63, -59, -56, -53, -48, -45, -41, -36, -31, -27, -24, -85, -17, -10, -73, -3}), frozenset({-61, -58, -57, -54, -49, -45, -42, -36, -30, -26, -24, -85, -82, -79, -13, -75, -10, -2}), frozenset({-14, -12, -73, -85, -36, -3}), frozenset({-28, -25, -85, -50, -17, -3, -46, -12, -73, -35})]
1196	itemsets left after T operation 	: [frozenset({-73, -3, -17})]
395	itemsets left after T operation 	: [frozenset({-6, -4, -3})]
118	itemsets left after W operation 	: [frozenset({86, -6, -4, -2}), frozenset({-62, -55, -54, -50, -46, -41, -36, -30, -26, -23, -86, -19, -14, -73, -8, -67}), frozenset({-55, -52, -50, -47, -42, -37, -33, -26, -24, -86, -21, -82, -17, -80, -74, -8, -71}), frozenset({-58, -57, -53, -50, -47, -40, -37, -34, -28, -25, -86, -82, -17, -80, -12, -73, -72}), frozenset({-59, -55, -52, -49, -46, -36, -30, -26, -24, -86, -19, -82, -16, -79, -10, -73, -72, -65}), frozenset({-63, -62, -86, -21, -82, -14, -78, -74, -8, -71}), frozenset({-63, -30, -28, -59, -24, -86, -21, -46, -14, -75, -10, -39, -71, -36}), frozenset({-29, -25, -86, -21, -82, -17, -47, -79, -12, -43, -37}), frozenset({-62, -55, -52, -48, -45, -40, -36, -30, -26, -24, -86, -19, -14, -10, -73, -70, -67}), frozenset({-37, -55, -86, -52, -51, -17, -47, -43, -75, -69, -67, -33}), frozenset({-30, -86, -19, -16, -12, -75, -44, -39, -71}), frozenset({-32, -8, -86, -21, -50, -17, -82, -46, -74, -40, -70, -36})]
39	itemsets left after W operation 	: [frozenset({-73, -26, -10, 87, -36}), frozenset({-31, -60, -23, -87, -53, -19, -16, -48, -78, -41, -72, -7, -4, -3}), frozenset({-63, -30, -60, -87, -22, -85, -48, -14, -78, -44, -41, -2}), frozenset({-31, -59, -55, -22, -85, -52, -87, -16, -48, -45, -39, -2}), frozenset({-63, -30, -59, -87, -22, -53, -85, -84, -48, -16, -79, -45, -39, -2}), frozenset({-30, -59, -24, -55, -86, -87, -52, -19, -82, -49, -16, -79, -46, -72, -65}), frozenset({-62, -30, -24, -55, -86, -87, -52, -19, -48, -14, -45, -40, -70, -67})]
7	itemsets left after V operation 	: [frozenset({-72, 3, -21, 85}), frozenset({-6, -4, -3}), frozenset({3, 86, -2})]
2	itemsets left after V operation 	: [frozenset({-6, -4, -3}), frozenset({-31, -60, 6, -23, -87, -53, -19, -16, -48, -78, -41, -72, -7})]
# of frequent itemsets	: 17
Time of DCI Closed		: 0.14179658889770508
16	itemsets left after W operation 	: [frozenset({88, -85, -2}), frozenset({-30, -61, -88, -14, -46, -10, -74, -36}), frozenset({-32, -28, -24, -55, -88, -53, -82, -17, -46, -74, -36, -66}), frozenset({-63, -59, -53, -48, -45, -39, -37, -30, -26, -88, -22, -84, -16, -79, -10, -73}), frozenset({-64, -62, -88, -82, -49, -17, -47, -79, -77, -12, -41, -36, -33}), frozenset({-62, -28, -58, -57, -24, -88, -50, -17, -46, -10, -74, -40, -36, -67, -33}), frozenset({-62, -88, -52, -82, -50, -17, -46, -78, -12, -75, -36, -34}), frozenset({-25, -88, -17, -47, -75, -40, -37, -67, -33}), frozenset({-62, -58, -56, -54, -51, -47, -40, -36, -35, -28, -24, -88, -17, -76, -8, -67}), frozenset({-61, -58, -57, -54, -49, -45, -42, -36, -30, -26, -24, -88, -82, -79, -13, -75, -10}), frozenset({-63, -30, -60, -88, -87, -22, -48, -14, -78, -44, -41}), frozenset({-31, -59, -88, -55, -22, -87, -52, -16, -48, -45, -39}), frozenset({-63, -30, -59, -88, -87, -22, -53, -84, -48, -16, -79, -45, -39})]
14	itemsets left after W operation 	: [frozenset({89, -47, -17}), frozenset({-62, -54, -50, -42, -37, -33, -28, -89, -24, -21, -82, -80, -73, -72, -7, -5, -67, -2}), frozenset({-55, -52, -50, -42, -37, -33, -26, -89, -24, -86, -21, -82, -80, -74, -8, -71}), frozenset({-58, -57, -53, -50, -40, -37, -34, -28, -25, -89, -86, -82, -80, -12, -73, -72}), frozenset({-29, -25, -89, -86, -21, -82, -79, -12, -43, -37}), frozenset({-37, -89, -55, -86, -52, -51, -43, -75, -69, -67, -33}), frozenset({-64, -62, -89, -88, -82, -49, -79, -77, -12, -41, -36, -33}), frozenset({-89, -25, -88, -75, -40, -37, -67, -33}), frozenset({-62, -28, -58, -89, -56, -24, -54, -88, -51, -35, -76, -40, -8, -36, -67})]
Initial DL				: 42111.586513538576
Final DL				: 8949.988840198725
Compression (wrt me)	: 0.7874696827838256
Operator Counters		: {'D': 0, 'W': 5, 'V': 2, 'S': 0, 'R': 0, 'T': 3}
Misle Learning Runtime	: 1.7383720874786377

# of frequent itemsets	: 12302
Time of DCI Closed		: 0.37857651710510254
9  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-73, -72, -7, -5, -2}), frozenset({-21, -17, -12, -7, -5, -2}), frozenset({-73, -72, -6, -4, -2}), frozenset({-28, -51, -17, -47, -6, -4, -67, -2}), frozenset({-21, -4, -14, -10, -73, -72, -6, -36, -2})}
DL of initial theory	: 41618.99408196772
3779	itemsets left after T operation 	: [frozenset({-72, -6, -4, -2})]
2523	itemsets left after W operation 	: [frozenset({85, -6, -21, -4, -17}), frozenset({-32, -64, -61, -55, -53, -85, -48, -46, -73, -72, -36, -3}), frozenset({-62, -58, -56, -54, -51, -47, -9, -43, -37, -33, -28, -24, -85, -3, -73, -72, -67}), frozenset({-30, -59, -26, -24, -55, -53, -85, -48, -73, -46, -41, -72, -36, -3}), frozenset({-28, -24, -56, -85, -84, -50, -80, -73, -46, -12, -41, -72, -3, -34}), frozenset({-31, -62, -55, -23, -85, -52, -49, -40, -12, -44, -73, -72, -36, -3, -66}), frozenset({-62, -55, -54, -50, -46, -42, -8, -37, -33, -27, -24, -85, -82, -80, -72, -3, -66}), frozenset({-62, -28, -25, -55, -85, -47, -43, -37, -67, -2, -33}), frozenset({-32, -62, -22, -85, -49, -80, -46, -41, -8, -37, -67, -2}), frozenset({-28, -24, -85, -51, -46, -11, -42, -36, -2}), frozenset({-31, -61, -28, -24, -55, -53, -85, -50, -46, -76, -72, -40, -36, -3}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -85, -82, -80, -3, -12, -73, -72, -67}), frozenset({-62, -58, -24, -56, -8, -53, -85, -50, -41, -73, -72, -36, -3, -66}), frozenset({-10, -73, -71, -85, -2}), frozenset({-62, -28, -24, -56, -85, -52, -49, -67, -47, -11, -72, -73, -40, -37, -3}), frozenset({-32, -61, -29, -24, -55, -53, -85, -51, -67, -47, -42, -73, -72, -36, -3}), frozenset({-61, -55, -52, -49, -46, -41, -36, -32, -26, -24, -85, -82, -79, -66, -75, -68, -2}), frozenset({-62, -57, -54, -50, -46, -41, -36, -30, -28, -25, -85, -82, -80, -10, -73, -70, -67, -2}), frozenset({-32, -26, -55, -22, -85, -52, -49, -78, -45, -12, -42, -73, -72, -36, -3}), frozenset({-32, -62, -22, -53, -85, -49, -46, -73, -40, -71, -37, -67, -2}), frozenset({-61, -28, -23, -53, -85, -50, -80, -46, -10, -42, -2, -36, -66, -33}), frozenset({-32, -28, -23, -85, -50, -46, -78, -42, -73, -8, -71, -36, -2}), frozenset({-26, -10, -40, -37, -85, -67, -33}), frozenset({-59, -52, -50, -46, -42, -36, -31, -28, -22, -85, -79, -73, -8, -71, -67, -2}), frozenset({-62, -55, -52, -50, -47, -40, -8, -37, -35, -28, -25, -85, -82, -79, -3, -73, -72, -67}), frozenset({-61, -58, -56, -53, -49, -46, -41, -36, -30, -28, -24, -85, -66, -73, -8, -71, -2}), frozenset({-30, -26, -58, -24, -57, -8, -85, -52, -49, -46, -41, -73, -72, -36, -3}), frozenset({-8, -85, -84, -2}), frozenset({-55, -54, -85, -51, -43, -37, -67, -2}), frozenset({-32, -64, -28, -57, -25, -85, -50, -47, -42, -73, -72, -37, -3})]
1599	itemsets left after W operation 	: [frozenset({-6, -36, -4, 86}), frozenset({-31, -27, -22, -21, -86, -14, -45, -10, -40, -2}), frozenset({-32, -23, -86, -21, -82, -46, -13, -12, -75, -40, -71, -2}), frozenset({-55, -52, -48, -47, -8, -39, -31, -28, -24, -86, -21, -3, -14, -73, -72, -67}), frozenset({-32, -26, -24, -86, -49, -47, -79, -12, -43, -73, -71, -2}), frozenset({-32, -26, -24, -86, -53, -21, -82, -49, -47, -78, -12, -42, -73, -71, -2}), frozenset({-63, -59, -55, -53, -50, -44, -72, -39, -33, -26, -24, -86, -21, -16, -73, -8, -3}), frozenset({-31, -62, -58, -57, -26, -23, -86, -21, -50, -16, -46, -9, -40, -67, -2}), frozenset({-55, -53, -50, -45, -41, -32, -26, -24, -86, -21, -82, -67, -14, -78, -73, -8, -70, -3}), frozenset({-86, -21, -82, -79, -14, -73, -72, -3}), frozenset({-30, -86, -21, -14, -10, -73, -68, -3}), frozenset({-59, -58, -56, -52, -50, -47, -41, -32, -26, -23, -86, -19, -14, -10, -73, -71, -3, -66}), frozenset({-62, -30, -58, -57, -26, -24, -86, -52, -50, -79, -46, -2, -40, -66}), frozenset({-58, -55, -86, -20, -82, -17, -79, -42, -2, -33}), frozenset({-61, -55, -53, -48, -46, -42, -32, -26, -24, -86, -21, -82, -16, -79, -75, -10, -72, -67}), frozenset({-59, -58, -56, -52, -50, -46, -43, -31, -28, -23, -86, -82, -17, -79, -10, -73, -71, -67, -2}), frozenset({-57, -53, -49, -46, -72, -41, -32, -28, -24, -86, -82, -17, -80, -73, -8, -3, -66}), frozenset({-62, -53, -49, -73, -46, -41, -32, -26, -22, -86, -19, -82, -17, -79, -2, -9, -70, -66}), frozenset({-30, -26, -22, -21, -86, -48, -46, -14, -10, -73, -40, -72, -3, -65}), frozenset({-62, -56, -53, -50, -47, -41, -30, -24, -86, -21, -67, -16, -79, -73, -8, -69, -3}), frozenset({-59, -55, -52, -48, -44, -40, -30, -26, -23, -86, -82, -17, -79, -75, -8, -71, -2}), frozenset({-61, -55, -54, -49, -46, -40, -30, -28, -86, -82, -80, -14, -8, -71, -67, -2}), frozenset({-62, -30, -28, -24, -55, -86, -52, -50, -67, -46, -43, -73, -72, -3}), frozenset({-32, -26, -22, -53, -21, -51, -86, -67, -16, -46, -12, -75, -41, -72, -3})]
1046	itemsets left after T operation 	: [frozenset({-21, -17, -2, -73})]
598	itemsets left after W operation 	: [frozenset({-24, -72, 87, -73}), frozenset({-59, -55, -53, -48, -47, -42, -36, -28, -87, -21, -82, -16, -79, -8, -7, -4, -2}), frozenset({-61, -58, -57, -49, -47, -40, -37, -33, -28, -87, -84, -19, -17, -80, -8, -6, -4, -3, -65}), frozenset({-62, -28, -58, -56, -87, -54, -85, -51, -47, -3, -43, -9, -37, -67, -33}), frozenset({-30, -59, -26, -55, -87, -53, -85, -48, -46, -41, -36, -3}), frozenset({-28, -56, -87, -85, -84, -50, -80, -46, -12, -41, -3, -34}), frozenset({-32, -28, -57, -87, -86, -53, -82, -49, -17, -80, -46, -41, -8, -3, -66}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -87, -85, -82, -80, -3, -12, -67}), frozenset({-62, -58, -56, -87, -53, -85, -50, -41, -8, -36, -3, -66}), frozenset({-30, -26, -57, -87, -52, -19, -50, -17, -42, -10, -7, -37, -4, -3}), frozenset({-62, -30, -28, -55, -86, -87, -52, -50, -3, -46, -43, -67}), frozenset({-62, -28, -56, -87, -85, -52, -49, -67, -47, -11, -40, -37, -3}), frozenset({-32, -61, -29, -55, -87, -53, -85, -51, -47, -3, -42, -36, -67}), frozenset({-28, -37, -87, -82, -17, -79, -46, -12, -2, -40, -6, -5, -34}), frozenset({-30, -58, -26, -57, -87, -85, -52, -49, -46, -41, -8, -36, -3}), frozenset({-28, -55, -87, -21, -52, -51, -43, -10, -7, -37, -4, -35, -2}), frozenset({-58, -56, -52, -49, -47, -40, -36, -34, -26, -87, -19, -82, -17, -79, -12, -7, -4, -3, -66}), frozenset({-64, -62, -48, -44, -39, -37, -30, -26, -87, -84, -19, -80, -14, -8, -7, -4, -2}), frozenset({-63, -59, -26, -55, -86, -53, -21, -87, -50, -16, -44, -8, -39, -3, -33}), frozenset({-31, -28, -55, -86, -21, -52, -87, -67, -48, -47, -14, -8, -39, -3})]
264	itemsets left after W operation 	: [frozenset({-47, -28, 88, -6, -4, -17}), frozenset({-32, -62, -24, -55, -88, -51, -3, -43, -72, -37, -67}), frozenset({-88, -51, -2, -67}), frozenset({-62, -25, -88, -55, -52, -51, -67, -80, -43, -73, -72, -37, -3, -33}), frozenset({-32, -62, -24, -56, -88, -52, -51, -3, -43, -72, -37, -67}), frozenset({-61, -58, -57, -8, -87, -88, -84, -19, -49, -80, -40, -65, -37, -3, -33})]
203	itemsets left after W operation 	: [frozenset({-72, 89, -73}), frozenset({-32, -64, -28, -57, -25, -89, -85, -50, -47, -42, -37, -3}), frozenset({-13, -11, -89, -7, -21, -4, -2}), frozenset({-79, -14, -89, -86, -21, -3, -82}), frozenset({-59, -55, -53, -48, -47, -36, -32, -26, -89, -22, -21, -16, -78, -66, -7, -4, -2}), frozenset({-7, -5, -2, -89}), frozenset({-62, -25, -88, -55, -89, -52, -51, -80, -3, -43, -37, -67, -33}), frozenset({-79, -89, -7, -5, -2}), frozenset({-30, -26, -89, -22, -21, -86, -48, -46, -14, -10, -40, -3, -65}), frozenset({-32, -64, -61, -89, -55, -53, -85, -48, -46, -36, -3}), frozenset({-31, -62, -89, -55, -23, -85, -52, -49, -12, -44, -40, -36, -3, -66}), frozenset({-24, 87, -89}), frozenset({-32, -26, -89, -55, -22, -85, -52, -49, -78, -45, -12, -42, -36, -3}), frozenset({-62, -55, -52, -50, -47, -40, -37, -35, -28, -25, -89, -85, -82, -79, -3, -8, -67})]
149	itemsets left after T operation 	: [frozenset({-46, -2})]
132	itemsets left after W operation 	: [frozenset({-53, -73, -24, 90, -21}), frozenset({-61, -55, -48, -46, -40, -37, -7, -32, -28, -90, -80, -14, -10, -71, -4, -3}), frozenset({-32, -26, -90, -55, -86, -50, -82, -67, -14, -45, -78, -41, -8, -70, -3}), frozenset({-62, -30, -90, -56, -86, -50, -67, -16, -47, -79, -41, -8, -69, -3}), frozenset({-32, -26, -90, -86, -82, -49, -47, -78, -12, -42, -71, -2})]
62	itemsets left after T operation 	: [frozenset({-4, -2})]
20	itemsets left after W operation 	: [frozenset({-6, 91, -4}), frozenset({-61, -58, -57, -52, -48, -46, -41, -37, -34, -91, -26, -22, -82, -17, -78, -75, -10, -72, -3, -66}), frozenset({-51, -3, -29, -91, -42, -24, -35}), frozenset({-63, -59, -58, -57, -91, -21, -16, -77, -10, -72, -40, -3}), frozenset({-21, 85, -91, -17}), frozenset({-36, -91, 86}), frozenset({-47, -28, -91, 88, -17})]
11	itemsets left after T operation 	: [frozenset({-21, -2, -17})]
5	itemsets left after V operation 	: [frozenset({2, -29, -25, -5, -51, -47, -43, -7, -37, -3, -33}), frozenset({2, 85, -91}), frozenset({-21, -2, -17})]
Unpacking W operator applied earlier using 90 on frozenset({-24, -21, -53, -73})
Unpacking W operator applied earlier using 88 on frozenset({-28, -17, -47, -6, -4})
Unpacking W operator applied earlier using 86 on frozenset({-6, -36, -4})
# of frequent itemsets	: 31
Time of DCI Closed		: 0.14554476737976074
22	itemsets left after T operation 	: [frozenset({-47, -3})]
19	itemsets left after W operation 	: [frozenset({-46, 92, -3}), frozenset({-61, -58, -57, -52, -48, -41, -37, -34, -92, -91, -26, -22, -82, -17, -78, -75, -10, -72, -66}), frozenset({-62, -55, -54, -50, -42, -8, -37, -33, -92, -27, -24, -85, -82, -80, -72, -66}), frozenset({-31, -61, -28, -92, -24, -55, -53, -85, -50, -76, -40, -72, -36}), frozenset({-53, -51, -41, -36, -32, -92, -26, -22, -21, -16, -12, -75, -72, -6, -4, -67}), frozenset({-30, -92, -59, -26, -55, -87, -53, -85, -48, -41, -36}), frozenset({-28, -92, -56, -87, -85, -84, -50, -80, -12, -41, -34}), frozenset({-57, -53, -49, -41, -36, -32, -28, -92, -87, -82, -17, -80, -8, -6, -4, -66}), frozenset({-59, -58, -55, -53, -50, -40, -37, -30, -28, -92, -87, -85, -82, -80, -12, -67}), frozenset({-62, -30, -28, -92, -55, -87, -52, -4, -50, -43, -6, -36, -67}), frozenset({-30, -92, -58, -57, -26, -87, -85, -52, -49, -41, -8, -36}), frozenset({-30, -92, -26, -89, -22, -21, -4, -48, -14, -10, -40, -6, -36, -65}), frozenset({-32, -64, -61, -92, -89, -55, -53, -85, -48, -36}), frozenset({-61, -55, -53, -48, -40, -37, -7, -32, -28, -92, -24, -21, -80, -14, -10, -73, -71, -4})]
18	itemsets left after W operation 	: [frozenset({-4, -36, 93}), frozenset({-30, -93, -92, -26, -89, -22, -21, -48, -14, -10, -40, -6, -65}), frozenset({-30, -93, -21, -14, -10, -73, -6, -68, -3}), frozenset({-61, -55, -53, -48, -46, -42, -32, -93, -26, -24, -21, -82, -16, -79, -75, -10, -72, -6, -67}), frozenset({-63, -59, -55, -53, -50, -44, -39, -33, -93, -26, -87, -21, -16, -8, -6, -3}), frozenset({-93, -89, -21, -82, -79, -14, -6, -3}), frozenset({-55, -53, -50, -45, -41, -32, -6, -93, -26, -24, -21, -82, -67, -14, -78, -73, -8, -70, -3}), frozenset({-32, -93, -92, -26, -22, -53, -21, -51, -16, -12, -75, -41, -72, -6, -67}), frozenset({-32, -93, -28, -92, -57, -87, -53, -82, -49, -17, -80, -41, -8, -6, -66}), frozenset({-62, -30, -28, -92, -93, -55, -87, -52, -50, -43, -6, -67})]
14	itemsets left after T operation 	: [frozenset({-3, -50})]
12	itemsets left after W operation 	: [frozenset({-85, -3, 94}), frozenset({-31, -62, -94, -89, -55, -23, -52, -49, -12, -44, -40, -36, -66}), frozenset({-32, -94, -26, -89, -55, -22, -52, -49, -78, -45, -12, -42, -36})]
11	itemsets left after V operation 	: [frozenset({-35, -29, -91, -42, -24, -51, 47}), frozenset({-63, -59, -58, -57, -91, -21, 47, -16, -77, -10, -40, -72}), frozenset({-47, -3}), frozenset({-46, 92, 47}), frozenset({-30, -93, -21, 47, -14, -10, -73, -6, -68}), frozenset({-93, -89, -21, -82, 47, -79, -14, -6}), frozenset({-50, 47}), frozenset({-85, 94, 47})]
Unpacking W operator applied earlier using 93 on frozenset({-36, -4})
Unpacking W operator applied earlier using 87 on frozenset({-24, -72, -73})
Unpacking W operator applied earlier using 85 on frozenset({-6, -21, -4, -17})
# of frequent itemsets	: 3
Time of DCI Closed		: 0.1398012638092041
Clause Pruned	: frozenset({-79, -89, -7, -5, -2})
Initial DL				: 42111.5865135386
Final DL				: 6755.899738084235
Compression (wrt me)	: 0.8395714743278015
Operator Counters		: {'D': 0, 'W': 4, 'V': 2, 'S': 0, 'R': 0, 'T': 7}
Misle Learning Runtime	: 1.7295403480529785

# of frequent itemsets	: 7185
Time of DCI Closed		: 0.28206467628479004
42  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-21, -16, -8, -6, -4, -3}), frozenset({-6, -4, -3}), frozenset({-7, -4, -2}), frozenset({-21, -17, -3, -72, -73, -8, -6, -37, -4, -35})}
DL of initial theory	: 40707.59809129696
3695	itemsets left after T operation 	: [frozenset({-26, -36, -6, -4, -3})]
1542	itemsets left after W operation 	: [frozenset({85, -72, -6, -21, -4}), frozenset({-32, -62, -28, -24, -55, -53, -85, -82, -17, -48, -79, -44, -75, -10, -3}), frozenset({-62, -28, -24, -85, -82, -17, -80, -47, -49, -43, -73, -37, -3, -33}), frozenset({-63, -30, -60, -26, -22, -85, -48, -14, -78, -44, -41, -10, -73, -36, -2}), frozenset({-30, -61, -85, -14, -46, -10, -74, -36, -2}), frozenset({-63, -59, -55, -54, -48, -44, -39, -36, -31, -27, -23, -85, -17, -75, -10, -3}), frozenset({-62, -28, -57, -24, -85, -82, -17, -48, -47, -3, -12, -43, -73, -36, -35}), frozenset({-32, -28, -24, -55, -53, -85, -82, -17, -46, -74, -2, -36, -66}), frozenset({-63, -59, -53, -48, -45, -39, -37, -30, -26, -22, -85, -84, -16, -79, -10, -73, -2}), frozenset({-61, -28, -24, -85, -51, -17, -67, -47, -11, -43, -73, -37, -3}), frozenset({-64, -62, -85, -82, -49, -17, -47, -79, -77, -12, -41, -36, -2, -33}), frozenset({-58, -56, -53, -50, -47, -40, -36, -30, -28, -25, -85, -82, -17, -78, -10, -73, -3}), frozenset({-32, -28, -58, -23, -54, -55, -85, -49, -16, -46, -73, -8, -39, -36, -3}), frozenset({-60, -55, -53, -48, -45, -40, -37, -34, -26, -22, -85, -82, -17, -79, -11, -73, -3, -65}), frozenset({-62, -58, -57, -50, -46, -40, -36, -33, -28, -24, -85, -17, -10, -74, -67, -2}), frozenset({-31, -59, -26, -55, -22, -85, -52, -16, -48, -45, -10, -73, -39, -36, -2}), frozenset({-64, -58, -53, -49, -47, -39, -36, -33, -28, -24, -85, -16, -78, -10, -73, -3}), frozenset({-30, -24, -85, -14, -10, -73, -40, -36, -3}), frozenset({-14, -73, -8, -85, -36, -3, -34}), frozenset({-28, -56, -85, -52, -82, -17, -48, -79, -67, -10, -73, -37, -3, -34}), frozenset({-62, -85, -52, -82, -50, -17, -46, -78, -12, -75, -2, -36, -34}), frozenset({-32, -28, -56, -23, -53, -85, -49, -16, -73, -44, -10, -41, -38, -3, -66}), frozenset({-35, -37, -73, -8, -85, -3, -17}), frozenset({-25, -85, -17, -47, -75, -40, -37, -67, -2, -33}), frozenset({-32, -58, -57, -22, -53, -85, -16, -73, -36, -3}), frozenset({-30, -85, -83, -16, -46, -78, -73, -8, -36, -3}), frozenset({-64, -31, -58, -26, -56, -53, -85, -16, -47, -48, -73, -11, -41, -37, -3}), frozenset({-63, -59, -53, -48, -45, -39, -36, -30, -26, -22, -85, -84, -16, -79, -10, -73, -2}), frozenset({-61, -56, -52, -50, -47, -40, -37, -35, -28, -24, -85, -82, -17, -79, -3, -12, -73, -67}), frozenset({-62, -58, -56, -54, -51, -47, -40, -36, -35, -28, -24, -85, -17, -76, -8, -67, -2}), frozenset({-62, -58, -57, -53, -48, -46, -39, -36, -30, -22, -85, -16, -10, -73, -3, -65}), frozenset({-61, -58, -57, -54, -49, -45, -42, -36, -30, -26, -24, -85, -82, -79, -13, -75, -10, -2}), frozenset({-14, -12, -73, -85, -36, -3}), frozenset({-28, -25, -85, -50, -17, -3, -46, -12, -73, -35})]
782	itemsets left after S operation 	: [frozenset({-6, -4, -3})]
213	itemsets left after T operation 	: [frozenset({-36, -3, -73})]
205	itemsets left after T operation 	: [frozenset({-73, -3, -17})]
60	itemsets left after W operation 	: [frozenset({-73, -26, -10, 86, -36}), frozenset({-59, -55, -52, -49, -46, -30, -24, -86, -19, -82, -16, -79, -72, -6, -4, -2, -65}), frozenset({-62, -55, -52, -48, -45, -40, -70, -30, -24, -86, -19, -14, -6, -4, -67, -2}), frozenset({-63, -30, -60, -22, -85, -86, -48, -14, -78, -44, -41, -2}), frozenset({-31, -59, -55, -22, -85, -52, -86, -16, -48, -45, -39, -2}), frozenset({-63, -30, -59, -22, -53, -85, -84, -86, -48, -16, -79, -45, -39, -2})]
31	itemsets left after W operation 	: [frozenset({87, -6, -21, -4, -2}), frozenset({-55, -52, -50, -47, -42, -37, -33, -26, -24, -87, -82, -17, -80, -74, -8, -71}), frozenset({-63, -62, -87, -82, -78, -14, -74, -8, -71}), frozenset({-63, -30, -28, -59, -24, -87, -14, -46, -75, -10, -39, -71, -36}), frozenset({-29, -25, -87, -82, -17, -47, -79, -12, -43, -37}), frozenset({-32, -87, -82, -50, -17, -46, -74, -40, -8, -70, -36})]
19	itemsets left after V operation 	: [frozenset({3, -37, -55, -52, -51, -17, -47, -43, -75, -69, -67, -2, -33}), frozenset({-30, 3, -19, -16, -12, -75, -44, -39, -71, -2}), frozenset({-72, 3, -21, 85}), frozenset({-6, -4, -3}), frozenset({3, -59, -55, -52, -49, -46, -30, -24, -86, -19, -82, -16, -79, -72, -2, -65}), frozenset({-62, -30, 3, -24, -55, -86, -52, -19, -48, -14, -45, -40, -70, -67, -2}), frozenset({3, -21, -2, 87})]
15	itemsets left after V operation 	: [frozenset({-36, -3, -73}), frozenset({36, -17}), frozenset({-32, -28, 36, -56, -23, -53, -85, -49, -16, -44, -10, -41, -38, -66}), frozenset({-64, -31, 36, -58, -26, -56, -53, -85, -16, -47, -48, -11, -41, -37})]
4	itemsets left after T operation 	: [frozenset({-48, -3})]
2	itemsets left after V operation 	: [frozenset({86, 3, -26, -10}), frozenset({-36, -3, -73})]
# of frequent itemsets	: 13
Time of DCI Closed		: 0.14253926277160645
12	itemsets left after W operation 	: [frozenset({88, -85, -2}), frozenset({-30, -61, -88, -14, -46, -10, -74, -36}), frozenset({-32, -28, -24, -55, -88, -53, -82, -17, -46, -74, -36, -66}), frozenset({-63, -59, -53, -48, -45, -39, -37, -30, -26, -88, -22, -84, -16, -79, -10, -73}), frozenset({-64, -62, -88, -82, -49, -17, -47, -79, -77, -12, -41, -36, -33}), frozenset({-62, -28, -58, -57, -24, -88, -50, -17, -46, -10, -74, -40, -36, -67, -33}), frozenset({-62, -88, -52, -82, -50, -17, -46, -78, -12, -75, -36, -34}), frozenset({-25, -88, -17, -47, -75, -40, -37, -67, -33}), frozenset({-62, -58, -56, -54, -51, -47, -40, -36, -35, -28, -24, -88, -17, -76, -8, -67}), frozenset({-61, -58, -57, -54, -49, -45, -42, -36, -30, -26, -24, -88, -82, -79, -13, -75, -10}), frozenset({-63, -30, -60, -88, -22, -86, -48, -14, -78, -44, -41}), frozenset({-31, -59, -88, -55, -22, -86, -52, -16, -48, -45, -39}), frozenset({-63, -30, -59, -88, -22, -53, -84, -86, -48, -16, -79, -45, -39})]
9	itemsets left after V operation 	: [frozenset({-62, -54, -50, -47, -42, -37, -36, -33, -28, -24, -21, -82, -80, -73, -72, -7, -5, -67, -2}), frozenset({-58, -55, -54, -50, -46, -41, -37, -36, -31, -28, -22, -21, -78, -12, -73, -72, -7, -5, -2}), frozenset({-55, -52, -50, -47, -42, -37, -36, -33, -26, -24, -87, -82, -80, -74, -8, -71}), frozenset({-29, -25, -87, -82, -47, -79, -12, -43, -37, -36}), frozenset({-32, -8, -87, -82, -50, -46, -74, -40, -70, -36}), frozenset({3, -69, -55, -52, -51, -47, -43, -75, -37, -36, -67, -2, -33}), frozenset({36, -17}), frozenset({-32, -28, -24, -55, -88, -53, -82, -46, -74, -36, -66}), frozenset({-64, -62, -88, -82, -49, -47, -79, -77, -12, -41, -36, -33}), frozenset({-62, -28, -58, -57, -24, -88, -50, -46, -10, -74, -40, -36, -67, -33}), frozenset({-62, -88, -52, -82, -50, -46, -78, -12, -75, -36, -34}), frozenset({-25, -88, -47, -75, -40, -37, -36, -67, -33}), frozenset({-62, -28, -58, -56, -24, -54, -88, -8, -51, -67, -47, -76, -40, -36, -35})]
Clause Pruned	: frozenset({-32, -28, 36, -56, -23, -53, -85, -49, -16, -44, -10, -41, -38, -66})
Clause Pruned	: frozenset({-64, -31, 36, -58, -26, -56, -53, -85, -16, -47, -48, -11, -41, -37})
Clause Pruned	: frozenset({-48, -3})
Clause Pruned	: frozenset({-63, -59, -53, -48, -45, -39, -37, -30, -26, -88, -22, -84, -16, -79, -10, -73})
Initial DL				: 41653.2180689255
Final DL				: 8285.325753319932
Compression (wrt me)	: 0.8010879798144331
Operator Counters		: {'D': 0, 'W': 4, 'V': 4, 'S': 1, 'R': 0, 'T': 4}
Misle Learning Runtime	: 1.5055463314056396

# of frequent itemsets	: 10221
Time of DCI Closed		: 0.3490488529205322
23  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-73, -72, -7, -5, -2}), frozenset({-6, -4, -2}), frozenset({-21, -17, -12, -7, -5, -2}), frozenset({-73, -72, -6, -4, -2}), frozenset({-28, -51, -17, -47, -6, -4, -67, -2}), frozenset({-21, -4, -14, -10, -73, -72, -6, -36, -2})}
DL of initial theory	: 40707.59809129701
3836	itemsets left after T operation 	: [frozenset({-72, -6, -4, -2})]
1994	itemsets left after T operation 	: [frozenset({-6, -4, -17})]
1170	itemsets left after T operation 	: [frozenset({-72, -21, -2, -73})]
219	itemsets left after W operation 	: [frozenset({-6, -36, -4, 85}), frozenset({-31, -27, -22, -21, -85, -14, -45, -10, -40, -2}), frozenset({-32, -23, -21, -85, -82, -46, -13, -12, -75, -40, -71, -2}), frozenset({-61, -55, -54, -49, -46, -40, -30, -28, -85, -82, -80, -14, -8, -71, -67, -2}), frozenset({-62, -30, -28, -24, -55, -85, -52, -50, -3, -46, -43, -73, -72, -67}), frozenset({-55, -52, -48, -47, -8, -39, -31, -28, -24, -21, -85, -3, -14, -73, -72, -67}), frozenset({-32, -26, -24, -85, -49, -47, -79, -12, -43, -73, -71, -2}), frozenset({-32, -26, -22, -53, -21, -51, -85, -67, -16, -46, -12, -75, -41, -72, -3}), frozenset({-63, -59, -55, -53, -50, -44, -8, -39, -33, -26, -24, -21, -85, -16, -73, -72, -3}), frozenset({-31, -62, -58, -57, -26, -23, -21, -85, -50, -16, -46, -9, -40, -67, -2}), frozenset({-55, -53, -50, -45, -41, -32, -26, -24, -21, -85, -82, -3, -14, -78, -73, -8, -70, -67}), frozenset({-85, -21, -82, -79, -14, -73, -72, -3}), frozenset({-30, -85, -21, -14, -10, -73, -68, -3}), frozenset({-59, -58, -56, -52, -50, -47, -41, -32, -26, -23, -85, -19, -14, -10, -73, -71, -3, -66}), frozenset({-62, -30, -58, -57, -26, -24, -85, -52, -50, -79, -46, -66, -40, -2}), frozenset({-61, -55, -52, -48, -46, -41, -33, -26, -85, -18, -80, -14, -73, -8, -68, -2, -65}), frozenset({-32, -26, -24, -55, -21, -52, -85, -48, -16, -44, -42, -73, -8, -68, -2}), frozenset({-61, -55, -53, -48, -46, -42, -32, -26, -24, -21, -85, -82, -16, -79, -75, -10, -72, -67}), frozenset({-62, -30, -26, -56, -22, -53, -85, -51, -16, -45, -10, -39, -67, -2}), frozenset({-62, -56, -53, -50, -47, -41, -30, -24, -21, -85, -16, -79, -3, -73, -8, -69, -67})]
165	itemsets left after T operation 	: [frozenset({-24, -21, -73})]
96	itemsets left after T operation 	: [frozenset({-21, -2, -17})]
87	itemsets left after S operation 	: [frozenset({-6, -4, -2})]
25	itemsets left after W operation 	: [frozenset({-72, 86, -73}), frozenset({-30, -26, -57, -24, -86, -52, -19, -50, -17, -42, -10, -7, -37, -4, -3}), frozenset({-7, -86, -5, -2}), frozenset({-58, -56, -52, -49, -47, -40, -36, -34, -26, -24, -86, -19, -82, -17, -79, -12, -7, -4, -3, -66}), frozenset({-64, -62, -48, -44, -39, -37, -30, -26, -24, -86, -84, -19, -80, -14, -8, -7, -4, -2}), frozenset({-79, -7, -86, -5, -2}), frozenset({-86, -21, -82, -17, -12, -7, -5, -3}), frozenset({-86, -21, -2}), frozenset({-62, -30, -28, -24, -55, -86, -85, -52, -50, -67, -46, -43, -3}), frozenset({-79, -14, -21, -86, -85, -3, -82})]
24	itemsets left after V operation 	: [frozenset({-35, -3, 17, -29, -42, -24, -51}), frozenset({-63, -59, -58, -57, -21, -16, 17, -77, -10, -40, -72, -3}), frozenset({-6, -4, -17}), frozenset({17, -36, 85}), frozenset({17, -2})]
21	itemsets left after T operation 	: [frozenset({-21, -2})]
14	itemsets left after T operation 	: [frozenset({-4, -17})]
9	itemsets left after T operation 	: [frozenset({-2, -26, -73})]
4	itemsets left after W operation 	: [frozenset({-72, -46, -21, 87}), frozenset({-61, -55, -53, -48, -42, -32, -26, -24, -87, -85, -82, -16, -79, -75, -10, -67}), frozenset({-32, -26, -87, -22, -53, -85, -51, -67, -16, -12, -75, -41, -3})]
2	itemsets left after T operation 	: [frozenset({-46, -2})]
0	itemsets left after V operation 	: [frozenset({-30, -14, -10, 24, -85, -68, -3}), frozenset({-24, -21, -73})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.15166091918945312
Clause Pruned	: frozenset({-63, -30, -59, -26, -22, -4, -39, -82, -48, -79, -14, -44, -8, -7, -36, -2})
Clause Pruned	: frozenset({-62, -30, -26, -56, -22, -53, -85, -51, -16, -45, -10, -39, -67, -2})
Clause Pruned	: frozenset({-79, -7, -86, -5, -2})
Clause Pruned	: frozenset({-2, -26, -73})
Clause Pruned	: frozenset({-46, -2})
Initial DL				: 41653.21806892551
Final DL				: 8833.516011485232
Compression (wrt me)	: 0.7879271657506028
Operator Counters		: {'D': 0, 'W': 3, 'V': 2, 'S': 1, 'R': 0, 'T': 9}
Misle Learning Runtime	: 1.1883902549743652

# of frequent itemsets	: 7844
Time of DCI Closed		: 0.31543564796447754
43  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-21, -16, -8, -6, -4, -3}), frozenset({-6, -4, -3}), frozenset({-7, -4, -2}), frozenset({-21, -17, -3, -72, -73, -8, -6, -37, -4, -35})}
DL of initial theory	: 40901.08214099918
4202	itemsets left after T operation 	: [frozenset({-21, -72, -6, -4, -3})]
2735	itemsets left after T operation 	: [frozenset({-26, -36, -6, -4, -3})]
1267	itemsets left after W operation 	: [frozenset({-6, -21, -4, 85}), frozenset({-30, -61, -26, -71, -22, -85, -17, -48, -46, -75, -10, -39, -37, -3}), frozenset({-63, -60, -48, -44, -41, -36, -30, -26, -22, -85, -14, -78, -10, -73, -72, -2}), frozenset({-30, -61, -85, -14, -46, -10, -74, -72, -36, -2}), frozenset({-63, -59, -55, -52, -48, -44, -39, -36, -30, -23, -85, -16, -12, -75, -71, -3}), frozenset({-61, -55, -52, -48, -45, -9, -41, -30, -26, -22, -85, -14, -73, -71, -3, -65}), frozenset({-32, -28, -24, -55, -53, -85, -82, -17, -46, -66, -74, -72, -36, -2}), frozenset({-63, -59, -53, -48, -45, -39, -37, -30, -26, -22, -85, -84, -16, -79, -10, -73, -72, -2}), frozenset({-55, -52, -50, -47, -42, -37, -33, -26, -24, -85, -82, -17, -80, -74, -8, -71, -2}), frozenset({-32, -24, -85, -84, -17, -48, -80, -45, -40, -8, -70, -37, -3, -65}), frozenset({-64, -62, -85, -82, -49, -17, -47, -79, -77, -12, -41, -72, -36, -2, -33}), frozenset({-63, -62, -85, -82, -78, -14, -74, -8, -71, -2}), frozenset({-16, -8, -85, -3}), frozenset({-62, -58, -57, -50, -46, -40, -36, -33, -28, -24, -85, -17, -10, -74, -72, -67, -2}), frozenset({-59, -55, -52, -48, -45, -39, -36, -31, -26, -22, -85, -16, -10, -73, -72, -2}), frozenset({-63, -30, -28, -59, -24, -85, -46, -14, -75, -10, -39, -71, -36, -2}), frozenset({-62, -85, -52, -50, -82, -17, -46, -78, -12, -75, -34, -72, -36, -2}), frozenset({-29, -25, -85, -82, -17, -47, -79, -12, -43, -37, -2}), frozenset({-25, -85, -17, -47, -75, -72, -40, -37, -67, -2, -33}), frozenset({-10, -85, -36, -3, -17}), frozenset({-63, -59, -53, -48, -45, -39, -36, -30, -26, -22, -85, -84, -16, -79, -10, -73, -72, -2}), frozenset({-62, -58, -56, -54, -51, -47, -40, -8, -36, -35, -28, -24, -85, -17, -76, -72, -67, -2}), frozenset({-31, -62, -28, -24, -53, -85, -48, -47, -14, -10, -40, -37, -3}), frozenset({-61, -58, -57, -54, -49, -45, -42, -36, -30, -26, -24, -85, -82, -79, -13, -75, -10, -72, -2}), frozenset({-59, -55, -85, -52, -16, -12, -44, -74, -39, -71, -3}), frozenset({-72, -85, -3})]
682	itemsets left after W operation 	: [frozenset({-10, -73, -72, 86, -22, -36}), frozenset({-63, -59, -58, -54, -49, -46, -39, -31, -26, -86, -21, -17, -78, -7, -5, -3}), frozenset({-31, -59, -26, -55, -86, -85, -52, -48, -16, -45, -39, -2}), frozenset({-31, -58, -26, -54, -21, -86, -82, -17, -49, -3, -46, -78, -39, -5, -7}), frozenset({-30, -61, -55, -86, -53, -82, -17, -48, -46, -78, -43, -7, -5, -3}), frozenset({-63, -30, -59, -26, -86, -53, -85, -84, -48, -16, -79, -45, -39, -2}), frozenset({-63, -30, -60, -26, -86, -85, -48, -14, -78, -44, -41, -2})]
199	itemsets left after S operation 	: [frozenset({-6, -4, -3})]
114	itemsets left after W operation 	: [frozenset({-48, -30, -26, 87}), frozenset({-59, -23, -87, -21, -17, -44, -42, -73, -72, -7, -5, -36, -3}), frozenset({-62, -55, -52, -45, -40, -36, -6, -24, -87, -19, -14, -10, -73, -70, -4, -67, -2}), frozenset({-63, -59, -87, -86, -53, -85, -84, -16, -79, -45, -39, -2}), frozenset({-63, -60, -87, -86, -85, -14, -78, -44, -41, -2}), frozenset({-61, -87, -22, -85, -17, -46, -75, -10, -71, -37, -39, -3}), frozenset({-61, -55, -22, -85, -52, -87, -73, -41, -45, -14, -9, -71, -3, -65}), frozenset({-63, -59, -53, -45, -39, -37, -87, -22, -85, -84, -16, -79, -10, -73, -72, -2})]
95	itemsets left after W operation 	: [frozenset({-72, 88, -36, -17}), frozenset({-59, -88, -23, -87, -21, -44, -42, -73, -7, -5, -3}), frozenset({-32, -28, -24, -55, -88, -53, -85, -82, -46, -74, -2, -66}), frozenset({-64, -62, -88, -85, -82, -49, -47, -79, -77, -12, -41, -2, -33}), frozenset({-62, -28, -58, -57, -24, -88, -85, -50, -46, -10, -74, -40, -67, -2, -33}), frozenset({-62, -88, -85, -52, -82, -50, -46, -78, -12, -75, -34, -2}), frozenset({-62, -58, -56, -54, -51, -47, -40, -35, -28, -24, -88, -85, -76, -8, -67, -2})]
75	itemsets left after W operation 	: [frozenset({89, -6, -4, -2}), frozenset({-62, -55, -54, -50, -46, -41, -36, -30, -26, -89, -23, -19, -14, -73, -8, -67}), frozenset({-58, -57, -53, -50, -47, -40, -37, -34, -28, -25, -89, -82, -17, -80, -12, -73, -72}), frozenset({-69, -89, -55, -52, -51, -17, -47, -43, -75, -37, -67, -33}), frozenset({-30, -89, -19, -16, -12, -75, -44, -39, -71}), frozenset({-62, -89, -24, -55, -87, -52, -19, -14, -45, -10, -73, -40, -70, -36, -67})]
38	itemsets left after T operation 	: [frozenset({-3, -17})]
28	itemsets left after W operation 	: [frozenset({-72, 90, -36, -10}), frozenset({86, -22, -90, -73}), frozenset({-30, -61, -90, -85, -14, -46, -74, -2}), frozenset({-61, -58, -57, -54, -49, -45, -42, -30, -26, -90, -24, -85, -82, -79, -13, -75, -2})]
9	itemsets left after T operation 	: [frozenset({-55, -3})]
8	itemsets left after V operation 	: [frozenset({89, 3, -2}), frozenset({3, -21, 85}), frozenset({-6, -4, -3})]
Unpacking W operator applied earlier using 87 on frozenset({-48, -30, -26})
# of frequent itemsets	: 25
Time of DCI Closed		: 0.14428997039794922
Clause Pruned	: frozenset({-16, -8, -85, -3})
Clause Pruned	: frozenset({-31, -62, -28, -24, -53, -85, -48, -47, -14, -10, -40, -37, -3})
Clause Pruned	: frozenset({-72, -85, -3})
Clause Pruned	: frozenset({-55, -3})
Initial DL				: 41872.8999785794
Final DL				: 8711.08465369153
Compression (wrt me)	: 0.7919636648489167
Operator Counters		: {'D': 0, 'W': 5, 'V': 1, 'S': 1, 'R': 0, 'T': 4}
Misle Learning Runtime	: 1.8825833797454834

# of frequent itemsets	: 11327
Time of DCI Closed		: 0.4169602394104004
23  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-73, -72, -7, -5, -2}), frozenset({-6, -4, -2}), frozenset({-21, -17, -12, -7, -5, -2}), frozenset({-73, -72, -6, -4, -2}), frozenset({-28, -51, -17, -47, -6, -4, -67, -2}), frozenset({-21, -4, -14, -10, -73, -72, -6, -36, -2})}
DL of initial theory	: 40901.08214099919
3936	itemsets left after T operation 	: [frozenset({-72, -6, -4, -2})]
2334	itemsets left after W operation 	: [frozenset({-6, -21, -4, 85}), frozenset({-32, -64, -61, -55, -53, -85, -17, -48, -46, -73, -72, -36, -3}), frozenset({-31, -27, -22, -85, -14, -45, -10, -40, -36, -2}), frozenset({-32, -23, -85, -82, -46, -13, -12, -75, -40, -71, -36, -2}), frozenset({-62, -58, -56, -54, -51, -47, -9, -43, -37, -33, -28, -24, -85, -17, -3, -73, -72, -67}), frozenset({-30, -59, -26, -24, -55, -53, -85, -17, -48, -46, -41, -73, -72, -36, -3}), frozenset({-62, -55, -52, -49, -44, -40, -36, -31, -23, -85, -17, -12, -73, -72, -3, -66}), frozenset({-28, -56, -24, -85, -84, -50, -17, -80, -46, -41, -12, -73, -72, -3, -34}), frozenset({-55, -52, -48, -47, -8, -39, -36, -31, -28, -24, -85, -3, -14, -73, -72, -67}), frozenset({-62, -55, -54, -50, -46, -42, -8, -37, -33, -27, -24, -85, -82, -17, -80, -72, -3, -66}), frozenset({-62, -28, -25, -55, -85, -17, -47, -43, -37, -67, -2, -33}), frozenset({-30, -55, -22, -85, -82, -17, -48, -79, -46, -43, -75, -8, -71, -36, -2}), frozenset({-32, -62, -22, -85, -17, -80, -49, -46, -41, -8, -37, -67, -2}), frozenset({-28, -24, -85, -51, -17, -46, -11, -42, -36, -2}), frozenset({-32, -26, -24, -53, -85, -82, -49, -47, -78, -12, -42, -73, -71, -36, -2}), frozenset({-31, -61, -28, -24, -55, -53, -85, -50, -17, -46, -76, -40, -72, -36, -3}), frozenset({-63, -59, -55, -53, -50, -44, -8, -39, -36, -33, -26, -24, -85, -16, -73, -72, -3}), frozenset({-26, -85, -17, -46, -43, -10, -75, -71, -36, -67, -2}), frozenset({-31, -62, -58, -57, -26, -23, -85, -50, -16, -46, -9, -40, -36, -67, -2}), frozenset({-55, -53, -50, -45, -41, -36, -32, -26, -24, -85, -82, -3, -14, -78, -73, -8, -70, -67}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -85, -82, -17, -80, -3, -12, -73, -72, -67}), frozenset({-85, -82, -79, -14, -73, -72, -36, -3}), frozenset({-62, -58, -56, -24, -8, -53, -85, -50, -17, -41, -73, -72, -36, -3, -66}), frozenset({-10, -73, -71, -85, -2, -17}), frozenset({-30, -68, -85, -14, -10, -73, -36, -3}), frozenset({-62, -56, -52, -49, -47, -40, -37, -28, -24, -85, -17, -3, -11, -73, -72, -67}), frozenset({-61, -55, -53, -51, -47, -42, -36, -32, -29, -24, -85, -17, -3, -73, -72, -67}), frozenset({-61, -55, -52, -49, -46, -41, -36, -32, -26, -24, -85, -82, -17, -79, -66, -75, -68, -2}), frozenset({-62, -57, -54, -50, -46, -41, -36, -30, -28, -25, -85, -82, -17, -80, -10, -73, -70, -67, -2}), frozenset({-32, -26, -24, -55, -68, -85, -52, -48, -16, -44, -42, -73, -8, -36, -2}), frozenset({-61, -55, -53, -48, -46, -42, -36, -32, -26, -24, -85, -82, -16, -79, -75, -10, -72, -67}), frozenset({-32, -62, -22, -53, -85, -49, -17, -46, -73, -40, -71, -37, -67, -2}), frozenset({-32, -28, -23, -85, -50, -17, -46, -78, -42, -73, -8, -71, -36, -2}), frozenset({-26, -85, -17, -10, -40, -37, -67, -33}), frozenset({-62, -55, -52, -50, -47, -40, -8, -37, -35, -28, -25, -85, -82, -17, -79, -3, -73, -72, -67}), frozenset({-61, -58, -56, -53, -49, -46, -41, -36, -30, -28, -24, -85, -17, -66, -73, -8, -71, -2}), frozenset({-30, -26, -22, -85, -48, -46, -14, -10, -73, -40, -72, -36, -3, -65}), frozenset({-62, -56, -53, -50, -47, -41, -36, -30, -24, -85, -16, -79, -3, -73, -8, -69, -67}), frozenset({-58, -57, -52, -49, -46, -41, -8, -36, -30, -26, -24, -85, -17, -73, -72, -3}), frozenset({-55, -54, -85, -51, -17, -43, -37, -67, -2}), frozenset({-63, -59, -58, -57, -85, -16, -77, -10, -72, -40, -3}), frozenset({-32, -26, -22, -53, -85, -51, -67, -16, -46, -12, -75, -41, -72, -36, -3}), frozenset({-64, -32, -28, -57, -25, -85, -50, -17, -47, -42, -73, -72, -37, -3})]
1251	itemsets left after W operation 	: [frozenset({-72, -73, 86, -17}), frozenset({-63, -62, -55, -52, -48, -46, -40, -36, -34, -28, -24, -86, -12, -6, -4, -3}), frozenset({-61, -58, -57, -49, -47, -40, -37, -33, -28, -24, -86, -84, -19, -80, -8, -6, -4, -3, -65}), frozenset({-61, -58, -56, -52, -51, -47, -40, -37, -35, -26, -25, -86, -21, -83, -80, -12, -7, -5, -2}), frozenset({-63, -30, -60, -26, -22, -21, -86, -49, -46, -10, -41, -7, -5, -36, -2}), frozenset({-60, -55, -52, -48, -46, -40, -36, -31, -26, -22, -21, -86, -78, -8, -7, -4, -67, -2}), frozenset({-29, -59, -25, -86, -21, -50, -82, -80, -46, -10, -41, -7, -5, -35, -2}), frozenset({-30, -28, -56, -23, -86, -21, -52, -4, -48, -46, -12, -7, -36, -2}), frozenset({-62, -55, -52, -51, -47, -43, -37, -33, -28, -25, -86, -80, -3, -6, -4, -67}), frozenset({-30, -26, -57, -24, -86, -52, -19, -50, -42, -10, -7, -37, -4, -3}), frozenset({-62, -55, -52, -51, -46, -40, -36, -31, -26, -24, -86, -21, -80, -12, -2, -7, -5, -66}), frozenset({-28, -5, -55, -22, -21, -52, -86, -49, -46, -12, -43, -7, -37, -35, -2}), frozenset({-28, -5, -24, -86, -82, -79, -46, -12, -34, -40, -6, -37, -2}), frozenset({-62, -55, -53, -48, -46, -41, -36, -30, -26, -22, -21, -86, -78, -11, -7, -4, -67, -2}), frozenset({-10, -37, -7, -86, -21, -4, -2}), frozenset({-58, -56, -52, -49, -47, -40, -36, -34, -26, -24, -86, -19, -82, -79, -12, -7, -4, -3, -66}), frozenset({-12, -5, -7, -86, -21, -3, -82}), frozenset({-32, -64, -61, -55, -86, -53, -85, -48, -46, -36, -3}), frozenset({-62, -58, -56, -54, -51, -47, -43, -37, -33, -28, -24, -86, -85, -3, -9, -67}), frozenset({-30, -59, -26, -24, -55, -86, -53, -85, -48, -46, -41, -36, -3}), frozenset({-31, -62, -55, -23, -85, -52, -86, -49, -44, -12, -40, -36, -3, -66}), frozenset({-28, -56, -24, -86, -85, -84, -50, -80, -46, -12, -41, -3, -34}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -86, -85, -82, -67, -80, -12, -3}), frozenset({-62, -58, -56, -24, -86, -53, -85, -50, -41, -8, -36, -3, -66}), frozenset({-62, -28, -56, -24, -86, -85, -52, -49, -67, -47, -11, -40, -37, -3}), frozenset({-32, -61, -29, -24, -55, -86, -53, -85, -51, -67, -47, -42, -36, -3}), frozenset({-62, -55, -52, -50, -47, -40, -37, -35, -28, -25, -86, -85, -82, -67, -79, -8, -3}), frozenset({-30, -58, -57, -26, -24, -86, -85, -52, -49, -46, -41, -8, -36, -3}), frozenset({-64, -32, -28, -25, -57, -86, -85, -50, -47, -42, -37, -3})]
729	itemsets left after T operation 	: [frozenset({-36, -26, -2})]
475	itemsets left after T operation 	: [frozenset({-46, -2, -17})]
239	itemsets left after V operation 	: [frozenset({-32, -62, 2, -28, -24, -55, -51, -17, -47, -3, -43, -72, -37, -67}), frozenset({2, -59, -58, -56, -52, -50, -47, -41, -36, -32, -26, -23, -19, -14, -10, -73, -71, -3, -66}), frozenset({2, -61, -58, -57, -52, -48, -46, -41, -37, -34, -26, -22, -82, -17, -78, -75, -10, -72, -3, -66}), frozenset({-35, -3, 2, -29, -42, -24, -51}), frozenset({-6, -4, -2}), frozenset({-62, 2, -28, -25, -55, -86, -52, -51, -67, -80, -47, -43, -37, -3, -33}), frozenset({-63, -62, 2, -28, -24, -55, -86, -52, -48, -46, -12, -40, -36, -3, -34}), frozenset({2, -61, -58, -57, -49, -47, -40, -37, -33, -28, -24, -86, -84, -19, -80, -8, -3, -65}), frozenset({-62, -30, -28, 2, -24, -55, -52, -50, -67, -46, -43, -73, -72, -36, -3}), frozenset({2, -21, 85})]
166	itemsets left after W operation 	: [frozenset({-24, -36, 87, -73}), frozenset({-60, -58, -56, -53, -50, -44, -43, -7, -32, -28, -87, -21, -82, -17, -79, -10, -71, -5, -2}), frozenset({2, -62, -30, -28, -55, -87, -52, -50, -3, -46, -43, -72, -67}), frozenset({-31, -28, -55, -87, -85, -52, -67, -48, -47, -14, -72, -8, -39, -3}), frozenset({-63, -59, -26, -55, -87, -53, -85, -50, -16, -44, -72, -8, -39, -3, -33}), frozenset({-55, -53, -50, -45, -41, -32, -26, -87, -85, -82, -3, -14, -78, -8, -70, -67}), frozenset({-62, -30, -56, -87, -53, -85, -50, -16, -47, -79, -3, -41, -8, -69, -67})]
103	itemsets left after T operation 	: [frozenset({-2, -17})]
38	itemsets left after T operation 	: [frozenset({-72, -2, -73})]
29	itemsets left after W operation 	: [frozenset({-46, -26, -72, 88, -36}), frozenset({-32, -61, -24, -55, -88, -53, -85, -82, -48, -16, -79, -75, -42, -10, -67}), frozenset({-30, -88, -22, -85, -48, -14, -10, -73, -40, -3, -65}), frozenset({-32, -88, -22, -53, -85, -51, -67, -16, -12, -75, -41, -3})]
4	itemsets left after T operation 	: [frozenset({-24, -4, -50})]
2	itemsets left after V operation 	: [frozenset({-72, -2, -73}), frozenset({-79, -14, 2, -85, -36, -3, -82}), frozenset({2, 86, -17})]
1	itemsets left after T operation 	: [frozenset({-36, -2})]
0	itemsets left after V operation 	: [frozenset({-24, -4, -50}), frozenset({-58, -56, -52, -49, -47, -40, -36, -34, -26, -86, -19, -82, -79, 50, -12, -7, -3, -66})]
Unpacking W operator applied earlier using 87 on frozenset({-24, -36, -73})
# of frequent itemsets	: 8
Time of DCI Closed		: 0.1400001049041748
7	itemsets left after W operation 	: [frozenset({89, -85, -3}), frozenset({-32, -89, -88, -22, -53, -51, -16, -12, -75, -41, -67}), frozenset({-79, 2, -14, -89, -36, -82}), frozenset({-73, -30, -14, -10, -89, -68, -36}), frozenset({-63, -59, -58, -57, -89, -16, -77, -10, -40, -72}), frozenset({-32, -64, -61, -89, -55, -86, -53, -48, -46, -36}), frozenset({-62, -28, -58, -89, -56, -24, -54, -86, -51, -47, -43, -9, -37, -67, -33}), frozenset({-30, -59, -26, -89, -24, -55, -86, -53, -48, -46, -41, -36}), frozenset({-31, -62, -89, -55, -23, -86, -52, -49, -44, -12, -40, -36, -66}), frozenset({-62, -28, -89, -56, -24, -86, -52, -49, -47, -11, -40, -37, -67}), frozenset({-32, -61, -29, -89, -24, -55, -86, -53, -51, -47, -42, -36, -67}), frozenset({-62, -55, -52, -50, -47, -40, -37, -35, -28, -25, -89, -86, -82, -79, -8, -67}), frozenset({-30, -26, -58, -24, -57, -86, -89, -52, -49, -46, -41, -8, -36}), frozenset({-64, -32, -28, -57, -25, -89, -86, -50, -47, -42, -37}), frozenset({-31, -28, -89, -24, -55, -8, -52, -48, -47, -14, -73, -72, -39, -36, -67}), frozenset({-30, -89, -88, -22, -48, -14, -10, -73, -40, -65})]
3	itemsets left after V operation 	: [frozenset({-30, 2, -26, -58, -24, -57, -86, -89, -52, -49, -46, -41, -8}), frozenset({2, -59, -58, -56, -52, -50, -47, -41, -32, -26, -23, -19, -14, -10, -73, -71, -3, -66}), frozenset({-31, 2, -28, -89, -24, -55, -52, -48, -47, -14, -72, -73, -8, -39, -67}), frozenset({2, -46, -26, -72, 88}), frozenset({-36, -2}), frozenset({-63, -62, 2, -28, -24, -55, -86, -52, -48, -46, -12, -40, -3, -34}), frozenset({-62, 2, -30, -28, -24, -55, -52, -50, -3, -46, -43, -73, -72, -67}), frozenset({2, -58, -56, -52, -49, -47, -40, -34, -26, -86, -19, -82, -79, 50, -12, -7, -3, -66}), frozenset({-79, 2, -14, -89, -82}), frozenset({-73, -30, -14, 2, -10, -89, -68}), frozenset({-32, -64, 2, -61, -89, -55, -86, -53, -48, -46}), frozenset({-30, 2, -59, -26, -89, -24, -55, -86, -53, -48, -46, -41}), frozenset({-31, -62, 2, -89, -55, -23, -86, -52, -49, -44, -12, -40, -66}), frozenset({-32, 2, -61, -29, -89, -24, -55, -86, -53, -51, -47, -42, -67})]
Clause Pruned	: frozenset({-62, 2, -30, -28, -24, -55, -52, -50, -3, -46, -43, -73, -72, -67})
Initial DL				: 41872.89997857942
Final DL				: 6100.723185449622
Compression (wrt me)	: 0.8543037814775065
Operator Counters		: {'D': 0, 'W': 4, 'V': 4, 'S': 0, 'R': 0, 'T': 7}
Misle Learning Runtime	: 1.7976751327514648

# of frequent itemsets	: 8060
Time of DCI Closed		: 0.31523609161376953
43  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-21, -16, -8, -6, -4, -3}), frozenset({-6, -4, -3}), frozenset({-7, -4, -2}), frozenset({-21, -17, -3, -72, -73, -8, -6, -37, -4, -35})}
DL of initial theory	: 40972.20190421679
3977	itemsets left after T operation 	: [frozenset({-36, -72, -6, -4, -3})]
2220	itemsets left after S operation 	: [frozenset({-6, -4, -3})]
955	itemsets left after W operation 	: [frozenset({85, -6, -21, -4, -2}), frozenset({-63, -30, -60, -26, -22, -85, -48, -14, -78, -44, -41, -10, -73, -72, -36}), frozenset({-30, -61, -85, -14, -46, -10, -74, -72, -36}), frozenset({-63, -59, -53, -48, -45, -39, -37, -30, -26, -22, -85, -84, -16, -79, -10, -73, -72}), frozenset({-55, -52, -50, -47, -42, -37, -33, -26, -24, -85, -82, -17, -80, -74, -8, -71}), frozenset({-63, -62, -85, -82, -78, -14, -74, -8, -71}), frozenset({-62, -58, -57, -50, -46, -40, -36, -33, -28, -24, -85, -17, -10, -74, -72, -67}), frozenset({-31, -59, -26, -55, -22, -85, -52, -16, -48, -45, -10, -73, -72, -39, -36}), frozenset({-63, -30, -28, -59, -24, -85, -14, -46, -75, -10, -39, -71, -36}), frozenset({-62, -85, -52, -82, -50, -17, -46, -78, -12, -75, -72, -36, -34}), frozenset({-29, -25, -85, -82, -17, -47, -79, -12, -43, -37}), frozenset({-25, -85, -17, -47, -75, -72, -40, -37, -67, -33}), frozenset({-63, -59, -53, -48, -45, -39, -36, -30, -26, -22, -85, -84, -16, -79, -10, -73, -72}), frozenset({-62, -58, -56, -54, -51, -47, -40, -8, -36, -35, -28, -24, -85, -17, -76, -72, -67}), frozenset({-61, -58, -57, -54, -49, -45, -42, -36, -30, -26, -24, -85, -82, -79, -13, -75, -10, -72}), frozenset({-32, -85, -82, -50, -17, -46, -74, -40, -8, -70, -36})]
218	itemsets left after W operation 	: [frozenset({-73, -26, -10, -72, 86, -36}), frozenset({-63, -59, -58, -54, -49, -46, -39, -31, -22, -21, -86, -17, -78, -7, -5, -3}), frozenset({-31, -60, -23, -86, -53, -19, -16, -48, -78, -41, -7, -4, -3}), frozenset({-31, -58, -22, -21, -54, -86, -82, -17, -49, -3, -46, -78, -39, -5, -7}), frozenset({-59, -55, -52, -49, -46, -30, -24, -86, -19, -82, -16, -79, -6, -4, -2, -65}), frozenset({-63, -30, -60, -22, -85, -86, -48, -14, -78, -44, -41}), frozenset({-31, -59, -55, -22, -85, -52, -86, -16, -48, -45, -39}), frozenset({-63, -30, -59, -22, -53, -85, -84, -86, -48, -16, -79, -45, -39})]
150	itemsets left after W operation 	: [frozenset({-6, -4, -2, 87}), frozenset({-62, -55, -54, -50, -46, -41, -36, -30, -26, -23, -87, -19, -14, -73, -8, -67}), frozenset({-58, -57, -53, -50, -47, -40, -37, -34, -28, -25, -87, -82, -17, -80, -12, -73, -72}), frozenset({-62, -55, -52, -48, -45, -40, -36, -30, -26, -24, -87, -19, -14, -10, -73, -70, -67}), frozenset({-30, -87, -19, -16, -12, -75, -44, -39, -71}), frozenset({-87, -21, 85}), frozenset({-30, -59, -24, -55, -86, -87, -52, -19, -82, -49, -16, -79, -46, -65})]
86	itemsets left after W operation 	: [frozenset({-72, 88, -36, -10}), frozenset({-61, -55, -53, -48, -46, -43, -30, -88, -22, -82, -17, -78, -73, -7, -5, -3}), frozenset({-30, -61, -14, -46, -74, -88, -85}), frozenset({-62, -28, -58, -57, -24, -88, -85, -50, -17, -46, -74, -40, -67, -33}), frozenset({-61, -58, -57, -54, -49, -45, -42, -30, -26, -24, -88, -85, -82, -79, -13, -75}), frozenset({-88, 86, -26, -73})]
34	itemsets left after T operation 	: [frozenset({-21, -3, -17})]
21	itemsets left after T operation 	: [frozenset({-48, -22, -30, -73})]
8	itemsets left after W operation 	: [frozenset({89, -46, -36}), frozenset({-32, -89, -85, -50, -82, -17, -74, -40, -8, -70}), frozenset({-63, -30, -28, -59, -89, -24, -85, -14, -75, -10, -39, -71}), frozenset({-62, -30, -26, -89, -55, -54, -23, -87, -19, -50, -14, -41, -73, -8, -67}), frozenset({-62, -89, -85, -52, -82, -50, -17, -78, -12, -75, -72, -34})]
1	itemsets left after V operation 	: [frozenset({-6, -4, -3}), frozenset({3, -2, 87})]
0	itemsets left after V operation 	: [frozenset({-6, -4, -3}), frozenset({-31, -60, 6, -23, -86, -53, -19, -16, -48, -78, -41, -7})]
Unpacking W operator applied earlier using 86 on frozenset({-26, -10, -73, -72, -36})
# of frequent itemsets	: 11
Time of DCI Closed		: 0.14148545265197754
Initial DL				: 41828.96760729493
Final DL				: 8216.796653188692
Compression (wrt me)	: 0.8035620498614532
Operator Counters		: {'D': 0, 'W': 4, 'V': 2, 'S': 1, 'R': 0, 'T': 3}
Misle Learning Runtime	: 1.3891799449920654

# of frequent itemsets	: 12275
Time of DCI Closed		: 0.3988063335418701
21  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-73, -72, -7, -5, -2}), frozenset({-6, -4, -2}), frozenset({-21, -17, -12, -7, -5, -2}), frozenset({-73, -72, -6, -4, -2}), frozenset({-28, -51, -17, -47, -6, -4, -67, -2}), frozenset({-21, -4, -14, -10, -73, -72, -6, -36, -2})}
DL of initial theory	: 40972.20190421681
3905	itemsets left after T operation 	: [frozenset({-72, -6, -4, -2})]
2736	itemsets left after W operation 	: [frozenset({85, -6, -21, -4, -17}), frozenset({-32, -64, -61, -55, -53, -85, -48, -46, -73, -72, -36, -3}), frozenset({-62, -58, -56, -54, -51, -47, -9, -43, -37, -33, -28, -24, -85, -3, -73, -72, -67}), frozenset({-30, -59, -26, -24, -55, -53, -85, -48, -73, -46, -41, -72, -36, -3}), frozenset({-28, -24, -56, -85, -84, -50, -80, -73, -46, -12, -41, -72, -3, -34}), frozenset({-62, -55, -54, -50, -46, -42, -8, -37, -33, -27, -24, -85, -82, -80, -72, -3, -66}), frozenset({-62, -28, -25, -55, -85, -47, -43, -37, -67, -2, -33}), frozenset({-30, -55, -22, -85, -82, -48, -79, -46, -43, -75, -8, -71, -36, -2}), frozenset({-32, -62, -22, -85, -49, -80, -46, -41, -8, -37, -67, -2}), frozenset({-28, -24, -85, -51, -46, -11, -42, -36, -2}), frozenset({-31, -61, -28, -24, -55, -53, -85, -50, -46, -76, -72, -40, -36, -3}), frozenset({-26, -85, -46, -75, -43, -10, -71, -36, -67, -2}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -85, -82, -80, -3, -12, -73, -72, -67}), frozenset({-62, -58, -24, -56, -8, -53, -85, -50, -41, -73, -72, -36, -3, -66}), frozenset({-10, -73, -71, -85, -2}), frozenset({-62, -28, -24, -56, -85, -52, -49, -67, -47, -11, -72, -73, -40, -37, -3}), frozenset({-32, -61, -29, -24, -55, -53, -85, -51, -67, -47, -42, -73, -72, -36, -3}), frozenset({-61, -55, -52, -49, -46, -41, -36, -32, -26, -24, -85, -82, -79, -66, -75, -68, -2}), frozenset({-62, -57, -54, -50, -46, -41, -36, -30, -28, -25, -85, -82, -80, -10, -73, -70, -67, -2}), frozenset({-32, -26, -55, -22, -85, -52, -49, -78, -45, -12, -42, -73, -72, -36, -3}), frozenset({-32, -62, -22, -53, -85, -49, -46, -73, -40, -71, -37, -67, -2}), frozenset({-61, -28, -23, -53, -85, -50, -80, -46, -10, -42, -2, -36, -66, -33}), frozenset({-32, -28, -23, -85, -50, -46, -78, -42, -73, -8, -71, -36, -2}), frozenset({-26, -10, -40, -37, -85, -67, -33}), frozenset({-59, -52, -50, -46, -42, -36, -31, -28, -22, -85, -79, -73, -8, -71, -67, -2}), frozenset({-62, -55, -52, -50, -47, -40, -8, -37, -35, -28, -25, -85, -82, -79, -3, -73, -72, -67}), frozenset({-61, -58, -56, -53, -49, -46, -41, -36, -30, -28, -24, -85, -66, -73, -8, -71, -2}), frozenset({-30, -26, -58, -24, -57, -8, -85, -52, -49, -46, -41, -73, -72, -36, -3}), frozenset({-8, -85, -84, -2}), frozenset({-55, -54, -85, -51, -43, -37, -67, -2}), frozenset({-32, -64, -28, -57, -25, -85, -50, -47, -42, -73, -72, -37, -3})]
1664	itemsets left after W operation 	: [frozenset({-6, -36, -4, 86}), frozenset({-31, -27, -22, -21, -86, -14, -45, -10, -40, -2}), frozenset({-32, -23, -86, -21, -82, -46, -13, -12, -75, -40, -71, -2}), frozenset({-63, -62, -55, -52, -48, -46, -40, -34, -28, -24, -86, -17, -12, -73, -72, -3}), frozenset({-55, -52, -48, -47, -8, -39, -31, -28, -24, -86, -21, -3, -14, -73, -72, -67}), frozenset({-32, -26, -24, -86, -49, -47, -79, -12, -43, -73, -71, -2}), frozenset({-32, -26, -24, -86, -53, -21, -82, -49, -47, -78, -12, -42, -73, -71, -2}), frozenset({-63, -59, -55, -53, -50, -44, -72, -39, -33, -26, -24, -86, -21, -16, -73, -8, -3}), frozenset({-31, -62, -58, -57, -26, -23, -86, -21, -50, -16, -46, -9, -40, -67, -2}), frozenset({-55, -53, -50, -45, -41, -32, -26, -24, -86, -21, -82, -67, -14, -78, -73, -8, -70, -3}), frozenset({-26, -22, -86, -17, -48, -78, -44, -11, -73, -71, -2}), frozenset({-30, -86, -21, -14, -10, -73, -68, -3}), frozenset({-59, -58, -56, -52, -50, -47, -41, -32, -26, -23, -86, -19, -14, -10, -73, -71, -3, -66}), frozenset({-62, -30, -58, -57, -26, -24, -86, -52, -50, -79, -46, -2, -40, -66}), frozenset({-61, -55, -52, -48, -46, -41, -33, -26, -86, -18, -80, -14, -73, -8, -68, -2, -65}), frozenset({-32, -26, -24, -55, -86, -21, -52, -48, -16, -44, -42, -73, -8, -68, -2}), frozenset({-58, -55, -86, -20, -82, -17, -79, -42, -2, -33}), frozenset({-61, -55, -53, -48, -46, -42, -32, -26, -24, -86, -21, -82, -16, -79, -75, -10, -72, -67}), frozenset({-59, -58, -56, -52, -50, -46, -43, -31, -28, -23, -86, -82, -17, -79, -10, -73, -71, -67, -2}), frozenset({-57, -53, -49, -46, -72, -41, -32, -28, -24, -86, -82, -17, -80, -73, -8, -3, -66}), frozenset({-62, -53, -49, -73, -46, -41, -32, -26, -22, -86, -19, -82, -17, -79, -2, -9, -70, -66}), frozenset({-62, -30, -26, -56, -22, -53, -86, -51, -16, -45, -10, -39, -67, -2}), frozenset({-30, -26, -22, -21, -86, -48, -46, -14, -10, -73, -40, -72, -3, -65}), frozenset({-62, -56, -53, -50, -47, -41, -30, -24, -86, -21, -67, -16, -79, -73, -8, -69, -3}), frozenset({-59, -55, -52, -48, -44, -40, -30, -26, -23, -86, -82, -17, -79, -75, -8, -71, -2}), frozenset({-61, -55, -54, -49, -46, -40, -30, -28, -86, -82, -80, -14, -8, -71, -67, -2}), frozenset({-62, -30, -28, -24, -55, -86, -52, -50, -67, -46, -43, -73, -72, -3}), frozenset({-32, -26, -22, -53, -21, -51, -86, -67, -16, -46, -12, -75, -41, -72, -3})]
1043	itemsets left after T operation 	: [frozenset({-21, -17, -73, -36, -2})]
554	itemsets left after W operation 	: [frozenset({-24, -72, 87, -73}), frozenset({-59, -55, -53, -48, -47, -42, -36, -28, -87, -21, -82, -16, -79, -8, -7, -4, -2}), frozenset({-61, -58, -57, -49, -47, -40, -37, -33, -28, -87, -84, -19, -17, -80, -8, -6, -4, -3, -65}), frozenset({-63, -62, -28, -55, -86, -87, -52, -17, -48, -46, -12, -40, -3, -34}), frozenset({-31, -28, -55, -86, -21, -52, -87, -67, -48, -47, -14, -8, -39, -3}), frozenset({-62, -28, -58, -56, -87, -54, -85, -51, -47, -3, -43, -9, -37, -67, -33}), frozenset({-30, -59, -26, -55, -87, -53, -85, -48, -46, -41, -36, -3}), frozenset({-28, -56, -87, -85, -84, -50, -80, -46, -12, -41, -3, -34}), frozenset({-63, -59, -26, -55, -86, -53, -21, -87, -50, -16, -44, -8, -39, -3, -33}), frozenset({-30, -26, -57, -87, -52, -19, -50, -17, -42, -10, -7, -37, -4, -3}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -87, -85, -82, -80, -3, -12, -67}), frozenset({-62, -58, -56, -87, -53, -85, -50, -41, -8, -36, -3, -66}), frozenset({-32, -28, -57, -87, -86, -53, -82, -49, -17, -80, -46, -41, -8, -3, -66}), frozenset({-28, -37, -87, -82, -17, -79, -46, -12, -2, -40, -6, -5, -34}), frozenset({-62, -28, -56, -87, -85, -52, -49, -67, -47, -11, -40, -37, -3}), frozenset({-32, -61, -29, -55, -87, -53, -85, -51, -47, -3, -42, -36, -67}), frozenset({-28, -55, -87, -21, -52, -51, -43, -10, -7, -37, -4, -35, -2}), frozenset({-62, -30, -28, -55, -86, -87, -52, -50, -3, -46, -43, -67}), frozenset({-30, -58, -26, -57, -87, -85, -52, -49, -46, -41, -8, -36, -3}), frozenset({-58, -56, -52, -49, -47, -40, -36, -34, -26, -87, -19, -82, -17, -79, -12, -7, -4, -3, -66}), frozenset({-64, -62, -48, -44, -39, -37, -30, -26, -87, -84, -19, -80, -14, -8, -7, -4, -2})]
451	itemsets left after T operation 	: [frozenset({-46, -2})]
232	itemsets left after V operation 	: [frozenset({2, -36, 86}), frozenset({-62, 2, -55, -52, -51, -47, -43, -37, -33, -28, -25, -17, -80, -67, -73, -72, -3}), frozenset({2, -61, -58, -57, -52, -48, -46, -41, -37, -34, -26, -22, -82, -17, -78, -75, -10, -72, -3, -66}), frozenset({-35, -3, 2, -29, -42, -24, -51}), frozenset({-6, -4, -2}), frozenset({-32, -62, 2, -28, -56, -24, -52, -51, -17, -67, -47, -43, -72, -37, -3}), frozenset({-63, 2, -59, -58, -57, -21, -16, -77, -10, -40, -72, -3}), frozenset({2, -61, -58, -57, -49, -47, -40, -37, -33, -28, -87, -84, -19, -17, -80, -8, -3, -65}), frozenset({2, -21, 85, -17})]
73	itemsets left after T operation 	: [frozenset({-21, -2, -73})]
48	itemsets left after W operation 	: [frozenset({-72, 88, -73}), frozenset({-24, -88, 87}), frozenset({-88, -7, -5, -2}), frozenset({-79, -88, -7, -5, -2}), frozenset({-88, -21, -82, -17, -12, -7, -5, -3}), frozenset({-32, -64, -61, -88, -55, -53, -85, -48, -46, -36, -3}), frozenset({-32, -26, -88, -55, -22, -85, -52, -49, -78, -45, -12, -42, -36, -3}), frozenset({-62, -55, -52, -50, -47, -40, -37, -35, -28, -25, -88, -85, -82, -79, -3, -8, -67}), frozenset({-32, -64, -28, -57, -25, -88, -85, -50, -47, -42, -37, -3}), frozenset({-62, 2, -55, -52, -51, -47, -43, -37, -33, -28, -25, -88, -17, -80, -67, -3}), frozenset({-30, -26, -88, -22, -21, -86, -48, -46, -14, -10, -40, -3, -65})]
33	itemsets left after W operation 	: [frozenset({-53, -73, -24, 89, -21}), frozenset({-61, -55, -48, -46, -40, -37, -7, -32, -28, -89, -80, -14, -10, -71, -4, -3}), frozenset({-62, -30, -89, -56, -86, -50, -67, -16, -47, -79, -41, -8, -69, -3}), frozenset({-32, -26, -89, -55, -86, -50, -82, -67, -14, -45, -78, -41, -8, -70, -3})]
20	itemsets left after T operation 	: [frozenset({-2, -17})]
16	itemsets left after W operation 	: [frozenset({-46, -26, -72, 90, -21}), frozenset({-32, -61, -90, -24, -55, -86, -53, -82, -48, -16, -79, -75, -42, -10, -67}), frozenset({-32, -90, -86, -22, -53, -51, -67, -16, -12, -75, -41, -3})]
10	itemsets left after T operation 	: [frozenset({-4, -26, -2})]
8	itemsets left after W operation 	: [frozenset({-24, 91, -28, -72}), frozenset({-31, -61, -91, -55, -85, -53, -50, -46, -76, -40, -36, -3}), frozenset({-32, -62, 2, -91, -56, -52, -51, -17, -67, -47, -43, -37, -3})]
6	itemsets left after V operation 	: [frozenset({-24, 89, 2, -53}), frozenset({-30, -14, 2, -10, -86, -68, -3}), frozenset({-21, -2, -73})]
4	itemsets left after V operation 	: [frozenset({-6, -4, -2}), frozenset({-26, 6})]
2	itemsets left after T operation 	: [frozenset({-21, -2})]
Unpacking W operator applied earlier using 86 on frozenset({-6, -36, -4})
# of frequent itemsets	: 27
Time of DCI Closed		: 0.14075708389282227
20	itemsets left after T operation 	: [frozenset({-47, -3})]
17	itemsets left after W operation 	: [frozenset({-46, 92, -3}), frozenset({-30, -92, -26, -88, -22, -21, -4, -48, -14, -10, -40, -6, -36, -65}), frozenset({2, -61, -58, -57, -52, -48, -41, -37, -34, -92, -26, -22, -82, -17, -78, -75, -10, -72, -66}), frozenset({-31, -61, -92, -91, -55, -85, -53, -50, -76, -40, -36}), frozenset({-32, -61, -28, -92, -89, -55, -48, -80, -14, -10, -40, -71, -37, -4, -7}), frozenset({-62, -55, -54, -50, -42, -8, -37, -33, -92, -27, -24, -85, -82, -80, -72, -66}), frozenset({-63, -62, -28, -92, -55, -87, -36, -52, -17, -48, -12, -40, -6, -4, -34}), frozenset({-30, -92, -59, -26, -55, -87, -53, -85, -48, -41, -36}), frozenset({-28, -92, -56, -87, -85, -84, -50, -80, -12, -41, -34}), frozenset({-59, -58, -55, -53, -50, -40, -37, -30, -28, -92, -87, -85, -82, -80, -12, -67}), frozenset({-57, -53, -49, -41, -36, -32, -28, -92, -87, -82, -17, -80, -8, -6, -4, -66}), frozenset({-62, -30, -28, -92, -55, -87, -52, -4, -50, -43, -6, -36, -67}), frozenset({-30, -92, -58, -57, -26, -87, -85, -52, -49, -41, -8, -36}), frozenset({-32, -64, -61, -92, -88, -55, -53, -85, -48, -36})]
15	itemsets left after V operation 	: [frozenset({-63, -62, 2, -28, -92, -55, -87, -52, -17, -48, -12, -40, -36, -34}), frozenset({-32, 2, -28, -92, -57, -87, -53, -82, -49, -17, -80, -41, -8, -36, -66}), frozenset({-62, -30, -28, -92, 2, -55, -87, -52, -50, -43, -36, -67}), frozenset({-6, -4, -2}), frozenset({-63, 2, -59, -55, -53, -50, -44, -39, -36, -33, -26, -87, -21, -16, -8, -3}), frozenset({2, -55, -50, -45, -41, -36, -32, -26, -89, -82, -3, -14, -78, -8, -70, -67}), frozenset({2, -61, -55, -53, -48, -42, -36, -32, -90, -24, -82, -16, -79, -75, -10, -67}), frozenset({-32, 2, -90, -22, -53, -51, -16, -3, -12, -75, -41, -36, -67}), frozenset({2, -30, -14, -10, -36, -68, -3}), frozenset({-30, 2, -92, -26, -88, -22, -21, -48, -14, -10, -40, -36, -65})]
11	itemsets left after T operation 	: [frozenset({-3, -50})]
10	itemsets left after W operation 	: [frozenset({-36, 93}), frozenset({-32, -93, -26, -88, -55, -22, -85, -52, -49, -78, -45, -12, -42, -3}), frozenset({-30, -93, -92, -59, -26, -55, -87, -53, -85, -48, -41}), frozenset({-30, -93, -92, -58, -57, -26, -87, -85, -52, -49, -41, -8}), frozenset({-32, -64, -61, -92, -93, -88, -55, -53, -85, -48}), frozenset({-63, -62, 2, -28, -92, -93, -55, -87, -52, -17, -48, -12, -40, -34}), frozenset({-32, 2, -93, -28, -92, -57, -87, -53, -82, -49, -17, -80, -41, -8, -66}), frozenset({2, -61, -55, -53, -48, -42, -32, -93, -90, -24, -82, -16, -79, -75, -10, -67}), frozenset({-32, 2, -93, -90, -22, -53, -51, -16, -3, -12, -75, -41, -67}), frozenset({2, -30, -14, -93, -10, -68, -3}), frozenset({-30, 2, -92, -93, -26, -88, -22, -21, -48, -14, -10, -40, -65})]
8	itemsets left after V operation 	: [frozenset({-30, 2, -92, -93, -88, -22, -21, -48, -14, -10, -40, -6, -65}), frozenset({-46, -6, -72, 90, -21}), frozenset({-26, 6}), frozenset({-10, -37, -40, -6, -85, -67, -33}), frozenset({2, -61, -58, -57, -52, -48, -41, -37, -34, -92, -22, -82, -17, -78, -75, -10, -72, -6, -66}), frozenset({-32, -93, -88, -55, -22, -85, -52, -49, -78, -45, -12, -42, -6, -3}), frozenset({-30, -93, -92, -59, -55, -87, -53, -85, -48, -41, -6}), frozenset({-30, -93, -92, -58, -57, -87, -85, -52, -49, -41, -8, -6})]
6	itemsets left after V operation 	: [frozenset({2, -88, -21, -82, -12, -7, -5, -3}), frozenset({-2, -17}), frozenset({2, -21, 85}), frozenset({-63, -62, 2, -28, -92, -93, -55, -87, -52, -48, -12, -40, -34}), frozenset({-32, 2, -93, -28, -92, -57, -87, -53, -82, -49, -80, -41, -8, -66}), frozenset({2, -61, -58, -57, -52, -48, -41, -37, -34, -92, -22, -82, -78, -75, -10, -72, -6, -66})]
1	itemsets left after V operation 	: [frozenset({-46, -2}), frozenset({2, 92, -3}), frozenset({2, -6, -72, 90, -21})]
Unpacking W operator applied earlier using 91 on frozenset({-24, -28, -72})
Unpacking W operator applied earlier using 87 on frozenset({-24, -72, -73})
Unpacking W operator applied earlier using 85 on frozenset({-6, -21, -4, -17})
# of frequent itemsets	: 1
Time of DCI Closed		: 0.15396881103515625
Clause Pruned	: frozenset({-79, -88, -7, -5, -2})
Clause Pruned	: frozenset({-46, -2})
Initial DL				: 41828.96760729492
Final DL				: 6142.313543606884
Compression (wrt me)	: 0.853156463212932
Operator Counters		: {'D': 0, 'W': 5, 'V': 7, 'S': 0, 'R': 0, 'T': 9}
Misle Learning Runtime	: 1.9321472644805908

# of frequent itemsets	: 7395
Time of DCI Closed		: 0.31835389137268066
43  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-21, -16, -8, -6, -4, -3}), frozenset({-6, -4, -3}), frozenset({-7, -4, -2}), frozenset({-21, -17, -3, -72, -73, -8, -6, -37, -4, -35})}
DL of initial theory	: 41042.681914710396
3481	itemsets left after T operation 	: [frozenset({-26, -36, -6, -4, -3})]
2545	itemsets left after T operation 	: [frozenset({-21, -73, -72, -6, -4, -3})]
1000	itemsets left after W operation 	: [frozenset({-6, -21, -4, 85}), frozenset({-30, -61, -26, -71, -22, -85, -17, -48, -46, -75, -10, -39, -37, -3}), frozenset({-63, -60, -48, -44, -41, -36, -30, -26, -22, -85, -14, -78, -10, -73, -72, -2}), frozenset({-30, -61, -85, -14, -46, -10, -74, -72, -36, -2}), frozenset({-63, -59, -55, -52, -48, -44, -39, -36, -30, -23, -85, -16, -12, -75, -71, -3}), frozenset({-63, -59, -55, -54, -48, -44, -39, -36, -31, -27, -23, -85, -17, -75, -10, -72, -3}), frozenset({-61, -55, -52, -48, -45, -9, -41, -30, -26, -22, -85, -14, -73, -71, -3, -65}), frozenset({-32, -28, -24, -55, -53, -85, -82, -17, -46, -66, -74, -72, -36, -2}), frozenset({-63, -59, -53, -48, -45, -39, -37, -30, -26, -22, -85, -84, -16, -79, -10, -73, -72, -2}), frozenset({-55, -52, -50, -47, -42, -37, -33, -26, -24, -85, -82, -17, -80, -74, -8, -71, -2}), frozenset({-55, -52, -51, -47, -40, -37, -33, -28, -25, -85, -82, -17, -79, -76, -10, -72, -3}), frozenset({-32, -24, -85, -84, -17, -48, -80, -45, -40, -8, -70, -37, -3, -65}), frozenset({-64, -62, -85, -82, -49, -17, -47, -79, -77, -12, -41, -72, -36, -2, -33}), frozenset({-63, -62, -85, -82, -78, -14, -74, -8, -71, -2}), frozenset({-16, -8, -85, -3}), frozenset({-62, -58, -57, -50, -46, -40, -36, -33, -28, -24, -85, -17, -10, -74, -72, -67, -2}), frozenset({-63, -30, -28, -59, -24, -85, -46, -14, -75, -10, -39, -71, -36, -2}), frozenset({-29, -25, -85, -82, -17, -47, -79, -12, -43, -37, -2}), frozenset({-25, -85, -17, -47, -75, -72, -40, -37, -67, -2, -33}), frozenset({-63, -59, -53, -48, -45, -39, -36, -30, -26, -22, -85, -84, -16, -79, -10, -73, -72, -2}), frozenset({-62, -58, -56, -54, -51, -47, -40, -8, -36, -35, -28, -24, -85, -17, -76, -72, -67, -2}), frozenset({-31, -62, -28, -24, -53, -85, -48, -47, -14, -10, -40, -37, -3}), frozenset({-61, -58, -57, -54, -49, -45, -42, -36, -30, -26, -24, -85, -82, -79, -13, -75, -10, -72, -2}), frozenset({-32, -85, -82, -50, -17, -46, -74, -40, -8, -70, -36, -2}), frozenset({-59, -55, -85, -52, -16, -12, -44, -74, -39, -71, -3}), frozenset({-72, -85, -3, -73})]
498	itemsets left after W operation 	: [frozenset({-72, 86, -36, -10}), frozenset({-63, -59, -55, -52, -48, -44, -39, -32, -27, -22, -86, -17, -75, -6, -4, -3}), frozenset({-31, -60, -26, -23, -86, -53, -19, -48, -16, -78, -73, -41, -7, -4, -3}), frozenset({-32, -64, -24, -86, -19, -48, -14, -73, -39, -6, -4, -3}), frozenset({-59, -55, -52, -49, -46, -30, -26, -24, -86, -19, -82, -16, -79, -73, -6, -4, -2, -65}), frozenset({-61, -55, -53, -48, -46, -43, -30, -22, -86, -82, -17, -78, -73, -7, -5, -3}), frozenset({-62, -28, -58, -57, -24, -86, -85, -50, -17, -46, -74, -40, -67, -2, -33}), frozenset({-63, -59, -53, -48, -45, -39, -30, -26, -22, -85, -84, -86, -16, -79, -73, -2}), frozenset({-61, -58, -57, -54, -49, -45, -42, -30, -26, -24, -86, -85, -82, -79, -13, -75, -2}), frozenset({-63, -30, -60, -26, -22, -85, -86, -48, -73, -14, -78, -44, -41, -2}), frozenset({-30, -61, -86, -85, -14, -46, -74, -2}), frozenset({-63, -31, -59, -27, -55, -54, -23, -85, -86, -17, -48, -44, -75, -39, -3})]
220	itemsets left after S operation 	: [frozenset({-6, -4, -3})]
96	itemsets left after T operation 	: [frozenset({-48, -30, -26, -73})]
50	itemsets left after W operation 	: [frozenset({-6, -4, -2, 87}), frozenset({-62, -55, -54, -50, -46, -41, -36, -30, -26, -23, -87, -19, -14, -73, -8, -67}), frozenset({-58, -57, -53, -50, -47, -40, -37, -34, -28, -25, -87, -82, -17, -80, -12, -73, -72}), frozenset({-37, -55, -87, -52, -51, -17, -47, -43, -75, -69, -67, -33}), frozenset({-30, -87, -19, -16, -12, -75, -44, -39, -71}), frozenset({-59, -55, -52, -49, -46, -30, -26, -24, -87, -86, -19, -82, -16, -79, -73, -65})]
28	itemsets left after T operation 	: [frozenset({-48, -3})]
22	itemsets left after V operation 	: [frozenset({-62, -55, -54, -23, -87, -19, -50, 48, -46, -14, -41, -8, -36, -67}), frozenset({-59, -24, -55, -87, -86, -52, -19, -82, -49, -16, -79, -46, 48, -65}), frozenset({-48, -30, -26, -73})]
9	itemsets left after V operation 	: [frozenset({3, -21, 85}), frozenset({-6, -4, -3}), frozenset({3, -2, 87})]
4	itemsets left after T operation 	: [frozenset({-55, -3})]
# of frequent itemsets	: 21
Time of DCI Closed		: 0.14136838912963867
20	itemsets left after W operation 	: [frozenset({88, -85, -2, -17}), frozenset({-32, -28, -24, -55, -88, -53, -82, -46, -74, -72, -36, -66}), frozenset({-26, -24, -55, -88, -52, -50, -82, -80, -47, -42, -74, -8, -71, -37, -33}), frozenset({-64, -62, -88, -82, -49, -47, -79, -77, -12, -41, -72, -36, -33}), frozenset({-29, -25, -88, -82, -47, -79, -12, -43, -37}), frozenset({-25, -88, -47, -75, -72, -40, -37, -67, -33}), frozenset({-62, -58, -56, -54, -51, -47, -72, -40, -36, -35, -28, -24, -88, -76, -8, -67}), frozenset({-32, -88, -50, -82, -46, -74, -40, -8, -70, -36}), frozenset({-62, -28, -58, -57, -24, -88, -86, -50, -46, -74, -40, -67, -33})]
1	itemsets left after V operation 	: [frozenset({3, -58, -54, -50, -46, -41, -37, -31, -28, -22, -21, -17, -78, -12, -73, -72, -7, -5, -2}), frozenset({3, -69, -87, -52, -51, -17, -47, -43, -75, -37, -67, -33}), frozenset({-62, 3, -23, -54, -87, -19, -50, 48, -46, -14, -41, -8, -36, -67}), frozenset({3, -59, -24, -87, -86, -52, -19, -82, -49, -16, -79, -46, 48, -65}), frozenset({-55, -3}), frozenset({-32, 3, -28, -24, -88, -53, -82, -46, -74, -72, -36, -66}), frozenset({3, -26, -24, -88, -52, -50, -82, -80, -47, -42, -74, -8, -71, -37, -33})]
Clause Pruned	: frozenset({-16, -8, -85, -3})
Clause Pruned	: frozenset({-72, -85, -3, -73})
Initial DL				: 42120.80639924361
Final DL				: 8067.242537208581
Compression (wrt me)	: 0.8084736920574852
Operator Counters		: {'D': 0, 'W': 4, 'V': 3, 'S': 1, 'R': 0, 'T': 5}
Misle Learning Runtime	: 1.6141676902770996

# of frequent itemsets	: 12580
Time of DCI Closed		: 0.4285881519317627
23  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-73, -72, -7, -5, -2}), frozenset({-21, -4, -14, -10, -73, -72, -6, -36, -2}), frozenset({-6, -4, -2}), frozenset({-73, -72, -6, -4, -2})}
DL of initial theory	: 41042.681914710425
3857	itemsets left after T operation 	: [frozenset({-72, -6, -4, -2})]
2892	itemsets left after W operation 	: [frozenset({85, -73, -72, -6, -4, -3}), frozenset({-32, -64, -61, -55, -21, -53, -85, -17, -48, -46, -36}), frozenset({-63, -62, -28, -24, -55, -85, -52, -17, -48, -46, -12, -40, -36, -34}), frozenset({-62, -58, -56, -54, -51, -47, -43, -37, -33, -28, -24, -21, -85, -17, -9, -67}), frozenset({-61, -58, -57, -49, -47, -40, -37, -33, -28, -24, -85, -84, -19, -17, -80, -8, -65}), frozenset({-30, -59, -26, -24, -55, -21, -53, -85, -17, -48, -46, -41, -36}), frozenset({-31, -62, -55, -23, -21, -52, -85, -17, -49, -12, -44, -40, -36, -66}), frozenset({-28, -24, -56, -21, -84, -85, -50, -17, -80, -46, -12, -41, -34}), frozenset({-31, -28, -24, -55, -21, -52, -85, -48, -47, -14, -8, -39, -36, -67}), frozenset({-63, -59, -26, -24, -55, -21, -53, -85, -50, -16, -44, -8, -39, -36, -33}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -21, -85, -82, -17, -80, -12, -67}), frozenset({-79, -14, -21, -85, -36, -82}), frozenset({-62, -58, -24, -56, -21, -53, -85, -50, -17, -41, -8, -36, -66}), frozenset({-62, -28, -24, -56, -21, -52, -85, -17, -49, -47, -11, -40, -37, -67}), frozenset({-62, -28, -25, -55, -85, -52, -51, -17, -80, -47, -43, -37, -67, -33}), frozenset({-32, -61, -29, -24, -55, -21, -53, -51, -85, -17, -47, -42, -36, -67}), frozenset({-32, -26, -55, -22, -21, -52, -85, -17, -49, -78, -45, -12, -42, -36}), frozenset({-32, -28, -57, -24, -53, -85, -82, -17, -80, -49, -46, -41, -8, -36, -66}), frozenset({-62, -55, -52, -50, -47, -40, -37, -35, -28, -25, -21, -85, -82, -17, -79, -8, -67}), frozenset({-30, -26, -22, -21, -85, -48, -14, -46, -10, -40, -36, -65}), frozenset({-30, -26, -58, -24, -57, -21, -52, -85, -17, -49, -46, -41, -8, -36}), frozenset({-62, -30, -28, -24, -55, -85, -52, -50, -46, -43, -36, -67}), frozenset({-32, -64, -28, -57, -25, -21, -85, -50, -17, -47, -42, -37})]
2041	itemsets left after T operation 	: [frozenset({-21, -17, -46, -36, -2})]
1422	itemsets left after S operation 	: [frozenset({-6, -4, -2})]
1100	itemsets left after W operation 	: [frozenset({-21, 86, -17}), frozenset({-61, -58, -56, -52, -51, -47, -40, -37, -35, -26, -25, -86, -83, -80, -12, -73, -72, -7, -5, -2}), frozenset({-62, -55, -54, -50, -46, -42, -72, -37, -33, -27, -24, -86, -82, -80, -8, -6, -4, -3, -66}), frozenset({-60, -58, -56, -53, -50, -44, -43, -71, -36, -32, -28, -24, -86, -82, -79, -10, -73, -7, -5, -2}), frozenset({-59, -50, -46, -41, -35, -29, -25, -86, -82, -80, -10, -73, -72, -7, -5, -2}), frozenset({-29, -25, -5, -86, -51, -47, -43, -7, -37, -3, -33}), frozenset({-31, -59, -26, -5, -24, -86, -48, -47, -73, -10, -41, -7, -71, -36, -2}), frozenset({-55, -52, -49, -46, -43, -37, -35, -28, -22, -86, -12, -73, -72, -7, -5, -2}), frozenset({-59, -86, -53, -82, -78, -44, -11, -73, -71, -6, -5, -2}), frozenset({-86, -10, -73, -72, -7, -37, -4, -2}), frozenset({-26, -86, -10, -40, -6, -37, -4, -67, -33}), frozenset({-59, -58, -56, -53, -48, -44, -40, -36, -30, -26, -24, -86, -82, -78, -66, -10, -73, -7, -69, -4, -2}), frozenset({-30, -60, -22, -86, -50, -12, -44, -42, -73, -71, -5, -36, -7, -2}), frozenset({-86, -82, -12, -73, -72, -7, -5, -3}), frozenset({-32, -64, -61, -55, -86, -53, -85, -48, -46, -36}), frozenset({-62, -28, -58, -56, -24, -54, -85, -86, -51, -47, -43, -9, -37, -67, -33}), frozenset({-30, -59, -26, -24, -55, -86, -53, -85, -48, -46, -41, -36}), frozenset({-31, -62, -55, -23, -85, -52, -86, -49, -12, -44, -40, -36, -66}), frozenset({-28, -24, -56, -86, -85, -84, -50, -80, -46, -12, -41, -34}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -86, -85, -82, -80, -12, -67}), frozenset({-62, -58, -24, -56, -86, -53, -85, -50, -41, -8, -36, -66}), frozenset({-62, -28, -24, -56, -86, -85, -52, -49, -47, -11, -40, -37, -67}), frozenset({-32, -61, -29, -24, -55, -86, -53, -85, -51, -47, -42, -36, -67}), frozenset({-32, -26, -55, -22, -85, -52, -86, -49, -78, -45, -12, -42, -36}), frozenset({-62, -55, -52, -50, -47, -40, -37, -35, -28, -25, -86, -85, -82, -79, -8, -67}), frozenset({-30, -26, -58, -24, -57, -86, -85, -52, -49, -46, -41, -8, -36}), frozenset({-32, -64, -28, -57, -25, -86, -85, -50, -47, -42, -37}), frozenset({-46, -86, -36, -2})]
736	itemsets left after T operation 	: [frozenset({-72, -2, -73})]
329	itemsets left after W operation 	: [frozenset({87, -72, -6, -4, -3}), frozenset({-32, -62, -28, -24, -55, -87, -51, -17, -47, -43, -37, -67}), frozenset({-32, -62, -28, -24, -56, -87, -52, -51, -17, -47, -43, -37, -67}), frozenset({-63, -59, -58, -57, -87, -21, -16, -77, -10, -40}), frozenset({-32, -26, -87, -22, -21, -53, -51, -16, -46, -12, -75, -41, -36, -67}), frozenset({-87, 85, -73}), frozenset({-62, -55, -54, -50, -46, -42, -37, -33, -27, -24, -87, -86, -82, -80, -8, -66})]
112	itemsets left after W operation 	: [frozenset({-4, -73, 88, -6, -36, -3}), frozenset({-62, -30, -24, -56, -88, -21, -53, -50, -16, -47, -79, -41, -8, -69, -67}), frozenset({-55, -53, -50, -45, -41, -32, -26, -24, -88, -21, -82, -14, -78, -8, -70, -67}), frozenset({-30, -14, -10, -88, -21, -68}), frozenset({-59, -58, -56, -52, -50, -47, -41, -32, -26, -88, -23, -19, -14, -10, -71, -66})]
107	itemsets left after W operation 	: [frozenset({-24, 89, -28, -17}), frozenset({-63, -62, -89, -55, -85, -52, -48, -46, -12, -40, -36, -34}), frozenset({-61, -58, -57, -89, -85, -84, -19, -49, -80, -47, -40, -8, -33, -37, -65}), frozenset({-32, -62, -89, -55, -87, -51, -47, -43, -37, -67}), frozenset({-32, -62, -89, -56, -87, -52, -51, -47, -43, -37, -67}), frozenset({-32, -57, -89, -53, -85, -82, -49, -80, -46, -41, -8, -36, -66})]
66	itemsets left after T operation 	: [frozenset({-24, -36, -2, -73})]
37	itemsets left after W operation 	: [frozenset({90, -21, -36, -26}), frozenset({-61, -55, -53, -48, -46, -42, -32, -90, -24, -82, -16, -79, -75, -10, -72, -6, -4, -67}), frozenset({-30, -90, -22, -85, -48, -14, -46, -10, -40, -65}), frozenset({-32, -90, -87, -22, -53, -51, -16, -46, -12, -75, -41, -67}), frozenset({-63, -59, -90, -24, -55, -53, -85, -50, -16, -44, -8, -39, -33})]
18	itemsets left after V operation 	: [frozenset({-35, -3, 2, -29, -42, -24, -51}), frozenset({2, -73, 88, -36, -3}), frozenset({-6, -4, -2}), frozenset({2, -26, -86, -10, -40, -37, -67, -33}), frozenset({2, -61, -55, -53, -48, -46, -42, -32, -90, -24, -82, -16, -79, -75, -10, -72, -67}), frozenset({-72, 2, -3, 87})]
13	itemsets left after T operation 	: [frozenset({-2, -73})]
5	itemsets left after T operation 	: [frozenset({-4, -2})]
# of frequent itemsets	: 16
Time of DCI Closed		: 0.1467604637145996
15	itemsets left after W operation 	: [frozenset({-86, 91, -85}), frozenset({-32, -64, -61, -91, -55, -53, -48, -46, -36}), frozenset({-62, -28, -91, -58, -56, -24, -54, -51, -47, -43, -9, -37, -67, -33}), frozenset({-30, -59, -26, -91, -24, -55, -53, -48, -46, -41, -36}), frozenset({-31, -62, -91, -55, -23, -52, -49, -12, -44, -40, -36, -66}), frozenset({-28, -91, -24, -56, -84, -50, -80, -46, -12, -41, -34}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -91, -24, -82, -80, -12, -67}), frozenset({-62, -91, -58, -24, -56, -53, -50, -41, -8, -36, -66}), frozenset({-62, -28, -91, -24, -56, -52, -49, -47, -11, -40, -37, -67}), frozenset({-32, -61, -29, -91, -24, -55, -53, -51, -47, -42, -36, -67}), frozenset({-32, -91, -26, -55, -22, -52, -49, -78, -45, -12, -42, -36}), frozenset({-62, -28, -91, -25, -55, -52, -50, -82, -35, -47, -79, -40, -8, -37, -67}), frozenset({-30, -91, -26, -58, -24, -57, -52, -49, -46, -41, -8, -36}), frozenset({-32, -64, -28, -91, -57, -25, -50, -47, -42, -37})]
9	itemsets left after T operation 	: [frozenset({-67})]
Initial DL				: 42120.8063992436
Final DL				: 6841.25461472314
Compression (wrt me)	: 0.8375801605059965
Operator Counters		: {'D': 0, 'W': 7, 'V': 1, 'S': 1, 'R': 0, 'T': 7}
Misle Learning Runtime	: 1.677603006362915

# of frequent itemsets	: 8665
Time of DCI Closed		: 0.403247594833374
41  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-21, -16, -8, -6, -4, -3}), frozenset({-6, -4, -3}), frozenset({-7, -4, -2})}
DL of initial theory	: 40949.49408669024
3810	itemsets left after T operation 	: [frozenset({-36, -72, -6, -4, -3})]
1760	itemsets left after S operation 	: [frozenset({-6, -4, -3})]
979	itemsets left after W operation 	: [frozenset({85, -72, -6, -21, -36, -4}), frozenset({-63, -30, -60, -26, -22, -85, -48, -14, -78, -44, -41, -10, -73, -2}), frozenset({-30, -61, -85, -14, -46, -10, -74, -2}), frozenset({-32, -28, -24, -55, -53, -85, -82, -17, -46, -74, -2, -66}), frozenset({-64, -62, -85, -82, -49, -17, -47, -79, -77, -12, -41, -2, -33}), frozenset({-62, -28, -58, -57, -24, -85, -50, -17, -46, -10, -74, -40, -67, -2, -33}), frozenset({-31, -59, -26, -55, -22, -85, -52, -16, -48, -45, -10, -73, -39, -2}), frozenset({-62, -85, -52, -82, -50, -17, -46, -78, -12, -75, -2, -34}), frozenset({-62, -58, -56, -54, -51, -47, -40, -35, -28, -24, -85, -17, -76, -8, -67, -2})]
375	itemsets left after T operation 	: [frozenset({-78, -10, -73, -72, -36, -3})]
114	itemsets left after V operation 	: [frozenset({-62, 3, -55, -54, -50, -46, -41, -36, -30, -26, -23, -19, -14, -73, -8, -67, -2}), frozenset({-63, 3, -59, -53, -48, -45, -39, -37, -30, -26, -22, -21, -84, -16, -79, -10, -73, -72, -2}), frozenset({3, -55, -52, -50, -47, -42, -37, -33, -26, -24, -21, -82, -17, -80, -74, -8, -71, -2}), frozenset({3, -58, -57, -53, -50, -47, -40, -37, -34, -28, -25, -82, -17, -80, -12, -73, -72, -2}), frozenset({3, -59, -55, -52, -49, -46, -36, -30, -26, -24, -19, -82, -16, -79, -10, -73, -72, -2, -65}), frozenset({-63, -62, 3, -21, -82, -14, -78, -74, -8, -71, -2}), frozenset({-29, 3, -25, -21, -82, -17, -47, -79, -12, -43, -37, -2}), frozenset({-62, 3, -55, -52, -48, -45, -40, -36, -30, -26, -24, -19, -14, -10, -73, -70, -67, -2}), frozenset({3, -25, -21, -17, -47, -75, -40, -72, -37, -67, -2, -33}), frozenset({3, -37, -55, -52, -51, -17, -47, -43, -75, -69, -67, -2, -33}), frozenset({-30, 3, -19, -16, -12, -75, -44, -39, -71, -2}), frozenset({-32, 3, -8, -21, -50, -17, -82, -46, -74, -40, -70, -36, -2}), frozenset({-6, -4, -3}), frozenset({3, 85, -72, -21, -36})]
30	itemsets left after W operation 	: [frozenset({86, -30, -26, -73}), frozenset({-59, -23, -86, -21, -17, -48, -44, -42, -72, -7, -5, -36, -3}), frozenset({-63, -60, -22, -85, -86, -48, -14, -78, -44, -10, -41, -2}), frozenset({-62, 3, -55, -54, -23, -86, -19, -50, -46, -14, -41, -8, -36, -67, -2}), frozenset({-63, 3, -59, -53, -48, -45, -39, -37, -22, -21, -84, -86, -16, -79, -10, -72, -2}), frozenset({3, -59, -55, -52, -49, -46, -36, -24, -86, -19, -82, -16, -79, -10, -72, -2, -65}), frozenset({-62, 3, -55, -52, -48, -45, -40, -36, -24, -86, -19, -14, -10, -70, -67, -2})]
20	itemsets left after W operation 	: [frozenset({-72, -21, 87, -17}), frozenset({-62, -54, -50, -47, -42, -37, -33, -28, -24, -87, -82, -80, -73, -7, -5, -67, -2}), frozenset({3, -25, -87, -47, -75, -40, -37, -67, -2, -33}), frozenset({-58, -55, -54, -50, -46, -41, -37, -31, -28, -87, -22, -78, -12, -73, -7, -5, -2}), frozenset({-59, -23, -86, -87, -48, -44, -42, -7, -5, -36, -3})]
10	itemsets left after T operation 	: [frozenset({-73, -21, -3, -17})]
7	itemsets left after W operation 	: [frozenset({-72, 88, -36, -10}), frozenset({-88, -78, -3, -73}), frozenset({3, -59, -24, -55, -86, -88, -52, -19, -82, -49, -16, -79, -46, -2, -65})]
Unpacking W operator applied earlier using 87 on frozenset({-72, -21, -17})
# of frequent itemsets	: 25
Time of DCI Closed		: 0.14305734634399414
Initial DL				: 42021.51276763669
Final DL				: 8082.55546678951
Compression (wrt me)	: 0.8076567230817455
Operator Counters		: {'D': 0, 'W': 3, 'V': 1, 'S': 1, 'R': 0, 'T': 3}
Misle Learning Runtime	: 1.5889873504638672

# of frequent itemsets	: 12172
Time of DCI Closed		: 0.38863611221313477
22  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-73, -72, -7, -5, -2}), frozenset({-6, -4, -2}), frozenset({-21, -17, -12, -7, -5, -2}), frozenset({-73, -72, -6, -4, -2}), frozenset({-28, -51, -17, -47, -6, -4, -67, -2}), frozenset({-21, -4, -14, -10, -73, -72, -6, -36, -2})}
DL of initial theory	: 40949.49408669026
3817	itemsets left after T operation 	: [frozenset({-72, -6, -4, -2})]
2734	itemsets left after W operation 	: [frozenset({85, -72, -6, -4, -3, -17}), frozenset({-32, -64, -61, -55, -21, -53, -85, -48, -46, -73, -36}), frozenset({-63, -62, -28, -24, -55, -85, -52, -48, -46, -12, -73, -40, -36, -34}), frozenset({-62, -58, -56, -54, -51, -47, -73, -43, -37, -33, -28, -24, -21, -85, -9, -67}), frozenset({-61, -58, -57, -49, -47, -40, -37, -33, -28, -24, -85, -84, -19, -80, -73, -8, -65}), frozenset({-30, -59, -26, -24, -55, -21, -53, -85, -48, -73, -46, -41, -36}), frozenset({-31, -62, -55, -23, -21, -52, -85, -49, -12, -44, -73, -40, -36, -66}), frozenset({-28, -24, -56, -21, -84, -85, -50, -80, -73, -46, -12, -41, -34}), frozenset({-62, -55, -54, -50, -46, -42, -37, -33, -27, -24, -21, -85, -82, -80, -8, -66}), frozenset({-31, -61, -28, -24, -55, -21, -53, -85, -50, -46, -76, -40, -36}), frozenset({-32, -62, -28, -24, -55, -85, -51, -47, -43, -37, -67}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -21, -85, -82, -80, -12, -73, -67}), frozenset({-62, -58, -24, -56, -21, -53, -85, -50, -73, -41, -8, -36, -66}), frozenset({-62, -28, -24, -56, -21, -52, -85, -49, -47, -11, -73, -40, -37, -67}), frozenset({-62, -28, -25, -55, -85, -52, -51, -80, -47, -43, -73, -37, -67, -33}), frozenset({-32, -61, -29, -24, -55, -21, -53, -51, -85, -47, -42, -73, -36, -67}), frozenset({-61, -58, -57, -52, -48, -46, -41, -37, -34, -26, -22, -85, -82, -78, -75, -10, -66}), frozenset({-32, -26, -55, -22, -21, -52, -85, -49, -78, -45, -12, -42, -73, -36}), frozenset({-32, -28, -57, -24, -53, -85, -82, -49, -80, -73, -46, -41, -8, -36, -66}), frozenset({-62, -55, -52, -50, -47, -40, -37, -35, -28, -25, -21, -85, -82, -79, -73, -8, -67}), frozenset({-30, -26, -58, -24, -57, -21, -52, -85, -49, -73, -46, -41, -8, -36}), frozenset({-32, -62, -28, -24, -56, -85, -52, -51, -47, -43, -37, -67}), frozenset({-32, -64, -28, -57, -25, -21, -85, -50, -47, -42, -73, -37})]
1744	itemsets left after S operation 	: [frozenset({-6, -4, -2})]
830	itemsets left after W operation 	: [frozenset({-21, -36, 86, -73}), frozenset({-59, -55, -53, -48, -47, -42, -72, -28, -24, -86, -82, -16, -79, -8, -7, -4, -2}), frozenset({-55, -52, -48, -47, -8, -39, -31, -28, -24, -86, -3, -14, -72, -6, -4, -67}), frozenset({-60, -58, -56, -53, -50, -44, -43, -71, -32, -28, -24, -86, -82, -17, -79, -10, -7, -5, -2}), frozenset({-86, -82, -79, -14, -72, -6, -4, -3}), frozenset({-63, -30, -60, -26, -22, -86, -49, -17, -46, -10, -41, -72, -7, -5, -2}), frozenset({-60, -55, -52, -48, -46, -72, -40, -31, -26, -22, -86, -17, -78, -8, -7, -4, -67, -2}), frozenset({-30, -86, -4, -14, -10, -6, -68, -3}), frozenset({-62, -55, -52, -51, -46, -40, -31, -26, -24, -86, -17, -80, -12, -2, -72, -7, -5, -66}), frozenset({-31, -59, -26, -5, -24, -86, -17, -48, -47, -10, -41, -7, -71, -2}), frozenset({-62, -55, -53, -48, -46, -41, -30, -26, -22, -86, -17, -78, -11, -72, -7, -4, -67, -2}), frozenset({-55, -52, -50, -46, -41, -71, -31, -28, -24, -86, -82, -17, -79, -10, -7, -5, -2}), frozenset({-31, -28, -22, -86, -51, -17, -46, -78, -10, -72, -40, -7, -5, -2}), frozenset({-59, -55, -53, -48, -47, -32, -26, -22, -86, -16, -78, -66, -72, -7, -4, -2}), frozenset({-59, -58, -56, -53, -48, -44, -40, -30, -26, -24, -86, -82, -17, -78, -66, -10, -7, -69, -4, -2}), frozenset({-30, -26, -22, -86, -48, -46, -14, -10, -72, -40, -6, -4, -3, -65}), frozenset({-62, -56, -53, -50, -47, -41, -30, -24, -86, -67, -16, -79, -8, -6, -69, -4, -3}), frozenset({-30, -60, -22, -86, -50, -17, -12, -44, -42, -71, -5, -7, -2}), frozenset({-32, -64, -61, -55, -86, -53, -85, -48, -46}), frozenset({-30, -59, -26, -24, -55, -86, -53, -85, -48, -46, -41}), frozenset({-31, -62, -55, -23, -85, -52, -86, -49, -12, -44, -40, -66}), frozenset({-62, -58, -24, -56, -86, -53, -85, -50, -41, -8, -66}), frozenset({-32, -61, -29, -24, -55, -86, -53, -85, -51, -47, -42, -67}), frozenset({-32, -26, -55, -22, -85, -52, -86, -49, -78, -45, -12, -42}), frozenset({-30, -58, -26, -24, -57, -86, -85, -52, -49, -46, -41, -8})]
641	itemsets left after T operation 	: [frozenset({-72, -46, -2, -17})]
410	itemsets left after T operation 	: [frozenset({-24, -28, -73})]
257	itemsets left after W operation 	: [frozenset({87, -72, -6, -4, -3}), frozenset({-30, -26, -87, -86, -22, -48, -46, -14, -10, -40, -65}), frozenset({-63, -59, -58, -57, -87, -21, -16, -77, -10, -40}), frozenset({-32, -26, -87, -22, -21, -53, -51, -16, -46, -12, -75, -41, -36, -67}), frozenset({-87, 85, -17}), frozenset({-79, -14, -87, -86, -82})]
124	itemsets left after T operation 	: [frozenset({-2, -17})]
24	itemsets left after W operation 	: [frozenset({-72, 88, -4, -26}), frozenset({-30, -57, -24, -88, -52, -19, -50, -17, -42, -73, -10, -7, -37, -3}), frozenset({-61, -55, -53, -48, -46, -42, -36, -32, -24, -88, -21, -82, -16, -79, -75, -10, -6, -67}), frozenset({-58, -56, -52, -49, -47, -40, -36, -34, -24, -88, -19, -82, -17, -79, -12, -73, -7, -3, -66}), frozenset({-64, -62, -48, -44, -39, -37, -30, -24, -88, -84, -19, -80, -14, -73, -8, -7, -2}), frozenset({-32, -59, -88, -55, -22, -53, -86, -48, -47, -16, -78, -66, -7, -2})]
13	itemsets left after V operation 	: [frozenset({2, -59, -58, -56, -52, -50, -47, -41, -36, -32, -26, -23, -19, -14, -10, -73, -71, -3, -66}), frozenset({-6, -4, -2}), frozenset({-30, -14, 2, -10, -86, -68, -3}), frozenset({-62, 2, -56, -53, -50, -47, -41, -30, -24, -86, -67, -16, -79, -8, -69, -3}), frozenset({-72, 2, -3, 87})]
8	itemsets left after T operation 	: [frozenset({-72, -2, -73})]
6	itemsets left after W operation 	: [frozenset({89, -21, -28, -73}), frozenset({-32, -64, -57, -25, -89, -85, -50, -47, -42, -37}), frozenset({-62, -25, -8, -55, -89, -85, -52, -50, -82, -67, -47, -79, -40, -37, -35})]
1	itemsets left after V operation 	: [frozenset({-72, -2, -73}), frozenset({2, -21, -82, -17, -12, -7, -5, -3})]
Unpacking W operator applied earlier using 88 on frozenset({-72, -4, -26})
# of frequent itemsets	: 2
Time of DCI Closed		: 0.13892245292663574
Initial DL				: 42021.51276763668
Final DL				: 6651.1703452707625
Compression (wrt me)	: 0.8417198737691988
Operator Counters		: {'D': 0, 'W': 4, 'V': 2, 'S': 1, 'R': 0, 'T': 5}
Misle Learning Runtime	: 1.5178775787353516

# of frequent itemsets	: 8168
Time of DCI Closed		: 0.3193480968475342
32  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-6, -4, -3}), frozenset({-21, -17, -3, -72, -73, -8, -6, -37, -4, -35})}
DL of initial theory	: 40816.192959978594
3827	itemsets left after T operation 	: [frozenset({-36, -72, -6, -4, -3})]
1996	itemsets left after S operation 	: [frozenset({-6, -4, -3})]
938	itemsets left after W operation 	: [frozenset({85, -72, -6, -21, -36, -4, -2}), frozenset({-63, -30, -60, -26, -22, -85, -48, -14, -78, -44, -41, -10, -73}), frozenset({-30, -61, -14, -46, -10, -74, -85}), frozenset({-32, -28, -24, -55, -53, -85, -82, -17, -46, -74, -66}), frozenset({-64, -62, -85, -82, -49, -17, -47, -79, -77, -12, -41, -33}), frozenset({-62, -28, -58, -57, -24, -85, -50, -17, -46, -10, -74, -40, -67, -33}), frozenset({-31, -59, -26, -55, -22, -85, -52, -16, -48, -45, -10, -73, -39}), frozenset({-62, -85, -52, -82, -50, -17, -46, -78, -12, -75, -34}), frozenset({-63, -30, -59, -26, -22, -53, -84, -85, -16, -79, -48, -45, -10, -73, -39}), frozenset({-61, -58, -57, -54, -49, -45, -42, -30, -26, -24, -85, -82, -79, -13, -75, -10})]
274	itemsets left after T operation 	: [frozenset({-78, -10, -73, -72, -36, -3})]
89	itemsets left after W operation 	: [frozenset({-30, -26, -55, -4, 86, -73, -6, -36}), frozenset({-62, -23, -54, -86, -19, -50, -14, -46, -41, -8, -67, -2}), frozenset({-62, -24, -86, -52, -19, -48, -14, -45, -10, -40, -70, -67, -2}), frozenset({-59, -24, -86, -52, -19, -82, -49, -16, -79, -46, -10, -72, -2, -65})]
55	itemsets left after W operation 	: [frozenset({-6, -21, -4, 87}), frozenset({-55, -52, -50, -47, -42, -37, -33, -26, -24, -87, -82, -17, -80, -74, -8, -71, -2}), frozenset({-63, -62, -87, -82, -78, -14, -74, -8, -71, -2}), frozenset({-63, -30, -28, -59, -24, -87, -46, -14, -75, -10, -39, -71, -36, -2}), frozenset({-29, -25, -87, -82, -17, -47, -79, -12, -43, -37, -2}), frozenset({-32, -87, -82, -50, -17, -46, -74, -40, -8, -70, -36, -2}), frozenset({85, -72, -87, -36, -2})]
25	itemsets left after T operation 	: [frozenset({-73, -21, -3, -17})]
17	itemsets left after V operation 	: [frozenset({3, -58, -57, -53, -50, -47, -40, -37, -34, -28, -25, -82, -17, -80, -12, -73, -72, -2}), frozenset({3, -37, -55, -52, -51, -17, -47, -43, -75, -69, -67, -2, -33}), frozenset({-30, 3, -19, -16, -12, -75, -44, -39, -71, -2}), frozenset({-6, -4, -3}), frozenset({-73, -30, 3, -26, 86, -55, -36}), frozenset({3, -21, 87})]
8	itemsets left after V operation 	: [frozenset({-62, 3, -54, -50, -47, -42, -37, -33, -28, -24, -82, -80, -72, -7, -5, -67, -2}), frozenset({-73, -21, -3, -17})]
# of frequent itemsets	: 13
Time of DCI Closed		: 0.145416259765625
12	itemsets left after W operation 	: [frozenset({88, -82, -17}), frozenset({-32, -28, -24, -55, -88, -53, -85, -46, -74, -66}), frozenset({-64, -62, -88, -85, -49, -47, -79, -77, -12, -41, -33}), frozenset({-62, -88, -85, -52, -50, -46, -78, -12, -75, -34}), frozenset({-55, -52, -50, -47, -42, -37, -33, -26, -24, -87, -88, -80, -74, -8, -71, -2}), frozenset({-29, -25, -88, -87, -47, -79, -12, -43, -37, -2}), frozenset({-32, -8, -87, -88, -50, -46, -74, -40, -70, -36, -2}), frozenset({3, -58, -57, -53, -50, -47, -40, -37, -34, -28, -25, -88, -80, -12, -73, -72, -2})]
Initial DL				: 41917.274997377455
Final DL				: 6663.58998811668
Compression (wrt me)	: 0.8410299813493701
Operator Counters		: {'D': 0, 'W': 4, 'V': 2, 'S': 1, 'R': 0, 'T': 3}
Misle Learning Runtime	: 1.3819832801818848

# of frequent itemsets	: 11982
Time of DCI Closed		: 0.42933106422424316
21  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-73, -72, -7, -5, -2}), frozenset({-21, -4, -14, -10, -73, -72, -6, -36, -2}), frozenset({-6, -4, -2})}
DL of initial theory	: 40816.1929599786
3703	itemsets left after T operation 	: [frozenset({-72, -6, -4, -2})]
2399	itemsets left after W operation 	: [frozenset({85, -6, -21, -4, -17}), frozenset({-32, -64, -61, -55, -53, -85, -48, -46, -73, -72, -36, -3}), frozenset({-62, -58, -56, -54, -51, -47, -9, -43, -37, -33, -28, -24, -85, -3, -73, -72, -67}), frozenset({-30, -59, -26, -24, -55, -53, -85, -48, -73, -46, -41, -72, -36, -3}), frozenset({-31, -62, -55, -23, -85, -52, -49, -40, -12, -44, -73, -72, -36, -3, -66}), frozenset({-28, -24, -56, -85, -84, -50, -80, -73, -46, -12, -41, -72, -3, -34}), frozenset({-62, -55, -54, -50, -46, -42, -8, -37, -33, -27, -24, -85, -82, -80, -72, -3, -66}), frozenset({-62, -28, -25, -55, -85, -47, -43, -37, -67, -2, -33}), frozenset({-30, -55, -22, -85, -82, -48, -79, -46, -43, -75, -8, -71, -36, -2}), frozenset({-32, -62, -22, -85, -49, -80, -46, -41, -8, -37, -67, -2}), frozenset({-28, -24, -85, -51, -46, -11, -42, -36, -2}), frozenset({-31, -61, -28, -24, -55, -53, -85, -50, -46, -76, -72, -40, -36, -3}), frozenset({-26, -85, -46, -75, -43, -10, -71, -36, -67, -2}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -24, -85, -82, -80, -3, -12, -73, -72, -67}), frozenset({-62, -58, -24, -56, -8, -53, -85, -50, -41, -73, -72, -36, -3, -66}), frozenset({-10, -73, -71, -85, -2}), frozenset({-32, -61, -29, -24, -55, -53, -85, -51, -67, -47, -42, -73, -72, -36, -3}), frozenset({-61, -55, -52, -49, -46, -41, -36, -32, -26, -24, -85, -82, -79, -66, -75, -68, -2}), frozenset({-62, -57, -54, -50, -46, -41, -36, -30, -28, -25, -85, -82, -80, -10, -73, -70, -67, -2}), frozenset({-32, -26, -55, -22, -85, -52, -49, -78, -45, -12, -42, -73, -72, -36, -3}), frozenset({-32, -62, -22, -53, -85, -49, -46, -73, -40, -71, -37, -67, -2}), frozenset({-61, -28, -23, -53, -85, -50, -80, -46, -10, -42, -2, -36, -66, -33}), frozenset({-26, -10, -40, -37, -85, -67, -33}), frozenset({-59, -52, -50, -46, -42, -36, -31, -28, -22, -85, -79, -73, -8, -71, -67, -2}), frozenset({-62, -55, -52, -50, -47, -40, -8, -37, -35, -28, -25, -85, -82, -79, -3, -73, -72, -67}), frozenset({-61, -58, -56, -53, -49, -46, -41, -36, -30, -28, -24, -85, -66, -73, -8, -71, -2}), frozenset({-30, -26, -58, -24, -57, -8, -85, -52, -49, -46, -41, -73, -72, -36, -3}), frozenset({-8, -85, -84, -2}), frozenset({-55, -54, -85, -51, -43, -37, -67, -2}), frozenset({-32, -64, -28, -57, -25, -85, -50, -47, -42, -73, -72, -37, -3})]
1468	itemsets left after W operation 	: [frozenset({-6, -36, -4, 86}), frozenset({-31, -27, -22, -21, -86, -14, -45, -10, -40, -2}), frozenset({-32, -23, -86, -21, -82, -46, -13, -12, -75, -40, -71, -2}), frozenset({-63, -62, -55, -52, -48, -46, -40, -34, -28, -24, -86, -17, -12, -73, -72, -3}), frozenset({-55, -52, -48, -47, -8, -39, -31, -28, -24, -86, -21, -3, -14, -73, -72, -67}), frozenset({-32, -26, -24, -86, -53, -21, -82, -49, -47, -78, -12, -42, -73, -71, -2}), frozenset({-63, -59, -55, -53, -50, -44, -72, -39, -33, -26, -24, -86, -21, -16, -73, -8, -3}), frozenset({-55, -53, -50, -45, -41, -32, -26, -24, -86, -21, -82, -67, -14, -78, -73, -8, -70, -3}), frozenset({-26, -22, -86, -17, -48, -78, -44, -11, -73, -71, -2}), frozenset({-86, -21, -82, -79, -14, -73, -72, -3}), frozenset({-30, -86, -21, -14, -10, -73, -68, -3}), frozenset({-59, -58, -56, -52, -50, -47, -41, -32, -26, -23, -86, -19, -14, -10, -73, -71, -3, -66}), frozenset({-62, -30, -58, -57, -26, -24, -86, -52, -50, -79, -46, -2, -40, -66}), frozenset({-61, -55, -52, -48, -46, -41, -33, -26, -86, -18, -80, -14, -73, -8, -68, -2, -65}), frozenset({-32, -26, -24, -55, -86, -21, -52, -48, -16, -44, -42, -73, -8, -68, -2}), frozenset({-58, -55, -86, -20, -82, -17, -79, -42, -2, -33}), frozenset({-57, -53, -49, -46, -72, -41, -32, -28, -24, -86, -82, -17, -80, -73, -8, -3, -66}), frozenset({-62, -53, -49, -73, -46, -41, -32, -26, -22, -86, -19, -82, -17, -79, -2, -9, -70, -66}), frozenset({-62, -30, -26, -56, -22, -53, -86, -51, -16, -45, -10, -39, -67, -2}), frozenset({-30, -26, -22, -21, -86, -48, -46, -14, -10, -73, -40, -72, -3, -65}), frozenset({-62, -56, -53, -50, -47, -41, -30, -24, -86, -21, -67, -16, -79, -73, -8, -69, -3}), frozenset({-59, -55, -52, -48, -44, -40, -30, -26, -23, -86, -82, -17, -79, -75, -8, -71, -2}), frozenset({-61, -55, -54, -49, -46, -40, -30, -28, -86, -82, -80, -14, -8, -71, -67, -2}), frozenset({-62, -30, -28, -24, -55, -86, -52, -50, -67, -46, -43, -73, -72, -3}), frozenset({-32, -26, -22, -53, -21, -51, -86, -67, -16, -46, -12, -75, -41, -72, -3})]
733	itemsets left after T operation 	: [frozenset({-21, -17, -2, -73})]
467	itemsets left after W operation 	: [frozenset({-24, -72, 87, -73}), frozenset({-59, -55, -53, -48, -47, -42, -36, -28, -87, -21, -82, -16, -79, -8, -7, -4, -2}), frozenset({-61, -58, -57, -49, -47, -40, -37, -33, -28, -87, -84, -19, -17, -80, -8, -6, -4, -3, -65}), frozenset({-62, -28, -58, -56, -87, -54, -85, -51, -47, -3, -43, -9, -37, -67, -33}), frozenset({-30, -59, -26, -55, -87, -53, -85, -48, -46, -41, -36, -3}), frozenset({-28, -56, -87, -85, -84, -50, -80, -46, -12, -41, -3, -34}), frozenset({-32, -28, -57, -87, -86, -53, -82, -49, -17, -80, -46, -41, -8, -3, -66}), frozenset({-30, -26, -57, -87, -52, -19, -50, -17, -42, -10, -7, -37, -4, -3}), frozenset({-59, -58, -55, -53, -50, -46, -40, -37, -30, -28, -87, -85, -82, -80, -3, -12, -67}), frozenset({-62, -58, -56, -87, -53, -85, -50, -41, -8, -36, -3, -66}), frozenset({-32, -61, -29, -55, -87, -53, -85, -51, -47, -3, -42, -36, -67}), frozenset({-62, -30, -28, -55, -86, -87, -52, -50, -3, -46, -43, -67}), frozenset({-28, -37, -87, -82, -17, -79, -46, -12, -2, -40, -6, -5, -34}), frozenset({-28, -55, -87, -21, -52, -51, -43, -10, -7, -37, -4, -35, -2}), frozenset({-30, -58, -26, -57, -87, -85, -52, -49, -46, -41, -8, -36, -3}), frozenset({-64, -62, -48, -44, -39, -37, -30, -26, -87, -84, -19, -80, -14, -8, -7, -4, -2}), frozenset({-63, -62, -28, -55, -86, -87, -52, -17, -48, -46, -12, -40, -3, -34}), frozenset({-31, -28, -55, -86, -21, -52, -87, -67, -48, -47, -14, -8, -39, -3}), frozenset({-63, -59, -26, -55, -86, -53, -21, -87, -50, -16, -44, -8, -39, -3, -33})]
404	itemsets left after T operation 	: [frozenset({-46, -2})]
114	itemsets left after V operation 	: [frozenset({2, -36, 86}), frozenset({-32, -62, 2, -28, -24, -55, -51, -17, -47, -3, -43, -72, -37, -67}), frozenset({2, -61, -58, -57, -52, -48, -46, -41, -37, -34, -26, -22, -82, -17, -78, -75, -10, -72, -3, -66}), frozenset({-35, -3, 2, -29, -42, -24, -51}), frozenset({-6, -4, -2}), frozenset({-32, -62, 2, -28, -56, -24, -52, -51, -17, -67, -47, -43, -72, -37, -3}), frozenset({-63, 2, -59, -58, -57, -21, -16, -77, -10, -40, -72, -3}), frozenset({2, -61, -58, -57, -49, -47, -40, -37, -33, -28, -87, -84, -19, -17, -80, -8, -3, -65}), frozenset({2, -21, 85, -17})]
92	itemsets left after W operation 	: [frozenset({-72, 88, -73}), frozenset({-30, -26, -88, -22, -21, -86, -48, -46, -14, -10, -40, -3, -65}), frozenset({-13, -11, -88, -7, -21, -4, -2}), frozenset({-24, -88, 87}), frozenset({-88, -7, -5, -2}), frozenset({-79, -88, -7, -5, -2}), frozenset({-88, -21, -82, -17, -12, -7, -5, -3}), frozenset({-32, -64, -61, -88, -55, -53, -85, -48, -46, -36, -3}), frozenset({-31, -62, -88, -55, -23, -85, -52, -49, -12, -44, -40, -36, -3, -66}), frozenset({-32, -26, -88, -55, -22, -85, -52, -49, -78, -45, -12, -42, -36, -3}), frozenset({-62, -55, -52, -50, -47, -40, -37, -35, -28, -25, -88, -85, -82, -79, -3, -8, -67}), frozenset({-32, -64, -28, -57, -25, -88, -85, -50, -47, -42, -37, -3}), frozenset({-79, -14, -88, -86, -21, -3, -82})]
47	itemsets left after T operation 	: [frozenset({-24, -21, -53, -73})]
25	itemsets left after T operation 	: [frozenset({-21, -2})]
11	itemsets left after W operation 	: [frozenset({-24, 89, -28, -72}), frozenset({-32, -62, 2, -89, -55, -51, -17, -47, -3, -43, -37, -67}), frozenset({-32, -62, 2, -89, -56, -52, -51, -17, -67, -47, -43, -37, -3}), frozenset({-31, -61, -89, -55, -85, -53, -50, -46, -76, -40, -36, -3})]
7	itemsets left after T operation 	: [frozenset({-2, -17})]
5	itemsets left after T operation 	: [frozenset({-48, -4, -2})]
3	itemsets left after T operation 	: [frozenset({-4, -2})]
2	itemsets left after W operation 	: [frozenset({-24, 90, -72}), frozenset({-62, -55, -54, -50, -46, -42, -37, -33, -27, -90, -85, -82, -80, -8, -3, -66}), frozenset({89, -28, -90})]
Unpacking W operator applied earlier using 87 on frozenset({-24, -72, -73})
Unpacking W operator applied earlier using 86 on frozenset({-6, -36, -4})
# of frequent itemsets	: 10
Time of DCI Closed		: 0.14056062698364258
Clause Pruned	: frozenset({-46, -2})
Clause Pruned	: frozenset({-79, -88, -7, -5, -2})
Clause Pruned	: frozenset({-21, -2})
Initial DL				: 41917.27499737748
Final DL				: 6739.153728127263
Compression (wrt me)	: 0.8392272940321409
Operator Counters		: {'D': 0, 'W': 4, 'V': 1, 'S': 0, 'R': 0, 'T': 8}
Misle Learning Runtime	: 1.6847102642059326

# of frequent itemsets	: 7812
Time of DCI Closed		: 0.30988049507141113
39  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-21, -16, -8, -6, -4, -3}), frozenset({-6, -4, -3}), frozenset({-7, -4, -2})}
DL of initial theory	: 41319.87341071545
3089	itemsets left after T operation 	: [frozenset({-6, -4, -36, -3})]
1346	itemsets left after W operation 	: [frozenset({85, -72, -6, -21, -4}), frozenset({-32, -62, -28, -24, -55, -53, -85, -82, -17, -48, -79, -44, -75, -10, -3}), frozenset({-62, -28, -24, -85, -82, -17, -80, -47, -49, -43, -73, -37, -3, -33}), frozenset({-63, -30, -60, -26, -22, -85, -48, -14, -78, -44, -41, -10, -73, -36, -2}), frozenset({-30, -61, -85, -14, -46, -10, -74, -36, -2}), frozenset({-32, -28, -24, -55, -53, -85, -82, -17, -46, -74, -2, -36, -66}), frozenset({-63, -59, -53, -48, -45, -39, -37, -30, -26, -22, -85, -84, -16, -79, -10, -73, -2}), frozenset({-55, -52, -51, -47, -40, -37, -33, -28, -25, -85, -82, -17, -79, -76, -10, -3}), frozenset({-61, -28, -24, -85, -51, -17, -67, -47, -11, -43, -73, -37, -3}), frozenset({-64, -62, -85, -82, -49, -17, -47, -79, -77, -12, -41, -36, -2, -33}), frozenset({-60, -55, -53, -48, -45, -40, -37, -34, -26, -22, -85, -82, -17, -79, -11, -73, -3, -65}), frozenset({-62, -58, -57, -50, -46, -40, -36, -33, -28, -24, -85, -17, -10, -74, -67, -2}), frozenset({-31, -59, -26, -55, -22, -85, -52, -16, -48, -45, -10, -73, -39, -36, -2}), frozenset({-28, -56, -85, -52, -82, -17, -48, -79, -67, -10, -73, -37, -3, -34}), frozenset({-62, -85, -52, -82, -50, -17, -46, -78, -12, -75, -2, -36, -34}), frozenset({-32, -28, -56, -23, -53, -85, -49, -16, -73, -44, -10, -41, -38, -3, -66}), frozenset({-35, -37, -73, -8, -85, -3, -17}), frozenset({-62, -57, -54, -49, -46, -41, -37, -32, -26, -24, -85, -82, -17, -79, -10, -73, -3, -66}), frozenset({-25, -85, -17, -47, -75, -40, -37, -67, -2, -33}), frozenset({-64, -31, -58, -26, -56, -53, -85, -16, -47, -48, -73, -11, -41, -37, -3}), frozenset({-63, -60, -56, -52, -49, -44, -42, -37, -34, -28, -24, -85, -82, -17, -79, -73, -8, -3}), frozenset({-63, -59, -53, -48, -45, -39, -36, -30, -26, -22, -85, -84, -16, -79, -10, -73, -2}), frozenset({-61, -56, -52, -50, -47, -40, -37, -35, -28, -24, -85, -82, -17, -79, -3, -12, -73, -67}), frozenset({-62, -58, -56, -54, -51, -47, -40, -36, -35, -28, -24, -85, -17, -76, -8, -67, -2}), frozenset({-61, -58, -57, -54, -49, -45, -42, -36, -30, -26, -24, -85, -82, -79, -13, -75, -10, -2}), frozenset({-28, -25, -85, -50, -17, -3, -46, -12, -73, -35})]
697	itemsets left after T operation 	: [frozenset({-73, -3, -17})]
355	itemsets left after S operation 	: [frozenset({-6, -4, -3})]
116	itemsets left after W operation 	: [frozenset({86, -6, -4, -2}), frozenset({-62, -55, -54, -50, -46, -41, -36, -30, -26, -23, -86, -19, -14, -73, -8, -67}), frozenset({-55, -52, -50, -47, -42, -37, -33, -26, -24, -86, -21, -82, -17, -80, -74, -8, -71}), frozenset({-58, -57, -53, -50, -47, -40, -37, -34, -28, -25, -86, -82, -17, -80, -12, -73, -72}), frozenset({-59, -55, -52, -49, -46, -36, -30, -26, -24, -86, -19, -82, -16, -79, -10, -73, -72, -65}), frozenset({-63, -30, -28, -59, -24, -86, -21, -46, -14, -75, -10, -39, -71, -36}), frozenset({-29, -25, -86, -21, -82, -17, -47, -79, -12, -43, -37}), frozenset({-62, -55, -52, -48, -45, -40, -36, -30, -26, -24, -86, -19, -14, -10, -73, -70, -67}), frozenset({-37, -55, -86, -52, -51, -17, -47, -43, -75, -69, -67, -33}), frozenset({-30, -86, -19, -16, -12, -75, -44, -39, -71}), frozenset({-32, -8, -86, -21, -50, -17, -82, -46, -74, -40, -70, -36})]
36	itemsets left after W operation 	: [frozenset({-73, -26, -10, 87, -36}), frozenset({-31, -60, -23, -87, -53, -19, -16, -48, -78, -41, -72, -7, -4, -3}), frozenset({-63, -30, -60, -87, -22, -85, -48, -14, -78, -44, -41, -2}), frozenset({-31, -59, -55, -22, -85, -52, -87, -16, -48, -45, -39, -2}), frozenset({-63, -30, -59, -87, -22, -53, -85, -84, -48, -16, -79, -45, -39, -2}), frozenset({-30, -59, -24, -55, -86, -87, -52, -19, -82, -49, -16, -79, -46, -72, -65}), frozenset({-62, -30, -24, -55, -86, -87, -52, -19, -48, -14, -45, -40, -70, -67})]
26	itemsets left after W operation 	: [frozenset({88, -46, -36}), frozenset({-30, -61, -88, -85, -14, -10, -74, -2}), frozenset({-32, -28, -24, -55, -88, -53, -85, -82, -17, -66, -74, -2}), frozenset({-62, -28, -58, -57, -24, -88, -85, -50, -17, -10, -74, -40, -67, -2, -33}), frozenset({-62, -88, -85, -52, -82, -50, -17, -78, -12, -75, -2, -34}), frozenset({-62, -30, -26, -88, -55, -54, -23, -86, -19, -50, -14, -41, -73, -8, -67}), frozenset({-63, -30, -28, -59, -24, -88, -86, -21, -14, -75, -10, -39, -71}), frozenset({-32, -88, -8, -86, -21, -50, -17, -82, -74, -40, -70})]
12	itemsets left after T operation 	: [frozenset({-53, -3, -73})]
6	itemsets left after W operation 	: [frozenset({89, -73, -21, -17}), frozenset({-62, -54, -50, -47, -42, -37, -33, -28, -89, -24, -82, -80, -72, -7, -5, -67, -2}), frozenset({-58, -55, -54, -50, -46, -41, -37, -31, -28, -89, -22, -78, -12, -72, -7, -5, -2})]
5	itemsets left after V operation 	: [frozenset({-72, 3, -21, 85}), frozenset({-6, -4, -3}), frozenset({3, 86, -2})]
3	itemsets left after T operation 	: [frozenset({-3, -10})]
2	itemsets left after V operation 	: [frozenset({-53, -3, -73}), frozenset({53, -17})]
# of frequent itemsets	: 11
Time of DCI Closed		: 0.14664030075073242
10	itemsets left after W operation 	: [frozenset({90, -85, -2}), frozenset({-63, -59, -53, -48, -45, -39, -37, -30, -26, -90, -22, -84, -16, -79, -10, -73}), frozenset({-64, -62, -90, -82, -49, -17, -47, -79, -77, -12, -41, -36, -33}), frozenset({-90, -25, -17, -47, -75, -40, -37, -67, -33}), frozenset({-62, -58, -56, -54, -51, -47, -40, -36, -35, -28, -90, -24, -17, -76, -8, -67}), frozenset({-61, -58, -57, -54, -49, -45, -42, -36, -30, -26, -90, -24, -82, -79, -13, -75, -10}), frozenset({-63, -30, -60, -90, -87, -22, -48, -14, -78, -44, -41}), frozenset({-31, -59, -90, -55, -22, -87, -52, -16, -48, -45, -39}), frozenset({-63, -30, -59, -90, -87, -22, -53, -84, -48, -16, -79, -45, -39}), frozenset({-30, -61, -14, -10, -74, -88, -90}), frozenset({-32, -28, -90, -24, -55, -88, -53, -82, -17, -74, -66}), frozenset({-62, -28, -58, -57, -24, -88, -90, -50, -17, -10, -74, -40, -67, -33}), frozenset({-62, -90, -88, -52, -82, -50, -17, -78, -12, -75, -34})]
9	itemsets left after V operation 	: [frozenset({-32, -28, -90, -24, -55, -88, -53, -82, -74, -66}), frozenset({-55, -53, -52, -50, -47, -42, -37, -33, -26, -24, -86, -21, -82, -80, -74, -8, -71}), frozenset({-58, -57, -53, -50, -47, -40, -37, -34, -28, -25, -86, -82, -80, -12, -73, -72}), frozenset({-29, -25, -86, -21, -53, -82, -47, -79, -12, -43, -37}), frozenset({-69, -55, -86, -53, -52, -51, -47, -43, -75, -37, -67, -33}), frozenset({-62, -28, -58, -57, -24, -88, -90, -53, -50, -10, -74, -40, -67, -33}), frozenset({-62, -90, -88, -53, -52, -82, -50, -78, -12, -75, -34}), frozenset({-32, -88, -86, -21, -53, -50, -82, -74, -40, -8, -70}), frozenset({89, -21, -53, -73}), frozenset({53, -17}), frozenset({-64, -62, -90, -53, -82, -49, -47, -79, -77, -12, -41, -36, -33}), frozenset({-90, -25, -53, -47, -75, -40, -37, -67, -33}), frozenset({-62, -58, -56, -54, -53, -51, -47, -40, -36, -35, -28, -90, -24, -76, -8, -67})]
Clause Pruned	: frozenset({-3, -10})
Initial DL				: 42024.606760431314
Final DL				: 8284.033797079192
Compression (wrt me)	: 0.8028765897964546
Operator Counters		: {'D': 0, 'W': 6, 'V': 3, 'S': 1, 'R': 0, 'T': 4}
Misle Learning Runtime	: 1.558804988861084

# of frequent itemsets	: 11389
Time of DCI Closed		: 0.3651082515716553
23  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-6, -4, -2}), frozenset({-21, -17, -12, -7, -5, -2}), frozenset({-73, -72, -6, -4, -2}), frozenset({-28, -51, -17, -47, -6, -4, -67, -2}), frozenset({-21, -4, -14, -10, -73, -72, -6, -36, -2})}
DL of initial theory	: 41319.87341071546
3752	itemsets left after T operation 	: [frozenset({-72, -6, -4, -2})]
1907	itemsets left after T operation 	: [frozenset({-6, -4, -17})]
1247	itemsets left after T operation 	: [frozenset({-21, -17, -2, -73})]
672	itemsets left after W operation 	: [frozenset({85, -26, -6, -36, -4}), frozenset({-30, -22, -21, -85, -48, -14, -46, -40, -10, -73, -72, -3, -65}), frozenset({-32, -24, -85, -49, -79, -47, -12, -43, -73, -71, -2}), frozenset({-32, -24, -21, -53, -85, -82, -49, -47, -78, -12, -42, -73, -71, -2}), frozenset({-63, -59, -55, -53, -50, -44, -72, -39, -33, -24, -21, -85, -16, -73, -8, -3}), frozenset({-31, -62, -58, -57, -23, -21, -85, -50, -16, -46, -9, -40, -67, -2}), frozenset({-55, -53, -50, -45, -41, -32, -24, -21, -85, -82, -3, -14, -78, -73, -8, -70, -67}), frozenset({-59, -58, -56, -52, -50, -47, -41, -32, -23, -85, -19, -14, -10, -73, -71, -3, -66}), frozenset({-62, -30, -58, -57, -24, -85, -52, -50, -79, -46, -2, -40, -66}), frozenset({-61, -55, -52, -48, -46, -41, -33, -85, -18, -80, -14, -73, -8, -68, -2, -65}), frozenset({-32, -24, -55, -21, -52, -85, -16, -48, -44, -42, -73, -8, -68, -2}), frozenset({-61, -55, -53, -48, -46, -42, -32, -24, -21, -85, -82, -16, -79, -75, -10, -72, -67}), frozenset({-62, -30, -56, -22, -53, -85, -51, -16, -45, -10, -39, -67, -2})]
175	itemsets left after T operation 	: [frozenset({-4, -2})]
76	itemsets left after W operation 	: [frozenset({-72, 86, -73}), frozenset({-86, -21, -36, -82, -79, -14, -6, -4, -3}), frozenset({-30, -26, -57, -24, -86, -52, -19, -50, -17, -42, -10, -7, -37, -4, -3}), frozenset({-28, -5, -24, -86, -82, -17, -79, -46, -12, -34, -40, -6, -37, -2}), frozenset({-58, -56, -52, -49, -47, -40, -36, -34, -26, -24, -86, -19, -82, -17, -79, -12, -7, -4, -3, -66}), frozenset({-79, -7, -86, -5, -2}), frozenset({-86, -21, -82, -17, -12, -7, -5, -3}), frozenset({-30, -22, -21, -85, -86, -48, -14, -46, -10, -40, -3, -65}), frozenset({-63, -59, -24, -55, -86, -53, -21, -85, -50, -16, -44, -8, -39, -3, -33})]
31	itemsets left after T operation 	: [frozenset({-21, -2, -17})]
20	itemsets left after V operation 	: [frozenset({-35, -3, 17, -29, -42, -24, -51}), frozenset({-63, -59, -58, -57, -21, -16, 17, -77, -10, -40, -72, -3}), frozenset({-6, -4, -17}), frozenset({17, -36, 85, -26}), frozenset({-86, -21, -82, -79, -14, 17, -36, -3})]
8	itemsets left after T operation 	: [frozenset({-24, -28, -4, -73})]
6	itemsets left after T operation 	: [frozenset({-24, -4, -17})]
5	itemsets left after V operation 	: [frozenset({2, -29, -25, -5, -51, -47, -43, -7, -37, -3, -33}), frozenset({2, -12, -7, -86, -5, -3, -82}), frozenset({-21, -2, -17})]
2	itemsets left after T operation 	: [frozenset({-4, -17})]
1	itemsets left after T operation 	: [frozenset({-2, -17})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.15202951431274414
Initial DL				: 42024.60676043134
Final DL				: 8823.36556010064
Compression (wrt me)	: 0.790042876298646
Operator Counters		: {'D': 0, 'W': 2, 'V': 2, 'S': 0, 'R': 0, 'T': 9}
Misle Learning Runtime	: 1.174880027770996

Running	: ./Resources/Krimp/bin/krimp	/home/arcchitjain/Documents/Mistle/classify.conf
krimp_accuracy = 0.7962
mistle_fold_accuracy_list = [0.7297297297297297, 0.8648648648648649, 0.9459459459459459, 0.8108108108108109, 0.8378378378378378, 0.8378378378378378, 0.7837837837837838, 0.7837837837837838, 0.7837837837837838, 0.7142857142857143]
mistle_attempted_list = [37, 37, 37, 37, 37, 37, 37, 37, 37, 35]
weighted sum = 298.0
weighted_mistle_accuracy = 0.8097826086956522
mistle_atempted = 368
mistle_coverage = 1.0
naive_mistle_attempted_list = 0.8092664092664092
Mistle MDL Selections = ['T+', 'T-', 'T-', 'T+', 'T-', 'T-', 'T-', 'T-', 'T+', 'T+']
krimp_time = 3.749746322631836
mistle_time = 31.979727745056152
krimp_accuracy_dict = {'horseColic.dat': '0.7962'}
mistle_accuracy_dict = {'horseColic.dat': (0.8097826086956522, 368, 1.0)}
