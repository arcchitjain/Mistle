 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: 'a3b7e51c-a441-4420-912d-ef43a6e7aca7_convertdb.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Database :: 
 * Type:		FIMI database
 * File:		ionosphere.dat
 * Scanning file:	in progress... * Scanning file: done                       
 * Database:	351 rows, maximal 35 columns
 * 		has bin sizes: no
 * 		has transaction id's: no
 * Reading database:	in progress... * Reading database:	done          

 * Processing Data:  * Processing Data: Translating Forward * Processing Data: Sorting within Rows * Processing Data: Writing Data              ** Writing FIC database to file
 * File:		/home/arcchitjain/Documents/Mistle/Data/ionosphere.db
** Finished writing database.

 * Processing Data: Finished                  

 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/

Task `datatrans`, command `convertdb` finished. This took 0 seconds.

 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: 'c4f59c36-f963-46ce-8da6-ee93ff953ec1_analysedb.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Database :: 
 * File:		ionosphere.db
 * Database:		351t 351r, 12285i, 81629.72bits
 * 			pruned below support 0, maximum set length 35
 * Alphabet:		157 items
 * Internal datatype:	uint16 value arrays

** Analysing database
 * Output File:	ionosphere.db.analysis.txt
 * Writing analysis:	in progress... * Writing analysis:	done          


 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/analysedb/

Task `main`, command `analysedb` finished. This took 0 seconds.

 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: '59f81cf3-2e2a-4dcc-8f8b-3738a092ccd5_classifycompress.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Database :: 
 * File:		ionosphere.db
 * Database:		351t 351r, 12285i, 81629.72bits
 * 			pruned below support 0, maximum set length 35
 * Alphabet:		157 items
 * Internal datatype:	32bit bitmap array

** Classification ::
 * Seed:				1234
 * numFolds:			10
 * Split database:		creating 10 partitions
 * Creating:			fold 1
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 1
** Writing FIC database to file
 * File:		train12.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		ionosphere-all-98d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		12535
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(152a,0u,6936,43234,2660,45894)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (126) ? c/s  		 | Progress:		2% (251) ? c/s  		 / Progress:		3% (377) ? c/s  		 - Progress:		4% (502) ? c/s  		 \ Progress:		5% (627) ? c/s  		 | Progress:		6% (753) ? c/s  		 / Progress:		7% (878) ? c/s  		 - Progress:		8% (1003) ? c/s  		 \ Progress:		9% (1129) ? c/s  		 | Progress:		10% (1254) ? c/s  		 / Progress:		11% (1379) ? c/s  		 - Progress:		12% (1505) ? c/s  		 \ Progress:		13% (1630) ? c/s  		 | Progress:		14% (1755) ? c/s  		 / Progress:		15% (1881) ? c/s  		 - Progress:		16% (2006) ? c/s  		 \ Progress:		17% (2131) ? c/s  		 | Progress:		18% (2257) ? c/s  		 / Progress:		19% (2382) ? c/s  		 - Progress:		20% (2507) ? c/s  		 \ Progress:		21% (2633) ? c/s  		 | Progress:		22% (2758) ? c/s  		 / Progress:		23% (2884) ? c/s  		 - Progress:		24% (3009) ? c/s  		 \ Progress:		25% (3134) ? c/s  		 | Progress:		26% (3260) ? c/s  		 / Progress:		27% (3385) ? c/s  		 - Progress:		28% (3510) ? c/s  		 \ Progress:		29% (3636) ? c/s  		 | Progress:		30% (3761) ? c/s  		 / Progress:		31% (3886) ? c/s  		 - Progress:		32% (4012) ? c/s  		 \ Progress:		33% (4137) ? c/s  		 | Progress:		34% (4262) ? c/s  		 / Progress:		35% (4388) ? c/s  		 - Progress:		36% (4513) ? c/s  		 \ Progress:		37% (4638) ? c/s  		 | Progress:		38% (4764) ? c/s  		 / Progress:		39% (4889) ? c/s  		 / Progress:		39% (5000) 5000 c/s (0s +/- 1s)                        - Progress:		40% (5014) 5000 c/s (0s +/- 1s)                        \ Progress:		41% (5140) 5000 c/s (0s +/- 1s)                        | Progress:		42% (5265) 5000 c/s (0s +/- 1s)                        / Progress:		43% (5391) 5000 c/s (0s +/- 1s)                        - Progress:		44% (5516) 5000 c/s (0s +/- 1s)                        \ Progress:		45% (5641) 5000 c/s (0s +/- 1s)                        | Progress:		46% (5767) 5000 c/s (0s +/- 1s)                        / Progress:		47% (5892) 5000 c/s (0s +/- 1s)                        - Progress:		48% (6017) 5000 c/s (0s +/- 1s)                        \ Progress:		49% (6143) 5000 c/s (0s +/- 1s)                        | Progress:		50% (6268) 5000 c/s (0s +/- 1s)                        / Progress:		51% (6393) 5000 c/s (0s +/- 1s)                        - Progress:		52% (6519) 5000 c/s (0s +/- 1s)                        \ Progress:		53% (6644) 5000 c/s (0s +/- 1s)                        | Progress:		54% (6769) 5000 c/s (0s +/- 1s)                        / Progress:		55% (6895) 5000 c/s (0s +/- 1s)                        - Progress:		56% (7020) 5000 c/s (0s +/- 1s)                        \ Progress:		57% (7145) 5000 c/s (0s +/- 1s)                        | Progress:		58% (7271) 5000 c/s (0s +/- 1s)                        / Progress:		59% (7396) 5000 c/s (0s +/- 1s)                        - Progress:		60% (7521) 5000 c/s (0s +/- 1s)                        \ Progress:		61% (7647) 5000 c/s (0s +/- <1s)                       | Progress:		62% (7772) 5000 c/s (0s +/- <1s)                       / Progress:		63% (7898) 5000 c/s (0s +/- <1s)                       - Progress:		64% (8023) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (8148) 5000 c/s (0s +/- <1s)                       | Progress:		66% (8274) 5000 c/s (0s +/- <1s)                       / Progress:		67% (8399) 5000 c/s (0s +/- <1s)                       - Progress:		68% (8524) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (8650) 5000 c/s (0s +/- <1s)                       | Progress:		70% (8775) 5000 c/s (0s +/- <1s)                       / Progress:		71% (8900) 5000 c/s (0s +/- <1s)                       - Progress:		72% (9026) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (9151) 5000 c/s (0s +/- <1s)                       | Progress:		74% (9276) 5000 c/s (0s +/- <1s)                       / Progress:		75% (9402) 5000 c/s (0s +/- <1s)                       - Progress:		76% (9527) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (9652) 5000 c/s (0s +/- <1s)                       | Progress:		78% (9778) 5000 c/s (0s +/- <1s)                       / Progress:		79% (9903) 5000 c/s (0s +/- <1s)                       - Progress:		80% (10028) 5000 c/s (0s +/- <1s)                      \ Progress:		81% (10154) 5000 c/s (0s +/- <1s)                      | Progress:		82% (10279) 5000 c/s (0s +/- <1s)                      / Progress:		83% (10405) 5000 c/s (0s +/- <1s)                      - Progress:		84% (10530) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (10655) 5000 c/s (0s +/- <1s)                      | Progress:		86% (10781) 5000 c/s (0s +/- <1s)                      / Progress:		87% (10906) 5000 c/s (0s +/- <1s)                      - Progress:		88% (11031) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (11157) 5000 c/s (0s +/- <1s)                      | Progress:		90% (11282) 5000 c/s (0s +/- <1s)                      / Progress:		91% (11407) 5000 c/s (0s +/- <1s)                      - Progress:		92% (11533) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (11658) 5000 c/s (0s +/- <1s)                      | Progress:		94% (11783) 5000 c/s (0s +/- <1s)                      / Progress:		95% (11909) 5000 c/s (0s +/- <1s)                      - Progress:		96% (12034) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (12159) 5000 c/s (0s +/- <1s)                      | Progress:		98% (12285) 5000 c/s (0s +/- <1s)                      / Progress:		99% (12410) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.128817 seconds.		
 * Result:		(145a,39u,4118,26866,3791,30657)
** Writing FIC database to file
 * File:		train36.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		ionosphere-all-98d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		1
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(148a,0u,3774,25590,2308,27898)
 - Progress:		0% (0) ? c/s  		 * Time:    		Compressing the database took 0.002788 seconds.		
 * Result:		(148a,0u,3774,25590,2308,27898)
 * Creating:			fold 2
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 2
** Writing FIC database to file
 * File:		train12.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		ionosphere-all-98d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		17667
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(152a,0u,6800,42233,2671,44905)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (177) ? c/s  		 | Progress:		2% (354) ? c/s  		 / Progress:		3% (531) ? c/s  		 - Progress:		4% (707) ? c/s  		 \ Progress:		5% (884) ? c/s  		 | Progress:		6% (1061) ? c/s  		 / Progress:		7% (1237) ? c/s  		 - Progress:		8% (1414) ? c/s  		 \ Progress:		9% (1591) ? c/s  		 | Progress:		10% (1767) ? c/s  		 / Progress:		11% (1944) ? c/s  		 - Progress:		12% (2121) ? c/s  		 \ Progress:		13% (2297) ? c/s  		 | Progress:		14% (2474) ? c/s  		 / Progress:		15% (2651) ? c/s  		 - Progress:		16% (2827) ? c/s  		 \ Progress:		17% (3004) ? c/s  		 | Progress:		18% (3181) ? c/s  		 / Progress:		19% (3357) ? c/s  		 - Progress:		20% (3534) ? c/s  		 \ Progress:		21% (3711) ? c/s  		 | Progress:		22% (3887) ? c/s  		 / Progress:		23% (4064) ? c/s  		 - Progress:		24% (4241) ? c/s  		 \ Progress:		25% (4417) ? c/s  		 | Progress:		26% (4594) ? c/s  		 / Progress:		27% (4771) ? c/s  		 - Progress:		28% (4947) ? c/s  		 - Progress:		28% (5000) 5000 c/s (0s +/- 2s)                        \ Progress:		29% (5124) 5000 c/s (0s +/- 2s)                        | Progress:		30% (5301) 5000 c/s (0s +/- 2s)                        / Progress:		31% (5477) 5000 c/s (0s +/- 2s)                        - Progress:		32% (5654) 5000 c/s (0s +/- 2s)                        \ Progress:		33% (5831) 5000 c/s (0s +/- 2s)                        | Progress:		34% (6007) 5000 c/s (0s +/- 2s)                        / Progress:		35% (6184) 5000 c/s (0s +/- 2s)                        - Progress:		36% (6361) 5000 c/s (0s +/- 2s)                        \ Progress:		37% (6537) 5000 c/s (0s +/- 2s)                        | Progress:		38% (6714) 5000 c/s (0s +/- 2s)                        / Progress:		39% (6891) 5000 c/s (0s +/- 2s)                        - Progress:		40% (7067) 5000 c/s (0s +/- 2s)                        \ Progress:		41% (7244) 5000 c/s (0s +/- 2s)                        | Progress:		42% (7421) 5000 c/s (0s +/- 2s)                        / Progress:		43% (7597) 5000 c/s (0s +/- 2s)                        - Progress:		44% (7774) 5000 c/s (0s +/- 1s)                        \ Progress:		45% (7951) 5000 c/s (0s +/- 1s)                        | Progress:		46% (8127) 5000 c/s (0s +/- 1s)                        / Progress:		47% (8304) 5000 c/s (0s +/- 1s)                        - Progress:		48% (8481) 5000 c/s (0s +/- 1s)                        \ Progress:		49% (8657) 5000 c/s (0s +/- 1s)                        | Progress:		50% (8834) 5000 c/s (0s +/- 1s)                        / Progress:		51% (9011) 5000 c/s (0s +/- 1s)                        - Progress:		52% (9187) 5000 c/s (0s +/- 1s)                        \ Progress:		53% (9364) 5000 c/s (0s +/- 1s)                        | Progress:		54% (9541) 5000 c/s (0s +/- 1s)                        / Progress:		55% (9717) 5000 c/s (0s +/- 1s)                        - Progress:		56% (9894) 5000 c/s (0s +/- 1s)                        \ Progress:		57% (10071) 5000 c/s (0s +/- 1s)                       | Progress:		58% (10247) 5000 c/s (0s +/- 1s)                       / Progress:		59% (10424) 5000 c/s (0s +/- 1s)                       - Progress:		60% (10601) 5000 c/s (0s +/- 1s)                       \ Progress:		61% (10777) 5000 c/s (0s +/- 1s)                       | Progress:		62% (10954) 5000 c/s (0s +/- 1s)                       / Progress:		63% (11131) 5000 c/s (0s +/- 1s)                       - Progress:		64% (11307) 5000 c/s (0s +/- 1s)                       \ Progress:		65% (11484) 5000 c/s (0s +/- 1s)                       | Progress:		66% (11661) 5000 c/s (0s +/- 1s)                       / Progress:		67% (11837) 5000 c/s (0s +/- 1s)                       - Progress:		68% (12014) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (12191) 5000 c/s (0s +/- 1s)                       | Progress:		70% (12367) 5000 c/s (0s +/- 1s)                       / Progress:		71% (12544) 5000 c/s (0s +/- 1s)                       - Progress:		72% (12721) 5000 c/s (0s +/- <1s)                      \ Progress:		73% (12897) 5000 c/s (0s +/- <1s)                      | Progress:		74% (13074) 5000 c/s (0s +/- <1s)                      / Progress:		75% (13251) 5000 c/s (0s +/- <1s)                      - Progress:		76% (13427) 5000 c/s (0s +/- <1s)                      \ Progress:		77% (13604) 5000 c/s (0s +/- <1s)                      | Progress:		78% (13781) 5000 c/s (0s +/- <1s)                      / Progress:		79% (13957) 5000 c/s (0s +/- <1s)                      - Progress:		80% (14134) 5000 c/s (0s +/- <1s)                      \ Progress:		81% (14311) 5000 c/s (0s +/- <1s)                      | Progress:		82% (14487) 5000 c/s (0s +/- <1s)                      / Progress:		83% (14664) 5000 c/s (0s +/- <1s)                      - Progress:		84% (14841) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (15017) 5000 c/s (0s +/- <1s)                      | Progress:		86% (15194) 5000 c/s (0s +/- <1s)                      / Progress:		87% (15371) 5000 c/s (0s +/- <1s)                      - Progress:		88% (15547) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (15724) 5000 c/s (0s +/- <1s)                      | Progress:		90% (15901) 5000 c/s (0s +/- <1s)                      / Progress:		91% (16077) 5000 c/s (0s +/- <1s)                      - Progress:		92% (16254) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (16431) 5000 c/s (0s +/- <1s)                      | Progress:		94% (16607) 5000 c/s (0s +/- <1s)                      / Progress:		95% (16784) 5000 c/s (0s +/- <1s)                      - Progress:		96% (16961) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (17137) 5000 c/s (0s +/- <1s)                      | Progress:		98% (17314) 5000 c/s (0s +/- <1s)                      / Progress:		99% (17491) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.332944 seconds.		
 * Result:		(143a,38u,4011,26154,3676,29830)
** Writing FIC database to file
 * File:		train36.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		ionosphere-all-98d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		1
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(150a,0u,3910,26614,2346,28960)
 - Progress:		0% (0) ? c/s  		 * Time:    		Compressing the database took 0.003025 seconds.		
 * Result:		(150a,0u,3910,26614,2346,28960)
 * Creating:			fold 3
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 3
** Writing FIC database to file
 * File:		train12.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		ionosphere-all-98d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		23255
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(151a,0u,6970,43271,2657,45928)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (233) ? c/s  		 | Progress:		2% (466) ? c/s  		 / Progress:		3% (698) ? c/s  		 - Progress:		4% (931) ? c/s  		 \ Progress:		5% (1163) ? c/s  		 | Progress:		6% (1396) ? c/s  		 / Progress:		7% (1628) ? c/s  		 - Progress:		8% (1861) ? c/s  		 \ Progress:		9% (2093) ? c/s  		 | Progress:		10% (2326) ? c/s  		 / Progress:		11% (2559) ? c/s  		 - Progress:		12% (2791) ? c/s  		 \ Progress:		13% (3024) ? c/s  		 | Progress:		14% (3256) ? c/s  		 / Progress:		15% (3489) ? c/s  		 - Progress:		16% (3721) ? c/s  		 \ Progress:		17% (3954) ? c/s  		 | Progress:		18% (4186) ? c/s  		 / Progress:		19% (4419) ? c/s  		 - Progress:		20% (4651) ? c/s  		 \ Progress:		21% (4884) ? c/s  		 \ Progress:		21% (5000) 5000 c/s (1s +/- 3s)                        | Progress:		22% (5117) 5000 c/s (1s +/- 3s)                        / Progress:		23% (5349) 5000 c/s (1s +/- 3s)                        - Progress:		24% (5582) 5000 c/s (1s +/- 3s)                        \ Progress:		25% (5814) 5000 c/s (1s +/- 3s)                        | Progress:		26% (6047) 5000 c/s (1s +/- 3s)                        / Progress:		27% (6279) 5000 c/s (1s +/- 3s)                        - Progress:		28% (6512) 5000 c/s (1s +/- 3s)                        \ Progress:		29% (6744) 5000 c/s (1s +/- 3s)                        | Progress:		30% (6977) 5000 c/s (1s +/- 3s)                        / Progress:		31% (7210) 5000 c/s (1s +/- 3s)                        - Progress:		32% (7442) 5000 c/s (1s +/- 3s)                        \ Progress:		33% (7675) 5000 c/s (1s +/- 3s)                        | Progress:		34% (7907) 5000 c/s (1s +/- 3s)                        / Progress:		35% (8140) 5000 c/s (1s +/- 3s)                        - Progress:		36% (8372) 5000 c/s (1s +/- 2s)                        \ Progress:		37% (8605) 5000 c/s (1s +/- 2s)                        | Progress:		38% (8837) 5000 c/s (1s +/- 2s)                        / Progress:		39% (9070) 5000 c/s (1s +/- 2s)                        - Progress:		40% (9302) 5000 c/s (1s +/- 2s)                        \ Progress:		41% (9535) 5000 c/s (1s +/- 2s)                        | Progress:		42% (9768) 5000 c/s (1s +/- 2s)                        / Progress:		43% (10000) 5000 c/s (1s +/- 2s)                       - Progress:		44% (10233) 5000 c/s (1s +/- 2s)                       \ Progress:		45% (10465) 5000 c/s (1s +/- 2s)                       | Progress:		46% (10698) 5000 c/s (1s +/- 2s)                       / Progress:		47% (10930) 5000 c/s (1s +/- 2s)                       - Progress:		48% (11163) 5000 c/s (1s +/- 2s)                       \ Progress:		49% (11395) 5000 c/s (1s +/- 2s)                       | Progress:		50% (11628) 5000 c/s (1s +/- 2s)                       / Progress:		51% (11861) 5000 c/s (1s +/- 2s)                       - Progress:		52% (12093) 5000 c/s (1s +/- 2s)                       \ Progress:		53% (12326) 5000 c/s (1s +/- 2s)                       | Progress:		54% (12558) 5000 c/s (1s +/- 2s)                       / Progress:		55% (12791) 5000 c/s (1s +/- 2s)                       - Progress:		56% (13023) 5000 c/s (1s +/- 2s)                       \ Progress:		57% (13256) 5000 c/s (1s +/- 1s)                       | Progress:		58% (13488) 5000 c/s (1s +/- 1s)                       / Progress:		59% (13721) 5000 c/s (1s +/- 1s)                       - Progress:		60% (13953) 5000 c/s (1s +/- 1s)                       \ Progress:		61% (14186) 5000 c/s (1s +/- 1s)                       | Progress:		62% (14419) 5000 c/s (1s +/- 1s)                       / Progress:		63% (14651) 5000 c/s (1s +/- 1s)                       - Progress:		64% (14884) 5000 c/s (1s +/- 1s)                       \ Progress:		65% (15116) 5000 c/s (1s +/- 1s)                       | Progress:		66% (15349) 5000 c/s (1s +/- 1s)                       / Progress:		67% (15581) 5000 c/s (1s +/- 1s)                       - Progress:		68% (15814) 5000 c/s (1s +/- 1s)                       \ Progress:		69% (16046) 5000 c/s (1s +/- 1s)                       | Progress:		70% (16279) 5000 c/s (1s +/- 1s)                       / Progress:		71% (16512) 5000 c/s (1s +/- 1s)                       - Progress:		72% (16744) 5000 c/s (1s +/- 1s)                       \ Progress:		73% (16977) 5000 c/s (1s +/- 1s)                       | Progress:		74% (17209) 5000 c/s (1s +/- 1s)                       / Progress:		75% (17442) 5000 c/s (1s +/- 1s)                       - Progress:		76% (17674) 5000 c/s (1s +/- 1s)                       \ Progress:		77% (17907) 5000 c/s (1s +/- 1s)                       | Progress:		78% (18139) 5000 c/s (1s +/- 1s)                       / Progress:		79% (18372) 5000 c/s (1s +/- <1s)                      - Progress:		80% (18604) 5000 c/s (1s +/- <1s)                      \ Progress:		81% (18837) 5000 c/s (1s +/- <1s)                      | Progress:		82% (19070) 5000 c/s (1s +/- <1s)                      / Progress:		83% (19302) 5000 c/s (1s +/- <1s)                      - Progress:		84% (19535) 5000 c/s (1s +/- <1s)                      \ Progress:		85% (19767) 5000 c/s (1s +/- <1s)                      | Progress:		86% (20000) 5000 c/s (1s +/- <1s)                      / Progress:		87% (20232) 5000 c/s (1s +/- <1s)                      - Progress:		88% (20465) 5000 c/s (1s +/- <1s)                      \ Progress:		89% (20697) 5000 c/s (1s +/- <1s)                      | Progress:		90% (20930) 5000 c/s (1s +/- <1s)                      / Progress:		91% (21163) 5000 c/s (1s +/- <1s)                      - Progress:		92% (21395) 5000 c/s (1s +/- <1s)                      \ Progress:		93% (21628) 5000 c/s (1s +/- <1s)                      | Progress:		94% (21860) 5000 c/s (1s +/- <1s)                      / Progress:		95% (22093) 5000 c/s (1s +/- <1s)                      - Progress:		96% (22325) 5000 c/s (1s +/- <1s)                      \ Progress:		97% (22558) 5000 c/s (1s +/- <1s)                      | Progress:		98% (22790) 5000 c/s (1s +/- <1s)                      / Progress:		99% (23023) 5000 c/s (1s +/- <1s)                      * Time:    		Compressing the database took 0.333550 seconds.		
 * Result:		(145a,39u,4098,26716,3801,30517)
** Writing FIC database to file
 * File:		train36.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		ionosphere-all-98d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		1
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(150a,0u,3740,25391,2349,27741)
 - Progress:		0% (0) ? c/s  		 * Time:    		Compressing the database took 0.002789 seconds.		
 * Result:		(150a,0u,3740,25391,2349,27741)
 * Creating:			fold 4
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 4
** Writing FIC database to file
 * File:		train12.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		ionosphere-all-98d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		18927
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(152a,0u,7038,43755,2676,46431)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (190) ? c/s  		 | Progress:		2% (379) ? c/s  		 / Progress:		3% (568) ? c/s  		 - Progress:		4% (758) ? c/s  		 \ Progress:		5% (947) ? c/s  		 | Progress:		6% (1136) ? c/s  		 / Progress:		7% (1325) ? c/s  		 - Progress:		8% (1515) ? c/s  		 \ Progress:		9% (1704) ? c/s  		 | Progress:		10% (1893) ? c/s  		 / Progress:		11% (2082) ? c/s  		 - Progress:		12% (2272) ? c/s  		 \ Progress:		13% (2461) ? c/s  		 | Progress:		14% (2650) ? c/s  		 / Progress:		15% (2840) ? c/s  		 - Progress:		16% (3029) ? c/s  		 \ Progress:		17% (3218) ? c/s  		 | Progress:		18% (3407) ? c/s  		 / Progress:		19% (3597) ? c/s  		 - Progress:		20% (3786) ? c/s  		 \ Progress:		21% (3975) ? c/s  		 | Progress:		22% (4164) ? c/s  		 / Progress:		23% (4354) ? c/s  		 - Progress:		24% (4543) ? c/s  		 \ Progress:		25% (4732) ? c/s  		 | Progress:		26% (4922) ? c/s  		 | Progress:		26% (5000) 5000 c/s (0s +/- 2s)                        / Progress:		27% (5111) 5000 c/s (0s +/- 2s)                        - Progress:		28% (5300) 5000 c/s (0s +/- 2s)                        \ Progress:		29% (5489) 5000 c/s (0s +/- 2s)                        | Progress:		30% (5679) 5000 c/s (0s +/- 2s)                        / Progress:		31% (5868) 5000 c/s (0s +/- 2s)                        - Progress:		32% (6057) 5000 c/s (0s +/- 2s)                        \ Progress:		33% (6246) 5000 c/s (0s +/- 2s)                        | Progress:		34% (6436) 5000 c/s (0s +/- 2s)                        / Progress:		35% (6625) 5000 c/s (0s +/- 2s)                        - Progress:		36% (6814) 5000 c/s (0s +/- 2s)                        \ Progress:		37% (7003) 5000 c/s (0s +/- 2s)                        | Progress:		38% (7193) 5000 c/s (0s +/- 2s)                        / Progress:		39% (7382) 5000 c/s (0s +/- 2s)                        - Progress:		40% (7571) 5000 c/s (0s +/- 2s)                        \ Progress:		41% (7761) 5000 c/s (0s +/- 2s)                        | Progress:		42% (7950) 5000 c/s (0s +/- 2s)                        / Progress:		43% (8139) 5000 c/s (0s +/- 2s)                        - Progress:		44% (8328) 5000 c/s (0s +/- 2s)                        \ Progress:		45% (8518) 5000 c/s (0s +/- 2s)                        | Progress:		46% (8707) 5000 c/s (0s +/- 2s)                        / Progress:		47% (8896) 5000 c/s (0s +/- 2s)                        - Progress:		48% (9085) 5000 c/s (0s +/- 1s)                        \ Progress:		49% (9275) 5000 c/s (0s +/- 1s)                        | Progress:		50% (9464) 5000 c/s (0s +/- 1s)                        / Progress:		51% (9653) 5000 c/s (0s +/- 1s)                        - Progress:		52% (9843) 5000 c/s (0s +/- 1s)                        \ Progress:		53% (10032) 5000 c/s (0s +/- 1s)                       | Progress:		54% (10221) 5000 c/s (0s +/- 1s)                       / Progress:		55% (10410) 5000 c/s (0s +/- 1s)                       - Progress:		56% (10600) 5000 c/s (0s +/- 1s)                       \ Progress:		57% (10789) 5000 c/s (0s +/- 1s)                       | Progress:		58% (10978) 5000 c/s (0s +/- 1s)                       / Progress:		59% (11167) 5000 c/s (0s +/- 1s)                       - Progress:		60% (11357) 5000 c/s (0s +/- 1s)                       \ Progress:		61% (11546) 5000 c/s (0s +/- 1s)                       | Progress:		62% (11735) 5000 c/s (0s +/- 1s)                       / Progress:		63% (11925) 5000 c/s (0s +/- 1s)                       - Progress:		64% (12114) 5000 c/s (0s +/- 1s)                       \ Progress:		65% (12303) 5000 c/s (0s +/- 1s)                       | Progress:		66% (12492) 5000 c/s (0s +/- 1s)                       / Progress:		67% (12682) 5000 c/s (0s +/- 1s)                       - Progress:		68% (12871) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (13060) 5000 c/s (0s +/- 1s)                       | Progress:		70% (13249) 5000 c/s (0s +/- 1s)                       / Progress:		71% (13439) 5000 c/s (0s +/- 1s)                       - Progress:		72% (13628) 5000 c/s (0s +/- 1s)                       \ Progress:		73% (13817) 5000 c/s (0s +/- 1s)                       | Progress:		74% (14006) 5000 c/s (0s +/- <1s)                      / Progress:		75% (14196) 5000 c/s (0s +/- <1s)                      - Progress:		76% (14385) 5000 c/s (0s +/- <1s)                      \ Progress:		77% (14574) 5000 c/s (0s +/- <1s)                      | Progress:		78% (14764) 5000 c/s (0s +/- <1s)                      / Progress:		79% (14953) 5000 c/s (0s +/- <1s)                      - Progress:		80% (15142) 5000 c/s (0s +/- <1s)                      \ Progress:		81% (15331) 5000 c/s (0s +/- <1s)                      | Progress:		82% (15521) 5000 c/s (0s +/- <1s)                      / Progress:		83% (15710) 5000 c/s (0s +/- <1s)                      - Progress:		84% (15899) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (16088) 5000 c/s (0s +/- <1s)                      | Progress:		86% (16278) 5000 c/s (0s +/- <1s)                      / Progress:		87% (16467) 5000 c/s (0s +/- <1s)                      - Progress:		88% (16656) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (16846) 5000 c/s (0s +/- <1s)                      | Progress:		90% (17035) 5000 c/s (0s +/- <1s)                      / Progress:		91% (17224) 5000 c/s (0s +/- <1s)                      - Progress:		92% (17413) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (17603) 5000 c/s (0s +/- <1s)                      | Progress:		94% (17792) 5000 c/s (0s +/- <1s)                      / Progress:		95% (17981) 5000 c/s (0s +/- <1s)                      - Progress:		96% (18170) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (18360) 5000 c/s (0s +/- <1s)                      | Progress:		98% (18549) 5000 c/s (0s +/- <1s)                      / Progress:		99% (18738) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.321215 seconds.		
 * Result:		(146a,43u,4085,26757,3920,30677)
** Writing FIC database to file
 * File:		train36.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		ionosphere-all-98d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		1
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(150a,0u,3672,24983,2347,27330)
 - Progress:		0% (0) ? c/s  		 * Time:    		Compressing the database took 0.003043 seconds.		
 * Result:		(150a,0u,3672,24983,2347,27330)
 * Creating:			fold 5
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 5
** Writing FIC database to file
 * File:		train12.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		ionosphere-all-98d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		13547
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(149a,0u,6834,42451,2601,45052)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (136) ? c/s  		 | Progress:		2% (271) ? c/s  		 / Progress:		3% (407) ? c/s  		 - Progress:		4% (542) ? c/s  		 \ Progress:		5% (678) ? c/s  		 | Progress:		6% (813) ? c/s  		 / Progress:		7% (949) ? c/s  		 - Progress:		8% (1084) ? c/s  		 \ Progress:		9% (1220) ? c/s  		 | Progress:		10% (1355) ? c/s  		 / Progress:		11% (1491) ? c/s  		 - Progress:		12% (1626) ? c/s  		 \ Progress:		13% (1762) ? c/s  		 | Progress:		14% (1897) ? c/s  		 / Progress:		15% (2033) ? c/s  		 - Progress:		16% (2168) ? c/s  		 \ Progress:		17% (2303) ? c/s  		 | Progress:		18% (2439) ? c/s  		 / Progress:		19% (2574) ? c/s  		 - Progress:		20% (2710) ? c/s  		 \ Progress:		21% (2845) ? c/s  		 | Progress:		22% (2981) ? c/s  		 / Progress:		23% (3116) ? c/s  		 - Progress:		24% (3252) ? c/s  		 \ Progress:		25% (3387) ? c/s  		 | Progress:		26% (3523) ? c/s  		 / Progress:		27% (3658) ? c/s  		 - Progress:		28% (3794) ? c/s  		 \ Progress:		29% (3929) ? c/s  		 | Progress:		30% (4065) ? c/s  		 / Progress:		31% (4200) ? c/s  		 - Progress:		32% (4336) ? c/s  		 \ Progress:		33% (4471) ? c/s  		 | Progress:		34% (4606) ? c/s  		 / Progress:		35% (4742) ? c/s  		 - Progress:		36% (4877) ? c/s  		 - Progress:		36% (5000) 5000 c/s (0s +/- 1s)                        \ Progress:		37% (5013) 5000 c/s (0s +/- 1s)                        | Progress:		38% (5148) 5000 c/s (0s +/- 1s)                        / Progress:		39% (5284) 5000 c/s (0s +/- 1s)                        - Progress:		40% (5419) 5000 c/s (0s +/- 1s)                        \ Progress:		41% (5555) 5000 c/s (0s +/- 1s)                        | Progress:		42% (5690) 5000 c/s (0s +/- 1s)                        / Progress:		43% (5826) 5000 c/s (0s +/- 1s)                        - Progress:		44% (5961) 5000 c/s (0s +/- 1s)                        \ Progress:		45% (6097) 5000 c/s (0s +/- 1s)                        | Progress:		46% (6232) 5000 c/s (0s +/- 1s)                        / Progress:		47% (6368) 5000 c/s (0s +/- 1s)                        - Progress:		48% (6503) 5000 c/s (0s +/- 1s)                        \ Progress:		49% (6639) 5000 c/s (0s +/- 1s)                        | Progress:		50% (6774) 5000 c/s (0s +/- 1s)                        / Progress:		51% (6909) 5000 c/s (0s +/- 1s)                        - Progress:		52% (7045) 5000 c/s (0s +/- 1s)                        \ Progress:		53% (7180) 5000 c/s (0s +/- 1s)                        | Progress:		54% (7316) 5000 c/s (0s +/- 1s)                        / Progress:		55% (7451) 5000 c/s (0s +/- 1s)                        - Progress:		56% (7587) 5000 c/s (0s +/- 1s)                        \ Progress:		57% (7722) 5000 c/s (0s +/- 1s)                        | Progress:		58% (7858) 5000 c/s (0s +/- 1s)                        / Progress:		59% (7993) 5000 c/s (0s +/- 1s)                        - Progress:		60% (8129) 5000 c/s (0s +/- 1s)                        \ Progress:		61% (8264) 5000 c/s (0s +/- 1s)                        | Progress:		62% (8400) 5000 c/s (0s +/- 1s)                        / Progress:		63% (8535) 5000 c/s (0s +/- 1s)                        - Progress:		64% (8671) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (8806) 5000 c/s (0s +/- <1s)                       | Progress:		66% (8942) 5000 c/s (0s +/- <1s)                       / Progress:		67% (9077) 5000 c/s (0s +/- <1s)                       - Progress:		68% (9212) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (9348) 5000 c/s (0s +/- <1s)                       | Progress:		70% (9483) 5000 c/s (0s +/- <1s)                       / Progress:		71% (9619) 5000 c/s (0s +/- <1s)                       - Progress:		72% (9754) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (9890) 5000 c/s (0s +/- <1s)                       | Progress:		74% (10025) 5000 c/s (0s +/- <1s)                      / Progress:		75% (10161) 5000 c/s (0s +/- <1s)                      - Progress:		76% (10296) 5000 c/s (0s +/- <1s)                      \ Progress:		77% (10432) 5000 c/s (0s +/- <1s)                      | Progress:		78% (10567) 5000 c/s (0s +/- <1s)                      / Progress:		79% (10703) 5000 c/s (0s +/- <1s)                      - Progress:		80% (10838) 5000 c/s (0s +/- <1s)                      \ Progress:		81% (10974) 5000 c/s (0s +/- <1s)                      | Progress:		82% (11109) 5000 c/s (0s +/- <1s)                      / Progress:		83% (11245) 5000 c/s (0s +/- <1s)                      - Progress:		84% (11380) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (11515) 5000 c/s (0s +/- <1s)                      | Progress:		86% (11651) 5000 c/s (0s +/- <1s)                      / Progress:		87% (11786) 5000 c/s (0s +/- <1s)                      - Progress:		88% (11922) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (12057) 5000 c/s (0s +/- <1s)                      | Progress:		90% (12193) 5000 c/s (0s +/- <1s)                      / Progress:		91% (12328) 5000 c/s (0s +/- <1s)                      - Progress:		92% (12464) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (12599) 5000 c/s (0s +/- <1s)                      | Progress:		94% (12735) 5000 c/s (0s +/- <1s)                      / Progress:		95% (12870) 5000 c/s (0s +/- <1s)                      - Progress:		96% (13006) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (13141) 5000 c/s (0s +/- <1s)                      | Progress:		98% (13277) 5000 c/s (0s +/- <1s)                      / Progress:		99% (13412) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.115953 seconds.		
 * Result:		(142a,37u,4129,26876,3587,30463)
** Writing FIC database to file
 * File:		train36.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		ionosphere-all-98d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		1
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(150a,0u,3876,26361,2346,28707)
 - Progress:		0% (0) ? c/s  		 * Time:    		Compressing the database took 0.002671 seconds.		
 * Result:		(150a,0u,3876,26361,2346,28707)
 * Creating:			fold 6
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 6
** Writing FIC database to file
 * File:		train12.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		ionosphere-all-98d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		17439
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(152a,0u,6664,41321,2686,44007)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (175) ? c/s  		 | Progress:		2% (349) ? c/s  		 / Progress:		3% (524) ? c/s  		 - Progress:		4% (698) ? c/s  		 \ Progress:		5% (872) ? c/s  		 | Progress:		6% (1047) ? c/s  		 / Progress:		7% (1221) ? c/s  		 - Progress:		8% (1396) ? c/s  		 \ Progress:		9% (1570) ? c/s  		 | Progress:		10% (1744) ? c/s  		 / Progress:		11% (1919) ? c/s  		 - Progress:		12% (2093) ? c/s  		 \ Progress:		13% (2268) ? c/s  		 | Progress:		14% (2442) ? c/s  		 / Progress:		15% (2616) ? c/s  		 - Progress:		16% (2791) ? c/s  		 \ Progress:		17% (2965) ? c/s  		 | Progress:		18% (3140) ? c/s  		 / Progress:		19% (3314) ? c/s  		 - Progress:		20% (3488) ? c/s  		 \ Progress:		21% (3663) ? c/s  		 | Progress:		22% (3837) ? c/s  		 / Progress:		23% (4011) ? c/s  		 - Progress:		24% (4186) ? c/s  		 \ Progress:		25% (4360) ? c/s  		 | Progress:		26% (4535) ? c/s  		 / Progress:		27% (4709) ? c/s  		 - Progress:		28% (4883) ? c/s  		 - Progress:		28% (5000) 5000 c/s (0s +/- 2s)                        \ Progress:		29% (5058) 5000 c/s (0s +/- 2s)                        | Progress:		30% (5232) 5000 c/s (0s +/- 2s)                        / Progress:		31% (5407) 5000 c/s (0s +/- 2s)                        - Progress:		32% (5581) 5000 c/s (0s +/- 2s)                        \ Progress:		33% (5755) 5000 c/s (0s +/- 2s)                        | Progress:		34% (5930) 5000 c/s (0s +/- 2s)                        / Progress:		35% (6104) 5000 c/s (0s +/- 2s)                        - Progress:		36% (6279) 5000 c/s (0s +/- 2s)                        \ Progress:		37% (6453) 5000 c/s (0s +/- 2s)                        | Progress:		38% (6627) 5000 c/s (0s +/- 2s)                        / Progress:		39% (6802) 5000 c/s (0s +/- 2s)                        - Progress:		40% (6976) 5000 c/s (0s +/- 2s)                        \ Progress:		41% (7150) 5000 c/s (0s +/- 2s)                        | Progress:		42% (7325) 5000 c/s (0s +/- 2s)                        / Progress:		43% (7499) 5000 c/s (0s +/- 1s)                        - Progress:		44% (7674) 5000 c/s (0s +/- 1s)                        \ Progress:		45% (7848) 5000 c/s (0s +/- 1s)                        | Progress:		46% (8022) 5000 c/s (0s +/- 1s)                        / Progress:		47% (8197) 5000 c/s (0s +/- 1s)                        - Progress:		48% (8371) 5000 c/s (0s +/- 1s)                        \ Progress:		49% (8546) 5000 c/s (0s +/- 1s)                        | Progress:		50% (8720) 5000 c/s (0s +/- 1s)                        / Progress:		51% (8894) 5000 c/s (0s +/- 1s)                        - Progress:		52% (9069) 5000 c/s (0s +/- 1s)                        \ Progress:		53% (9243) 5000 c/s (0s +/- 1s)                        | Progress:		54% (9418) 5000 c/s (0s +/- 1s)                        / Progress:		55% (9592) 5000 c/s (0s +/- 1s)                        - Progress:		56% (9766) 5000 c/s (0s +/- 1s)                        \ Progress:		57% (9941) 5000 c/s (0s +/- 1s)                        | Progress:		58% (10115) 5000 c/s (0s +/- 1s)                       / Progress:		59% (10290) 5000 c/s (0s +/- 1s)                       - Progress:		60% (10464) 5000 c/s (0s +/- 1s)                       \ Progress:		61% (10638) 5000 c/s (0s +/- 1s)                       | Progress:		62% (10813) 5000 c/s (0s +/- 1s)                       / Progress:		63% (10987) 5000 c/s (0s +/- 1s)                       - Progress:		64% (11161) 5000 c/s (0s +/- 1s)                       \ Progress:		65% (11336) 5000 c/s (0s +/- 1s)                       | Progress:		66% (11510) 5000 c/s (0s +/- 1s)                       / Progress:		67% (11685) 5000 c/s (0s +/- 1s)                       - Progress:		68% (11859) 5000 c/s (0s +/- 1s)                       \ Progress:		69% (12033) 5000 c/s (0s +/- 1s)                       | Progress:		70% (12208) 5000 c/s (0s +/- 1s)                       / Progress:		71% (12382) 5000 c/s (0s +/- 1s)                       - Progress:		72% (12557) 5000 c/s (0s +/- <1s)                      \ Progress:		73% (12731) 5000 c/s (0s +/- <1s)                      | Progress:		74% (12905) 5000 c/s (0s +/- <1s)                      / Progress:		75% (13080) 5000 c/s (0s +/- <1s)                      - Progress:		76% (13254) 5000 c/s (0s +/- <1s)                      \ Progress:		77% (13429) 5000 c/s (0s +/- <1s)                      | Progress:		78% (13603) 5000 c/s (0s +/- <1s)                      / Progress:		79% (13777) 5000 c/s (0s +/- <1s)                      - Progress:		80% (13952) 5000 c/s (0s +/- <1s)                      \ Progress:		81% (14126) 5000 c/s (0s +/- <1s)                      | Progress:		82% (14300) 5000 c/s (0s +/- <1s)                      / Progress:		83% (14475) 5000 c/s (0s +/- <1s)                      - Progress:		84% (14649) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (14824) 5000 c/s (0s +/- <1s)                      | Progress:		86% (14998) 5000 c/s (0s +/- <1s)                      / Progress:		87% (15172) 5000 c/s (0s +/- <1s)                      - Progress:		88% (15347) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (15521) 5000 c/s (0s +/- <1s)                      | Progress:		90% (15696) 5000 c/s (0s +/- <1s)                      / Progress:		91% (15870) 5000 c/s (0s +/- <1s)                      - Progress:		92% (16044) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (16219) 5000 c/s (0s +/- <1s)                      | Progress:		94% (16393) 5000 c/s (0s +/- <1s)                      / Progress:		95% (16568) 5000 c/s (0s +/- <1s)                      - Progress:		96% (16742) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (16916) 5000 c/s (0s +/- <1s)                      | Progress:		98% (17091) 5000 c/s (0s +/- <1s)                      / Progress:		99% (17265) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.258050 seconds.		
 * Result:		(143a,36u,3922,25405,3655,29060)
** Writing FIC database to file
 * File:		train36.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		ionosphere-all-98d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		1
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(150a,0u,4046,27483,2349,29832)
 - Progress:		0% (0) ? c/s  		 * Time:    		Compressing the database took 0.002682 seconds.		
 * Result:		(150a,0u,4046,27483,2349,29832)
 * Creating:			fold 7
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 7
** Writing FIC database to file
 * File:		train12.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		ionosphere-all-98d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		12411
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(152a,0u,6902,43012,2662,45673)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (125) ? c/s  		 | Progress:		2% (249) ? c/s  		 / Progress:		3% (373) ? c/s  		 - Progress:		4% (497) ? c/s  		 \ Progress:		5% (621) ? c/s  		 | Progress:		6% (745) ? c/s  		 / Progress:		7% (869) ? c/s  		 - Progress:		8% (993) ? c/s  		 \ Progress:		9% (1117) ? c/s  		 | Progress:		10% (1242) ? c/s  		 / Progress:		11% (1366) ? c/s  		 - Progress:		12% (1490) ? c/s  		 \ Progress:		13% (1614) ? c/s  		 | Progress:		14% (1738) ? c/s  		 / Progress:		15% (1862) ? c/s  		 - Progress:		16% (1986) ? c/s  		 \ Progress:		17% (2110) ? c/s  		 | Progress:		18% (2234) ? c/s  		 / Progress:		19% (2359) ? c/s  		 - Progress:		20% (2483) ? c/s  		 \ Progress:		21% (2607) ? c/s  		 | Progress:		22% (2731) ? c/s  		 / Progress:		23% (2855) ? c/s  		 - Progress:		24% (2979) ? c/s  		 \ Progress:		25% (3103) ? c/s  		 | Progress:		26% (3227) ? c/s  		 / Progress:		27% (3351) ? c/s  		 - Progress:		28% (3476) ? c/s  		 \ Progress:		29% (3600) ? c/s  		 | Progress:		30% (3724) ? c/s  		 / Progress:		31% (3848) ? c/s  		 - Progress:		32% (3972) ? c/s  		 \ Progress:		33% (4096) ? c/s  		 | Progress:		34% (4220) ? c/s  		 / Progress:		35% (4344) ? c/s  		 - Progress:		36% (4468) ? c/s  		 \ Progress:		37% (4593) ? c/s  		 | Progress:		38% (4717) ? c/s  		 / Progress:		39% (4841) ? c/s  		 - Progress:		40% (4965) ? c/s  		 - Progress:		40% (5000) 5000 c/s (0s +/- 1s)                        \ Progress:		41% (5089) 5000 c/s (0s +/- 1s)                        | Progress:		42% (5213) 5000 c/s (0s +/- 1s)                        / Progress:		43% (5337) 5000 c/s (0s +/- 1s)                        - Progress:		44% (5461) 5000 c/s (0s +/- 1s)                        \ Progress:		45% (5585) 5000 c/s (0s +/- 1s)                        | Progress:		46% (5710) 5000 c/s (0s +/- 1s)                        / Progress:		47% (5834) 5000 c/s (0s +/- 1s)                        - Progress:		48% (5958) 5000 c/s (0s +/- 1s)                        \ Progress:		49% (6082) 5000 c/s (0s +/- 1s)                        | Progress:		50% (6206) 5000 c/s (0s +/- 1s)                        / Progress:		51% (6330) 5000 c/s (0s +/- 1s)                        - Progress:		52% (6454) 5000 c/s (0s +/- 1s)                        \ Progress:		53% (6578) 5000 c/s (0s +/- 1s)                        | Progress:		54% (6702) 5000 c/s (0s +/- 1s)                        / Progress:		55% (6827) 5000 c/s (0s +/- 1s)                        - Progress:		56% (6951) 5000 c/s (0s +/- 1s)                        \ Progress:		57% (7075) 5000 c/s (0s +/- 1s)                        | Progress:		58% (7199) 5000 c/s (0s +/- 1s)                        / Progress:		59% (7323) 5000 c/s (0s +/- 1s)                        - Progress:		60% (7447) 5000 c/s (0s +/- <1s)                       \ Progress:		61% (7571) 5000 c/s (0s +/- <1s)                       | Progress:		62% (7695) 5000 c/s (0s +/- <1s)                       / Progress:		63% (7819) 5000 c/s (0s +/- <1s)                       - Progress:		64% (7944) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (8068) 5000 c/s (0s +/- <1s)                       | Progress:		66% (8192) 5000 c/s (0s +/- <1s)                       / Progress:		67% (8316) 5000 c/s (0s +/- <1s)                       - Progress:		68% (8440) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (8564) 5000 c/s (0s +/- <1s)                       | Progress:		70% (8688) 5000 c/s (0s +/- <1s)                       / Progress:		71% (8812) 5000 c/s (0s +/- <1s)                       - Progress:		72% (8936) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (9061) 5000 c/s (0s +/- <1s)                       | Progress:		74% (9185) 5000 c/s (0s +/- <1s)                       / Progress:		75% (9309) 5000 c/s (0s +/- <1s)                       - Progress:		76% (9433) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (9557) 5000 c/s (0s +/- <1s)                       | Progress:		78% (9681) 5000 c/s (0s +/- <1s)                       / Progress:		79% (9805) 5000 c/s (0s +/- <1s)                       - Progress:		80% (9929) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (10053) 5000 c/s (0s +/- <1s)                      | Progress:		82% (10178) 5000 c/s (0s +/- <1s)                      / Progress:		83% (10302) 5000 c/s (0s +/- <1s)                      - Progress:		84% (10426) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (10550) 5000 c/s (0s +/- <1s)                      | Progress:		86% (10674) 5000 c/s (0s +/- <1s)                      / Progress:		87% (10798) 5000 c/s (0s +/- <1s)                      - Progress:		88% (10922) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (11046) 5000 c/s (0s +/- <1s)                      | Progress:		90% (11170) 5000 c/s (0s +/- <1s)                      / Progress:		91% (11295) 5000 c/s (0s +/- <1s)                      - Progress:		92% (11419) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (11543) 5000 c/s (0s +/- <1s)                      | Progress:		94% (11667) 5000 c/s (0s +/- <1s)                      / Progress:		95% (11791) 5000 c/s (0s +/- <1s)                      - Progress:		96% (11915) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (12039) 5000 c/s (0s +/- <1s)                      | Progress:		98% (12163) 5000 c/s (0s +/- <1s)                      / Progress:		99% (12287) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.177626 seconds.		
 * Result:		(145a,36u,4102,26764,3619,30384)
** Writing FIC database to file
 * File:		train36.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		ionosphere-all-98d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		1
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(148a,0u,3808,25798,2308,28106)
 - Progress:		0% (0) ? c/s  		 * Time:    		Compressing the database took 0.003203 seconds.		
 * Result:		(148a,0u,3808,25798,2308,28106)
 * Creating:			fold 8
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 8
** Writing FIC database to file
 * File:		train12.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		ionosphere-all-98d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		9411
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(151a,0u,6732,41853,2660,44513)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (95) ? c/s  		 | Progress:		2% (189) ? c/s  		 / Progress:		3% (283) ? c/s  		 - Progress:		4% (377) ? c/s  		 \ Progress:		5% (471) ? c/s  		 | Progress:		6% (565) ? c/s  		 / Progress:		7% (659) ? c/s  		 - Progress:		8% (753) ? c/s  		 \ Progress:		9% (847) ? c/s  		 | Progress:		10% (942) ? c/s  		 / Progress:		11% (1036) ? c/s  		 - Progress:		12% (1130) ? c/s  		 \ Progress:		13% (1224) ? c/s  		 | Progress:		14% (1318) ? c/s  		 / Progress:		15% (1412) ? c/s  		 - Progress:		16% (1506) ? c/s  		 \ Progress:		17% (1600) ? c/s  		 | Progress:		18% (1694) ? c/s  		 / Progress:		19% (1789) ? c/s  		 - Progress:		20% (1883) ? c/s  		 \ Progress:		21% (1977) ? c/s  		 | Progress:		22% (2071) ? c/s  		 / Progress:		23% (2165) ? c/s  		 - Progress:		24% (2259) ? c/s  		 \ Progress:		25% (2353) ? c/s  		 | Progress:		26% (2447) ? c/s  		 / Progress:		27% (2541) ? c/s  		 - Progress:		28% (2636) ? c/s  		 \ Progress:		29% (2730) ? c/s  		 | Progress:		30% (2824) ? c/s  		 / Progress:		31% (2918) ? c/s  		 - Progress:		32% (3012) ? c/s  		 \ Progress:		33% (3106) ? c/s  		 | Progress:		34% (3200) ? c/s  		 / Progress:		35% (3294) ? c/s  		 - Progress:		36% (3388) ? c/s  		 \ Progress:		37% (3483) ? c/s  		 | Progress:		38% (3577) ? c/s  		 / Progress:		39% (3671) ? c/s  		 - Progress:		40% (3765) ? c/s  		 \ Progress:		41% (3859) ? c/s  		 | Progress:		42% (3953) ? c/s  		 / Progress:		43% (4047) ? c/s  		 - Progress:		44% (4141) ? c/s  		 \ Progress:		45% (4235) ? c/s  		 | Progress:		46% (4330) ? c/s  		 / Progress:		47% (4424) ? c/s  		 - Progress:		48% (4518) ? c/s  		 \ Progress:		49% (4612) ? c/s  		 | Progress:		50% (4706) ? c/s  		 / Progress:		51% (4800) ? c/s  		 - Progress:		52% (4894) ? c/s  		 \ Progress:		53% (4988) ? c/s  		 \ Progress:		53% (5000) 5000 c/s (0s +/- <1s)                       | Progress:		54% (5082) 5000 c/s (0s +/- <1s)                       / Progress:		55% (5177) 5000 c/s (0s +/- <1s)                       - Progress:		56% (5271) 5000 c/s (0s +/- <1s)                       \ Progress:		57% (5365) 5000 c/s (0s +/- <1s)                       | Progress:		58% (5459) 5000 c/s (0s +/- <1s)                       / Progress:		59% (5553) 5000 c/s (0s +/- <1s)                       - Progress:		60% (5647) 5000 c/s (0s +/- <1s)                       \ Progress:		61% (5741) 5000 c/s (0s +/- <1s)                       | Progress:		62% (5835) 5000 c/s (0s +/- <1s)                       / Progress:		63% (5929) 5000 c/s (0s +/- <1s)                       - Progress:		64% (6024) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (6118) 5000 c/s (0s +/- <1s)                       | Progress:		66% (6212) 5000 c/s (0s +/- <1s)                       / Progress:		67% (6306) 5000 c/s (0s +/- <1s)                       - Progress:		68% (6400) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (6494) 5000 c/s (0s +/- <1s)                       | Progress:		70% (6588) 5000 c/s (0s +/- <1s)                       / Progress:		71% (6682) 5000 c/s (0s +/- <1s)                       - Progress:		72% (6776) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (6871) 5000 c/s (0s +/- <1s)                       | Progress:		74% (6965) 5000 c/s (0s +/- <1s)                       / Progress:		75% (7059) 5000 c/s (0s +/- <1s)                       - Progress:		76% (7153) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (7247) 5000 c/s (0s +/- <1s)                       | Progress:		78% (7341) 5000 c/s (0s +/- <1s)                       / Progress:		79% (7435) 5000 c/s (0s +/- <1s)                       - Progress:		80% (7529) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (7623) 5000 c/s (0s +/- <1s)                       | Progress:		82% (7718) 5000 c/s (0s +/- <1s)                       / Progress:		83% (7812) 5000 c/s (0s +/- <1s)                       - Progress:		84% (7906) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (8000) 5000 c/s (0s +/- <1s)                       | Progress:		86% (8094) 5000 c/s (0s +/- <1s)                       / Progress:		87% (8188) 5000 c/s (0s +/- <1s)                       - Progress:		88% (8282) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (8376) 5000 c/s (0s +/- <1s)                       | Progress:		90% (8470) 5000 c/s (0s +/- <1s)                       / Progress:		91% (8565) 5000 c/s (0s +/- <1s)                       - Progress:		92% (8659) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (8753) 5000 c/s (0s +/- <1s)                       | Progress:		94% (8847) 5000 c/s (0s +/- <1s)                       / Progress:		95% (8941) 5000 c/s (0s +/- <1s)                       - Progress:		96% (9035) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (9129) 5000 c/s (0s +/- <1s)                       | Progress:		98% (9223) 5000 c/s (0s +/- <1s)                       / Progress:		99% (9317) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.142468 seconds.		
 * Result:		(145a,31u,4113,26625,3538,30163)
** Writing FIC database to file
 * File:		train36.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		ionosphere-all-98d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		1
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(150a,0u,3978,27032,2348,29380)
 - Progress:		0% (0) ? c/s  		 * Time:    		Compressing the database took 0.030850 seconds.		
 * Result:		(150a,0u,3978,27032,2348,29380)
 * Creating:			fold 9
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 9
** Writing FIC database to file
 * File:		train12.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		ionosphere-all-98d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		12751
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(151a,0u,6834,42520,2654,45174)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (128) ? c/s  		 | Progress:		2% (256) ? c/s  		 / Progress:		3% (383) ? c/s  		 - Progress:		4% (511) ? c/s  		 \ Progress:		5% (638) ? c/s  		 | Progress:		6% (766) ? c/s  		 / Progress:		7% (893) ? c/s  		 - Progress:		8% (1021) ? c/s  		 \ Progress:		9% (1148) ? c/s  		 | Progress:		10% (1276) ? c/s  		 / Progress:		11% (1403) ? c/s  		 - Progress:		12% (1531) ? c/s  		 \ Progress:		13% (1658) ? c/s  		 | Progress:		14% (1786) ? c/s  		 / Progress:		15% (1913) ? c/s  		 - Progress:		16% (2041) ? c/s  		 \ Progress:		17% (2168) ? c/s  		 | Progress:		18% (2296) ? c/s  		 / Progress:		19% (2423) ? c/s  		 - Progress:		20% (2551) ? c/s  		 \ Progress:		21% (2678) ? c/s  		 | Progress:		22% (2806) ? c/s  		 / Progress:		23% (2933) ? c/s  		 - Progress:		24% (3061) ? c/s  		 \ Progress:		25% (3188) ? c/s  		 | Progress:		26% (3316) ? c/s  		 / Progress:		27% (3443) ? c/s  		 - Progress:		28% (3571) ? c/s  		 \ Progress:		29% (3698) ? c/s  		 | Progress:		30% (3826) ? c/s  		 / Progress:		31% (3953) ? c/s  		 - Progress:		32% (4081) ? c/s  		 \ Progress:		33% (4208) ? c/s  		 | Progress:		34% (4336) ? c/s  		 / Progress:		35% (4463) ? c/s  		 - Progress:		36% (4591) ? c/s  		 \ Progress:		37% (4718) ? c/s  		 | Progress:		38% (4846) ? c/s  		 / Progress:		39% (4973) ? c/s  		 / Progress:		39% (5000) 5000 c/s (0s +/- 1s)                        - Progress:		40% (5101) 5000 c/s (0s +/- 1s)                        \ Progress:		41% (5228) 5000 c/s (0s +/- 1s)                        | Progress:		42% (5356) 5000 c/s (0s +/- 1s)                        / Progress:		43% (5483) 5000 c/s (0s +/- 1s)                        - Progress:		44% (5611) 5000 c/s (0s +/- 1s)                        \ Progress:		45% (5738) 5000 c/s (0s +/- 1s)                        | Progress:		46% (5866) 5000 c/s (0s +/- 1s)                        / Progress:		47% (5993) 5000 c/s (0s +/- 1s)                        - Progress:		48% (6121) 5000 c/s (0s +/- 1s)                        \ Progress:		49% (6248) 5000 c/s (0s +/- 1s)                        | Progress:		50% (6376) 5000 c/s (0s +/- 1s)                        / Progress:		51% (6504) 5000 c/s (0s +/- 1s)                        - Progress:		52% (6631) 5000 c/s (0s +/- 1s)                        \ Progress:		53% (6759) 5000 c/s (0s +/- 1s)                        | Progress:		54% (6886) 5000 c/s (0s +/- 1s)                        / Progress:		55% (7014) 5000 c/s (0s +/- 1s)                        - Progress:		56% (7141) 5000 c/s (0s +/- 1s)                        \ Progress:		57% (7269) 5000 c/s (0s +/- 1s)                        | Progress:		58% (7396) 5000 c/s (0s +/- 1s)                        / Progress:		59% (7524) 5000 c/s (0s +/- 1s)                        - Progress:		60% (7651) 5000 c/s (0s +/- 1s)                        \ Progress:		61% (7779) 5000 c/s (0s +/- <1s)                       | Progress:		62% (7906) 5000 c/s (0s +/- <1s)                       / Progress:		63% (8034) 5000 c/s (0s +/- <1s)                       - Progress:		64% (8161) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (8289) 5000 c/s (0s +/- <1s)                       | Progress:		66% (8416) 5000 c/s (0s +/- <1s)                       / Progress:		67% (8544) 5000 c/s (0s +/- <1s)                       - Progress:		68% (8671) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (8799) 5000 c/s (0s +/- <1s)                       | Progress:		70% (8926) 5000 c/s (0s +/- <1s)                       / Progress:		71% (9054) 5000 c/s (0s +/- <1s)                       - Progress:		72% (9181) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (9309) 5000 c/s (0s +/- <1s)                       | Progress:		74% (9436) 5000 c/s (0s +/- <1s)                       / Progress:		75% (9564) 5000 c/s (0s +/- <1s)                       - Progress:		76% (9691) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (9819) 5000 c/s (0s +/- <1s)                       | Progress:		78% (9946) 5000 c/s (0s +/- <1s)                       / Progress:		79% (10074) 5000 c/s (0s +/- <1s)                      - Progress:		80% (10201) 5000 c/s (0s +/- <1s)                      \ Progress:		81% (10329) 5000 c/s (0s +/- <1s)                      | Progress:		82% (10456) 5000 c/s (0s +/- <1s)                      / Progress:		83% (10584) 5000 c/s (0s +/- <1s)                      - Progress:		84% (10711) 5000 c/s (0s +/- <1s)                      \ Progress:		85% (10839) 5000 c/s (0s +/- <1s)                      | Progress:		86% (10966) 5000 c/s (0s +/- <1s)                      / Progress:		87% (11094) 5000 c/s (0s +/- <1s)                      - Progress:		88% (11221) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (11349) 5000 c/s (0s +/- <1s)                      | Progress:		90% (11476) 5000 c/s (0s +/- <1s)                      / Progress:		91% (11604) 5000 c/s (0s +/- <1s)                      - Progress:		92% (11731) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (11859) 5000 c/s (0s +/- <1s)                      | Progress:		94% (11986) 5000 c/s (0s +/- <1s)                      / Progress:		95% (12114) 5000 c/s (0s +/- <1s)                      - Progress:		96% (12241) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (12369) 5000 c/s (0s +/- <1s)                      | Progress:		98% (12496) 5000 c/s (0s +/- <1s)                      / Progress:		99% (12624) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.192854 seconds.		
 * Result:		(143a,36u,4133,26813,3650,30463)
** Writing FIC database to file
 * File:		train36.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		ionosphere-all-98d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		1
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(150a,0u,3876,26369,2351,28720)
 - Progress:		0% (0) ? c/s  		 * Time:    		Compressing the database took 0.018204 seconds.		
 * Result:		(150a,0u,3876,26369,2351,28720)
 * Creating:			fold 10
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 10
** Writing FIC database to file
 * File:		train12.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		ionosphere-all-98d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		32631
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(152a,0u,7140,44376,2672,47048)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (327) ? c/s  		 | Progress:		2% (653) ? c/s  		 / Progress:		3% (979) ? c/s  		 - Progress:		4% (1306) ? c/s  		 \ Progress:		5% (1632) ? c/s  		 | Progress:		6% (1958) ? c/s  		 / Progress:		7% (2285) ? c/s  		 - Progress:		8% (2611) ? c/s  		 \ Progress:		9% (2937) ? c/s  		 | Progress:		10% (3264) ? c/s  		 / Progress:		11% (3590) ? c/s  		 - Progress:		12% (3916) ? c/s  		 \ Progress:		13% (4243) ? c/s  		 | Progress:		14% (4569) ? c/s  		 / Progress:		15% (4895) ? c/s  		 / Progress:		15% (5000) 5000 c/s (0s +/- 5s)                        - Progress:		16% (5221) 5000 c/s (0s +/- 5s)                        \ Progress:		17% (5548) 5000 c/s (0s +/- 5s)                        | Progress:		18% (5874) 5000 c/s (0s +/- 5s)                        / Progress:		19% (6200) 5000 c/s (0s +/- 5s)                        - Progress:		20% (6527) 5000 c/s (0s +/- 5s)                        \ Progress:		21% (6853) 5000 c/s (0s +/- 5s)                        | Progress:		22% (7179) 5000 c/s (0s +/- 5s)                        / Progress:		23% (7506) 5000 c/s (0s +/- 5s)                        - Progress:		24% (7832) 5000 c/s (0s +/- 4s)                        \ Progress:		25% (8158) 5000 c/s (0s +/- 4s)                        | Progress:		26% (8485) 5000 c/s (0s +/- 4s)                        / Progress:		27% (8811) 5000 c/s (0s +/- 4s)                        - Progress:		28% (9137) 5000 c/s (0s +/- 4s)                        \ Progress:		29% (9463) 5000 c/s (0s +/- 4s)                        | Progress:		30% (9790) 5000 c/s (0s +/- 4s)                        / Progress:		31% (10116) 5000 c/s (0s +/- 4s)                       - Progress:		32% (10442) 5000 c/s (0s +/- 4s)                       \ Progress:		33% (10769) 5000 c/s (0s +/- 4s)                       | Progress:		34% (11095) 5000 c/s (0s +/- 4s)                       / Progress:		35% (11421) 5000 c/s (0s +/- 4s)                       - Progress:		36% (11748) 5000 c/s (0s +/- 4s)                       \ Progress:		37% (12074) 5000 c/s (0s +/- 4s)                       | Progress:		38% (12400) 5000 c/s (0s +/- 4s)                       / Progress:		39% (12727) 5000 c/s (0s +/- 3s)                       - Progress:		40% (13053) 5000 c/s (0s +/- 3s)                       \ Progress:		41% (13379) 5000 c/s (0s +/- 3s)                       | Progress:		42% (13706) 5000 c/s (0s +/- 3s)                       / Progress:		43% (14032) 5000 c/s (0s +/- 3s)                       - Progress:		44% (14358) 5000 c/s (0s +/- 3s)                       \ Progress:		45% (14684) 5000 c/s (0s +/- 3s)                       | Progress:		46% (15011) 5000 c/s (0s +/- 3s)                       / Progress:		47% (15337) 5000 c/s (0s +/- 3s)                       - Progress:		48% (15663) 5000 c/s (0s +/- 3s)                       \ Progress:		49% (15990) 5000 c/s (0s +/- 3s)                       | Progress:		50% (16316) 5000 c/s (0s +/- 3s)                       / Progress:		51% (16642) 5000 c/s (0s +/- 3s)                       - Progress:		52% (16969) 5000 c/s (0s +/- 3s)                       \ Progress:		53% (17295) 5000 c/s (0s +/- 3s)                       | Progress:		54% (17621) 5000 c/s (0s +/- 3s)                       / Progress:		55% (17948) 5000 c/s (0s +/- 2s)                       - Progress:		56% (18274) 5000 c/s (0s +/- 2s)                       \ Progress:		57% (18600) 5000 c/s (0s +/- 2s)                       | Progress:		58% (18926) 5000 c/s (0s +/- 2s)                       / Progress:		59% (19253) 5000 c/s (0s +/- 2s)                       - Progress:		60% (19579) 5000 c/s (0s +/- 2s)                       \ Progress:		61% (19905) 5000 c/s (0s +/- 2s)                       | Progress:		62% (20232) 5000 c/s (0s +/- 2s)                       / Progress:		63% (20558) 5000 c/s (0s +/- 2s)                       - Progress:		64% (20884) 5000 c/s (0s +/- 2s)                       \ Progress:		65% (21211) 5000 c/s (0s +/- 2s)                       | Progress:		66% (21537) 5000 c/s (0s +/- 2s)                       / Progress:		67% (21863) 5000 c/s (0s +/- 2s)                       - Progress:		68% (22190) 5000 c/s (0s +/- 2s)                       \ Progress:		69% (22516) 5000 c/s (0s +/- 2s)                       | Progress:		70% (22842) 5000 c/s (0s +/- 1s)                       / Progress:		71% (23169) 5000 c/s (0s +/- 1s)                       - Progress:		72% (23495) 5000 c/s (0s +/- 1s)                       \ Progress:		73% (23821) 5000 c/s (0s +/- 1s)                       | Progress:		74% (24147) 5000 c/s (0s +/- 1s)                       / Progress:		75% (24474) 5000 c/s (0s +/- 1s)                       - Progress:		76% (24800) 5000 c/s (0s +/- 1s)                       \ Progress:		77% (25126) 5000 c/s (0s +/- 1s)                       | Progress:		78% (25453) 5000 c/s (0s +/- 1s)                       / Progress:		79% (25779) 5000 c/s (0s +/- 1s)                       - Progress:		80% (26105) 5000 c/s (0s +/- 1s)                       \ Progress:		81% (26432) 5000 c/s (0s +/- 1s)                       | Progress:		82% (26758) 5000 c/s (0s +/- 1s)                       / Progress:		83% (27084) 5000 c/s (0s +/- 1s)                       - Progress:		84% (27411) 5000 c/s (0s +/- 1s)                       \ Progress:		85% (27737) 5000 c/s (0s +/- <1s)                      | Progress:		86% (28063) 5000 c/s (0s +/- <1s)                      / Progress:		87% (28389) 5000 c/s (0s +/- <1s)                      - Progress:		88% (28716) 5000 c/s (0s +/- <1s)                      \ Progress:		89% (29042) 5000 c/s (0s +/- <1s)                      | Progress:		90% (29368) 5000 c/s (0s +/- <1s)                      / Progress:		91% (29695) 5000 c/s (0s +/- <1s)                      - Progress:		92% (30021) 5000 c/s (0s +/- <1s)                      \ Progress:		93% (30347) 5000 c/s (0s +/- <1s)                      | Progress:		94% (30674) 5000 c/s (0s +/- <1s)                      / Progress:		95% (31000) 5000 c/s (0s +/- <1s)                      - Progress:		96% (31326) 5000 c/s (0s +/- <1s)                      \ Progress:		97% (31653) 5000 c/s (0s +/- <1s)                      | Progress:		98% (31979) 5000 c/s (0s +/- <1s)                      / Progress:		99% (32305) 5000 c/s (0s +/- <1s)                      * Time:    		Compressing the database took 0.674690 seconds.		
 * Result:		(145a,40u,4179,27365,3773,31137)
** Writing FIC database to file
 * File:		train36.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		ionosphere-all-98d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		1
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(148a,0u,3876,26331,2300,28631)
 - Progress:		0% (0) ? c/s  		 * Time:    		Compressing the database took 0.004716 seconds.		
 * Result:		(148a,0u,3876,26331,2300,28631)

 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/classify/ionosphere-all-98d-pop-cccp-20210117082424/

Task `classify`, command `classifycompress` finished. This took 4 seconds.

 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: 'classify.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Classification ::
 * Processing Fold:	1
Starting classification
 * Classifying ct sup:	90     * Classifying ct sup:	80     * Classifying ct sup:	70     * Classifying ct sup:	60     * Classifying ct sup:	50     * Classifying ct sup:	40     * Classifying ct sup:	30     * Classifying ct sup:	20     * Classifying ct sup:	10     * Classifying ct sup:	0      * Classifying:		done
 * Processing Fold:	2
Starting classification
 * Classifying ct sup:	90     * Classifying ct sup:	80     * Classifying ct sup:	70     * Classifying ct sup:	60     * Classifying ct sup:	50     * Classifying ct sup:	40     * Classifying ct sup:	30     * Classifying ct sup:	20     * Classifying ct sup:	10     * Classifying ct sup:	0      * Classifying:		done
 * Processing Fold:	3
Starting classification
 * Classifying ct sup:	90     * Classifying ct sup:	80     * Classifying ct sup:	70     * Classifying ct sup:	60     * Classifying ct sup:	50     * Classifying ct sup:	40     * Classifying ct sup:	30     * Classifying ct sup:	20     * Classifying ct sup:	10     * Classifying ct sup:	0      * Classifying:		done
 * Processing Fold:	4
Starting classification
 * Classifying ct sup:	90     * Classifying ct sup:	80     * Classifying ct sup:	70     * Classifying ct sup:	60     * Classifying ct sup:	50     * Classifying ct sup:	40     * Classifying ct sup:	30     * Classifying ct sup:	20     * Classifying ct sup:	10     * Classifying ct sup:	0      * Classifying:		done
 * Processing Fold:	5
Starting classification
 * Classifying ct sup:	90     * Classifying ct sup:	80     * Classifying ct sup:	70     * Classifying ct sup:	60     * Classifying ct sup:	50     * Classifying ct sup:	40     * Classifying ct sup:	30     * Classifying ct sup:	20     * Classifying ct sup:	10     * Classifying ct sup:	0      * Classifying:		done
 * Processing Fold:	6
Starting classification
 * Classifying ct sup:	90     * Classifying ct sup:	80     * Classifying ct sup:	70     * Classifying ct sup:	60     * Classifying ct sup:	50     * Classifying ct sup:	40     * Classifying ct sup:	30     * Classifying ct sup:	20     * Classifying ct sup:	10     * Classifying ct sup:	0      * Classifying:		done
 * Processing Fold:	7
Starting classification
 * Classifying ct sup:	90     * Classifying ct sup:	80     * Classifying ct sup:	70     * Classifying ct sup:	60     * Classifying ct sup:	50     * Classifying ct sup:	40     * Classifying ct sup:	30     * Classifying ct sup:	20     * Classifying ct sup:	10     * Classifying ct sup:	0      * Classifying:		done
 * Processing Fold:	8
Starting classification
 * Classifying ct sup:	90     * Classifying ct sup:	80     * Classifying ct sup:	70     * Classifying ct sup:	60     * Classifying ct sup:	50     * Classifying ct sup:	40     * Classifying ct sup:	30     * Classifying ct sup:	20     * Classifying ct sup:	10     * Classifying ct sup:	0      * Classifying:		done
 * Processing Fold:	9
Starting classification
 * Classifying ct sup:	90     * Classifying ct sup:	80     * Classifying ct sup:	70     * Classifying ct sup:	60     * Classifying ct sup:	50     * Classifying ct sup:	40     * Classifying ct sup:	30     * Classifying ct sup:	20     * Classifying ct sup:	10     * Classifying ct sup:	0      * Classifying:		done
 * Processing Fold:	10
Starting classification
 * Classifying ct sup:	90     * Classifying ct sup:	80     * Classifying ct sup:	70     * Classifying ct sup:	60     * Classifying ct sup:	50     * Classifying ct sup:	40     * Classifying ct sup:	30     * Classifying ct sup:	20     * Classifying ct sup:	10     * Classifying ct sup:	0      * Classifying:		done
 * Processing Fold:	1
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	2
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	3
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	4
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	5
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	6
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	7
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	8
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	9
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	10
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done


 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/classify/ionosphere-all-98d-pop-cccp-20210117082424/

Task `classify`, command `classifyanalyse` finished. This took 4 seconds.



Comparing on ionosphere.dat with nb_rows = 351 and minsup = 0.27960369179497835
Running	: ./Resources/Krimp/bin/krimp	a3b7e51c-a441-4420-912d-ef43a6e7aca7_convertdb.conf
Running	: ./Resources/Krimp/bin/krimp	c4f59c36-f963-46ce-8da6-ee93ff953ec1_analysedb.conf
Running	: ./Resources/Krimp/bin/krimp	59f81cf3-2e2a-4dcc-8f8b-3738a092ccd5_classifycompress.conf
res_path = /home/arcchitjain/Documents/Mistle/Output/xps/classify/ionosphere-all-98d-pop-cccp-20210117082424
krimp_item_dict = {0: 3, 1: 2, 2: 150, 3: 11, 4: 16, 5: 124, 6: 34, 7: 102, 8: 141, 9: 48, 10: 7, 11: 20, 12: 156, 13: 121, 14: 57, 15: 38, 16: 25, 17: 29, 18: 67, 19: 131, 20: 154, 21: 111, 22: 43, 23: 97, 24: 77, 25: 52, 26: 87, 27: 82, 28: 136, 29: 92, 30: 106, 31: 145, 32: 72, 33: 62, 34: 116, 35: 114, 36: 157, 37: 143, 38: 104, 39: 85, 40: 134, 41: 152, 42: 95, 43: 75, 44: 122, 45: 65, 46: 4, 47: 44, 48: 13, 49: 36, 50: 53, 51: 23, 52: 55, 53: 91, 54: 46, 55: 73, 56: 63, 57: 22, 58: 61, 59: 112, 60: 93, 61: 27, 62: 83, 63: 140, 64: 132, 65: 70, 66: 130, 67: 80, 68: 71, 69: 33, 70: 18, 71: 101, 72: 51, 73: 110, 74: 60, 75: 148, 76: 81, 77: 100, 78: 90, 79: 42, 80: 50, 81: 123, 82: 109, 83: 41, 84: 26, 85: 1, 86: 8, 87: 5, 88: 146, 89: 45, 90: 54, 91: 98, 92: 74, 93: 113, 94: 103, 95: 139, 96: 127, 97: 39, 98: 30, 99: 17, 100: 119, 101: 133, 102: 84, 103: 12, 104: 137, 105: 107, 106: 21, 107: 155, 108: 142, 109: 117, 110: 88, 111: 64, 112: 138, 113: 129, 114: 58, 115: 35, 116: 128, 117: 32, 118: 94, 119: 79, 120: 78, 121: 68, 122: 59, 123: 108, 124: 89, 125: 49, 126: 151, 127: 99, 128: 76, 129: 28, 130: 126, 131: 115, 132: 19, 133: 56, 134: 40, 135: 37, 136: 31, 137: 147, 138: 135, 139: 69, 140: 9, 141: 105, 142: 66, 143: 47, 144: 153, 145: 86, 146: 144, 147: 118, 148: 96, 149: 14, 150: 149, 151: 6, 152: 120, 153: 125, 154: 10, 155: 24, 156: 15}
# of frequent itemsets	: 381
Time of DCI Closed		: 0.19369196891784668
DL of initial theory	: 83343.62757623826
380	itemsets left after T operation 	: [frozenset({-92, -155, -151, -4, -98})]
353	itemsets left after W operation 	: [frozenset({-3, -125, -151, -4, 157}), frozenset({-62, -58, -121, -52, -115, -49, -110, -107, -43, -39, -102, -98, -34, -134, -30, -157, -92, -153, -88, -24, -21, -81, -144, -15, -78, -141, -12, -72, -6, -68, -129}), frozenset({-61, -122, -58, -117, -51, -49, -112, -73, -44, -105, -39, -101, -35, -98, -157, -91, -27, -153, -88, -23, -21, -83, -144, -78, -14, -12, -140, -137, -5, -132, -66}), frozenset({-62, -122, -56, -117, -53, -49, -112, -107, -43, -103, -39, -98, -34, -93, -29, -157, -153, -24, -86, -21, -146, -81, -14, -77, -141, -12, -72, -135, -5, -68, -131}), frozenset({-62, -122, -58, -117, -52, -111, -47, -107, -43, -103, -37, -98, -34, -29, -92, -157, -153, -88, -23, -21, -146, -81, -78, -14, -141, -12, -137, -72, -5, -131, -66}), frozenset({-62, -122, -58, -52, -115, -49, -111, -44, -107, -39, -102, -35, -96, -30, -157, -92, -155, -23, -86, -21, -83, -146, -14, -141, -76, -12, -137, -72, -5, -68, -130}), frozenset({-64, -123, -55, -118, -54, -113, -46, -45, -104, -103, -135, -36, -35, -98, -94, -157, -27, -26, -155, -88, -22, -68, -84, -146, -17, -78, -142, -9, -72, -7, -132}), frozenset({-62, -122, -56, -116, -52, -49, -111, -107, -43, -72, -103, -39, -34, -97, -30, -93, -157, -155, -88, -24, -21, -82, -145, -78, -14, -141, -12, -136, -5, -68, -131}), frozenset({-62, -58, -120, -117, -52, -49, -111, -9, -43, -105, -39, -101, -98, -34, -31, -157, -91, -155, -88, -23, -21, -83, -146, -78, -14, -141, -137, -72, -5, -68, -131}), frozenset({-63, -122, -58, -53, -115, -112, -48, -44, -107, -103, -37, -35, -98, -93, -28, -157, -153, -88, -24, -19, -82, -144, -14, -77, -142, -12, -73, -135, -5, -132, -66}), frozenset({-63, -122, -58, -52, -115, -49, -112, -9, -44, -107, -39, -101, -35, -96, -30, -157, -92, -153, -23, -86, -21, -68, -82, -145, -78, -14, -142, -137, -71, -6, -132}), frozenset({-64, -123, -59, -54, -115, -113, -46, -45, -108, -103, -39, -99, -35, -94, -157, -27, -26, -152, -86, -84, -18, -17, -143, -142, -76, -74, -9, -8, -134, -133, -65}), frozenset({-62, -123, -58, -117, -52, -49, -112, -137, -107, -43, -40, -102, -32, -95, -30, -157, -155, -90, -88, -23, -21, -82, -146, -78, -14, -141, -9, -72, -5, -68, -131}), frozenset({-63, -122, -58, -53, -115, -112, -47, -44, -72, -105, -103, -39, -35, -98, -93, -29, -157, -26, -153, -86, -21, -83, -17, -144, -142, -76, -12, -8, -135, -132, -66}), frozenset({-63, -122, -58, -117, -53, -112, -47, -44, -107, -103, -37, -35, -98, -93, -157, -27, -153, -88, -24, -83, -19, -17, -144, -142, -77, -12, -72, -135, -6, -132, -66}), frozenset({-63, -122, -58, -53, -115, -49, -110, -42, -105, -103, -37, -35, -98, -93, -28, -155, -157, -88, -24, -83, -19, -144, -78, -14, -13, -140, -137, -8, -71, -133, -66}), frozenset({-64, -123, -56, -53, -115, -113, -47, -45, -105, -103, -37, -35, -96, -157, -92, -28, -153, -24, -86, -84, -18, -17, -144, -142, -76, -12, -74, -8, -135, -133, -66}), frozenset({-64, -123, -58, -54, -115, -49, -112, -45, -107, -8, -103, -39, -35, -98, -94, -157, -27, -26, -155, -86, -21, -68, -83, -146, -17, -78, -142, -12, -74, -136, -132}), frozenset({-62, -123, -58, -52, -114, -49, -112, -108, -42, -39, -100, -35, -96, -31, -93, -156, -157, -26, -86, -82, -18, -143, -14, -13, -142, -75, -138, -71, -6, -133, -68}), frozenset({-62, -122, -58, -53, -115, -47, -110, -44, -107, -103, -39, -35, -96, -30, -157, -91, -155, -88, -24, -21, -81, -144, -15, -78, -12, -140, -137, -71, -5, -68, -130}), frozenset({-64, -123, -59, -118, -54, -113, -49, -45, -108, -40, -103, -99, -35, -94, -157, -27, -26, -89, -152, -84, -18, -17, -79, -143, -142, -13, -74, -137, -8, -131, -65}), frozenset({-62, -119, -118, -55, -54, -113, -49, -43, -104, -101, -36, -134, -32, -95, -94, -30, -133, -155, -157, -23, -85, -21, -147, -80, -14, -141, -12, -75, -70, -5, -68}), frozenset({-63, -122, -56, -53, -115, -112, -47, -44, -105, -103, -37, -35, -96, -93, -28, -157, -26, -153, -86, -21, -83, -17, -144, -142, -76, -12, -73, -135, -6, -132, -66}), frozenset({-64, -123, -56, -54, -117, -49, -111, -44, -105, -103, -39, -34, -96, -94, -157, -28, -153, -88, -24, -19, -82, -17, -144, -142, -76, -12, -74, -137, -5, -68, -131}), frozenset({-63, -122, -58, -53, -115, -113, -49, -73, -44, -107, -103, -39, -35, -98, -30, -93, -157, -155, -26, -88, -68, -83, -18, -17, -144, -142, -13, -76, -137, -8, -132}), frozenset({-60, -59, -119, -54, -114, -113, -46, -41, -104, -40, -100, -32, -95, -31, -133, -156, -91, -157, -89, -24, -21, -84, -144, -14, -13, -75, -139, -73, -134, -5, -66}), frozenset({-63, -122, -58, -117, -53, -49, -112, -73, -44, -107, -103, -36, -35, -98, -30, -93, -156, -157, -26, -88, -68, -21, -84, -146, -17, -78, -142, -12, -137, -8, -132}), frozenset({-63, -122, -55, -117, -53, -49, -112, -44, -107, -103, -39, -35, -98, -31, -93, -157, -155, -26, -86, -21, -68, -83, -146, -17, -142, -76, -12, -73, -136, -5, -132}), frozenset({-62, -122, -55, -117, -50, -111, -46, -73, -44, -107, -39, -102, -35, -96, -31, -157, -92, -155, -69, -23, -86, -83, -18, -146, -78, -14, -141, -9, -136, -5, -131}), frozenset({-63, -122, -58, -117, -53, -112, -47, -73, -44, -104, -103, -37, -35, -96, -94, -30, -156, -157, -26, -88, -21, -83, -146, -17, -78, -142, -12, -137, -8, -69, -132}), frozenset({-64, -123, -58, -54, -115, -113, -49, -45, -107, -103, -37, -35, -98, -93, -28, -157, -26, -153, -85, -84, -21, -147, -17, -142, -75, -74, -9, -8, -135, -133, -66}), frozenset({-62, -123, -58, -52, -115, -49, -111, -43, -104, -103, -39, -98, -34, -30, -157, -92, -153, -23, -86, -21, -84, -146, -78, -14, -141, -10, -137, -72, -5, -66, -129}), frozenset({-63, -122, -58, -117, -53, -113, -47, -44, -105, -101, -37, -35, -98, -93, -28, -157, -153, -88, -24, -21, -83, -146, -78, -14, -141, -12, -137, -72, -5, -131, -66})]
298	itemsets left after T operation 	: [frozenset({-151, -54, -4, -123})]
188	itemsets left after T operation 	: [frozenset({-23, -14, -4})]
82	itemsets left after W operation 	: [frozenset({-125, -12, -4, -3, 158}), frozenset({-62, -122, -57, -117, -52, -48, -111, -43, -106, -103, -37, -98, -34, -158, -29, -92, -155, -88, -24, -150, -21, -82, -145, -14, -77, -141, -137, -72, -5, -131, -66}), frozenset({-64, -120, -55, -117, -53, -111, -47, -105, -41, -103, -37, -99, -34, -30, -158, -92, -155, -26, -86, -149, -83, -147, -18, -78, -14, -142, -72, -135, -5, -131, -65}), frozenset({-62, -58, -121, -117, -53, -49, -111, -44, -107, -103, -39, -35, -98, -30, -93, -158, -155, -88, -24, -21, -149, -82, -146, -17, -78, -141, -137, -72, -5, -68, -131}), frozenset({-61, -120, -55, -53, -115, -110, -46, -44, -72, -105, -102, -37, -35, -96, -158, -92, -27, -154, -23, -85, -149, -83, -18, -17, -144, -76, -140, -8, -135, -131, -65})]
43	itemsets left after W operation 	: [frozenset({159, -4, -123, -17}), frozenset({-128, -114, -113, -104, -103, -99, -90, -89, -84, -79, -74, -69, -60, -55, -50, -46, -45, -36, -35, -31, -159, -156, -23, -22, -148, -147, -139, -138, -9, -8, -133, -3}), frozenset({-128, -114, -113, -108, -100, -99, -90, -89, -84, -79, -70, -68, -62, -58, -52, -46, -41, -39, -34, -159, -30, -155, -23, -151, -147, -18, -142, -13, -138, -8, -2, -129}), frozenset({-128, -114, -113, -108, -100, -99, -90, -89, -80, -75, -74, -69, -64, -59, -54, -49, -45, -40, -35, -31, -159, -156, -26, -148, -18, -143, -13, -139, -138, -8, -2, -129}), frozenset({-128, -114, -113, -108, -103, -99, -90, -89, -80, -78, -72, -68, -62, -59, -54, -49, -43, -40, -32, -31, -159, -156, -26, -148, -18, -143, -142, -13, -138, -8, -133, -2})]
6	itemsets left after T operation 	: [frozenset({-14, -4, -107})]
4	itemsets left after V operation 	: [frozenset({-23, -14, -4}), frozenset({-107, 23})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.1377265453338623
Initial DL				: 89180.16257633519
Final DL				: 11199.317604739183
Compression (wrt me)	: 0.8744191838049975
Operator Counters		: {'D': 0, 'W': 3, 'V': 1, 'S': 0, 'R': 0, 'T': 4}
Misle Learning Runtime	: 1.600099802017212

# of frequent itemsets	: 52866
Time of DCI Closed		: 2.051115036010742
DL of initial theory	: 83343.62757623826
4963	itemsets left after T operation 	: [frozenset({-63, -93, -125, -122, -132, -151, -53, -83, -112, -3, -142, -73, -103, -4, -35})]
2869	itemsets left after T operation 	: [frozenset({-26, -151, -17, -35, -142, -12, -8, -103, -4, -3})]
944	itemsets left after T operation 	: [frozenset({-125, -122, -4, -17, -142, -12, -132, -3})]
244	itemsets left after T operation 	: [frozenset({-63, -93, -122, -53, -83, -17, -3, -103, -4, -35})]
13	itemsets left after V operation 	: [frozenset({-64, -125, -122, -56, -117, -53, 12, -49, -112, -44, -105, -37, -96, -30, -93, -153, -86, -21, -83, -146, -76, -10, -73, -135, -133, -68}), frozenset({-26, -151, -17, -35, -142, -12, -8, -103, -4, -3}), frozenset({-64, -125, -123, -56, -54, 12, -115, -113, -47, -45, -105, -39, -96, -94, -27, -153, -86, -84, -19, -144, -76, -74, -9, -135, -133, -66}), frozenset({-64, -125, -122, -55, -53, 12, -115, -112, -47, -45, -105, -37, -95, -93, -27, -153, -86, -83, -18, -143, -75, -74, -9, -134, -132, -66})]
4	itemsets left after T operation 	: [frozenset({-125, -122, -151, -4, -112, -142, -103, -132, -3})]
0	itemsets left after T operation 	: [frozenset({-125, -151, -17, -142, -12, -4, -3})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.1453707218170166
Clause Pruned	: frozenset({-64, -125, -122, -55, -53, 12, -115, -112, -47, -45, -105, -37, -95, -93, -27, -153, -86, -83, -18, -143, -75, -74, -9, -134, -132, -66})
Initial DL				: 89180.16257633519
Final DL				: 13053.346300773483
Compression (wrt me)	: 0.8536294852613634
Operator Counters		: {'D': 0, 'W': 0, 'V': 1, 'S': 0, 'R': 0, 'T': 6}
Misle Learning Runtime	: 3.797992467880249

# of frequent itemsets	: 268
Time of DCI Closed		: 0.1863408088684082
DL of initial theory	: 83060.2373345782
267	itemsets left after T operation 	: [frozenset({-151, -4, -123, -49})]
265	itemsets left after W operation 	: [frozenset({-3, -125, -12, -4, 157}), frozenset({-62, -122, -56, -117, -53, -49, -112, -107, -43, -103, -39, -98, -34, -93, -29, -157, -153, -24, -151, -86, -21, -146, -81, -14, -77, -141, -72, -135, -5, -68, -131}), frozenset({-62, -122, -58, -117, -52, -111, -47, -107, -43, -103, -37, -98, -34, -29, -92, -157, -153, -88, -23, -151, -21, -146, -81, -78, -14, -141, -137, -72, -5, -131, -66}), frozenset({-62, -122, -58, -52, -115, -49, -111, -44, -107, -39, -102, -35, -96, -30, -157, -92, -155, -23, -86, -151, -21, -83, -146, -14, -141, -76, -137, -72, -5, -68, -130}), frozenset({-62, -122, -56, -116, -52, -49, -111, -107, -43, -72, -103, -39, -34, -97, -30, -93, -157, -155, -88, -24, -151, -21, -82, -145, -78, -14, -141, -136, -5, -68, -131}), frozenset({-63, -122, -58, -53, -115, -112, -48, -44, -107, -103, -37, -35, -98, -93, -28, -157, -153, -88, -24, -151, -19, -82, -144, -14, -77, -142, -73, -135, -5, -132, -66}), frozenset({-62, -58, -121, -117, -53, -49, -111, -44, -107, -103, -39, -35, -98, -30, -93, -157, -155, -88, -24, -21, -149, -82, -146, -17, -78, -141, -137, -72, -5, -68, -131}), frozenset({-63, -122, -58, -53, -115, -112, -47, -44, -72, -105, -103, -39, -35, -98, -93, -29, -157, -26, -153, -151, -86, -21, -83, -17, -144, -142, -76, -8, -135, -132, -66}), frozenset({-63, -122, -58, -117, -53, -112, -47, -44, -107, -103, -37, -35, -98, -93, -157, -27, -153, -88, -24, -151, -83, -19, -17, -144, -142, -77, -72, -135, -6, -132, -66}), frozenset({-61, -122, -58, -115, -51, -112, -47, -45, -107, -101, -36, -35, -96, -30, -157, -91, -155, -23, -86, -21, -84, -149, -146, -14, -141, -76, -73, -8, -135, -133, -68}), frozenset({-64, -123, -56, -53, -115, -113, -47, -45, -105, -103, -37, -35, -96, -157, -92, -28, -153, -24, -151, -86, -84, -18, -17, -144, -142, -76, -74, -8, -135, -133, -66}), frozenset({-61, -122, -58, -116, -52, -110, -46, -107, -42, -102, -37, -35, -98, -30, -157, -92, -155, -88, -23, -21, -149, -83, -146, -78, -14, -142, -137, -71, -5, -68, -131}), frozenset({-61, -122, -58, -115, -51, -49, -109, -105, -41, -103, -39, -33, -96, -157, -92, -27, -153, -23, -86, -21, -149, -146, -81, -15, -142, -75, -137, -71, -5, -67, -129}), frozenset({-62, -122, -58, -117, -52, -111, -47, -43, -106, -39, -102, -98, -33, -30, -157, -92, -155, -88, -24, -150, -21, -82, -146, -78, -14, -141, -137, -71, -5, -131, -66}), frozenset({-63, -59, -122, -53, -115, -112, -47, -45, -107, -103, -37, -99, -35, -157, -92, -28, -26, -152, -86, -149, -83, -19, -17, -144, -142, -76, -73, -8, -135, -132, -65}), frozenset({-62, -122, -58, -117, -52, -111, -47, -45, -107, -72, -39, -102, -35, -98, -30, -93, -157, -155, -88, -24, -150, -21, -82, -146, -17, -78, -141, -137, -8, -68, -131}), frozenset({-62, -122, -58, -53, -115, -47, -110, -44, -107, -103, -39, -35, -96, -30, -157, -91, -155, -88, -24, -151, -21, -81, -144, -15, -78, -140, -137, -71, -5, -68, -130}), frozenset({-62, -119, -118, -55, -54, -113, -49, -43, -104, -101, -36, -134, -32, -95, -94, -30, -133, -155, -157, -23, -151, -85, -21, -147, -80, -14, -141, -75, -70, -5, -68}), frozenset({-61, -120, -55, -53, -115, -110, -46, -44, -72, -105, -102, -37, -35, -96, -157, -92, -27, -154, -23, -85, -149, -83, -18, -17, -144, -76, -140, -8, -135, -131, -65}), frozenset({-63, -122, -56, -53, -115, -112, -47, -44, -105, -103, -37, -35, -96, -93, -28, -157, -26, -153, -151, -86, -21, -83, -17, -144, -142, -76, -73, -135, -6, -132, -66}), frozenset({-62, -122, -57, -117, -52, -48, -111, -43, -106, -103, -37, -98, -34, -29, -92, -155, -157, -88, -24, -150, -21, -82, -145, -14, -77, -141, -137, -72, -5, -131, -66}), frozenset({-62, -122, -58, -116, -52, -111, -47, -107, -43, -103, -39, -35, -98, -157, -92, -28, -155, -23, -86, -151, -19, -146, -81, -14, -141, -76, -137, -72, -5, -131, -66}), frozenset({-63, -122, -58, -117, -53, -49, -112, -73, -44, -107, -103, -36, -35, -98, -30, -93, -156, -157, -26, -88, -151, -68, -21, -84, -146, -17, -78, -142, -137, -8, -132}), frozenset({-61, -122, -58, -52, -115, -49, -112, -44, -107, -39, -101, -35, -98, -157, -92, -27, -153, -23, -86, -149, -83, -18, -144, -14, -76, -140, -73, -8, -135, -132, -65}), frozenset({-63, -122, -55, -117, -53, -49, -112, -44, -107, -103, -39, -35, -98, -31, -93, -157, -155, -26, -151, -86, -21, -68, -83, -146, -17, -142, -76, -73, -136, -5, -132}), frozenset({-64, -120, -55, -117, -53, -111, -47, -105, -41, -103, -37, -99, -34, -30, -157, -92, -155, -26, -86, -149, -83, -147, -18, -78, -14, -142, -72, -135, -5, -131, -65}), frozenset({-62, -122, -58, -117, -52, -49, -111, -107, -43, -102, -37, -98, -34, -157, -92, -28, -155, -88, -23, -151, -21, -82, -146, -78, -14, -141, -137, -72, -5, -68, -131}), frozenset({-63, -122, -58, -117, -53, -112, -47, -73, -44, -104, -103, -37, -35, -96, -94, -30, -156, -157, -26, -88, -151, -21, -83, -146, -17, -78, -142, -137, -8, -69, -132}), frozenset({-63, -122, -58, -117, -53, -113, -47, -44, -105, -101, -37, -35, -98, -93, -28, -157, -153, -88, -24, -151, -21, -83, -146, -78, -14, -141, -137, -72, -5, -131, -66}), frozenset({-60, -122, -58, -117, -50, -112, -48, -44, -107, -39, -101, -35, -98, -29, -157, -90, -153, -87, -23, -68, -148, -83, -19, -144, -14, -77, -139, -73, -8, -135, -132})]
239	itemsets left after T operation 	: [frozenset({-151, -14, -4, -155})]
187	itemsets left after T operation 	: [frozenset({-103, -4, -123, -17})]
82	itemsets left after T operation 	: [frozenset({-23, -14, -4})]
34	itemsets left after T operation 	: [frozenset({-4, -123, -17})]
7	itemsets left after T operation 	: [frozenset({-151, -14, -4})]
4	itemsets left after V operation 	: [frozenset({-123, 14, -49}), frozenset({-151, -14, -4})]
3	itemsets left after T operation 	: [frozenset({-14, -4})]
1	itemsets left after W operation 	: [frozenset({-4, -3, 158}), frozenset({-128, -122, -118, -113, -107, -102, -99, -91, -86, -80, -76, -73, -68, -60, -58, -52, -49, -43, -39, -34, -158, -156, -27, -26, -22, -149, -147, -17, -142, -10, -8, -135, -133}), frozenset({-158, -125, -12, 157})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.14554834365844727
Clause Pruned	: frozenset({-123, 14, -49})
Initial DL				: 89180.16257633519
Final DL				: 9242.89449927483
Compression (wrt me)	: 0.8963570570824736
Operator Counters		: {'D': 0, 'W': 2, 'V': 1, 'S': 0, 'R': 0, 'T': 7}
Misle Learning Runtime	: 1.0310208797454834

# of frequent itemsets	: 60567
Time of DCI Closed		: 2.2457339763641357
DL of initial theory	: 83060.2373345782
4960	itemsets left after T operation 	: [frozenset({-63, -93, -125, -122, -132, -151, -53, -83, -35, -112, -142, -73, -103, -4, -3})]
3105	itemsets left after T operation 	: [frozenset({-26, -151, -17, -35, -142, -12, -8, -103, -4, -3})]
994	itemsets left after T operation 	: [frozenset({-125, -122, -4, -17, -142, -12, -132, -3})]
220	itemsets left after T operation 	: [frozenset({-93, -125, -122, -53, -17, -35, -103, -4, -3})]
16	itemsets left after T operation 	: [frozenset({-63, -93, -122, -132, -53, -83, -35, -112, -73, -103, -4, -3})]
6	itemsets left after T operation 	: [frozenset({-125, -122, -151, -112, -142, -103, -4, -3})]
0	itemsets left after W operation 	: [frozenset({-125, -151, -17, -3, -142, -12, -4, 157}), frozenset({-61, -58, -120, -115, -51, -49, -110, -43, -105, -39, -101, -71, -35, -96, -30, -157, -91, -153, -88, -24, -68, -21, -81, -144, -78, -8, -135, -132}), frozenset({-61, -58, -120, -115, -51, -49, -110, -42, -105, -40, -101, -71, -34, -96, -30, -157, -91, -153, -88, -24, -21, -80, -144, -78, -8, -135, -68, -131}), frozenset({-61, -58, -121, -115, -51, -49, -110, -42, -105, -39, -101, -71, -35, -96, -30, -157, -91, -153, -88, -24, -68, -21, -81, -144, -78, -8, -135, -132})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.15742731094360352
Initial DL				: 89180.16257633519
Final DL				: 11167.925301874006
Compression (wrt me)	: 0.8747711937358867
Operator Counters		: {'D': 0, 'W': 1, 'V': 0, 'S': 0, 'R': 0, 'T': 6}
Misle Learning Runtime	: 3.8599631786346436

# of frequent itemsets	: 426
Time of DCI Closed		: 0.21140503883361816
DL of initial theory	: 82210.06646643026
425	itemsets left after T operation 	: [frozenset({-92, -155, -151, -4, -98})]
394	itemsets left after W operation 	: [frozenset({-3, -125, -12, -4, 157}), frozenset({-62, -58, -121, -52, -115, -49, -110, -107, -43, -39, -102, -98, -34, -134, -30, -157, -92, -153, -88, -24, -151, -21, -81, -144, -15, -78, -141, -72, -6, -68, -129}), frozenset({-61, -122, -58, -117, -51, -49, -112, -73, -44, -105, -39, -101, -35, -98, -157, -91, -27, -153, -88, -23, -151, -21, -83, -144, -78, -14, -140, -137, -5, -132, -66}), frozenset({-62, -122, -56, -117, -53, -49, -112, -107, -43, -103, -39, -98, -34, -93, -29, -157, -153, -24, -151, -86, -21, -146, -81, -14, -77, -141, -72, -135, -5, -68, -131}), frozenset({-62, -122, -58, -52, -115, -49, -111, -44, -107, -39, -102, -35, -96, -30, -157, -92, -155, -23, -86, -151, -21, -83, -146, -14, -141, -76, -137, -72, -5, -68, -130}), frozenset({-63, -123, -55, -53, -115, -49, -112, -73, -44, -105, -103, -37, -35, -96, -94, -30, -157, -155, -26, -88, -151, -68, -21, -83, -146, -17, -142, -76, -137, -6, -132}), frozenset({-62, -122, -56, -116, -52, -49, -111, -107, -43, -72, -103, -39, -34, -97, -30, -93, -157, -155, -88, -24, -151, -21, -82, -145, -78, -14, -141, -136, -5, -68, -131}), frozenset({-63, -122, -58, -53, -115, -112, -48, -44, -107, -103, -37, -35, -98, -93, -28, -157, -153, -88, -24, -151, -19, -82, -144, -14, -77, -142, -73, -135, -5, -132, -66}), frozenset({-62, -58, -121, -117, -53, -49, -111, -44, -107, -103, -39, -35, -98, -30, -93, -157, -155, -88, -24, -21, -149, -82, -146, -17, -78, -141, -137, -72, -5, -68, -131}), frozenset({-63, -122, -58, -53, -115, -112, -47, -44, -72, -105, -103, -39, -35, -98, -93, -29, -157, -26, -153, -151, -86, -21, -83, -17, -144, -142, -76, -8, -135, -132, -66}), frozenset({-63, -122, -58, -117, -53, -112, -47, -44, -107, -103, -37, -35, -98, -93, -157, -27, -153, -88, -24, -151, -83, -19, -17, -144, -142, -77, -72, -135, -6, -132, -66}), frozenset({-61, -122, -58, -115, -51, -112, -47, -45, -107, -101, -36, -35, -96, -30, -157, -91, -155, -23, -86, -21, -84, -149, -146, -14, -141, -76, -73, -8, -135, -133, -68}), frozenset({-61, -122, -58, -116, -52, -110, -46, -107, -42, -102, -37, -35, -98, -30, -157, -92, -155, -88, -23, -21, -149, -83, -146, -78, -14, -142, -137, -71, -5, -68, -131}), frozenset({-61, -122, -58, -115, -51, -49, -109, -105, -41, -103, -39, -33, -96, -157, -92, -27, -153, -23, -86, -21, -149, -146, -81, -15, -142, -75, -137, -71, -5, -67, -129}), frozenset({-64, -123, -58, -54, -115, -49, -112, -45, -107, -8, -103, -39, -35, -98, -94, -157, -27, -26, -155, -151, -86, -21, -68, -83, -146, -17, -78, -142, -74, -136, -132}), frozenset({-62, -122, -58, -117, -52, -111, -47, -43, -106, -39, -102, -98, -33, -30, -157, -92, -155, -88, -24, -150, -21, -82, -146, -78, -14, -141, -137, -71, -5, -131, -66}), frozenset({-63, -59, -122, -53, -115, -112, -47, -45, -107, -103, -37, -99, -35, -157, -92, -28, -26, -152, -86, -149, -83, -19, -17, -144, -142, -76, -73, -8, -135, -132, -65}), frozenset({-62, -122, -58, -117, -52, -111, -47, -45, -107, -72, -39, -102, -35, -98, -30, -93, -157, -155, -88, -24, -150, -21, -82, -146, -17, -78, -141, -137, -8, -68, -131}), frozenset({-62, -122, -58, -53, -115, -47, -110, -44, -107, -103, -39, -35, -96, -30, -157, -91, -155, -88, -24, -151, -21, -81, -144, -15, -78, -140, -137, -71, -5, -68, -130}), frozenset({-62, -119, -118, -55, -54, -113, -49, -43, -104, -101, -36, -134, -32, -95, -94, -30, -133, -155, -157, -23, -151, -85, -21, -147, -80, -14, -141, -75, -70, -5, -68}), frozenset({-61, -120, -55, -53, -115, -110, -46, -44, -72, -105, -102, -37, -35, -96, -157, -92, -27, -154, -23, -85, -149, -83, -18, -17, -144, -76, -140, -8, -135, -131, -65}), frozenset({-63, -122, -56, -53, -115, -112, -47, -44, -105, -103, -37, -35, -96, -93, -28, -157, -26, -153, -151, -86, -21, -83, -17, -144, -142, -76, -73, -135, -6, -132, -66}), frozenset({-64, -123, -56, -54, -117, -49, -111, -44, -105, -103, -39, -34, -96, -94, -157, -28, -153, -88, -24, -151, -19, -82, -17, -144, -142, -76, -74, -137, -5, -68, -131}), frozenset({-62, -122, -57, -117, -52, -48, -111, -43, -106, -103, -37, -98, -34, -29, -92, -155, -157, -88, -24, -150, -21, -82, -145, -14, -77, -141, -137, -72, -5, -131, -66}), frozenset({-61, -122, -58, -52, -115, -49, -112, -44, -107, -39, -101, -35, -98, -157, -92, -27, -153, -23, -86, -149, -83, -18, -144, -14, -76, -140, -73, -8, -135, -132, -65}), frozenset({-63, -122, -55, -117, -53, -49, -112, -44, -107, -103, -39, -35, -98, -31, -93, -157, -155, -26, -151, -86, -21, -68, -83, -146, -17, -142, -76, -73, -136, -5, -132}), frozenset({-63, -122, -58, -117, -53, -113, -47, -44, -105, -101, -37, -35, -98, -93, -28, -157, -153, -88, -24, -151, -21, -83, -146, -78, -14, -141, -137, -72, -5, -131, -66}), frozenset({-60, -122, -58, -117, -50, -112, -48, -44, -107, -39, -101, -35, -98, -29, -157, -90, -153, -87, -23, -68, -148, -83, -19, -144, -14, -77, -139, -73, -8, -135, -132})]
375	itemsets left after T operation 	: [frozenset({-151, -54, -4, -123})]
251	itemsets left after T operation 	: [frozenset({-23, -4, -123})]
60	itemsets left after W operation 	: [frozenset({-3, -151, -4, -35, 158}), frozenset({-63, -125, -122, -58, -52, -115, -49, -112, -9, -44, -107, -39, -101, -96, -30, -158, -92, -153, -23, -86, -21, -68, -82, -145, -78, -14, -142, -137, -71, -6, -132}), frozenset({-62, -124, -58, -119, -52, -115, -113, -46, -41, -104, -39, -100, -95, -158, -93, -27, -155, -24, -86, -21, -83, -143, -14, -142, -76, -74, -9, -134, -5, -68, -129}), frozenset({-64, -124, -122, -55, -118, -53, -49, -110, -107, -43, -39, -102, -99, -94, -158, -156, -27, -26, -89, -5, -69, -22, -84, -143, -78, -14, -142, -9, -72, -134, -133}), frozenset({-63, -125, -122, -58, -53, -115, -113, -49, -73, -44, -107, -103, -39, -98, -30, -93, -158, -155, -26, -88, -68, -83, -18, -17, -144, -142, -13, -76, -137, -8, -132}), frozenset({-62, -125, -122, -55, -117, -50, -111, -46, -9, -44, -107, -39, -102, -96, -31, -158, -92, -155, -5, -23, -86, -83, -18, -146, -78, -14, -141, -73, -136, -69, -131})]
4	itemsets left after T operation 	: [frozenset({-4, -43})]
3	itemsets left after V operation 	: [frozenset({-124, -118, -113, -104, -103, -95, -94, -85, -80, -79, -74, 54, -68, -62, -55, -50, -46, -45, -40, -32, -27, -26, -5, -152, -22, -147, -17, -139, -9, -134, -133, -2}), frozenset({-151, -54, -4, -123})]
2	itemsets left after V operation 	: [frozenset({-151, -54, 23}), frozenset({-23, -4, -123})]
0	itemsets left after V operation 	: [frozenset({-92, -155, -151, 43, -98}), frozenset({-3, -125, -12, 43, 157}), frozenset({-35, -151, 43, -3, 158}), frozenset({-4, -43}), frozenset({-23, 43, -123})]
Unpacking W operator applied earlier using 158 on frozenset({-3, -151, -4, -35})
# of frequent itemsets	: 0
Time of DCI Closed		: 0.14061999320983887
Initial DL				: 89180.16257633519
Final DL				: 11963.295917807447
Compression (wrt me)	: 0.8658524993429197
Operator Counters		: {'D': 0, 'W': 1, 'V': 3, 'S': 0, 'R': 0, 'T': 4}
Misle Learning Runtime	: 1.4792044162750244

# of frequent itemsets	: 44920
Time of DCI Closed		: 1.7586562633514404
DL of initial theory	: 82210.06646643026
4953	itemsets left after T operation 	: [frozenset({-63, -93, -125, -122, -132, -151, -53, -83, -112, -3, -142, -73, -103, -4, -35})]
2901	itemsets left after T operation 	: [frozenset({-26, -151, -17, -35, -142, -12, -8, -103, -4, -3})]
868	itemsets left after T operation 	: [frozenset({-125, -122, -4, -17, -142, -12, -132, -3})]
122	itemsets left after T operation 	: [frozenset({-63, -93, -122, -53, -83, -17, -3, -103, -4, -35})]
16	itemsets left after T operation 	: [frozenset({-125, -151, -17, -3, -142, -4, -35})]
0	itemsets left after T operation 	: [frozenset({-125, -122, -4, -112, -142, -103, -132, -3})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.1507580280303955
Initial DL				: 89180.16257633519
Final DL				: 12323.667988935753
Compression (wrt me)	: 0.8618115550261852
Operator Counters		: {'D': 0, 'W': 0, 'V': 0, 'S': 0, 'R': 0, 'T': 6}
Misle Learning Runtime	: 3.227797269821167

# of frequent itemsets	: 324
Time of DCI Closed		: 0.19634318351745605
DL of initial theory	: 83060.2373345782
322	itemsets left after W operation 	: [frozenset({-3, -151, -21, -4, 157}), frozenset({-127, -63, -122, -58, -117, -52, -49, -112, -107, -43, -72, -39, -102, -98, -34, -30, -157, -92, -155, -88, -23, -83, -146, -78, -14, -141, -12, -137, -8, -131, -66}), frozenset({-62, -125, -58, -121, -52, -115, -49, -110, -107, -43, -39, -102, -98, -34, -134, -30, -157, -92, -153, -88, -24, -81, -144, -15, -78, -141, -12, -72, -6, -68, -129}), frozenset({-62, -125, -123, -58, -117, -52, -49, -111, -73, -44, -107, -39, -102, -98, -34, -30, -157, -92, -155, -23, -85, -83, -146, -14, -141, -76, -12, -137, -5, -68, -131}), frozenset({-125, -61, -122, -58, -117, -51, -49, -112, -73, -44, -105, -39, -101, -35, -98, -157, -91, -27, -153, -88, -23, -83, -144, -78, -14, -12, -140, -137, -5, -132, -66}), frozenset({-62, -125, -122, -56, -117, -53, -49, -112, -107, -43, -103, -39, -98, -34, -93, -29, -157, -153, -24, -86, -146, -81, -14, -77, -141, -12, -72, -135, -5, -68, -131}), frozenset({-62, -124, -122, -58, -117, -52, -111, -47, -44, -107, -39, -102, -98, -34, -157, -92, -27, -155, -88, -23, -82, -143, -78, -14, -141, -12, -137, -72, -5, -68, -131}), frozenset({-62, -125, -122, -58, -117, -52, -111, -47, -107, -43, -103, -37, -98, -34, -29, -92, -157, -153, -88, -23, -146, -81, -78, -14, -141, -12, -137, -72, -5, -131, -66}), frozenset({-62, -125, -122, -58, -52, -115, -49, -111, -44, -107, -39, -102, -35, -96, -30, -157, -92, -155, -23, -86, -83, -146, -14, -141, -76, -12, -137, -72, -5, -68, -130}), frozenset({-63, -125, -123, -55, -53, -115, -49, -112, -73, -44, -105, -103, -37, -35, -96, -94, -30, -157, -155, -26, -88, -68, -83, -146, -17, -142, -76, -12, -137, -6, -132}), frozenset({-62, -125, -122, -56, -116, -52, -49, -111, -107, -43, -72, -103, -39, -34, -97, -30, -93, -157, -155, -88, -24, -82, -145, -78, -14, -141, -12, -136, -5, -68, -131}), frozenset({-62, -125, -58, -120, -117, -52, -49, -111, -9, -43, -105, -39, -101, -98, -34, -31, -157, -91, -155, -88, -23, -83, -146, -78, -14, -141, -137, -72, -5, -68, -131}), frozenset({-62, -124, -123, -56, -54, -117, -49, -111, -43, -104, -103, -36, -99, -32, -31, -94, -157, -156, -26, -89, -146, -80, -78, -14, -141, -12, -137, -72, -5, -68, -131}), frozenset({-62, -125, -123, -58, -117, -52, -49, -112, -73, -9, -44, -107, -40, -102, -35, -98, -157, -92, -27, -26, -155, -85, -83, -146, -14, -141, -76, -137, -6, -68, -131}), frozenset({-62, -125, -123, -58, -54, -117, -49, -111, -43, -104, -103, -40, -98, -32, -30, -157, -92, -155, -23, -85, -146, -80, -78, -14, -141, -12, -137, -72, -5, -131, -66}), frozenset({-62, -125, -123, -58, -117, -52, -49, -112, -137, -107, -43, -40, -102, -32, -95, -30, -157, -155, -90, -88, -23, -82, -146, -78, -14, -141, -9, -72, -5, -68, -131}), frozenset({-63, -125, -122, -58, -53, -115, -112, -47, -44, -72, -105, -103, -39, -35, -98, -93, -29, -157, -26, -153, -86, -83, -17, -144, -142, -76, -12, -8, -135, -132, -66}), frozenset({-125, -60, -122, -58, -118, -52, -110, -46, -44, -107, -9, -102, -36, -35, -98, -157, -92, -27, -155, -23, -85, -84, -146, -17, -78, -142, -137, -71, -6, -131, -66}), frozenset({-62, -124, -58, -119, -52, -115, -113, -49, -44, -107, -39, -102, -35, -98, -30, -157, -92, -155, -23, -86, -83, -146, -14, -141, -76, -9, -72, -135, -6, -68, -130}), frozenset({-62, -124, -123, -58, -52, -114, -49, -110, -44, -107, -39, -102, -35, -98, -30, -157, -92, -155, -23, -68, -85, -83, -146, -14, -141, -12, -75, -73, -135, -5, -132}), frozenset({-64, -125, -123, -58, -54, -115, -49, -112, -45, -107, -8, -103, -39, -35, -98, -94, -157, -27, -26, -155, -86, -68, -83, -146, -17, -78, -142, -12, -74, -136, -132}), frozenset({-128, -62, -123, -59, -118, -54, -113, -49, -108, -43, -40, -103, -99, -35, -94, -157, -27, -26, -89, -155, -84, -147, -17, -13, -75, -74, -139, -8, -138, -133, -68}), frozenset({-62, -125, -123, -58, -117, -52, -111, -47, -45, -9, -107, -40, -102, -35, -7, -95, -94, -30, -157, -155, -23, -85, -83, -146, -14, -141, -76, -73, -135, -68, -131}), frozenset({-62, -125, -122, -58, -53, -115, -47, -110, -44, -107, -103, -39, -35, -96, -30, -157, -91, -155, -88, -24, -81, -144, -15, -78, -12, -140, -137, -71, -5, -68, -130}), frozenset({-62, -125, -119, -118, -55, -54, -113, -49, -43, -104, -101, -36, -134, -32, -95, -94, -30, -133, -155, -157, -23, -85, -147, -80, -14, -141, -12, -75, -70, -5, -68}), frozenset({-124, -123, -60, -58, -117, -52, -49, -109, -107, -43, -103, -36, -98, -34, -30, -157, -92, -155, -88, -23, -83, -146, -17, -141, -12, -75, -137, -71, -5, -66, -129}), frozenset({-62, -124, -58, -119, -52, -115, -113, -46, -41, -104, -39, -100, -35, -95, -93, -157, -27, -155, -24, -86, -83, -143, -14, -142, -76, -74, -9, -134, -5, -68, -129}), frozenset({-64, -124, -123, -58, -54, -117, -111, -46, -45, -105, -103, -39, -34, -96, -94, -29, -157, -26, -153, -88, -82, -146, -17, -142, -12, -75, -74, -137, -5, -131, -66}), frozenset({-62, -125, -123, -55, -117, -53, -49, -112, -44, -107, -39, -102, -35, -98, -157, -92, -27, -26, -155, -86, -68, -83, -144, -14, -142, -76, -10, -73, -135, -5, -132}), frozenset({-64, -127, -123, -58, -54, -117, -49, -112, -137, -44, -104, -103, -39, -35, -98, -31, -94, -157, -156, -26, -88, -83, -147, -17, -78, -142, -12, -73, -8, -69, -132}), frozenset({-61, -124, -123, -58, -51, -114, -46, -109, -44, -107, -103, -39, -98, -34, -30, -157, -92, -155, -88, -23, -82, -146, -79, -14, -13, -141, -138, -73, -8, -133, -68}), frozenset({-63, -125, -122, -56, -53, -115, -112, -47, -44, -105, -103, -37, -35, -96, -93, -28, -157, -26, -153, -86, -83, -17, -144, -142, -76, -12, -73, -135, -6, -132, -66}), frozenset({-128, -64, -123, -59, -117, -50, -49, -111, -107, -43, -39, -102, -98, -34, -30, -157, -92, -155, -88, -23, -82, -146, -78, -14, -141, -12, -137, -72, -5, -68, -131}), frozenset({-62, -125, -122, -56, -117, -53, -49, -112, -43, -105, -39, -102, -98, -34, -30, -157, -92, -155, -88, -23, -68, -82, -144, -78, -14, -141, -12, -137, -72, -5, -132}), frozenset({-125, -60, -59, -119, -54, -114, -113, -46, -41, -104, -40, -100, -32, -95, -31, -133, -156, -91, -157, -89, -24, -84, -144, -14, -13, -75, -139, -73, -134, -5, -66}), frozenset({-62, -124, -58, -119, -52, -114, -73, -46, -109, -42, -104, -103, -39, -35, -98, -157, -92, -27, -26, -155, -86, -83, -143, -14, -142, -75, -9, -8, -134, -133, -68}), frozenset({-63, -125, -122, -58, -117, -53, -49, -112, -73, -44, -107, -103, -36, -35, -98, -30, -93, -156, -157, -26, -88, -68, -84, -146, -17, -78, -142, -12, -137, -8, -132}), frozenset({-128, -62, -123, -55, -54, -114, -49, -109, -45, -104, -103, -36, -98, -32, -157, -92, -27, -26, -89, -155, -84, -147, -14, -13, -75, -74, -139, -8, -138, -68, -129}), frozenset({-62, -125, -122, -58, -117, -52, -49, -111, -107, -43, -102, -37, -98, -34, -157, -92, -28, -155, -88, -23, -82, -146, -78, -14, -141, -12, -137, -72, -5, -68, -131}), frozenset({-63, -125, -122, -58, -117, -53, -112, -47, -73, -44, -104, -103, -37, -35, -96, -94, -30, -156, -157, -26, -88, -83, -146, -17, -78, -142, -12, -137, -8, -69, -132}), frozenset({-64, -125, -123, -58, -54, -115, -113, -49, -45, -107, -103, -37, -35, -98, -93, -28, -157, -26, -153, -85, -84, -147, -17, -142, -75, -74, -9, -8, -135, -133, -66}), frozenset({-62, -125, -123, -58, -52, -115, -49, -111, -43, -104, -103, -39, -98, -34, -30, -157, -92, -153, -23, -86, -84, -146, -78, -14, -141, -10, -137, -72, -5, -66, -129}), frozenset({-63, -125, -122, -58, -117, -53, -113, -47, -44, -105, -101, -37, -35, -98, -93, -28, -157, -153, -88, -24, -83, -146, -78, -14, -141, -12, -137, -72, -5, -131, -66})]
292	itemsets left after T operation 	: [frozenset({-151, -4, -123})]
262	itemsets left after W operation 	: [frozenset({-125, -12, -4, -3, 158}), frozenset({-63, -122, -58, -53, -115, -112, -48, -44, -107, -103, -37, -35, -98, -158, -93, -28, -153, -88, -24, -151, -19, -82, -144, -14, -77, -142, -73, -135, -5, -132, -66}), frozenset({-61, -122, -58, -116, -52, -110, -46, -107, -42, -102, -37, -35, -98, -30, -158, -92, -155, -88, -23, -21, -149, -83, -146, -78, -14, -142, -137, -71, -5, -68, -131}), frozenset({-61, -122, -58, -115, -51, -49, -109, -105, -41, -103, -39, -33, -96, -158, -92, -27, -153, -23, -86, -21, -149, -146, -81, -15, -142, -75, -137, -71, -5, -67, -129}), frozenset({-62, -122, -58, -117, -52, -111, -47, -43, -106, -39, -102, -98, -33, -30, -158, -92, -155, -88, -24, -150, -21, -82, -146, -78, -14, -141, -137, -71, -5, -131, -66}), frozenset({-63, -59, -122, -53, -115, -112, -47, -45, -107, -103, -37, -99, -35, -158, -92, -28, -26, -152, -86, -149, -83, -19, -17, -144, -142, -76, -73, -8, -135, -132, -65}), frozenset({-62, -122, -58, -117, -52, -111, -47, -45, -107, -72, -39, -102, -35, -98, -30, -93, -158, -155, -88, -24, -150, -21, -82, -146, -17, -78, -141, -137, -8, -68, -131}), frozenset({-61, -120, -55, -53, -115, -110, -46, -44, -72, -105, -102, -37, -35, -96, -158, -92, -27, -154, -23, -85, -149, -83, -18, -17, -144, -76, -140, -8, -135, -131, -65}), frozenset({-62, -122, -57, -117, -52, -48, -111, -43, -106, -103, -37, -98, -34, -158, -29, -92, -155, -88, -24, -150, -21, -82, -145, -14, -77, -141, -137, -72, -5, -131, -66}), frozenset({-61, -122, -58, -52, -115, -49, -112, -44, -107, -39, -101, -35, -98, -158, -92, -27, -153, -23, -86, -149, -83, -18, -144, -14, -76, -140, -73, -8, -135, -132, -65}), frozenset({-64, -120, -55, -117, -53, -111, -47, -105, -41, -103, -37, -99, -34, -30, -158, -92, -155, -26, -86, -149, -83, -147, -18, -78, -14, -142, -72, -135, -5, -131, -65}), frozenset({-60, -122, -58, -117, -50, -112, -48, -44, -107, -39, -101, -35, -98, -158, -29, -90, -153, -87, -23, -68, -148, -83, -19, -144, -14, -77, -139, -73, -8, -135, -132})]
164	itemsets left after T operation 	: [frozenset({-39, -14, -4, -3})]
47	itemsets left after T operation 	: [frozenset({-14, -4, -49})]
7	itemsets left after W operation 	: [frozenset({159, -103, -4, -17}), frozenset({-128, -123, -114, -113, -104, -99, -90, -89, -84, -79, -74, -69, -60, -55, -50, -46, -45, -36, -35, -31, -159, -156, -23, -22, -148, -147, -139, -138, -9, -8, -133, -3}), frozenset({-128, -123, -114, -113, -108, -95, -90, -85, -84, -75, -70, -69, -64, -56, -50, -49, -45, -39, -34, -31, -159, -5, -152, -23, -148, -18, -146, -13, -141, -138, -133, -2}), frozenset({-125, -122, -115, -113, -107, -98, -93, -88, -83, -76, -73, -68, -63, -58, -53, -49, -44, -39, -35, -159, -30, -155, -26, -151, -18, -144, -142, -13, -137, -8, -132, -3}), frozenset({-128, -123, -114, -113, -108, -99, -90, -89, -80, -78, -72, -68, -62, -59, -54, -49, -43, -40, -32, -31, -159, -156, -26, -148, -18, -143, -142, -13, -138, -8, -133, -2})]
3	itemsets left after V operation 	: [frozenset({-128, -123, -114, -113, 14, -108, -100, -99, -90, -89, -80, -75, -74, -69, -64, -59, -54, -45, -40, -35, -31, -156, -26, -148, -18, -17, -143, -13, -139, -138, -8, -2, -129}), frozenset({-14, -4, -49})]
2	itemsets left after V operation 	: [frozenset({123, -21, -3, 157}), frozenset({-151, -4, -123})]
1	itemsets left after T operation 	: [frozenset({-14, -4})]
0	itemsets left after V operation 	: [frozenset({-151, -123, 14}), frozenset({-103, -17, 14, 159}), frozenset({-14, -4}), frozenset({-125, -12, 158, -3, 14})]
Unpacking W operator applied earlier using 158 on frozenset({-3, -125, -4, -12})
# of frequent itemsets	: 0
Time of DCI Closed		: 0.1551375389099121
Initial DL				: 89180.16257633519
Final DL				: 10171.402284946847
Compression (wrt me)	: 0.8859454615117968
Operator Counters		: {'D': 0, 'W': 2, 'V': 3, 'S': 0, 'R': 0, 'T': 4}
Misle Learning Runtime	: 1.0657777786254883

# of frequent itemsets	: 50195
Time of DCI Closed		: 1.9639286994934082
DL of initial theory	: 83060.2373345782
4963	itemsets left after T operation 	: [frozenset({-63, -93, -125, -122, -132, -151, -53, -83, -35, -112, -142, -73, -103, -4, -3})]
2860	itemsets left after T operation 	: [frozenset({-26, -151, -17, -35, -142, -12, -8, -103, -4, -3})]
1272	itemsets left after T operation 	: [frozenset({-125, -151, -4, -17, -142, -12, -132, -3})]
390	itemsets left after T operation 	: [frozenset({-63, -93, -122, -26, -53, -17, -112, -35, -73, -103, -4, -3})]
375	itemsets left after T operation 	: [frozenset({-125, -122, -4, -112, -142, -12, -103, -132, -3})]
2	itemsets left after T operation 	: [frozenset({-93, -125, -122, -151, -53, -83, -3, -142, -103, -4, -35})]
0	itemsets left after V operation 	: [frozenset({-64, -125, -123, -56, -54, 12, -115, -113, -47, -45, -105, -39, -96, -94, -27, -153, -86, -84, -19, -144, -76, -74, -9, -135, -133, -66}), frozenset({-26, -151, -17, -35, -142, -12, -8, -103, -4, -3})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.14768457412719727
Initial DL				: 89180.16257633519
Final DL				: 12316.840616230756
Compression (wrt me)	: 0.8618881121046628
Operator Counters		: {'D': 0, 'W': 0, 'V': 1, 'S': 0, 'R': 0, 'T': 6}
Misle Learning Runtime	: 3.608142137527466

# of frequent itemsets	: 314
Time of DCI Closed		: 0.19372010231018066
DL of initial theory	: 83627.01779431806
313	itemsets left after W operation 	: [frozenset({-3, -151, -21, -4, 157}), frozenset({-127, -63, -122, -58, -117, -52, -49, -112, -107, -43, -72, -39, -102, -98, -34, -30, -157, -92, -155, -88, -23, -83, -146, -78, -14, -141, -12, -137, -8, -131, -66}), frozenset({-62, -125, -58, -121, -52, -115, -49, -110, -107, -43, -39, -102, -98, -34, -134, -30, -157, -92, -153, -88, -24, -81, -144, -15, -78, -141, -12, -72, -6, -68, -129}), frozenset({-62, -125, -123, -58, -117, -52, -49, -111, -73, -44, -107, -39, -102, -98, -34, -30, -157, -92, -155, -23, -85, -83, -146, -14, -141, -76, -12, -137, -5, -68, -131}), frozenset({-125, -61, -122, -58, -117, -51, -49, -112, -73, -44, -105, -39, -101, -35, -98, -157, -91, -27, -153, -88, -23, -83, -144, -78, -14, -12, -140, -137, -5, -132, -66}), frozenset({-62, -124, -122, -58, -117, -52, -111, -47, -44, -107, -39, -102, -98, -34, -157, -92, -27, -155, -88, -23, -82, -143, -78, -14, -141, -12, -137, -72, -5, -68, -131}), frozenset({-62, -125, -122, -58, -117, -52, -111, -47, -107, -43, -103, -37, -98, -34, -29, -92, -157, -153, -88, -23, -146, -81, -78, -14, -141, -12, -137, -72, -5, -131, -66}), frozenset({-62, -125, -122, -58, -52, -115, -49, -111, -44, -107, -39, -102, -35, -96, -30, -157, -92, -155, -23, -86, -83, -146, -14, -141, -76, -12, -137, -72, -5, -68, -130}), frozenset({-63, -125, -123, -55, -53, -115, -49, -112, -73, -44, -105, -103, -37, -35, -96, -94, -30, -157, -155, -26, -88, -68, -83, -146, -17, -142, -76, -12, -137, -6, -132}), frozenset({-62, -125, -122, -56, -116, -52, -49, -111, -107, -43, -72, -103, -39, -34, -97, -30, -93, -157, -155, -88, -24, -82, -145, -78, -14, -141, -12, -136, -5, -68, -131}), frozenset({-62, -125, -58, -120, -117, -52, -49, -111, -9, -43, -105, -39, -101, -98, -34, -31, -157, -91, -155, -88, -23, -83, -146, -78, -14, -141, -137, -72, -5, -68, -131}), frozenset({-62, -124, -123, -56, -54, -117, -49, -111, -43, -104, -103, -36, -99, -32, -31, -94, -157, -156, -26, -89, -146, -80, -78, -14, -141, -12, -137, -72, -5, -68, -131}), frozenset({-62, -125, -123, -58, -117, -52, -49, -112, -73, -9, -44, -107, -40, -102, -35, -98, -157, -92, -27, -26, -155, -85, -83, -146, -14, -141, -76, -137, -6, -68, -131}), frozenset({-62, -125, -123, -58, -54, -117, -49, -111, -43, -104, -103, -40, -98, -32, -30, -157, -92, -155, -23, -85, -146, -80, -78, -14, -141, -12, -137, -72, -5, -131, -66}), frozenset({-63, -125, -122, -58, -52, -115, -49, -112, -9, -44, -107, -39, -101, -35, -96, -30, -157, -92, -153, -23, -86, -68, -82, -145, -78, -14, -142, -137, -71, -6, -132}), frozenset({-62, -125, -123, -58, -117, -52, -49, -112, -137, -107, -43, -40, -102, -32, -95, -30, -157, -155, -90, -88, -23, -82, -146, -78, -14, -141, -9, -72, -5, -68, -131}), frozenset({-63, -125, -122, -58, -53, -115, -112, -47, -44, -72, -105, -103, -39, -35, -98, -93, -29, -157, -26, -153, -86, -83, -17, -144, -142, -76, -12, -8, -135, -132, -66}), frozenset({-61, -124, -123, -55, -117, -51, -49, -111, -73, -44, -104, -102, -36, -35, -98, -30, -157, -92, -155, -88, -23, -82, -146, -78, -14, -141, -12, -137, -5, -68, -131}), frozenset({-125, -60, -122, -58, -118, -52, -110, -46, -44, -107, -9, -102, -36, -35, -98, -157, -92, -27, -155, -23, -85, -84, -146, -17, -78, -142, -137, -71, -6, -131, -66}), frozenset({-62, -124, -58, -119, -52, -115, -113, -49, -44, -107, -39, -102, -35, -98, -30, -157, -92, -155, -23, -86, -83, -146, -14, -141, -76, -9, -72, -135, -6, -68, -130}), frozenset({-128, -64, -123, -56, -118, -54, -49, -112, -45, -108, -101, -37, -35, -96, -94, -157, -27, -26, -5, -152, -85, -84, -17, -143, -78, -142, -74, -9, -134, -133, -65}), frozenset({-62, -124, -123, -58, -52, -114, -49, -110, -44, -107, -39, -102, -35, -98, -30, -157, -92, -155, -23, -68, -85, -83, -146, -14, -141, -12, -75, -73, -135, -5, -132}), frozenset({-64, -125, -123, -58, -54, -115, -49, -112, -45, -107, -8, -103, -39, -35, -98, -94, -157, -27, -26, -155, -86, -68, -83, -146, -17, -78, -142, -12, -74, -136, -132}), frozenset({-128, -62, -123, -59, -118, -54, -113, -49, -108, -43, -40, -103, -99, -35, -94, -157, -27, -26, -89, -155, -84, -147, -17, -13, -75, -74, -139, -8, -138, -133, -68}), frozenset({-128, -63, -58, -120, -118, -52, -49, -109, -44, -107, -72, -40, -101, -35, -98, -30, -157, -92, -155, -26, -88, -146, -81, -79, -14, -12, -139, -137, -8, -68, -129}), frozenset({-62, -125, -123, -58, -117, -52, -111, -47, -45, -9, -107, -40, -102, -35, -7, -95, -94, -30, -157, -155, -23, -85, -83, -146, -14, -141, -76, -73, -135, -68, -131}), frozenset({-62, -125, -119, -118, -55, -54, -113, -49, -43, -104, -101, -36, -134, -32, -95, -94, -30, -133, -155, -157, -23, -85, -147, -80, -14, -141, -12, -75, -70, -5, -68}), frozenset({-124, -123, -60, -58, -117, -52, -49, -109, -107, -43, -103, -36, -98, -34, -30, -157, -92, -155, -88, -23, -83, -146, -17, -141, -12, -75, -137, -71, -5, -66, -129}), frozenset({-62, -124, -58, -119, -52, -115, -113, -46, -41, -104, -39, -100, -35, -95, -93, -157, -27, -155, -24, -86, -83, -143, -14, -142, -76, -74, -9, -134, -5, -68, -129}), frozenset({-64, -124, -123, -58, -54, -117, -111, -46, -45, -105, -103, -39, -34, -96, -94, -29, -157, -26, -153, -88, -82, -146, -17, -142, -12, -75, -74, -137, -5, -131, -66}), frozenset({-62, -125, -123, -55, -117, -53, -49, -112, -44, -107, -39, -102, -35, -98, -157, -92, -27, -26, -155, -86, -68, -83, -144, -14, -142, -76, -10, -73, -135, -5, -132}), frozenset({-64, -127, -123, -58, -54, -117, -49, -112, -137, -44, -104, -103, -39, -35, -98, -31, -94, -157, -156, -26, -88, -83, -147, -17, -78, -142, -12, -73, -8, -69, -132}), frozenset({-61, -124, -123, -58, -51, -114, -46, -109, -44, -107, -103, -39, -98, -34, -30, -157, -92, -155, -88, -23, -82, -146, -79, -14, -13, -141, -138, -73, -8, -133, -68}), frozenset({-63, -125, -122, -56, -53, -115, -112, -47, -44, -105, -103, -37, -35, -96, -93, -28, -157, -26, -153, -86, -83, -17, -144, -142, -76, -12, -73, -135, -6, -132, -66}), frozenset({-128, -64, -123, -59, -117, -50, -49, -111, -107, -43, -39, -102, -98, -34, -30, -157, -92, -155, -88, -23, -82, -146, -78, -14, -141, -12, -137, -72, -5, -68, -131}), frozenset({-62, -125, -122, -56, -117, -53, -49, -112, -43, -105, -39, -102, -98, -34, -30, -157, -92, -155, -88, -23, -68, -82, -144, -78, -14, -141, -12, -137, -72, -5, -132}), frozenset({-125, -60, -59, -119, -54, -114, -113, -46, -41, -104, -40, -100, -32, -95, -31, -133, -156, -91, -157, -89, -24, -84, -144, -14, -13, -75, -139, -73, -134, -5, -66}), frozenset({-62, -124, -58, -119, -52, -114, -73, -46, -109, -42, -104, -103, -39, -35, -98, -157, -92, -27, -26, -155, -86, -83, -143, -14, -142, -75, -9, -8, -134, -133, -68}), frozenset({-63, -125, -122, -58, -117, -53, -49, -112, -73, -44, -107, -103, -36, -35, -98, -30, -93, -156, -157, -26, -88, -68, -84, -146, -17, -78, -142, -12, -137, -8, -132}), frozenset({-63, -125, -122, -55, -117, -53, -49, -112, -44, -107, -103, -39, -35, -98, -31, -93, -157, -155, -26, -86, -68, -83, -146, -17, -142, -76, -12, -73, -136, -5, -132}), frozenset({-62, -125, -122, -58, -117, -52, -49, -111, -107, -43, -102, -37, -98, -34, -157, -92, -28, -155, -88, -23, -82, -146, -78, -14, -141, -12, -137, -72, -5, -68, -131}), frozenset({-63, -125, -122, -58, -117, -53, -112, -47, -73, -44, -104, -103, -37, -35, -96, -94, -30, -156, -157, -26, -88, -83, -146, -17, -78, -142, -12, -137, -8, -69, -132}), frozenset({-64, -125, -123, -58, -54, -115, -113, -49, -45, -107, -103, -37, -35, -98, -93, -28, -157, -26, -153, -85, -84, -147, -17, -142, -75, -74, -9, -8, -135, -133, -66}), frozenset({-62, -125, -123, -58, -52, -115, -49, -111, -43, -104, -103, -39, -98, -34, -30, -157, -92, -153, -23, -86, -84, -146, -78, -14, -141, -10, -137, -72, -5, -66, -129})]
312	itemsets left after T operation 	: [frozenset({-151, -4, -123, -17})]
288	itemsets left after T operation 	: [frozenset({-14, -5, -4, -155})]
198	itemsets left after W operation 	: [frozenset({-3, -125, -4, -35, 158}), frozenset({-63, -122, -58, -53, -115, -112, -48, -44, -107, -103, -37, -98, -158, -93, -28, -153, -88, -24, -151, -19, -82, -144, -14, -77, -142, -12, -73, -135, -5, -132, -66}), frozenset({-62, -58, -121, -117, -53, -49, -111, -44, -107, -103, -39, -98, -30, -93, -158, -155, -88, -24, -21, -149, -82, -146, -17, -78, -141, -12, -137, -72, -5, -68, -131}), frozenset({-63, -122, -58, -117, -53, -112, -47, -44, -107, -103, -37, -98, -158, -93, -27, -153, -88, -24, -151, -83, -19, -17, -144, -142, -77, -12, -72, -135, -6, -132, -66}), frozenset({-63, -122, -58, -53, -115, -49, -110, -42, -105, -103, -37, -98, -158, -93, -28, -155, -88, -24, -151, -83, -19, -144, -78, -14, -13, -140, -137, -8, -71, -133, -66}), frozenset({-61, -122, -58, -115, -51, -112, -47, -45, -107, -101, -36, -96, -30, -158, -91, -155, -23, -86, -21, -84, -149, -146, -14, -141, -76, -12, -73, -8, -135, -133, -68}), frozenset({-62, -123, -58, -52, -114, -49, -112, -108, -42, -39, -100, -96, -31, -158, -93, -156, -26, -151, -86, -82, -18, -143, -14, -13, -142, -75, -138, -71, -6, -133, -68}), frozenset({-63, -59, -122, -53, -115, -112, -47, -45, -107, -103, -37, -99, -158, -92, -28, -26, -152, -86, -149, -83, -19, -17, -144, -142, -76, -12, -73, -8, -135, -132, -65}), frozenset({-62, -122, -58, -117, -52, -111, -47, -45, -107, -72, -39, -102, -98, -30, -93, -158, -155, -88, -24, -150, -21, -82, -146, -17, -78, -141, -12, -137, -8, -68, -131}), frozenset({-61, -120, -55, -53, -115, -110, -46, -44, -72, -105, -102, -37, -96, -158, -92, -27, -154, -23, -85, -149, -83, -18, -17, -144, -76, -12, -140, -8, -135, -131, -65}), frozenset({-63, -122, -58, -53, -115, -113, -49, -73, -44, -107, -103, -39, -98, -30, -93, -158, -155, -26, -88, -151, -68, -83, -18, -17, -144, -142, -13, -76, -137, -8, -132}), frozenset({-61, -122, -58, -52, -115, -49, -112, -44, -107, -39, -101, -98, -158, -92, -27, -153, -23, -86, -149, -83, -18, -144, -14, -76, -12, -140, -73, -8, -135, -132, -65}), frozenset({-60, -122, -58, -117, -50, -112, -48, -44, -107, -39, -101, -98, -158, -29, -90, -153, -87, -23, -68, -148, -83, -19, -144, -14, -77, -12, -139, -73, -8, -135, -132})]
152	itemsets left after T operation 	: [frozenset({-4, -123, -49})]
54	itemsets left after T operation 	: [frozenset({-23, -14, -21, -4})]
3	itemsets left after W operation 	: [frozenset({-4, -3, 159}), frozenset({-128, -122, -118, -113, -107, -102, -99, -91, -86, -80, -76, -73, -68, -60, -58, -52, -49, -43, -39, -34, -159, -156, -27, -26, -22, -149, -147, -17, -142, -10, -8, -135, -133}), frozenset({-128, -123, -114, -113, -104, -103, -99, -90, -89, -84, -79, -74, -69, -60, -55, -50, -46, -45, -36, -35, -31, -159, -156, -23, -22, -148, -147, -17, -139, -138, -9, -8, -133}), frozenset({-125, -122, -115, -109, -105, -103, -96, -92, -86, -81, -75, -71, -67, -61, -58, -51, -49, -41, -39, -33, -159, -27, -153, -23, -21, -149, -146, -15, -142, -12, -137, -5, -129}), frozenset({-125, -122, -117, -111, -107, -102, -98, -92, -88, -82, -78, -72, -66, -62, -56, -52, -47, -42, -39, -34, -159, -30, -155, -23, -22, -151, -146, -14, -13, -141, -137, -8, -131}), frozenset({-151, -159, -21, 157}), frozenset({-159, -125, -35, 158})]
1	itemsets left after T operation 	: [frozenset({-4, -123})]
0	itemsets left after V operation 	: [frozenset({123, -14, -5, -155}), frozenset({-4, -123}), frozenset({123, -23, -14, -21}), frozenset({123, -3, 159})]
Unpacking W operator applied earlier using 159 on frozenset({-4, -3})
Unpacking W operator applied earlier using 158 on frozenset({-3, -125, -4, -35})
Unpacking W operator applied earlier using 157 on frozenset({-151, -21, -4, -3})
# of frequent itemsets	: 0
Time of DCI Closed		: 0.14886832237243652
Initial DL				: 89180.16257633519
Final DL				: 12367.885139452897
Compression (wrt me)	: 0.8613157367944198
Operator Counters		: {'D': 0, 'W': 0, 'V': 1, 'S': 0, 'R': 0, 'T': 5}
Misle Learning Runtime	: 1.12723970413208

# of frequent itemsets	: 56339
Time of DCI Closed		: 2.2641313076019287
DL of initial theory	: 83627.01779431806
4982	itemsets left after T operation 	: [frozenset({-63, -93, -125, -122, -132, -151, -53, -83, -17, -112, -3, -142, -73, -103, -4, -35})]
3884	itemsets left after T operation 	: [frozenset({-26, -151, -17, -35, -142, -12, -8, -103, -4, -3})]
1505	itemsets left after T operation 	: [frozenset({-125, -122, -151, -4, -142, -12, -132, -3})]
241	itemsets left after T operation 	: [frozenset({-63, -93, -122, -53, -83, -17, -3, -103, -4, -35})]
23	itemsets left after T operation 	: [frozenset({-125, -122, -4, -17, -112, -142, -103, -132, -3})]
0	itemsets left after W operation 	: [frozenset({-125, -151, -17, -3, -142, 157, -4, -35}), frozenset({-64, -122, -56, -117, -53, -49, -112, -44, -105, -103, -37, -96, -30, -93, -157, -26, -153, -86, -21, -83, -146, -76, -10, -73, -8, -135, -133, -68}), frozenset({-61, -58, -120, -115, -51, -49, -110, -42, -105, -39, -101, -71, -96, -30, -157, -91, -153, -88, -24, -68, -21, -81, -144, -78, -12, -8, -135, -132}), frozenset({-61, -58, -120, -115, -51, -49, -110, -43, -105, -39, -101, -71, -96, -30, -157, -91, -153, -88, -24, -68, -21, -81, -144, -78, -12, -8, -135, -132}), frozenset({-64, -123, -56, -54, -115, -113, -47, -45, -105, -103, -39, -96, -94, -157, -27, -26, -153, -86, -84, -19, -144, -76, -74, -9, -8, -135, -133, -66}), frozenset({-61, -58, -121, -115, -51, -49, -110, -42, -105, -39, -101, -71, -96, -30, -157, -91, -153, -88, -24, -68, -21, -81, -144, -78, -12, -8, -135, -132})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.143904447555542
Initial DL				: 89180.16257633519
Final DL				: 13250.277408871487
Compression (wrt me)	: 0.8514212463166381
Operator Counters		: {'D': 0, 'W': 1, 'V': 0, 'S': 0, 'R': 0, 'T': 5}
Misle Learning Runtime	: 3.9770395755767822

# of frequent itemsets	: 330
Time of DCI Closed		: 0.1891474723815918
DL of initial theory	: 83343.62757623826
329	itemsets left after T operation 	: [frozenset({-92, -155, -151, -4, -98})]
315	itemsets left after W operation 	: [frozenset({-3, -125, -151, -4, 157}), frozenset({-62, -58, -121, -52, -115, -49, -110, -107, -43, -39, -102, -98, -34, -134, -30, -157, -92, -153, -88, -24, -21, -81, -144, -15, -78, -141, -12, -72, -6, -68, -129}), frozenset({-61, -122, -58, -117, -51, -49, -112, -73, -44, -105, -39, -101, -35, -98, -157, -91, -27, -153, -88, -23, -21, -83, -144, -78, -14, -12, -140, -137, -5, -132, -66}), frozenset({-62, -122, -56, -117, -53, -49, -112, -107, -43, -103, -39, -98, -34, -93, -29, -157, -153, -24, -86, -21, -146, -81, -14, -77, -141, -12, -72, -135, -5, -68, -131}), frozenset({-62, -122, -58, -117, -52, -111, -47, -107, -43, -103, -37, -98, -34, -29, -92, -157, -153, -88, -23, -21, -146, -81, -78, -14, -141, -12, -137, -72, -5, -131, -66}), frozenset({-62, -122, -58, -52, -115, -49, -111, -44, -107, -39, -102, -35, -96, -30, -157, -92, -155, -23, -86, -21, -83, -146, -14, -141, -76, -12, -137, -72, -5, -68, -130}), frozenset({-63, -123, -55, -53, -115, -49, -112, -73, -44, -105, -103, -37, -35, -96, -94, -30, -157, -155, -26, -88, -68, -21, -83, -146, -17, -142, -76, -12, -137, -6, -132}), frozenset({-64, -123, -55, -118, -54, -113, -46, -45, -104, -103, -135, -36, -35, -98, -94, -157, -27, -26, -155, -88, -22, -68, -84, -146, -17, -78, -142, -9, -72, -7, -132}), frozenset({-62, -122, -56, -116, -52, -49, -111, -107, -43, -72, -103, -39, -34, -97, -30, -93, -157, -155, -88, -24, -21, -82, -145, -78, -14, -141, -12, -136, -5, -68, -131}), frozenset({-62, -58, -120, -117, -52, -49, -111, -9, -43, -105, -39, -101, -98, -34, -31, -157, -91, -155, -88, -23, -21, -83, -146, -78, -14, -141, -137, -72, -5, -68, -131}), frozenset({-63, -122, -58, -53, -115, -112, -48, -44, -107, -103, -37, -35, -98, -93, -28, -157, -153, -88, -24, -19, -82, -144, -14, -77, -142, -12, -73, -135, -5, -132, -66}), frozenset({-63, -122, -58, -52, -115, -49, -112, -9, -44, -107, -39, -101, -35, -96, -30, -157, -92, -153, -23, -86, -21, -68, -82, -145, -78, -14, -142, -137, -71, -6, -132}), frozenset({-64, -123, -59, -54, -115, -113, -46, -45, -108, -103, -39, -99, -35, -94, -157, -27, -26, -152, -86, -84, -18, -17, -143, -142, -76, -74, -9, -8, -134, -133, -65}), frozenset({-62, -123, -58, -117, -52, -49, -112, -137, -107, -43, -40, -102, -32, -95, -30, -157, -155, -90, -88, -23, -21, -82, -146, -78, -14, -141, -9, -72, -5, -68, -131}), frozenset({-63, -122, -58, -53, -115, -112, -47, -44, -72, -105, -103, -39, -35, -98, -93, -29, -157, -26, -153, -86, -21, -83, -17, -144, -142, -76, -12, -8, -135, -132, -66}), frozenset({-63, -122, -58, -117, -53, -112, -47, -44, -107, -103, -37, -35, -98, -93, -157, -27, -153, -88, -24, -83, -19, -17, -144, -142, -77, -12, -72, -135, -6, -132, -66}), frozenset({-63, -122, -58, -53, -115, -49, -110, -42, -105, -103, -37, -35, -98, -93, -28, -155, -157, -88, -24, -83, -19, -144, -78, -14, -13, -140, -137, -8, -71, -133, -66}), frozenset({-64, -123, -56, -53, -115, -113, -47, -45, -105, -103, -37, -35, -96, -157, -92, -28, -153, -24, -86, -84, -18, -17, -144, -142, -76, -12, -74, -8, -135, -133, -66}), frozenset({-64, -123, -58, -54, -115, -49, -112, -45, -107, -8, -103, -39, -35, -98, -94, -157, -27, -26, -155, -86, -21, -68, -83, -146, -17, -78, -142, -12, -74, -136, -132}), frozenset({-62, -123, -58, -52, -114, -49, -112, -108, -42, -39, -100, -35, -96, -31, -93, -156, -157, -26, -86, -82, -18, -143, -14, -13, -142, -75, -138, -71, -6, -133, -68}), frozenset({-62, -123, -58, -117, -52, -111, -47, -45, -9, -107, -40, -102, -35, -7, -95, -94, -30, -157, -155, -23, -85, -21, -83, -146, -14, -141, -76, -73, -135, -68, -131}), frozenset({-62, -122, -58, -53, -115, -47, -110, -44, -107, -103, -39, -35, -96, -30, -157, -91, -155, -88, -24, -21, -81, -144, -15, -78, -12, -140, -137, -71, -5, -68, -130}), frozenset({-64, -123, -59, -118, -54, -113, -49, -45, -108, -40, -103, -99, -35, -94, -157, -27, -26, -89, -152, -84, -18, -17, -79, -143, -142, -13, -74, -137, -8, -131, -65}), frozenset({-62, -119, -118, -55, -54, -113, -49, -43, -104, -101, -36, -134, -32, -95, -94, -30, -133, -155, -157, -23, -85, -21, -147, -80, -14, -141, -12, -75, -70, -5, -68}), frozenset({-64, -123, -56, -54, -117, -49, -111, -44, -105, -103, -39, -34, -96, -94, -157, -28, -153, -88, -24, -19, -82, -17, -144, -142, -76, -12, -74, -137, -5, -68, -131}), frozenset({-63, -122, -58, -53, -115, -113, -49, -73, -44, -107, -103, -39, -35, -98, -30, -93, -157, -155, -26, -88, -68, -83, -18, -17, -144, -142, -13, -76, -137, -8, -132}), frozenset({-60, -59, -119, -54, -114, -113, -46, -41, -104, -40, -100, -32, -95, -31, -133, -156, -91, -157, -89, -24, -21, -84, -144, -14, -13, -75, -139, -73, -134, -5, -66}), frozenset({-63, -122, -58, -117, -53, -49, -112, -73, -44, -107, -103, -36, -35, -98, -30, -93, -156, -157, -26, -88, -68, -21, -84, -146, -17, -78, -142, -12, -137, -8, -132}), frozenset({-63, -122, -55, -117, -53, -49, -112, -44, -107, -103, -39, -35, -98, -31, -93, -157, -155, -26, -86, -21, -68, -83, -146, -17, -142, -76, -12, -73, -136, -5, -132}), frozenset({-62, -122, -55, -117, -50, -111, -46, -73, -44, -107, -39, -102, -35, -96, -31, -157, -92, -155, -69, -23, -86, -83, -18, -146, -78, -14, -141, -9, -136, -5, -131}), frozenset({-63, -122, -58, -117, -53, -112, -47, -73, -44, -104, -103, -37, -35, -96, -94, -30, -156, -157, -26, -88, -21, -83, -146, -17, -78, -142, -12, -137, -8, -69, -132}), frozenset({-64, -123, -58, -54, -115, -113, -49, -45, -107, -103, -37, -35, -98, -93, -28, -157, -26, -153, -85, -84, -21, -147, -17, -142, -75, -74, -9, -8, -135, -133, -66}), frozenset({-62, -123, -58, -52, -115, -49, -111, -43, -104, -103, -39, -98, -34, -30, -157, -92, -153, -23, -86, -21, -84, -146, -78, -14, -141, -10, -137, -72, -5, -66, -129}), frozenset({-63, -122, -58, -117, -53, -113, -47, -44, -105, -101, -37, -35, -98, -93, -28, -157, -153, -88, -24, -21, -83, -146, -78, -14, -141, -12, -137, -72, -5, -131, -66})]
298	itemsets left after W operation 	: [frozenset({-123, -151, -4, 158, -17}), frozenset({-64, -124, -58, -54, -117, -111, -46, -45, -105, -103, -39, -34, -96, -94, -29, -158, -26, -153, -88, -21, -131, -82, -146, -142, -12, -75, -74, -137, -5, -3, -66}), frozenset({-64, -124, -55, -54, -114, -113, -46, -45, -104, -103, -36, -35, -96, -94, -158, -27, -26, -152, -85, -84, -18, -143, -142, -12, -75, -74, -8, -134, -133, -3, -65}), frozenset({-128, -64, -55, -118, -54, -113, -46, -45, -104, -103, -40, -8, -99, -35, -94, -158, -27, -26, -89, -152, -22, -84, -147, -79, -142, -74, -9, -138, -133, -2, -65}), frozenset({-62, -124, -55, -118, -50, -113, -46, -45, -104, -103, -40, -32, -95, -94, -133, -158, -27, -26, -152, -22, -85, -147, -80, -79, -139, -74, -9, -134, -5, -68, -2}), frozenset({-128, -64, -55, -54, -114, -113, -49, -45, -104, -103, -40, -35, -95, -94, -31, -156, -133, -26, -158, -22, -85, -84, -147, -79, -142, -74, -9, -8, -134, -69, -2}), frozenset({-63, -124, -59, -54, -114, -49, -109, -108, -129, -41, -39, -100, -34, -134, -95, -94, -158, -28, -155, -26, -22, -85, -147, -82, -142, -75, -9, -70, -5, -3, -65}), frozenset({-128, -64, -55, -54, -114, -113, -49, -45, -108, -40, -103, -99, -35, -31, -94, -158, -26, -152, -22, -85, -84, -147, -79, -142, -74, -9, -8, -134, -133, -2, -65}), frozenset({-128, -64, -55, -54, -114, -113, -49, -45, -108, -40, -103, -99, -35, -31, -94, -133, -156, -158, -26, -85, -84, -147, -18, -142, -13, -75, -74, -138, -8, -69, -2}), frozenset({-128, -62, -58, -52, -114, -113, -46, -108, -41, -39, -100, -99, -34, -30, -158, -155, -90, -89, -23, -84, -147, -18, -79, -142, -13, -138, -8, -70, -68, -2, -129}), frozenset({-64, -127, -59, -118, -54, -113, -49, -45, -104, -103, -8, -36, -99, -35, -31, -94, -133, -156, -158, -26, -89, -22, -84, -147, -78, -140, -9, -72, -135, -69, -3}), frozenset({-128, -62, -55, -118, -54, -137, -46, -109, -45, -104, -103, -39, -99, -34, -31, -158, -155, -90, -88, -23, -82, -18, -146, -78, -142, -9, -72, -5, -68, -131, -2}), frozenset({-64, -124, -59, -54, -114, -113, -49, -45, -9, -104, -103, -36, -99, -35, -94, -158, -27, -26, -89, -152, -84, -18, -146, -79, -141, -74, -137, -8, -133, -2, -65}), frozenset({-124, -60, -58, -52, -114, -113, -49, -43, -104, -103, -36, -99, -35, -158, -91, -27, -152, -23, -22, -85, -84, -146, -141, -75, -74, -9, -8, -134, -69, -2, -129}), frozenset({-128, -64, -56, -118, -54, -49, -112, -45, -108, -101, -37, -35, -96, -94, -158, -27, -26, -5, -152, -85, -84, -21, -143, -78, -142, -74, -9, -134, -133, -3, -65}), frozenset({-128, -64, -57, -54, -117, -111, -46, -45, -104, -103, -36, -99, -35, -94, -158, -156, -27, -26, -86, -22, -84, -147, -79, -142, -74, -9, -8, -135, -133, -3, -65}), frozenset({-64, -124, -59, -54, -114, -113, -46, -45, -104, -103, -40, -8, -99, -35, -94, -158, -156, -27, -26, -89, -22, -84, -143, -142, -75, -74, -9, -138, -133, -2, -65}), frozenset({-128, -62, -59, -118, -54, -113, -49, -108, -43, -40, -103, -99, -35, -94, -158, -27, -26, -89, -155, -21, -84, -147, -13, -75, -74, -139, -8, -138, -133, -68, -3})]
243	itemsets left after W operation 	: [frozenset({-125, -12, -4, -3, 159}), frozenset({-60, -122, -58, -117, -50, -112, -48, -44, -107, -39, -101, -35, -98, -159, -29, -90, -153, -132, -87, -23, -148, -83, -19, -144, -14, -77, -139, -73, -8, -135, -68}), frozenset({-62, -58, -121, -117, -53, -49, -111, -44, -107, -103, -39, -35, -98, -159, -30, -93, -155, -88, -24, -21, -149, -82, -146, -17, -78, -141, -137, -72, -5, -68, -131}), frozenset({-61, -122, -58, -115, -51, -112, -47, -45, -107, -101, -36, -35, -96, -159, -30, -91, -155, -23, -86, -21, -84, -149, -146, -14, -141, -76, -73, -8, -135, -133, -68}), frozenset({-61, -122, -58, -116, -52, -110, -46, -107, -42, -102, -37, -35, -98, -159, -30, -92, -155, -88, -23, -21, -149, -83, -146, -78, -14, -142, -137, -71, -5, -68, -131}), frozenset({-61, -122, -58, -115, -51, -49, -109, -105, -41, -103, -39, -33, -96, -159, -92, -27, -153, -23, -86, -21, -149, -146, -81, -15, -142, -75, -137, -71, -5, -67, -129}), frozenset({-62, -122, -58, -117, -52, -111, -47, -43, -106, -39, -102, -98, -33, -159, -30, -92, -155, -88, -24, -150, -21, -82, -146, -78, -14, -141, -137, -71, -5, -131, -66}), frozenset({-63, -59, -122, -53, -115, -112, -47, -45, -107, -103, -37, -99, -35, -159, -92, -28, -26, -152, -86, -149, -83, -19, -17, -144, -142, -76, -73, -8, -135, -132, -65}), frozenset({-62, -122, -58, -117, -52, -111, -47, -45, -107, -8, -39, -102, -35, -98, -159, -30, -93, -155, -88, -24, -150, -21, -82, -146, -17, -78, -141, -137, -72, -68, -131}), frozenset({-61, -120, -55, -53, -115, -110, -46, -44, -105, -8, -102, -37, -35, -96, -159, -92, -27, -154, -23, -85, -149, -83, -18, -17, -144, -76, -140, -72, -135, -131, -65}), frozenset({-62, -122, -57, -117, -52, -48, -111, -43, -106, -103, -37, -98, -34, -159, -29, -92, -155, -88, -24, -150, -21, -82, -145, -14, -77, -141, -137, -72, -5, -131, -66}), frozenset({-61, -122, -58, -52, -115, -49, -112, -44, -107, -39, -101, -35, -98, -159, -92, -27, -153, -23, -86, -149, -83, -18, -144, -14, -76, -140, -73, -8, -135, -132, -65}), frozenset({-64, -120, -55, -117, -53, -111, -47, -105, -41, -103, -37, -99, -34, -159, -30, -92, -155, -26, -86, -149, -83, -147, -18, -78, -14, -142, -72, -135, -5, -131, -65})]
82	itemsets left after T operation 	: [frozenset({-14, -5, -4})]
26	itemsets left after T operation 	: [frozenset({-23, -4, -123})]
5	itemsets left after V operation 	: [frozenset({-151, 23, 158, -17}), frozenset({-124, -114, -113, 23, -104, -100, -95, -94, -89, -84, -79, -74, -65, -64, -59, -54, -49, -45, -36, -35, -27, -26, -152, -151, -21, -146, -14, -13, -141, -138, -8, -133, -2}), frozenset({-128, -114, -113, -108, 23, -100, -99, -90, -89, -80, -75, -74, -69, -64, -59, -54, -49, -45, -40, -35, -31, -156, -26, -148, -18, -17, -143, -13, -139, -138, -8, -2, -129}), frozenset({-23, -4, -123})]
Unpacking W operator applied earlier using 159 on frozenset({-3, -125, -4, -12})
Unpacking W operator applied earlier using 158 on frozenset({-151, -4, -123, -17})
Unpacking W operator applied earlier using 157 on frozenset({-151, -125, -4, -3})
# of frequent itemsets	: 8
Time of DCI Closed		: 0.14973855018615723
Initial DL				: 89180.16257633519
Final DL				: 13777.543539825647
Compression (wrt me)	: 0.8455088761692653
Operator Counters		: {'D': 0, 'W': 0, 'V': 1, 'S': 0, 'R': 0, 'T': 3}
Misle Learning Runtime	: 1.868274450302124

# of frequent itemsets	: 56604
Time of DCI Closed		: 2.075200319290161
DL of initial theory	: 83343.62757623826
4981	itemsets left after T operation 	: [frozenset({-63, -93, -125, -122, -132, -151, -53, -83, -17, -112, -3, -142, -73, -103, -4, -35})]
3934	itemsets left after T operation 	: [frozenset({-26, -151, -17, -35, -142, -12, -8, -103, -4, -3})]
1445	itemsets left after T operation 	: [frozenset({-125, -122, -4, -112, -142, -12, -103, -132, -3})]
1441	itemsets left after T operation 	: [frozenset({-125, -151, -4, -17, -142, -12, -132, -3})]
3	itemsets left after T operation 	: [frozenset({-93, -122, -53, -83, -17, -112, -3, -103, -4, -35})]
0	itemsets left after V operation 	: [frozenset({-26, -151, -17, -35, -142, -12, -8, -103, -4, -3}), frozenset({-64, -125, -123, -56, -54, 12, -115, -113, -47, -45, -105, -39, -96, -94, -27, -153, -86, -84, -19, -144, -76, -74, -9, -135, -133, -66})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.14650583267211914
Initial DL				: 89180.16257633519
Final DL				: 10220.795573133308
Compression (wrt me)	: 0.885391601922853
Operator Counters		: {'D': 0, 'W': 0, 'V': 1, 'S': 0, 'R': 0, 'T': 5}
Misle Learning Runtime	: 3.5184109210968018

# of frequent itemsets	: 373
Time of DCI Closed		: 0.19374871253967285
DL of initial theory	: 84193.79816039898
372	itemsets left after T operation 	: [frozenset({-92, -155, -151, -4, -98})]
355	itemsets left after W operation 	: [frozenset({-3, -125, -151, -4, 157}), frozenset({-62, -58, -121, -52, -115, -49, -110, -107, -43, -39, -102, -98, -34, -134, -30, -157, -92, -153, -88, -24, -21, -81, -144, -15, -78, -141, -12, -72, -6, -68, -129}), frozenset({-61, -122, -58, -117, -51, -49, -112, -73, -44, -105, -39, -101, -35, -98, -157, -91, -27, -153, -88, -23, -21, -83, -144, -78, -14, -12, -140, -137, -5, -132, -66}), frozenset({-62, -122, -56, -117, -53, -49, -112, -107, -43, -103, -39, -98, -34, -93, -29, -157, -153, -24, -86, -21, -146, -81, -14, -77, -141, -12, -72, -135, -5, -68, -131}), frozenset({-62, -122, -58, -117, -52, -111, -47, -107, -43, -103, -37, -98, -34, -29, -92, -157, -153, -88, -23, -21, -146, -81, -78, -14, -141, -12, -137, -72, -5, -131, -66}), frozenset({-62, -122, -58, -52, -115, -49, -111, -44, -107, -39, -102, -35, -96, -30, -157, -92, -155, -23, -86, -21, -83, -146, -14, -141, -76, -12, -137, -72, -5, -68, -130}), frozenset({-63, -123, -55, -53, -115, -49, -112, -73, -44, -105, -103, -37, -35, -96, -94, -30, -157, -155, -26, -88, -68, -21, -83, -146, -17, -142, -76, -12, -137, -6, -132}), frozenset({-64, -123, -55, -118, -54, -113, -46, -45, -104, -103, -135, -36, -35, -98, -94, -157, -27, -26, -155, -88, -22, -68, -84, -146, -17, -78, -142, -9, -72, -7, -132}), frozenset({-62, -122, -56, -116, -52, -49, -111, -107, -43, -72, -103, -39, -34, -97, -30, -93, -157, -155, -88, -24, -21, -82, -145, -78, -14, -141, -12, -136, -5, -68, -131}), frozenset({-62, -58, -120, -117, -52, -49, -111, -9, -43, -105, -39, -101, -98, -34, -31, -157, -91, -155, -88, -23, -21, -83, -146, -78, -14, -141, -137, -72, -5, -68, -131}), frozenset({-63, -122, -58, -52, -115, -49, -112, -9, -44, -107, -39, -101, -35, -96, -30, -157, -92, -153, -23, -86, -21, -68, -82, -145, -78, -14, -142, -137, -71, -6, -132}), frozenset({-64, -123, -59, -54, -115, -113, -46, -45, -108, -103, -39, -99, -35, -94, -157, -27, -26, -152, -86, -84, -18, -17, -143, -142, -76, -74, -9, -8, -134, -133, -65}), frozenset({-63, -122, -58, -53, -115, -112, -47, -44, -72, -105, -103, -39, -35, -98, -93, -29, -157, -26, -153, -86, -21, -83, -17, -144, -142, -76, -12, -8, -135, -132, -66}), frozenset({-63, -122, -58, -117, -53, -112, -47, -44, -107, -103, -37, -35, -98, -93, -157, -27, -153, -88, -24, -83, -19, -17, -144, -142, -77, -12, -72, -135, -6, -132, -66}), frozenset({-63, -122, -58, -53, -115, -49, -110, -42, -105, -103, -37, -35, -98, -93, -28, -155, -157, -88, -24, -83, -19, -144, -78, -14, -13, -140, -137, -8, -71, -133, -66}), frozenset({-64, -123, -56, -53, -115, -113, -47, -45, -105, -103, -37, -35, -96, -157, -92, -28, -153, -24, -86, -84, -18, -17, -144, -142, -76, -12, -74, -8, -135, -133, -66}), frozenset({-64, -123, -58, -54, -115, -49, -112, -45, -107, -8, -103, -39, -35, -98, -94, -157, -27, -26, -155, -86, -21, -68, -83, -146, -17, -78, -142, -12, -74, -136, -132}), frozenset({-62, -123, -58, -52, -114, -49, -112, -108, -42, -39, -100, -35, -96, -31, -93, -156, -157, -26, -86, -82, -18, -143, -14, -13, -142, -75, -138, -71, -6, -133, -68}), frozenset({-62, -123, -58, -117, -52, -111, -47, -45, -9, -107, -40, -102, -35, -7, -95, -94, -30, -157, -155, -23, -85, -21, -83, -146, -14, -141, -76, -73, -135, -68, -131}), frozenset({-62, -122, -58, -53, -115, -47, -110, -44, -107, -103, -39, -35, -96, -30, -157, -91, -155, -88, -24, -21, -81, -144, -15, -78, -12, -140, -137, -71, -5, -68, -130}), frozenset({-64, -123, -59, -118, -54, -113, -49, -45, -108, -40, -103, -99, -35, -94, -157, -27, -26, -89, -152, -84, -18, -17, -79, -143, -142, -13, -74, -137, -8, -131, -65}), frozenset({-62, -119, -118, -55, -54, -113, -49, -43, -104, -101, -36, -134, -32, -95, -94, -30, -133, -155, -157, -23, -85, -21, -147, -80, -14, -141, -12, -75, -70, -5, -68}), frozenset({-63, -122, -56, -53, -115, -112, -47, -44, -105, -103, -37, -35, -96, -93, -28, -157, -26, -153, -86, -21, -83, -17, -144, -142, -76, -12, -73, -135, -6, -132, -66}), frozenset({-64, -123, -56, -54, -117, -49, -111, -44, -105, -103, -39, -34, -96, -94, -157, -28, -153, -88, -24, -19, -82, -17, -144, -142, -76, -12, -74, -137, -5, -68, -131}), frozenset({-63, -122, -58, -53, -115, -113, -49, -73, -44, -107, -103, -39, -35, -98, -30, -93, -157, -155, -26, -88, -68, -83, -18, -17, -144, -142, -13, -76, -137, -8, -132}), frozenset({-60, -59, -119, -54, -114, -113, -46, -41, -104, -40, -100, -32, -95, -31, -133, -156, -91, -157, -89, -24, -21, -84, -144, -14, -13, -75, -139, -73, -134, -5, -66}), frozenset({-63, -122, -58, -117, -53, -49, -112, -73, -44, -107, -103, -36, -35, -98, -30, -93, -156, -157, -26, -88, -68, -21, -84, -146, -17, -78, -142, -12, -137, -8, -132}), frozenset({-63, -122, -55, -117, -53, -49, -112, -44, -107, -103, -39, -35, -98, -31, -93, -157, -155, -26, -86, -21, -68, -83, -146, -17, -142, -76, -12, -73, -136, -5, -132}), frozenset({-62, -122, -55, -117, -50, -111, -46, -73, -44, -107, -39, -102, -35, -96, -31, -157, -92, -155, -69, -23, -86, -83, -18, -146, -78, -14, -141, -9, -136, -5, -131}), frozenset({-63, -122, -58, -117, -53, -112, -47, -73, -44, -104, -103, -37, -35, -96, -94, -30, -156, -157, -26, -88, -21, -83, -146, -17, -78, -142, -12, -137, -8, -69, -132}), frozenset({-64, -123, -58, -54, -115, -113, -49, -45, -107, -103, -37, -35, -98, -93, -28, -157, -26, -153, -85, -84, -21, -147, -17, -142, -75, -74, -9, -8, -135, -133, -66}), frozenset({-62, -123, -58, -52, -115, -49, -111, -43, -104, -103, -39, -98, -34, -30, -157, -92, -153, -23, -86, -21, -84, -146, -78, -14, -141, -10, -137, -72, -5, -66, -129}), frozenset({-63, -122, -58, -117, -53, -113, -47, -44, -105, -101, -37, -35, -98, -93, -28, -157, -153, -88, -24, -21, -83, -146, -78, -14, -141, -12, -137, -72, -5, -131, -66})]
323	itemsets left after T operation 	: [frozenset({-151, -54, -4, -123})]
275	itemsets left after T operation 	: [frozenset({-14, -5, -4, -3})]
125	itemsets left after T operation 	: [frozenset({-62, -68, -4})]
76	itemsets left after T operation 	: [frozenset({-23, -4, -123})]
15	itemsets left after W operation 	: [frozenset({-125, -12, -4, -3, 158}), frozenset({-61, -122, -58, -115, -51, -112, -47, -45, -107, -101, -36, -35, -96, -30, -158, -91, -155, -23, -86, -21, -84, -149, -146, -14, -141, -76, -73, -8, -135, -133, -68}), frozenset({-61, -122, -58, -115, -51, -49, -109, -105, -41, -103, -39, -33, -96, -158, -92, -27, -153, -23, -86, -21, -149, -146, -81, -15, -142, -75, -137, -71, -5, -67, -129}), frozenset({-63, -59, -122, -53, -115, -112, -47, -45, -107, -103, -37, -99, -35, -158, -92, -28, -26, -152, -86, -149, -83, -19, -17, -144, -142, -76, -73, -8, -135, -132, -65})]
5	itemsets left after T operation 	: [frozenset({-54, -4, -123})]
4	itemsets left after V operation 	: [frozenset({-23, -4, -123}), frozenset({-54, 23})]
1	itemsets left after V operation 	: [frozenset({-128, -122, -118, -113, -107, -102, -99, -91, -86, -80, -76, -73, 62, -60, -58, -52, -49, -43, -39, -34, -156, -27, -26, -22, -149, -147, -17, -142, -10, -8, -135, -133, -3}), frozenset({-62, -68, -4})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.1469721794128418
Initial DL				: 89180.16257633519
Final DL				: 11044.776129724389
Compression (wrt me)	: 0.8761520969389305
Operator Counters		: {'D': 0, 'W': 2, 'V': 2, 'S': 0, 'R': 0, 'T': 6}
Misle Learning Runtime	: 1.1364660263061523

# of frequent itemsets	: 52440
Time of DCI Closed		: 2.057873487472534
DL of initial theory	: 84193.79816039898
4982	itemsets left after T operation 	: [frozenset({-63, -93, -125, -122, -132, -151, -53, -83, -17, -112, -3, -142, -73, -103, -4, -35})]
3769	itemsets left after T operation 	: [frozenset({-26, -151, -17, -35, -142, -12, -8, -103, -4, -3})]
1300	itemsets left after T operation 	: [frozenset({-125, -122, -4, -112, -142, -12, -103, -132, -3})]
1294	itemsets left after T operation 	: [frozenset({-125, -151, -4, -17, -142, -12, -132, -3})]
11	itemsets left after T operation 	: [frozenset({-63, -93, -122, -53, -83, -17, -3, -103, -4, -35})]
1	itemsets left after V operation 	: [frozenset({-64, -125, -123, -56, -54, 12, -115, -113, -47, -45, -105, -39, -96, -94, -27, -153, -86, -84, -19, -144, -76, -74, -9, -135, -133, -66}), frozenset({-64, -125, -122, -55, -53, 12, -115, -112, -47, -45, -105, -37, -95, -93, -27, -153, -86, -83, -18, -143, -75, -74, -9, -134, -132, -66}), frozenset({-26, -151, -17, -35, -142, -12, -8, -103, -4, -3})]
0	itemsets left after V operation 	: [frozenset({-61, 132, -58, -120, -115, -51, -49, -110, -42, -105, -40, -135, -101, -34, -96, -30, -91, -153, -88, -24, -21, -80, -144, -78, -8, -71, -68, -131}), frozenset({-125, -151, -4, -17, -142, -12, -132, -3})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.14482498168945312
Initial DL				: 89180.16257633519
Final DL				: 12374.342049979185
Compression (wrt me)	: 0.8612433338032193
Operator Counters		: {'D': 0, 'W': 0, 'V': 2, 'S': 0, 'R': 0, 'T': 5}
Misle Learning Runtime	: 3.736401319503784

# of frequent itemsets	: 370
Time of DCI Closed		: 0.19600701332092285
DL of initial theory	: 83343.62757623826
369	itemsets left after T operation 	: [frozenset({-92, -155, -151, -4, -98})]
357	itemsets left after W operation 	: [frozenset({-3, -125, -151, -4, 157}), frozenset({-62, -58, -121, -52, -115, -49, -110, -107, -43, -39, -102, -98, -34, -134, -30, -157, -92, -153, -88, -24, -21, -81, -144, -15, -78, -141, -12, -72, -6, -68, -129}), frozenset({-61, -122, -58, -117, -51, -49, -112, -73, -44, -105, -39, -101, -35, -98, -157, -91, -27, -153, -88, -23, -21, -83, -144, -78, -14, -12, -140, -137, -5, -132, -66}), frozenset({-62, -122, -56, -117, -53, -49, -112, -107, -43, -103, -39, -98, -34, -93, -29, -157, -153, -24, -86, -21, -146, -81, -14, -77, -141, -12, -72, -135, -5, -68, -131}), frozenset({-62, -122, -58, -117, -52, -111, -47, -107, -43, -103, -37, -98, -34, -29, -92, -157, -153, -88, -23, -21, -146, -81, -78, -14, -141, -12, -137, -72, -5, -131, -66}), frozenset({-62, -122, -58, -52, -115, -49, -111, -44, -107, -39, -102, -35, -96, -30, -157, -92, -155, -23, -86, -21, -83, -146, -14, -141, -76, -12, -137, -72, -5, -68, -130}), frozenset({-63, -123, -55, -53, -115, -49, -112, -73, -44, -105, -103, -37, -35, -96, -94, -30, -157, -155, -26, -88, -68, -21, -83, -146, -17, -142, -76, -12, -137, -6, -132}), frozenset({-64, -123, -55, -118, -54, -113, -46, -45, -104, -103, -135, -36, -35, -98, -94, -157, -27, -26, -155, -88, -22, -68, -84, -146, -17, -78, -142, -9, -72, -7, -132}), frozenset({-62, -122, -56, -116, -52, -49, -111, -107, -43, -72, -103, -39, -34, -97, -30, -93, -157, -155, -88, -24, -21, -82, -145, -78, -14, -141, -12, -136, -5, -68, -131}), frozenset({-62, -58, -120, -117, -52, -49, -111, -9, -43, -105, -39, -101, -98, -34, -31, -157, -91, -155, -88, -23, -21, -83, -146, -78, -14, -141, -137, -72, -5, -68, -131}), frozenset({-63, -122, -58, -53, -115, -112, -48, -44, -107, -103, -37, -35, -98, -93, -28, -157, -153, -88, -24, -19, -82, -144, -14, -77, -142, -12, -73, -135, -5, -132, -66}), frozenset({-63, -122, -58, -52, -115, -49, -112, -9, -44, -107, -39, -101, -35, -96, -30, -157, -92, -153, -23, -86, -21, -68, -82, -145, -78, -14, -142, -137, -71, -6, -132}), frozenset({-64, -123, -59, -54, -115, -113, -46, -45, -108, -103, -39, -99, -35, -94, -157, -27, -26, -152, -86, -84, -18, -17, -143, -142, -76, -74, -9, -8, -134, -133, -65}), frozenset({-62, -123, -58, -117, -52, -49, -112, -137, -107, -43, -40, -102, -32, -95, -30, -157, -155, -90, -88, -23, -21, -82, -146, -78, -14, -141, -9, -72, -5, -68, -131}), frozenset({-63, -122, -58, -53, -115, -112, -47, -44, -72, -105, -103, -39, -35, -98, -93, -29, -157, -26, -153, -86, -21, -83, -17, -144, -142, -76, -12, -8, -135, -132, -66}), frozenset({-63, -122, -58, -117, -53, -112, -47, -44, -107, -103, -37, -35, -98, -93, -157, -27, -153, -88, -24, -83, -19, -17, -144, -142, -77, -12, -72, -135, -6, -132, -66}), frozenset({-63, -122, -58, -53, -115, -49, -110, -42, -105, -103, -37, -35, -98, -93, -28, -155, -157, -88, -24, -83, -19, -144, -78, -14, -13, -140, -137, -8, -71, -133, -66}), frozenset({-64, -123, -56, -53, -115, -113, -47, -45, -105, -103, -37, -35, -96, -157, -92, -28, -153, -24, -86, -84, -18, -17, -144, -142, -76, -12, -74, -8, -135, -133, -66}), frozenset({-62, -123, -58, -52, -114, -49, -112, -108, -42, -39, -100, -35, -96, -31, -93, -156, -157, -26, -86, -82, -18, -143, -14, -13, -142, -75, -138, -71, -6, -133, -68}), frozenset({-62, -123, -58, -117, -52, -111, -47, -45, -9, -107, -40, -102, -35, -7, -95, -94, -30, -157, -155, -23, -85, -21, -83, -146, -14, -141, -76, -73, -135, -68, -131}), frozenset({-62, -122, -58, -53, -115, -47, -110, -44, -107, -103, -39, -35, -96, -30, -157, -91, -155, -88, -24, -21, -81, -144, -15, -78, -12, -140, -137, -71, -5, -68, -130}), frozenset({-64, -123, -59, -118, -54, -113, -49, -45, -108, -40, -103, -99, -35, -94, -157, -27, -26, -89, -152, -84, -18, -17, -79, -143, -142, -13, -74, -137, -8, -131, -65}), frozenset({-62, -119, -118, -55, -54, -113, -49, -43, -104, -101, -36, -134, -32, -95, -94, -30, -133, -155, -157, -23, -85, -21, -147, -80, -14, -141, -12, -75, -70, -5, -68}), frozenset({-63, -122, -56, -53, -115, -112, -47, -44, -105, -103, -37, -35, -96, -93, -28, -157, -26, -153, -86, -21, -83, -17, -144, -142, -76, -12, -73, -135, -6, -132, -66}), frozenset({-63, -122, -58, -53, -115, -113, -49, -73, -44, -107, -103, -39, -35, -98, -30, -93, -157, -155, -26, -88, -68, -83, -18, -17, -144, -142, -13, -76, -137, -8, -132}), frozenset({-60, -59, -119, -54, -114, -113, -46, -41, -104, -40, -100, -32, -95, -31, -133, -156, -91, -157, -89, -24, -21, -84, -144, -14, -13, -75, -139, -73, -134, -5, -66}), frozenset({-63, -122, -58, -117, -53, -49, -112, -73, -44, -107, -103, -36, -35, -98, -30, -93, -156, -157, -26, -88, -68, -21, -84, -146, -17, -78, -142, -12, -137, -8, -132}), frozenset({-63, -122, -55, -117, -53, -49, -112, -44, -107, -103, -39, -35, -98, -31, -93, -157, -155, -26, -86, -21, -68, -83, -146, -17, -142, -76, -12, -73, -136, -5, -132}), frozenset({-63, -122, -58, -117, -53, -112, -47, -73, -44, -104, -103, -37, -35, -96, -94, -30, -156, -157, -26, -88, -21, -83, -146, -17, -78, -142, -12, -137, -8, -69, -132}), frozenset({-64, -123, -58, -54, -115, -113, -49, -45, -107, -103, -37, -35, -98, -93, -28, -157, -26, -153, -85, -84, -21, -147, -17, -142, -75, -74, -9, -8, -135, -133, -66}), frozenset({-62, -123, -58, -52, -115, -49, -111, -43, -104, -103, -39, -98, -34, -30, -157, -92, -153, -23, -86, -21, -84, -146, -78, -14, -141, -10, -137, -72, -5, -66, -129}), frozenset({-63, -122, -58, -117, -53, -113, -47, -44, -105, -101, -37, -35, -98, -93, -28, -157, -153, -88, -24, -21, -83, -146, -78, -14, -141, -12, -137, -72, -5, -131, -66})]
330	itemsets left after W operation 	: [frozenset({-123, -151, -103, -4, 158}), frozenset({-64, -124, -58, -54, -117, -111, -46, -45, -105, -39, -34, -96, -94, -29, -158, -26, -153, -88, -21, -131, -82, -146, -17, -142, -12, -75, -74, -137, -5, -3, -66}), frozenset({-128, -62, -59, -118, -51, -46, -109, -45, -107, -40, -99, -35, -70, -30, -158, -156, -90, -89, -23, -21, -84, -147, -79, -14, -142, -9, -8, -134, -133, -68, -2}), frozenset({-64, -124, -55, -54, -114, -113, -46, -45, -104, -36, -35, -96, -94, -158, -27, -26, -152, -85, -84, -18, -17, -143, -142, -12, -75, -74, -8, -134, -133, -3, -65}), frozenset({-128, -62, -55, -54, -117, -49, -111, -108, -43, -72, -40, -99, -35, -158, -27, -90, -26, -88, -155, -82, -18, -17, -143, -78, -13, -139, -137, -8, -68, -131, -2}), frozenset({-62, -124, -56, -54, -117, -49, -111, -43, -104, -36, -99, -32, -31, -94, -158, -156, -26, -89, -21, -146, -80, -3, -78, -14, -141, -12, -137, -72, -5, -68, -131}), frozenset({-64, -127, -58, -54, -117, -49, -112, -137, -44, -104, -39, -35, -98, -31, -94, -158, -156, -26, -88, -21, -83, -147, -17, -78, -142, -12, -73, -8, -69, -132, -3}), frozenset({-62, -124, -55, -118, -50, -113, -46, -45, -104, -40, -32, -95, -94, -133, -158, -27, -26, -152, -22, -85, -147, -17, -80, -79, -139, -74, -9, -134, -5, -68, -2}), frozenset({-128, -64, -55, -54, -114, -113, -49, -45, -104, -40, -35, -95, -94, -31, -156, -133, -26, -158, -22, -85, -84, -147, -17, -79, -142, -74, -9, -8, -134, -69, -2}), frozenset({-128, -64, -55, -118, -54, -113, -46, -45, -104, -40, -8, -99, -35, -94, -158, -27, -26, -89, -152, -22, -84, -147, -17, -79, -142, -74, -9, -138, -133, -2, -65}), frozenset({-128, -64, -55, -54, -114, -113, -49, -45, -108, -40, -99, -35, -31, -94, -133, -156, -158, -26, -85, -84, -147, -18, -17, -142, -13, -75, -74, -138, -8, -69, -2}), frozenset({-64, -127, -59, -118, -54, -113, -49, -45, -104, -8, -36, -99, -35, -31, -94, -133, -156, -158, -26, -89, -22, -84, -147, -17, -78, -140, -9, -72, -135, -69, -3}), frozenset({-128, -62, -55, -118, -54, -137, -46, -109, -45, -104, -39, -99, -34, -31, -158, -155, -90, -88, -23, -82, -18, -17, -146, -78, -142, -9, -72, -5, -68, -131, -2}), frozenset({-64, -124, -59, -54, -114, -113, -49, -45, -9, -104, -36, -99, -35, -94, -158, -27, -26, -89, -152, -84, -18, -17, -146, -79, -141, -74, -137, -8, -133, -2, -65}), frozenset({-124, -60, -58, -52, -114, -113, -49, -43, -104, -36, -99, -35, -158, -91, -27, -152, -23, -22, -85, -84, -146, -17, -141, -75, -74, -9, -8, -134, -69, -2, -129}), frozenset({-64, -125, -59, -118, -54, -113, -49, -43, -104, -39, -99, -34, -94, -30, -158, -155, -69, -5, -88, -23, -21, -82, -143, -14, -142, -12, -75, -74, -138, -133, -2}), frozenset({-64, -124, -59, -54, -114, -113, -46, -45, -104, -40, -8, -99, -35, -94, -158, -156, -27, -26, -89, -22, -84, -17, -143, -142, -75, -74, -9, -138, -133, -2, -65}), frozenset({-128, -62, -59, -118, -54, -113, -49, -108, -43, -40, -99, -35, -94, -158, -27, -26, -89, -155, -21, -84, -147, -17, -13, -75, -74, -139, -8, -138, -133, -68, -3})]
261	itemsets left after W operation 	: [frozenset({-125, -12, -4, -3, 159}), frozenset({-64, -120, -55, -117, -53, -111, -47, -105, -41, -103, -37, -99, -34, -159, -30, -92, -155, -26, -86, -149, -83, -147, -18, -78, -14, -142, -72, -135, -5, -131, -65}), frozenset({-60, -122, -58, -117, -50, -112, -48, -44, -107, -39, -101, -35, -98, -159, -29, -90, -153, -132, -87, -23, -148, -83, -19, -144, -14, -77, -139, -73, -8, -135, -68}), frozenset({-62, -58, -121, -117, -53, -49, -111, -44, -107, -103, -39, -35, -98, -159, -30, -93, -155, -88, -24, -21, -149, -82, -146, -17, -78, -141, -137, -72, -5, -68, -131}), frozenset({-61, -122, -58, -115, -51, -112, -47, -45, -107, -101, -36, -35, -96, -159, -30, -91, -155, -23, -86, -21, -84, -149, -146, -14, -141, -76, -73, -8, -135, -133, -68}), frozenset({-61, -122, -58, -116, -52, -110, -46, -107, -42, -102, -37, -35, -98, -159, -30, -92, -155, -88, -23, -21, -149, -83, -146, -78, -14, -142, -137, -71, -5, -68, -131}), frozenset({-61, -122, -58, -115, -51, -49, -109, -105, -41, -103, -39, -33, -96, -159, -92, -27, -153, -23, -86, -21, -149, -146, -81, -15, -142, -75, -137, -71, -5, -67, -129}), frozenset({-62, -122, -58, -117, -52, -111, -47, -43, -106, -39, -102, -98, -33, -159, -30, -92, -155, -88, -24, -150, -21, -82, -146, -78, -14, -141, -137, -71, -5, -131, -66}), frozenset({-63, -59, -122, -53, -115, -112, -47, -45, -107, -103, -37, -99, -35, -159, -92, -28, -26, -152, -86, -149, -83, -19, -17, -144, -142, -76, -73, -8, -135, -132, -65}), frozenset({-62, -122, -58, -117, -52, -111, -47, -45, -107, -8, -39, -102, -35, -98, -159, -30, -93, -155, -88, -24, -150, -21, -82, -146, -17, -78, -141, -137, -72, -68, -131}), frozenset({-61, -120, -55, -53, -115, -110, -46, -44, -105, -8, -102, -37, -35, -96, -159, -92, -27, -154, -23, -85, -149, -83, -18, -17, -144, -76, -140, -72, -135, -131, -65}), frozenset({-62, -122, -57, -117, -52, -48, -111, -43, -106, -103, -37, -98, -34, -159, -29, -92, -155, -88, -24, -150, -21, -82, -145, -14, -77, -141, -137, -72, -5, -131, -66}), frozenset({-61, -122, -58, -52, -115, -49, -112, -44, -107, -39, -101, -35, -98, -159, -92, -27, -153, -23, -86, -149, -83, -18, -144, -14, -76, -140, -73, -8, -135, -132, -65})]
173	itemsets left after T operation 	: [frozenset({-4, -123, -49})]
48	itemsets left after T operation 	: [frozenset({-14, -5, -4, -3})]
24	itemsets left after T operation 	: [frozenset({-14, -5, -4})]
3	itemsets left after V operation 	: [frozenset({-128, -114, -113, -108, -100, -99, -90, -89, -84, -79, 49, -70, -68, -62, -58, -52, -46, -41, -39, -34, -30, -155, -23, -151, -147, -18, -17, -142, -13, -138, -8, -2, -129}), frozenset({-151, -103, 158, 49}), frozenset({-4, -123, -49})]
2	itemsets left after V operation 	: [frozenset({-128, -122, -118, -113, -107, -102, -99, -91, -86, -80, -76, -73, -68, -60, -58, -52, -43, -39, -34, -156, -27, -26, -22, -149, 123, -147, -17, -142, -10, -8, -135, -133, -3}), frozenset({-4, -123, -49})]
Unpacking W operator applied earlier using 159 on frozenset({-3, -125, -4, -12})
Unpacking W operator applied earlier using 158 on frozenset({-103, -151, -4, -123})
# of frequent itemsets	: 0
Time of DCI Closed		: 0.1439652442932129
Initial DL				: 89180.16257633519
Final DL				: 12902.154491924835
Compression (wrt me)	: 0.855324837730801
Operator Counters		: {'D': 0, 'W': 1, 'V': 2, 'S': 0, 'R': 0, 'T': 4}
Misle Learning Runtime	: 1.7860949039459229

# of frequent itemsets	: 40526
Time of DCI Closed		: 1.5964200496673584
DL of initial theory	: 83343.62757623826
4977	itemsets left after T operation 	: [frozenset({-63, -93, -125, -122, -132, -151, -53, -83, -35, -112, -142, -73, -103, -4, -3})]
3069	itemsets left after T operation 	: [frozenset({-26, -151, -17, -35, -142, -12, -8, -103, -4, -3})]
1481	itemsets left after T operation 	: [frozenset({-125, -122, -4, -17, -142, -12, -132, -3})]
80	itemsets left after T operation 	: [frozenset({-93, -125, -122, -53, -17, -35, -103, -4, -3})]
41	itemsets left after T operation 	: [frozenset({-26, -17, -35, -12, -8, -103, -4, -3})]
22	itemsets left after T operation 	: [frozenset({-125, -151, -17, -3, -12, -4, -35})]
2	itemsets left after T operation 	: [frozenset({-125, -122, -151, -112, -142, -103, -4, -3})]
1	itemsets left after T operation 	: [frozenset({-125, -122, -4, -142, -12, -132, -3})]
0	itemsets left after W operation 	: [frozenset({-3, -142, -125, -151, -4, 157, -17}), frozenset({-64, -123, -56, -54, -115, -113, -47, -45, -105, -103, -39, -35, -96, -94, -157, -27, -26, -153, -86, -84, -19, -144, -76, -74, -9, -8, -135, -133, -66}), frozenset({-61, -58, -120, -115, -51, -49, -110, -42, -105, -40, -101, -71, -34, -96, -30, -157, -91, -153, -88, -24, -21, -80, -144, -78, -12, -8, -135, -68, -131})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.1432044506072998
Initial DL				: 89180.16257633519
Final DL				: 10024.294764801398
Compression (wrt me)	: 0.8875950158061111
Operator Counters		: {'D': 0, 'W': 1, 'V': 0, 'S': 0, 'R': 0, 'T': 8}
Misle Learning Runtime	: 2.8443727493286133

# of frequent itemsets	: 264
Time of DCI Closed		: 0.1874830722808838
DL of initial theory	: 83343.62757623826
250	itemsets left after W operation 	: [frozenset({-151, -3, -4, 157}), frozenset({-127, -122, -117, -112, -107, -102, -98, -92, -88, -83, -78, -72, -66, -63, -58, -52, -49, -43, -39, -34, -30, -157, -155, -23, -21, -146, -14, -141, -12, -137, -8, -131}), frozenset({-125, -121, -115, -110, -107, -102, -98, -92, -88, -81, -78, -72, -68, -62, -58, -52, -49, -43, -39, -34, -134, -30, -157, -153, -24, -21, -144, -15, -141, -12, -6, -129}), frozenset({-125, -123, -117, -111, -107, -102, -98, -92, -85, -83, -76, -73, -68, -62, -58, -52, -49, -44, -39, -34, -30, -157, -155, -23, -21, -146, -14, -141, -12, -137, -5, -131}), frozenset({-125, -122, -117, -112, -105, -101, -98, -91, -88, -83, -78, -73, -66, -61, -58, -51, -49, -44, -39, -35, -157, -27, -153, -23, -21, -144, -14, -12, -140, -137, -5, -132}), frozenset({-125, -122, -117, -112, -107, -103, -98, -93, -86, -81, -77, -72, -68, -62, -56, -53, -49, -43, -39, -34, -29, -157, -153, -24, -21, -146, -14, -141, -12, -135, -5, -131}), frozenset({-124, -122, -117, -111, -107, -102, -98, -92, -88, -82, -78, -72, -68, -62, -58, -52, -47, -44, -39, -34, -157, -27, -155, -23, -21, -143, -14, -141, -12, -137, -5, -131}), frozenset({-125, -122, -117, -111, -107, -103, -98, -92, -88, -81, -78, -72, -66, -62, -58, -52, -47, -43, -37, -34, -29, -157, -153, -23, -21, -146, -14, -141, -12, -137, -5, -131}), frozenset({-125, -122, -115, -111, -107, -102, -96, -92, -86, -83, -76, -72, -68, -62, -58, -52, -49, -44, -39, -35, -30, -157, -155, -23, -21, -146, -14, -141, -12, -137, -5, -130}), frozenset({-125, -123, -115, -112, -105, -103, -96, -94, -88, -83, -76, -73, -68, -63, -55, -53, -49, -44, -37, -35, -30, -157, -155, -26, -21, -146, -17, -142, -12, -137, -6, -132}), frozenset({-125, -123, -118, -113, -104, -103, -98, -94, -88, -84, -78, -72, -68, -64, -55, -54, -46, -45, -135, -36, -35, -157, -27, -26, -155, -22, -146, -17, -142, -9, -7, -132}), frozenset({-125, -122, -116, -111, -107, -103, -97, -93, -88, -82, -78, -72, -68, -62, -56, -52, -49, -43, -39, -34, -30, -157, -155, -24, -21, -145, -14, -141, -12, -136, -5, -131}), frozenset({-125, -120, -117, -111, -105, -101, -98, -91, -88, -83, -78, -72, -68, -62, -58, -52, -49, -9, -43, -39, -34, -31, -157, -155, -23, -21, -146, -14, -141, -137, -5, -131}), frozenset({-124, -123, -114, -113, -104, -103, -96, -94, -85, -84, -75, -74, -65, -64, -55, -54, -46, -45, -36, -35, -157, -27, -26, -152, -18, -17, -143, -142, -12, -8, -134, -133}), frozenset({-124, -123, -117, -111, -104, -103, -99, -94, -89, -80, -78, -72, -68, -62, -56, -54, -49, -43, -36, -32, -31, -157, -156, -26, -21, -146, -14, -141, -12, -137, -5, -131}), frozenset({-125, -122, -115, -112, -107, -103, -98, -93, -88, -82, -77, -73, -66, -63, -58, -53, -48, -44, -37, -35, -157, -28, -153, -24, -19, -144, -14, -142, -12, -135, -5, -132}), frozenset({-124, -123, -115, -113, -105, -101, -98, -92, -88, -83, -77, -73, -68, -63, -58, -53, -49, -44, -39, -35, -157, -27, -155, -23, -22, -146, -14, -13, -142, -8, -135, -133}), frozenset({-125, -123, -117, -111, -104, -103, -98, -92, -85, -80, -78, -72, -66, -62, -58, -54, -49, -43, -40, -32, -30, -157, -155, -23, -21, -146, -14, -141, -12, -137, -5, -131}), frozenset({-125, -122, -115, -112, -107, -101, -96, -92, -86, -82, -78, -71, -68, -63, -58, -52, -49, -9, -44, -39, -35, -30, -157, -153, -23, -21, -145, -14, -142, -137, -6, -132}), frozenset({-124, -123, -117, -111, -105, -103, -98, -92, -88, -82, -75, -74, -69, -64, -55, -54, -49, -45, -39, -34, -30, -157, -155, -23, -18, -17, -143, -142, -13, -138, -8, -133}), frozenset({-125, -123, -115, -113, -108, -103, -99, -94, -86, -84, -76, -74, -65, -64, -59, -54, -46, -45, -39, -35, -157, -27, -26, -152, -18, -17, -143, -142, -9, -8, -134, -133}), frozenset({-125, -123, -117, -112, -107, -102, -95, -90, -88, -82, -78, -72, -68, -62, -58, -52, -49, -9, -43, -40, -32, -30, -157, -155, -23, -21, -146, -14, -141, -137, -5, -131}), frozenset({-124, -123, -117, -111, -104, -102, -98, -92, -88, -82, -78, -73, -68, -61, -55, -51, -49, -44, -36, -35, -30, -157, -155, -23, -21, -146, -14, -141, -12, -137, -5, -131}), frozenset({-125, -122, -118, -110, -107, -102, -98, -92, -85, -84, -78, -71, -66, -60, -58, -52, -46, -9, -44, -36, -35, -157, -27, -155, -23, -21, -146, -17, -142, -137, -6, -131}), frozenset({-125, -122, -117, -112, -107, -103, -98, -93, -88, -83, -77, -72, -66, -63, -58, -53, -47, -44, -37, -35, -157, -27, -153, -24, -19, -17, -144, -142, -12, -135, -6, -132}), frozenset({-125, -122, -115, -110, -105, -103, -98, -93, -88, -83, -78, -71, -66, -63, -58, -53, -49, -42, -37, -35, -157, -28, -155, -24, -19, -144, -14, -13, -140, -137, -8, -133}), frozenset({-124, -119, -115, -113, -107, -102, -98, -92, -86, -83, -76, -72, -68, -62, -58, -52, -49, -44, -39, -35, -30, -157, -155, -23, -21, -146, -14, -141, -9, -135, -6, -130}), frozenset({-125, -123, -115, -113, -105, -103, -96, -92, -86, -84, -76, -74, -66, -64, -56, -53, -47, -45, -37, -35, -157, -28, -153, -24, -18, -17, -144, -142, -12, -8, -135, -133}), frozenset({-128, -123, -118, -112, -108, -101, -96, -94, -85, -84, -78, -74, -65, -64, -56, -54, -49, -45, -37, -35, -157, -27, -26, -5, -152, -21, -17, -143, -142, -9, -134, -133}), frozenset({-124, -123, -114, -110, -107, -102, -98, -92, -85, -83, -75, -73, -68, -62, -58, -52, -49, -44, -39, -35, -30, -157, -155, -23, -21, -146, -14, -141, -12, -135, -5, -132}), frozenset({-125, -123, -115, -112, -107, -103, -98, -94, -86, -83, -78, -74, -68, -64, -58, -54, -49, -45, -8, -39, -35, -157, -27, -26, -155, -21, -146, -17, -142, -12, -136, -132}), frozenset({-128, -123, -117, -111, -104, -103, -99, -94, -86, -84, -79, -74, -65, -64, -57, -54, -46, -45, -36, -35, -157, -156, -27, -26, -22, -147, -17, -142, -9, -8, -135, -133}), frozenset({-125, -123, -114, -112, -108, -100, -96, -93, -86, -82, -75, -71, -68, -62, -58, -52, -49, -42, -39, -35, -31, -157, -156, -26, -18, -143, -14, -13, -142, -138, -6, -133}), frozenset({-128, -123, -118, -113, -108, -103, -99, -94, -89, -84, -75, -74, -68, -62, -59, -54, -49, -43, -40, -35, -157, -27, -26, -155, -21, -147, -17, -13, -139, -138, -8, -133}), frozenset({-124, -123, -117, -111, -108, -103, -98, -92, -88, -82, -75, -74, -68, -64, -56, -54, -49, -45, -39, -34, -30, -157, -155, -23, -18, -17, -143, -142, -12, -137, -5, -131}), frozenset({-128, -120, -118, -109, -107, -101, -98, -92, -88, -81, -79, -72, -68, -63, -58, -52, -49, -44, -40, -35, -30, -157, -155, -26, -21, -146, -14, -12, -139, -137, -8, -129}), frozenset({-125, -123, -117, -111, -107, -102, -95, -94, -85, -83, -76, -73, -68, -62, -58, -52, -47, -45, -40, -135, -35, -30, -157, -155, -23, -21, -146, -14, -141, -9, -7, -131}), frozenset({-125, -122, -115, -110, -107, -103, -96, -91, -88, -81, -78, -71, -68, -62, -58, -53, -47, -44, -39, -35, -30, -157, -155, -24, -21, -144, -15, -12, -140, -137, -5, -130}), frozenset({-125, -123, -118, -113, -108, -103, -99, -94, -89, -84, -79, -74, -65, -64, -59, -54, -49, -45, -40, -35, -157, -27, -26, -152, -18, -17, -143, -142, -13, -137, -8, -131}), frozenset({-124, -123, -117, -109, -107, -103, -98, -92, -88, -83, -75, -71, -66, -60, -58, -52, -49, -43, -36, -34, -30, -157, -155, -23, -21, -146, -17, -141, -12, -137, -5, -129}), frozenset({-124, -119, -115, -113, -104, -100, -95, -93, -86, -83, -76, -74, -68, -62, -58, -52, -46, -41, -39, -35, -157, -27, -155, -24, -21, -143, -14, -142, -9, -134, -5, -129}), frozenset({-124, -123, -118, -110, -104, -100, -95, -94, -89, -83, -79, -70, -65, -63, -59, -54, -46, -41, -36, -34, -30, -157, -155, -26, -22, -147, -14, -139, -9, -134, -5, -129}), frozenset({-125, -123, -117, -112, -107, -102, -98, -92, -86, -83, -76, -73, -68, -62, -55, -53, -49, -44, -39, -35, -157, -27, -26, -155, -21, -144, -14, -142, -10, -135, -5, -132}), frozenset({-124, -122, -118, -110, -107, -102, -99, -94, -89, -84, -78, -72, -69, -64, -55, -53, -49, -43, -39, -35, -157, -156, -27, -26, -5, -22, -143, -14, -142, -9, -134, -133}), frozenset({-127, -123, -117, -112, -104, -103, -98, -94, -88, -83, -78, -73, -69, -64, -58, -54, -49, -44, -39, -35, -31, -157, -156, -26, -21, -147, -17, -142, -12, -137, -8, -132}), frozenset({-125, -122, -115, -112, -105, -103, -96, -93, -86, -83, -76, -73, -66, -63, -56, -53, -47, -44, -37, -35, -157, -28, -26, -153, -21, -17, -144, -142, -12, -135, -6, -132}), frozenset({-125, -123, -117, -111, -105, -103, -96, -94, -88, -82, -76, -74, -68, -64, -56, -54, -49, -44, -39, -34, -157, -28, -153, -24, -19, -17, -144, -142, -12, -137, -5, -131}), frozenset({-128, -123, -117, -111, -107, -102, -98, -92, -88, -82, -78, -72, -68, -64, -59, -50, -49, -43, -39, -34, -30, -157, -155, -23, -21, -146, -14, -141, -12, -137, -5, -131}), frozenset({-125, -122, -115, -113, -107, -103, -98, -93, -88, -83, -76, -73, -68, -63, -58, -53, -49, -44, -39, -35, -30, -157, -155, -26, -18, -17, -144, -142, -13, -137, -8, -132}), frozenset({-125, -122, -117, -112, -105, -102, -98, -92, -88, -82, -78, -72, -68, -62, -56, -53, -49, -43, -39, -34, -30, -157, -155, -23, -21, -144, -14, -141, -12, -137, -5, -132}), frozenset({-125, -119, -114, -113, -104, -100, -95, -91, -89, -84, -75, -73, -66, -60, -59, -54, -46, -41, -40, -32, -31, -157, -156, -5, -24, -21, -144, -14, -13, -139, -134, -133}), frozenset({-124, -123, -114, -109, -108, -100, -95, -94, -85, -82, -75, -70, -65, -63, -59, -54, -49, -41, -39, -34, -157, -28, -155, -26, -22, -147, -17, -142, -9, -134, -5, -129}), frozenset({-124, -119, -114, -109, -104, -103, -98, -92, -86, -83, -75, -73, -68, -62, -58, -52, -46, -42, -39, -35, -157, -27, -26, -155, -21, -143, -14, -142, -9, -8, -134, -133}), frozenset({-125, -122, -116, -111, -107, -103, -98, -92, -86, -81, -76, -72, -66, -62, -58, -52, -47, -43, -39, -35, -157, -28, -155, -23, -19, -146, -14, -141, -12, -137, -5, -131}), frozenset({-125, -122, -117, -112, -107, -103, -98, -93, -88, -84, -78, -73, -68, -63, -58, -53, -49, -44, -36, -35, -30, -157, -156, -26, -21, -146, -17, -142, -12, -137, -8, -132}), frozenset({-128, -123, -114, -109, -104, -103, -98, -92, -89, -84, -75, -74, -68, -62, -55, -54, -49, -45, -36, -32, -157, -27, -26, -155, -21, -147, -14, -13, -139, -138, -8, -129}), frozenset({-125, -122, -117, -112, -107, -103, -98, -93, -86, -83, -76, -73, -68, -63, -55, -53, -49, -44, -39, -35, -31, -157, -155, -26, -21, -146, -17, -142, -12, -136, -5, -132}), frozenset({-125, -122, -117, -111, -107, -102, -98, -92, -88, -82, -78, -72, -68, -62, -58, -52, -49, -43, -37, -34, -157, -28, -155, -23, -21, -146, -14, -141, -12, -137, -5, -131}), frozenset({-125, -122, -117, -111, -107, -102, -96, -92, -86, -83, -78, -73, -69, -62, -55, -50, -46, -44, -39, -35, -31, -157, -155, -23, -18, -146, -14, -141, -9, -136, -5, -131}), frozenset({-125, -122, -117, -112, -104, -103, -96, -94, -88, -83, -78, -73, -69, -63, -58, -53, -47, -44, -37, -35, -30, -157, -156, -26, -21, -146, -17, -142, -12, -137, -8, -132}), frozenset({-127, -123, -118, -113, -104, -103, -99, -94, -89, -84, -78, -72, -69, -64, -59, -54, -49, -45, -36, -35, -31, -157, -156, -26, -22, -147, -17, -140, -9, -8, -135, -133}), frozenset({-125, -122, -117, -113, -105, -101, -98, -93, -88, -83, -78, -72, -66, -63, -58, -53, -47, -44, -37, -35, -157, -28, -153, -24, -21, -146, -14, -141, -12, -137, -5, -131}), frozenset({-125, -122, -117, -111, -107, -102, -98, -92, -88, -82, -78, -72, -66, -62, -56, -52, -47, -42, -39, -34, -30, -157, -155, -23, -22, -146, -14, -13, -141, -137, -8, -131})]
203	itemsets left after T operation 	: [frozenset({-151, -4, -123})]
155	itemsets left after W operation 	: [frozenset({-125, -12, -4, -3, 158}), frozenset({-62, -58, -121, -117, -53, -49, -111, -44, -107, -103, -39, -35, -98, -30, -93, -158, -155, -88, -24, -21, -149, -82, -146, -17, -78, -141, -137, -72, -5, -68, -131}), frozenset({-61, -122, -58, -115, -51, -112, -47, -45, -107, -101, -36, -35, -96, -30, -158, -91, -155, -23, -86, -21, -84, -149, -146, -14, -141, -76, -73, -8, -135, -133, -68}), frozenset({-61, -122, -58, -116, -52, -110, -46, -107, -42, -102, -37, -35, -98, -30, -158, -92, -155, -88, -23, -21, -149, -83, -146, -78, -14, -142, -137, -71, -5, -68, -131}), frozenset({-61, -122, -58, -115, -51, -49, -109, -105, -41, -103, -39, -33, -96, -158, -92, -27, -153, -23, -86, -21, -149, -146, -81, -15, -142, -75, -137, -71, -5, -67, -129}), frozenset({-62, -122, -58, -117, -52, -111, -47, -43, -106, -39, -102, -98, -33, -30, -158, -92, -155, -88, -24, -150, -21, -82, -146, -78, -14, -141, -137, -71, -5, -131, -66}), frozenset({-63, -59, -122, -53, -115, -112, -47, -45, -107, -103, -37, -99, -35, -158, -92, -28, -26, -152, -86, -149, -83, -19, -17, -144, -142, -76, -73, -8, -135, -132, -65}), frozenset({-62, -122, -58, -117, -52, -111, -47, -45, -107, -72, -39, -102, -35, -98, -30, -93, -158, -155, -88, -24, -150, -21, -82, -146, -17, -78, -141, -137, -8, -68, -131}), frozenset({-61, -120, -55, -53, -115, -110, -46, -44, -72, -105, -102, -37, -35, -96, -158, -92, -27, -154, -23, -85, -149, -83, -18, -17, -144, -76, -140, -8, -135, -131, -65}), frozenset({-61, -122, -58, -52, -115, -49, -112, -44, -107, -39, -101, -35, -98, -158, -92, -27, -153, -23, -86, -149, -83, -18, -144, -14, -76, -140, -73, -8, -135, -132, -65}), frozenset({-64, -120, -55, -117, -53, -111, -47, -105, -41, -103, -37, -99, -34, -30, -158, -92, -155, -26, -86, -149, -83, -147, -18, -78, -14, -142, -72, -135, -5, -131, -65}), frozenset({-60, -122, -58, -117, -50, -112, -48, -44, -107, -39, -101, -35, -98, -158, -29, -90, -153, -87, -23, -68, -148, -83, -19, -144, -14, -77, -139, -73, -8, -135, -132})]
39	itemsets left after T operation 	: [frozenset({-23, -14, -4})]
13	itemsets left after T operation 	: [frozenset({-4, -123, -17})]
3	itemsets left after V operation 	: [frozenset({-124, -119, -114, -113, -107, -102, -95, -94, -85, -84, -75, -70, -66, -60, -55, -50, -49, -43, -36, -32, -31, -155, -26, -22, 123, -143, -14, -142, -12, -137, -5, -131, -2}), frozenset({123, -3, 157}), frozenset({-151, -4, -123})]
1	itemsets left after T operation 	: [frozenset({-4, -123})]
0	itemsets left after V operation 	: [frozenset({-128, -122, -118, -113, -107, -102, -99, -91, -86, -80, -76, -73, -68, -60, -58, -52, -49, -43, -39, -34, -156, -27, -26, -22, -149, 123, -147, -17, -142, -10, -8, -135, -133, -3}), frozenset({-125, -12, 123, -3, 158}), frozenset({-23, -14, 123}), frozenset({-4, -123})]
Unpacking W operator applied earlier using 158 on frozenset({-3, -125, -4, -12})
# of frequent itemsets	: 0
Time of DCI Closed		: 0.14983415603637695
Initial DL				: 89180.16257633519
Final DL				: 12876.730009435676
Compression (wrt me)	: 0.8556099289635895
Operator Counters		: {'D': 0, 'W': 1, 'V': 2, 'S': 0, 'R': 0, 'T': 4}
Misle Learning Runtime	: 1.2103636264801025

# of frequent itemsets	: 37419
Time of DCI Closed		: 1.5299885272979736
DL of initial theory	: 83343.62757623826
4978	itemsets left after T operation 	: [frozenset({-63, -93, -125, -122, -132, -151, -53, -83, -17, -35, -112, -142, -73, -103, -4, -3})]
2722	itemsets left after T operation 	: [frozenset({-26, -151, -17, -35, -142, -12, -8, -103, -4, -3})]
1585	itemsets left after T operation 	: [frozenset({-125, -122, -151, -4, -142, -12, -132, -3})]
27	itemsets left after T operation 	: [frozenset({-93, -125, -122, -53, -17, -35, -103, -4, -3})]
10	itemsets left after T operation 	: [frozenset({-93, -125, -122, -132, -112, -142, -12, -103, -4, -3})]
1	itemsets left after W operation 	: [frozenset({-125, -151, -17, -3, -142, 157, -4, -35}), frozenset({-61, -58, -120, -115, -51, -49, -110, -42, -105, -39, -101, -71, -96, -30, -157, -91, -153, -88, -24, -68, -21, -81, -144, -78, -12, -8, -135, -132}), frozenset({-61, -58, -120, -115, -51, -49, -110, -43, -105, -39, -101, -71, -96, -30, -157, -91, -153, -88, -24, -68, -21, -81, -144, -78, -12, -8, -135, -132}), frozenset({-64, -123, -56, -54, -115, -113, -47, -45, -105, -103, -39, -96, -94, -157, -27, -26, -153, -86, -84, -19, -144, -76, -74, -9, -8, -135, -133, -66}), frozenset({-61, -58, -121, -115, -51, -49, -110, -42, -105, -39, -101, -71, -96, -30, -157, -91, -153, -88, -24, -68, -21, -81, -144, -78, -12, -8, -135, -132})]
0	itemsets left after T operation 	: [frozenset({-93, -122, -132, -17, -112, -35, -12, -103, -4, -3})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.14368748664855957
Initial DL				: 89180.16257633519
Final DL				: 12537.207623140375
Compression (wrt me)	: 0.8594170804251567
Operator Counters		: {'D': 0, 'W': 1, 'V': 0, 'S': 0, 'R': 0, 'T': 6}
Misle Learning Runtime	: 3.1513898372650146

# of frequent itemsets	: 280
Time of DCI Closed		: 0.19255900382995605
DL of initial theory	: 85610.74867435428
279	itemsets left after T operation 	: [frozenset({-92, -155, -151, -4, -98})]
268	itemsets left after W operation 	: [frozenset({-3, -125, -151, -4, 157}), frozenset({-62, -58, -121, -52, -115, -49, -110, -107, -43, -39, -102, -98, -34, -134, -30, -157, -92, -153, -88, -24, -21, -81, -144, -15, -78, -141, -12, -72, -6, -68, -129}), frozenset({-61, -122, -58, -117, -51, -49, -112, -73, -44, -105, -39, -101, -35, -98, -157, -91, -27, -153, -88, -23, -21, -83, -144, -78, -14, -12, -140, -137, -5, -132, -66}), frozenset({-62, -122, -56, -117, -53, -49, -112, -107, -43, -103, -39, -98, -34, -93, -29, -157, -153, -24, -86, -21, -146, -81, -14, -77, -141, -12, -72, -135, -5, -68, -131}), frozenset({-62, -122, -58, -117, -52, -111, -47, -107, -43, -103, -37, -98, -34, -29, -92, -157, -153, -88, -23, -21, -146, -81, -78, -14, -141, -12, -137, -72, -5, -131, -66}), frozenset({-63, -123, -55, -53, -115, -49, -112, -73, -44, -105, -103, -37, -35, -96, -94, -30, -157, -155, -26, -88, -68, -21, -83, -146, -17, -142, -76, -12, -137, -6, -132}), frozenset({-64, -123, -55, -118, -54, -113, -46, -45, -104, -103, -135, -36, -35, -98, -94, -157, -27, -26, -155, -88, -22, -68, -84, -146, -17, -78, -142, -9, -72, -7, -132}), frozenset({-62, -58, -120, -117, -52, -49, -111, -9, -43, -105, -39, -101, -98, -34, -31, -157, -91, -155, -88, -23, -21, -83, -146, -78, -14, -141, -137, -72, -5, -68, -131}), frozenset({-63, -122, -58, -53, -115, -112, -48, -44, -107, -103, -37, -35, -98, -93, -28, -157, -153, -88, -24, -19, -82, -144, -14, -77, -142, -12, -73, -135, -5, -132, -66}), frozenset({-63, -122, -58, -52, -115, -49, -112, -9, -44, -107, -39, -101, -35, -96, -30, -157, -92, -153, -23, -86, -21, -68, -82, -145, -78, -14, -142, -137, -71, -6, -132}), frozenset({-64, -123, -59, -54, -115, -113, -46, -45, -108, -103, -39, -99, -35, -94, -157, -27, -26, -152, -86, -84, -18, -17, -143, -142, -76, -74, -9, -8, -134, -133, -65}), frozenset({-62, -123, -58, -117, -52, -49, -112, -137, -107, -43, -40, -102, -32, -95, -30, -157, -155, -90, -88, -23, -21, -82, -146, -78, -14, -141, -9, -72, -5, -68, -131}), frozenset({-63, -122, -58, -53, -115, -112, -47, -44, -72, -105, -103, -39, -35, -98, -93, -29, -157, -26, -153, -86, -21, -83, -17, -144, -142, -76, -12, -8, -135, -132, -66}), frozenset({-63, -122, -58, -117, -53, -112, -47, -44, -107, -103, -37, -35, -98, -93, -157, -27, -153, -88, -24, -83, -19, -17, -144, -142, -77, -12, -72, -135, -6, -132, -66}), frozenset({-63, -122, -58, -53, -115, -49, -110, -42, -105, -103, -37, -35, -98, -93, -28, -155, -157, -88, -24, -83, -19, -144, -78, -14, -13, -140, -137, -8, -71, -133, -66}), frozenset({-64, -123, -56, -53, -115, -113, -47, -45, -105, -103, -37, -35, -96, -157, -92, -28, -153, -24, -86, -84, -18, -17, -144, -142, -76, -12, -74, -8, -135, -133, -66}), frozenset({-64, -123, -58, -54, -115, -49, -112, -45, -107, -8, -103, -39, -35, -98, -94, -157, -27, -26, -155, -86, -21, -68, -83, -146, -17, -78, -142, -12, -74, -136, -132}), frozenset({-62, -123, -58, -52, -114, -49, -112, -108, -42, -39, -100, -35, -96, -31, -93, -156, -157, -26, -86, -82, -18, -143, -14, -13, -142, -75, -138, -71, -6, -133, -68}), frozenset({-62, -123, -58, -117, -52, -111, -47, -45, -9, -107, -40, -102, -35, -7, -95, -94, -30, -157, -155, -23, -85, -21, -83, -146, -14, -141, -76, -73, -135, -68, -131}), frozenset({-62, -122, -58, -53, -115, -47, -110, -44, -107, -103, -39, -35, -96, -30, -157, -91, -155, -88, -24, -21, -81, -144, -15, -78, -12, -140, -137, -71, -5, -68, -130}), frozenset({-62, -119, -118, -55, -54, -113, -49, -43, -104, -101, -36, -134, -32, -95, -94, -30, -133, -155, -157, -23, -85, -21, -147, -80, -14, -141, -12, -75, -70, -5, -68}), frozenset({-63, -122, -56, -53, -115, -112, -47, -44, -105, -103, -37, -35, -96, -93, -28, -157, -26, -153, -86, -21, -83, -17, -144, -142, -76, -12, -73, -135, -6, -132, -66}), frozenset({-64, -123, -56, -54, -117, -49, -111, -44, -105, -103, -39, -34, -96, -94, -157, -28, -153, -88, -24, -19, -82, -17, -144, -142, -76, -12, -74, -137, -5, -68, -131}), frozenset({-63, -122, -58, -53, -115, -113, -49, -73, -44, -107, -103, -39, -35, -98, -30, -93, -157, -155, -26, -88, -68, -83, -18, -17, -144, -142, -13, -76, -137, -8, -132}), frozenset({-60, -59, -119, -54, -114, -113, -46, -41, -104, -40, -100, -32, -95, -31, -133, -156, -91, -157, -89, -24, -21, -84, -144, -14, -13, -75, -139, -73, -134, -5, -66}), frozenset({-63, -122, -58, -117, -53, -49, -112, -73, -44, -107, -103, -36, -35, -98, -30, -93, -156, -157, -26, -88, -68, -21, -84, -146, -17, -78, -142, -12, -137, -8, -132}), frozenset({-63, -122, -55, -117, -53, -49, -112, -44, -107, -103, -39, -35, -98, -31, -93, -157, -155, -26, -86, -21, -68, -83, -146, -17, -142, -76, -12, -73, -136, -5, -132}), frozenset({-62, -122, -55, -117, -50, -111, -46, -73, -44, -107, -39, -102, -35, -96, -31, -157, -92, -155, -69, -23, -86, -83, -18, -146, -78, -14, -141, -9, -136, -5, -131}), frozenset({-63, -122, -58, -117, -53, -112, -47, -73, -44, -104, -103, -37, -35, -96, -94, -30, -156, -157, -26, -88, -21, -83, -146, -17, -78, -142, -12, -137, -8, -69, -132}), frozenset({-64, -123, -58, -54, -115, -113, -49, -45, -107, -103, -37, -35, -98, -93, -28, -157, -26, -153, -85, -84, -21, -147, -17, -142, -75, -74, -9, -8, -135, -133, -66}), frozenset({-62, -123, -58, -52, -115, -49, -111, -43, -104, -103, -39, -98, -34, -30, -157, -92, -153, -23, -86, -21, -84, -146, -78, -14, -141, -10, -137, -72, -5, -66, -129}), frozenset({-63, -122, -58, -117, -53, -113, -47, -44, -105, -101, -37, -35, -98, -93, -28, -157, -153, -88, -24, -21, -83, -146, -78, -14, -141, -12, -137, -72, -5, -131, -66})]
250	itemsets left after W operation 	: [frozenset({-123, -151, -103, -4, 158}), frozenset({-64, -124, -58, -54, -117, -111, -46, -45, -105, -39, -34, -96, -94, -29, -158, -26, -153, -88, -21, -131, -82, -146, -17, -142, -12, -75, -74, -137, -5, -3, -66}), frozenset({-128, -62, -59, -118, -51, -46, -109, -45, -107, -40, -99, -35, -70, -30, -158, -156, -90, -89, -23, -21, -84, -147, -79, -14, -142, -9, -8, -134, -133, -68, -2}), frozenset({-128, -62, -55, -54, -117, -49, -111, -108, -43, -72, -40, -99, -35, -158, -27, -90, -26, -88, -155, -82, -18, -17, -143, -78, -13, -139, -137, -8, -68, -131, -2}), frozenset({-64, -124, -55, -54, -114, -113, -46, -45, -104, -36, -35, -96, -94, -158, -27, -26, -152, -85, -84, -18, -17, -143, -142, -12, -75, -74, -8, -134, -133, -3, -65}), frozenset({-64, -127, -58, -54, -117, -49, -112, -137, -44, -104, -39, -35, -98, -31, -94, -158, -156, -26, -88, -21, -83, -147, -17, -78, -142, -12, -73, -8, -69, -132, -3}), frozenset({-62, -124, -56, -54, -117, -49, -111, -43, -104, -36, -99, -32, -31, -94, -158, -156, -26, -89, -21, -146, -80, -3, -78, -14, -141, -12, -137, -72, -5, -68, -131}), frozenset({-62, -124, -55, -118, -50, -113, -46, -45, -104, -40, -32, -95, -94, -133, -158, -27, -26, -152, -22, -85, -147, -17, -80, -79, -139, -74, -9, -134, -5, -68, -2}), frozenset({-128, -64, -55, -54, -114, -113, -49, -45, -104, -40, -35, -95, -94, -31, -156, -133, -26, -158, -22, -85, -84, -147, -17, -79, -142, -74, -9, -8, -134, -69, -2}), frozenset({-128, -64, -55, -54, -114, -113, -49, -45, -108, -40, -99, -35, -31, -94, -158, -26, -152, -22, -85, -84, -147, -17, -79, -142, -74, -9, -8, -134, -133, -2, -65}), frozenset({-64, -127, -59, -118, -54, -113, -49, -45, -104, -8, -36, -99, -35, -31, -94, -133, -156, -158, -26, -89, -22, -84, -147, -17, -78, -140, -9, -72, -135, -69, -3}), frozenset({-128, -64, -55, -54, -114, -113, -49, -45, -108, -40, -99, -35, -31, -94, -133, -156, -158, -26, -85, -84, -147, -18, -17, -142, -13, -75, -74, -138, -8, -69, -2}), frozenset({-128, -62, -55, -118, -54, -137, -46, -109, -45, -104, -39, -99, -34, -31, -158, -155, -90, -88, -23, -82, -18, -17, -146, -78, -142, -9, -72, -5, -68, -131, -2}), frozenset({-64, -124, -59, -54, -114, -113, -49, -45, -9, -104, -36, -99, -35, -94, -158, -27, -26, -89, -152, -84, -18, -17, -146, -79, -141, -74, -137, -8, -133, -2, -65}), frozenset({-124, -60, -58, -52, -114, -113, -49, -43, -104, -36, -99, -35, -158, -91, -27, -152, -23, -22, -85, -84, -146, -17, -141, -75, -74, -9, -8, -134, -69, -2, -129}), frozenset({-64, -125, -59, -118, -54, -113, -49, -43, -104, -39, -99, -34, -94, -30, -158, -155, -69, -5, -88, -23, -21, -82, -143, -14, -142, -12, -75, -74, -138, -133, -2}), frozenset({-128, -64, -57, -54, -117, -111, -46, -45, -104, -36, -99, -35, -94, -158, -156, -27, -26, -86, -22, -84, -147, -17, -79, -142, -74, -9, -8, -135, -133, -3, -65}), frozenset({-64, -124, -59, -54, -114, -113, -46, -45, -104, -40, -8, -99, -35, -94, -158, -156, -27, -26, -89, -22, -84, -17, -143, -142, -75, -74, -9, -138, -133, -2, -65}), frozenset({-128, -62, -59, -118, -54, -113, -49, -108, -43, -40, -99, -35, -94, -158, -27, -26, -89, -155, -21, -84, -147, -17, -13, -75, -74, -139, -8, -138, -133, -68, -3})]
201	itemsets left after W operation 	: [frozenset({-125, -12, -4, -3, 159}), frozenset({-62, -58, -121, -117, -53, -49, -111, -44, -107, -103, -39, -35, -98, -159, -30, -93, -155, -88, -24, -21, -149, -82, -146, -17, -78, -141, -137, -72, -5, -68, -131}), frozenset({-61, -122, -58, -115, -51, -112, -47, -45, -107, -101, -36, -35, -96, -159, -30, -91, -155, -23, -86, -21, -84, -149, -146, -14, -141, -76, -73, -8, -135, -133, -68}), frozenset({-61, -122, -58, -116, -52, -110, -46, -107, -42, -102, -37, -35, -98, -159, -30, -92, -155, -88, -23, -21, -149, -83, -146, -78, -14, -142, -137, -71, -5, -68, -131}), frozenset({-61, -122, -58, -115, -51, -49, -109, -105, -41, -103, -39, -33, -96, -159, -92, -27, -153, -23, -86, -21, -149, -146, -81, -15, -142, -75, -137, -71, -5, -67, -129}), frozenset({-62, -122, -58, -117, -52, -111, -47, -43, -106, -39, -102, -98, -33, -159, -30, -92, -155, -88, -24, -150, -21, -82, -146, -78, -14, -141, -137, -71, -5, -131, -66}), frozenset({-63, -59, -122, -53, -115, -112, -47, -45, -107, -103, -37, -99, -35, -159, -92, -28, -26, -152, -86, -149, -83, -19, -17, -144, -142, -76, -73, -8, -135, -132, -65}), frozenset({-62, -122, -58, -117, -52, -111, -47, -45, -107, -8, -39, -102, -35, -98, -159, -30, -93, -155, -88, -24, -150, -21, -82, -146, -17, -78, -141, -137, -72, -68, -131}), frozenset({-61, -120, -55, -53, -115, -110, -46, -44, -105, -8, -102, -37, -35, -96, -159, -92, -27, -154, -23, -85, -149, -83, -18, -17, -144, -76, -140, -72, -135, -131, -65}), frozenset({-62, -122, -57, -117, -52, -48, -111, -43, -106, -103, -37, -98, -34, -159, -29, -92, -155, -88, -24, -150, -21, -82, -145, -14, -77, -141, -137, -72, -5, -131, -66}), frozenset({-61, -122, -58, -52, -115, -49, -112, -44, -107, -39, -101, -35, -98, -159, -92, -27, -153, -23, -86, -149, -83, -18, -144, -14, -76, -140, -73, -8, -135, -132, -65}), frozenset({-64, -120, -55, -117, -53, -111, -47, -105, -41, -103, -37, -99, -34, -159, -30, -92, -155, -26, -86, -149, -83, -147, -18, -78, -14, -142, -72, -135, -5, -131, -65}), frozenset({-60, -122, -58, -117, -50, -112, -48, -44, -107, -39, -101, -35, -98, -159, -29, -90, -153, -132, -87, -23, -148, -83, -19, -144, -14, -77, -139, -73, -8, -135, -68})]
129	itemsets left after T operation 	: [frozenset({-4, -123, -49})]
63	itemsets left after T operation 	: [frozenset({-151, -14, -5, -4})]
13	itemsets left after T operation 	: [frozenset({-14, -5, -4})]
3	itemsets left after W operation 	: [frozenset({160, -4, -3}), frozenset({-128, -122, -118, -113, -107, -102, -99, -91, -86, -80, -76, -73, -68, -60, -58, -52, -49, -43, -39, -34, -160, -156, -27, -26, -22, -149, -147, -17, -142, -10, -8, -135, -133}), frozenset({-128, -123, -114, -113, -104, -103, -99, -90, -89, -84, -79, -74, -69, -60, -55, -50, -46, -45, -36, -35, -160, -31, -156, -23, -22, -148, -147, -17, -139, -138, -9, -8, -133}), frozenset({-160, -151, -125, 157}), frozenset({-160, -125, -12, 159})]
1	itemsets left after V operation 	: [frozenset({-151, -103, 158, 49}), frozenset({-4, -123, -49})]
Unpacking W operator applied earlier using 159 on frozenset({-3, -125, -4, -12})
Unpacking W operator applied earlier using 158 on frozenset({-103, -151, -4, -123})
# of frequent itemsets	: 0
Time of DCI Closed		: 0.14719009399414062
Initial DL				: 91727.39420097636
Final DL				: 13226.849633117612
Compression (wrt me)	: 0.8558026231058374
Operator Counters		: {'D': 0, 'W': 2, 'V': 1, 'S': 0, 'R': 0, 'T': 4}
Misle Learning Runtime	: 1.512044906616211

# of frequent itemsets	: 56583
Time of DCI Closed		: 2.255902051925659
DL of initial theory	: 85610.74867435428
4963	itemsets left after T operation 	: [frozenset({-63, -93, -125, -122, -132, -151, -53, -83, -112, -3, -142, -73, -103, -4, -35})]
3055	itemsets left after T operation 	: [frozenset({-26, -151, -17, -35, -142, -12, -8, -103, -4, -3})]
1191	itemsets left after T operation 	: [frozenset({-125, -122, -151, -4, -17, -142, -132, -3})]
25	itemsets left after T operation 	: [frozenset({-93, -122, -53, -17, -112, -35, -73, -103, -4, -3})]
10	itemsets left after T operation 	: [frozenset({-125, -122, -4, -112, -142, -12, -103, -132, -3})]
3	itemsets left after W operation 	: [frozenset({-125, -151, -17, -3, -142, 157, -4, -35}), frozenset({-61, -58, -120, -115, -51, -49, -110, -42, -105, -39, -101, -71, -96, -30, -157, -91, -153, -88, -24, -68, -21, -81, -144, -78, -12, -8, -135, -132}), frozenset({-61, -58, -120, -115, -51, -49, -110, -43, -105, -39, -101, -71, -96, -30, -157, -91, -153, -88, -24, -68, -21, -81, -144, -78, -12, -8, -135, -132}), frozenset({-64, -123, -56, -54, -115, -113, -47, -45, -105, -103, -39, -96, -94, -157, -27, -26, -153, -86, -84, -19, -144, -76, -74, -9, -8, -135, -133, -66}), frozenset({-61, -58, -121, -115, -51, -49, -110, -42, -105, -39, -101, -71, -96, -30, -157, -91, -153, -88, -24, -68, -21, -81, -144, -78, -12, -8, -135, -132})]
0	itemsets left after T operation 	: [frozenset({-63, -93, -125, -122, -53, -83, -3, -73, -103, -4, -35})]
# of frequent itemsets	: 0
Time of DCI Closed		: 0.15262317657470703
Initial DL				: 91727.39420097636
Final DL				: 13112.626562088331
Compression (wrt me)	: 0.8570478680190311
Operator Counters		: {'D': 0, 'W': 1, 'V': 0, 'S': 0, 'R': 0, 'T': 6}
Misle Learning Runtime	: 4.041996479034424

Running	: ./Resources/Krimp/bin/krimp	/home/arcchitjain/Documents/Mistle/classify.conf
krimp_accuracy = 0.9031
mistle_fold_accuracy_list = [0.6944444444444444, 0.8333333333333334, 0.6944444444444444, 0.8055555555555556, 0.8333333333333334, 0.6944444444444444, 0.8333333333333334, 0.8611111111111112, 0.9444444444444444, 0.9259259259259259]
mistle_attempted_list = [36, 36, 36, 36, 36, 36, 36, 36, 36, 27]
weighted sum = 284.0
weighted_mistle_accuracy = 0.8091168091168092
mistle_atempted = 351
mistle_coverage = 1.0
naive_mistle_attempted_list = 0.812037037037037
Mistle MDL Selections = ['T+', 'T+', 'T+', 'T+', 'T+', 'T-', 'T+', 'T-', 'T-', 'T-']
krimp_time = 8.289369344711304
mistle_time = 49.64474415779114
krimp_accuracy_dict = {'ionosphere.dat': '0.9031'}
mistle_accuracy_dict = {'ionosphere.dat': (0.8091168091168092, 351, 1.0)}
