 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: '841b5423-cc4a-4dba-ab2c-666a4a73e249_convertdb.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Database :: 
 * Type:		FIMI database
 * File:		pima.dat
 * Scanning file:	in progress... * Scanning file: done                       
 * Database:	768 rows, maximal 9 columns
 * 		has bin sizes: no
 * 		has transaction id's: no
 * Reading database:	in progress... * Reading database:	done          

 * Processing Data:  * Processing Data: Translating Forward * Processing Data: Sorting within Rows * Processing Data: Writing Data              ** Writing FIC database to file
 * File:		/home/arcchitjain/Documents/Mistle/Data/pima.db
** Finished writing database.

 * Processing Data: Finished                  

 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/

Task `datatrans`, command `convertdb` finished. This took 0 seconds.

 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: '812f6781-7680-40fc-b942-c04bdd7df8c8_analysedb.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Database :: 
 * File:		pima.db
 * Database:		768t 768r, 6912i, 26250.10bits
 * 			pruned below support 0, maximum set length 9
 * Alphabet:		38 items
 * Internal datatype:	uint16 value arrays

** Analysing database
 * Output File:	pima.db.analysis.txt
 * Writing analysis:	in progress... * Writing analysis:	done          


 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/analysedb/

Task `main`, command `analysedb` finished. This took 0 seconds.

 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: 'da9a0a5c-32c8-4136-9100-25bd730542a8_classifycompress.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Database :: 
 * File:		pima.db
 * Database:		768t 768r, 6912i, 26250.10bits
 * 			pruned below support 0, maximum set length 9
 * Alphabet:		38 items
 * Internal datatype:	32bit bitmap array

** Classification ::
 * Seed:				1234
 * numFolds:			10
 * Split database:		creating 10 partitions
 * Creating:			fold 1
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 1
** Writing FIC database to file
 * File:		train8.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		pima-all-1d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		6839
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(36a,0u,3608,12352,573,12925)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (69) ? c/s  		 | Progress:		2% (137) ? c/s  		 / Progress:		3% (206) ? c/s  		 - Progress:		4% (274) ? c/s  		 \ Progress:		5% (342) ? c/s  		 | Progress:		6% (411) ? c/s  		 / Progress:		7% (479) ? c/s  		 - Progress:		8% (548) ? c/s  		 \ Progress:		9% (616) ? c/s  		 | Progress:		10% (684) ? c/s  		 / Progress:		11% (753) ? c/s  		 - Progress:		12% (821) ? c/s  		 \ Progress:		13% (890) ? c/s  		 | Progress:		14% (958) ? c/s  		 / Progress:		15% (1026) ? c/s  		 - Progress:		16% (1095) ? c/s  		 \ Progress:		17% (1163) ? c/s  		 | Progress:		18% (1232) ? c/s  		 / Progress:		19% (1300) ? c/s  		 - Progress:		20% (1368) ? c/s  		 \ Progress:		21% (1437) ? c/s  		 | Progress:		22% (1505) ? c/s  		 / Progress:		23% (1573) ? c/s  		 - Progress:		24% (1642) ? c/s  		 \ Progress:		25% (1710) ? c/s  		 | Progress:		26% (1779) ? c/s  		 / Progress:		27% (1847) ? c/s  		 - Progress:		28% (1915) ? c/s  		 \ Progress:		29% (1984) ? c/s  		 | Progress:		30% (2052) ? c/s  		 / Progress:		31% (2121) ? c/s  		 - Progress:		32% (2189) ? c/s  		 \ Progress:		33% (2257) ? c/s  		 | Progress:		34% (2326) ? c/s  		 / Progress:		35% (2394) ? c/s  		 - Progress:		36% (2463) ? c/s  		 \ Progress:		37% (2531) ? c/s  		 | Progress:		38% (2599) ? c/s  		 / Progress:		39% (2668) ? c/s  		 - Progress:		40% (2736) ? c/s  		 \ Progress:		41% (2804) ? c/s  		 | Progress:		42% (2873) ? c/s  		 / Progress:		43% (2941) ? c/s  		 - Progress:		44% (3010) ? c/s  		 \ Progress:		45% (3078) ? c/s  		 | Progress:		46% (3146) ? c/s  		 / Progress:		47% (3215) ? c/s  		 - Progress:		48% (3283) ? c/s  		 \ Progress:		49% (3352) ? c/s  		 | Progress:		50% (3420) ? c/s  		 / Progress:		51% (3488) ? c/s  		 - Progress:		52% (3557) ? c/s  		 \ Progress:		53% (3625) ? c/s  		 | Progress:		54% (3694) ? c/s  		 / Progress:		55% (3762) ? c/s  		 - Progress:		56% (3830) ? c/s  		 \ Progress:		57% (3899) ? c/s  		 | Progress:		58% (3967) ? c/s  		 / Progress:		59% (4036) ? c/s  		 - Progress:		60% (4104) ? c/s  		 \ Progress:		61% (4172) ? c/s  		 | Progress:		62% (4241) ? c/s  		 / Progress:		63% (4309) ? c/s  		 - Progress:		64% (4377) ? c/s  		 \ Progress:		65% (4446) ? c/s  		 | Progress:		66% (4514) ? c/s  		 / Progress:		67% (4583) ? c/s  		 - Progress:		68% (4651) ? c/s  		 \ Progress:		69% (4719) ? c/s  		 | Progress:		70% (4788) ? c/s  		 / Progress:		71% (4856) ? c/s  		 - Progress:		72% (4925) ? c/s  		 \ Progress:		73% (4993) ? c/s  		 \ Progress:		73% (5000) 5000 c/s (0s +/- <1s)                       | Progress:		74% (5061) 5000 c/s (0s +/- <1s)                       / Progress:		75% (5130) 5000 c/s (0s +/- <1s)                       - Progress:		76% (5198) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (5267) 5000 c/s (0s +/- <1s)                       | Progress:		78% (5335) 5000 c/s (0s +/- <1s)                       / Progress:		79% (5403) 5000 c/s (0s +/- <1s)                       - Progress:		80% (5472) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (5540) 5000 c/s (0s +/- <1s)                       | Progress:		82% (5608) 5000 c/s (0s +/- <1s)                       / Progress:		83% (5677) 5000 c/s (0s +/- <1s)                       - Progress:		84% (5745) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (5814) 5000 c/s (0s +/- <1s)                       | Progress:		86% (5882) 5000 c/s (0s +/- <1s)                       / Progress:		87% (5950) 5000 c/s (0s +/- <1s)                       - Progress:		88% (6019) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (6087) 5000 c/s (0s +/- <1s)                       | Progress:		90% (6156) 5000 c/s (0s +/- <1s)                       / Progress:		91% (6224) 5000 c/s (0s +/- <1s)                       - Progress:		92% (6292) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (6361) 5000 c/s (0s +/- <1s)                       | Progress:		94% (6429) 5000 c/s (0s +/- <1s)                       / Progress:		95% (6498) 5000 c/s (0s +/- <1s)                       - Progress:		96% (6566) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (6634) 5000 c/s (0s +/- <1s)                       | Progress:		98% (6703) 5000 c/s (0s +/- <1s)                       / Progress:		99% (6771) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.017540 seconds.		
 * Result:		(21a,40u,614,2366,1490,3856)
** Writing FIC database to file
 * File:		train9.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		pima-all-1d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		8503
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(35a,0u,1920,7271,497,7768)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (86) ? c/s  		 | Progress:		2% (171) ? c/s  		 / Progress:		3% (256) ? c/s  		 - Progress:		4% (341) ? c/s  		 \ Progress:		5% (426) ? c/s  		 | Progress:		6% (511) ? c/s  		 / Progress:		7% (596) ? c/s  		 - Progress:		8% (681) ? c/s  		 \ Progress:		9% (766) ? c/s  		 | Progress:		10% (851) ? c/s  		 / Progress:		11% (936) ? c/s  		 - Progress:		12% (1021) ? c/s  		 \ Progress:		13% (1106) ? c/s  		 | Progress:		14% (1191) ? c/s  		 / Progress:		15% (1276) ? c/s  		 - Progress:		16% (1361) ? c/s  		 \ Progress:		17% (1446) ? c/s  		 | Progress:		18% (1531) ? c/s  		 / Progress:		19% (1616) ? c/s  		 - Progress:		20% (1701) ? c/s  		 \ Progress:		21% (1786) ? c/s  		 | Progress:		22% (1871) ? c/s  		 / Progress:		23% (1956) ? c/s  		 - Progress:		24% (2041) ? c/s  		 \ Progress:		25% (2126) ? c/s  		 | Progress:		26% (2211) ? c/s  		 / Progress:		27% (2296) ? c/s  		 - Progress:		28% (2381) ? c/s  		 \ Progress:		29% (2466) ? c/s  		 | Progress:		30% (2551) ? c/s  		 / Progress:		31% (2636) ? c/s  		 - Progress:		32% (2721) ? c/s  		 \ Progress:		33% (2806) ? c/s  		 | Progress:		34% (2892) ? c/s  		 / Progress:		35% (2977) ? c/s  		 - Progress:		36% (3062) ? c/s  		 \ Progress:		37% (3147) ? c/s  		 | Progress:		38% (3232) ? c/s  		 / Progress:		39% (3317) ? c/s  		 - Progress:		40% (3402) ? c/s  		 \ Progress:		41% (3487) ? c/s  		 | Progress:		42% (3572) ? c/s  		 / Progress:		43% (3657) ? c/s  		 - Progress:		44% (3742) ? c/s  		 \ Progress:		45% (3827) ? c/s  		 | Progress:		46% (3912) ? c/s  		 / Progress:		47% (3997) ? c/s  		 - Progress:		48% (4082) ? c/s  		 \ Progress:		49% (4167) ? c/s  		 | Progress:		50% (4252) ? c/s  		 / Progress:		51% (4337) ? c/s  		 - Progress:		52% (4422) ? c/s  		 \ Progress:		53% (4507) ? c/s  		 | Progress:		54% (4592) ? c/s  		 / Progress:		55% (4677) ? c/s  		 - Progress:		56% (4762) ? c/s  		 \ Progress:		57% (4847) ? c/s  		 | Progress:		58% (4932) ? c/s  		 | Progress:		58% (5000) 5000 c/s (0s +/- <1s)                       / Progress:		59% (5017) 5000 c/s (0s +/- <1s)                       - Progress:		60% (5102) 5000 c/s (0s +/- <1s)                       \ Progress:		61% (5187) 5000 c/s (0s +/- <1s)                       | Progress:		62% (5272) 5000 c/s (0s +/- <1s)                       / Progress:		63% (5357) 5000 c/s (0s +/- <1s)                       - Progress:		64% (5442) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (5527) 5000 c/s (0s +/- <1s)                       | Progress:		66% (5612) 5000 c/s (0s +/- <1s)                       / Progress:		67% (5698) 5000 c/s (0s +/- <1s)                       - Progress:		68% (5783) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (5868) 5000 c/s (0s +/- <1s)                       | Progress:		70% (5953) 5000 c/s (0s +/- <1s)                       / Progress:		71% (6038) 5000 c/s (0s +/- <1s)                       - Progress:		72% (6123) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (6208) 5000 c/s (0s +/- <1s)                       | Progress:		74% (6293) 5000 c/s (0s +/- <1s)                       / Progress:		75% (6378) 5000 c/s (0s +/- <1s)                       - Progress:		76% (6463) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (6548) 5000 c/s (0s +/- <1s)                       | Progress:		78% (6633) 5000 c/s (0s +/- <1s)                       / Progress:		79% (6718) 5000 c/s (0s +/- <1s)                       - Progress:		80% (6803) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (6888) 5000 c/s (0s +/- <1s)                       | Progress:		82% (6973) 5000 c/s (0s +/- <1s)                       / Progress:		83% (7058) 5000 c/s (0s +/- <1s)                       - Progress:		84% (7143) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (7228) 5000 c/s (0s +/- <1s)                       | Progress:		86% (7313) 5000 c/s (0s +/- <1s)                       / Progress:		87% (7398) 5000 c/s (0s +/- <1s)                       - Progress:		88% (7483) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (7568) 5000 c/s (0s +/- <1s)                       | Progress:		90% (7653) 5000 c/s (0s +/- <1s)                       / Progress:		91% (7738) 5000 c/s (0s +/- <1s)                       - Progress:		92% (7823) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (7908) 5000 c/s (0s +/- <1s)                       | Progress:		94% (7993) 5000 c/s (0s +/- <1s)                       / Progress:		95% (8078) 5000 c/s (0s +/- <1s)                       - Progress:		96% (8163) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (8248) 5000 c/s (0s +/- <1s)                       | Progress:		98% (8333) 5000 c/s (0s +/- <1s)                       / Progress:		99% (8418) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.019412 seconds.		
 * Result:		(25a,30u,519,2692,1124,3816)
 * Creating:			fold 2
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 2
** Writing FIC database to file
 * File:		train8.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		pima-all-1d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		7295
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(36a,0u,3624,12450,574,13023)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (73) ? c/s  		 | Progress:		2% (146) ? c/s  		 / Progress:		3% (219) ? c/s  		 - Progress:		4% (292) ? c/s  		 \ Progress:		5% (365) ? c/s  		 | Progress:		6% (438) ? c/s  		 / Progress:		7% (511) ? c/s  		 - Progress:		8% (584) ? c/s  		 \ Progress:		9% (657) ? c/s  		 | Progress:		10% (730) ? c/s  		 / Progress:		11% (803) ? c/s  		 - Progress:		12% (876) ? c/s  		 \ Progress:		13% (949) ? c/s  		 | Progress:		14% (1022) ? c/s  		 / Progress:		15% (1095) ? c/s  		 - Progress:		16% (1168) ? c/s  		 \ Progress:		17% (1241) ? c/s  		 | Progress:		18% (1314) ? c/s  		 / Progress:		19% (1387) ? c/s  		 - Progress:		20% (1459) ? c/s  		 \ Progress:		21% (1532) ? c/s  		 | Progress:		22% (1605) ? c/s  		 / Progress:		23% (1678) ? c/s  		 - Progress:		24% (1751) ? c/s  		 \ Progress:		25% (1824) ? c/s  		 | Progress:		26% (1897) ? c/s  		 / Progress:		27% (1970) ? c/s  		 - Progress:		28% (2043) ? c/s  		 \ Progress:		29% (2116) ? c/s  		 | Progress:		30% (2189) ? c/s  		 / Progress:		31% (2262) ? c/s  		 - Progress:		32% (2335) ? c/s  		 \ Progress:		33% (2408) ? c/s  		 | Progress:		34% (2481) ? c/s  		 / Progress:		35% (2554) ? c/s  		 - Progress:		36% (2627) ? c/s  		 \ Progress:		37% (2700) ? c/s  		 | Progress:		38% (2773) ? c/s  		 / Progress:		39% (2846) ? c/s  		 - Progress:		40% (2918) ? c/s  		 \ Progress:		41% (2991) ? c/s  		 | Progress:		42% (3064) ? c/s  		 / Progress:		43% (3137) ? c/s  		 - Progress:		44% (3210) ? c/s  		 \ Progress:		45% (3283) ? c/s  		 | Progress:		46% (3356) ? c/s  		 / Progress:		47% (3429) ? c/s  		 - Progress:		48% (3502) ? c/s  		 \ Progress:		49% (3575) ? c/s  		 | Progress:		50% (3648) ? c/s  		 / Progress:		51% (3721) ? c/s  		 - Progress:		52% (3794) ? c/s  		 \ Progress:		53% (3867) ? c/s  		 | Progress:		54% (3940) ? c/s  		 / Progress:		55% (4013) ? c/s  		 - Progress:		56% (4086) ? c/s  		 \ Progress:		57% (4159) ? c/s  		 | Progress:		58% (4232) ? c/s  		 / Progress:		59% (4305) ? c/s  		 - Progress:		60% (4377) ? c/s  		 \ Progress:		61% (4450) ? c/s  		 | Progress:		62% (4523) ? c/s  		 / Progress:		63% (4596) ? c/s  		 - Progress:		64% (4669) ? c/s  		 \ Progress:		65% (4742) ? c/s  		 | Progress:		66% (4815) ? c/s  		 / Progress:		67% (4888) ? c/s  		 - Progress:		68% (4961) ? c/s  		 - Progress:		68% (5000) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (5034) 5000 c/s (0s +/- <1s)                       | Progress:		70% (5107) 5000 c/s (0s +/- <1s)                       / Progress:		71% (5180) 5000 c/s (0s +/- <1s)                       - Progress:		72% (5253) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (5326) 5000 c/s (0s +/- <1s)                       | Progress:		74% (5399) 5000 c/s (0s +/- <1s)                       / Progress:		75% (5472) 5000 c/s (0s +/- <1s)                       - Progress:		76% (5545) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (5618) 5000 c/s (0s +/- <1s)                       | Progress:		78% (5691) 5000 c/s (0s +/- <1s)                       / Progress:		79% (5764) 5000 c/s (0s +/- <1s)                       - Progress:		80% (5836) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (5909) 5000 c/s (0s +/- <1s)                       | Progress:		82% (5982) 5000 c/s (0s +/- <1s)                       / Progress:		83% (6055) 5000 c/s (0s +/- <1s)                       - Progress:		84% (6128) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (6201) 5000 c/s (0s +/- <1s)                       | Progress:		86% (6274) 5000 c/s (0s +/- <1s)                       / Progress:		87% (6347) 5000 c/s (0s +/- <1s)                       - Progress:		88% (6420) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (6493) 5000 c/s (0s +/- <1s)                       | Progress:		90% (6566) 5000 c/s (0s +/- <1s)                       / Progress:		91% (6639) 5000 c/s (0s +/- <1s)                       - Progress:		92% (6712) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (6785) 5000 c/s (0s +/- <1s)                       | Progress:		94% (6858) 5000 c/s (0s +/- <1s)                       / Progress:		95% (6931) 5000 c/s (0s +/- <1s)                       - Progress:		96% (7004) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (7077) 5000 c/s (0s +/- <1s)                       | Progress:		98% (7150) 5000 c/s (0s +/- <1s)                       / Progress:		99% (7223) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.019702 seconds.		
 * Result:		(25a,36u,654,2624,1333,3957)
** Writing FIC database to file
 * File:		train9.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		pima-all-1d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		8755
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(35a,0u,1904,7231,492,7723)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (88) ? c/s  		 | Progress:		2% (176) ? c/s  		 / Progress:		3% (263) ? c/s  		 - Progress:		4% (351) ? c/s  		 \ Progress:		5% (438) ? c/s  		 | Progress:		6% (526) ? c/s  		 / Progress:		7% (613) ? c/s  		 - Progress:		8% (701) ? c/s  		 \ Progress:		9% (788) ? c/s  		 | Progress:		10% (876) ? c/s  		 / Progress:		11% (964) ? c/s  		 - Progress:		12% (1051) ? c/s  		 \ Progress:		13% (1139) ? c/s  		 | Progress:		14% (1226) ? c/s  		 / Progress:		15% (1314) ? c/s  		 - Progress:		16% (1401) ? c/s  		 \ Progress:		17% (1489) ? c/s  		 | Progress:		18% (1576) ? c/s  		 / Progress:		19% (1664) ? c/s  		 - Progress:		20% (1751) ? c/s  		 \ Progress:		21% (1839) ? c/s  		 | Progress:		22% (1927) ? c/s  		 / Progress:		23% (2014) ? c/s  		 - Progress:		24% (2102) ? c/s  		 \ Progress:		25% (2189) ? c/s  		 | Progress:		26% (2277) ? c/s  		 / Progress:		27% (2364) ? c/s  		 - Progress:		28% (2452) ? c/s  		 \ Progress:		29% (2539) ? c/s  		 | Progress:		30% (2627) ? c/s  		 / Progress:		31% (2715) ? c/s  		 - Progress:		32% (2802) ? c/s  		 \ Progress:		33% (2890) ? c/s  		 | Progress:		34% (2977) ? c/s  		 / Progress:		35% (3065) ? c/s  		 - Progress:		36% (3152) ? c/s  		 \ Progress:		37% (3240) ? c/s  		 | Progress:		38% (3327) ? c/s  		 / Progress:		39% (3415) ? c/s  		 - Progress:		40% (3502) ? c/s  		 \ Progress:		41% (3590) ? c/s  		 | Progress:		42% (3678) ? c/s  		 / Progress:		43% (3765) ? c/s  		 - Progress:		44% (3853) ? c/s  		 \ Progress:		45% (3940) ? c/s  		 | Progress:		46% (4028) ? c/s  		 / Progress:		47% (4115) ? c/s  		 - Progress:		48% (4203) ? c/s  		 \ Progress:		49% (4290) ? c/s  		 | Progress:		50% (4378) ? c/s  		 / Progress:		51% (4466) ? c/s  		 - Progress:		52% (4553) ? c/s  		 \ Progress:		53% (4641) ? c/s  		 | Progress:		54% (4728) ? c/s  		 / Progress:		55% (4816) ? c/s  		 - Progress:		56% (4903) ? c/s  		 \ Progress:		57% (4991) ? c/s  		 \ Progress:		57% (5000) 5000 c/s (0s +/- <1s)                       | Progress:		58% (5078) 5000 c/s (0s +/- <1s)                       / Progress:		59% (5166) 5000 c/s (0s +/- <1s)                       - Progress:		60% (5253) 5000 c/s (0s +/- <1s)                       \ Progress:		61% (5341) 5000 c/s (0s +/- <1s)                       | Progress:		62% (5429) 5000 c/s (0s +/- <1s)                       / Progress:		63% (5516) 5000 c/s (0s +/- <1s)                       - Progress:		64% (5604) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (5691) 5000 c/s (0s +/- <1s)                       | Progress:		66% (5779) 5000 c/s (0s +/- <1s)                       / Progress:		67% (5866) 5000 c/s (0s +/- <1s)                       - Progress:		68% (5954) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (6041) 5000 c/s (0s +/- <1s)                       | Progress:		70% (6129) 5000 c/s (0s +/- <1s)                       / Progress:		71% (6217) 5000 c/s (0s +/- <1s)                       - Progress:		72% (6304) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (6392) 5000 c/s (0s +/- <1s)                       | Progress:		74% (6479) 5000 c/s (0s +/- <1s)                       / Progress:		75% (6567) 5000 c/s (0s +/- <1s)                       - Progress:		76% (6654) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (6742) 5000 c/s (0s +/- <1s)                       | Progress:		78% (6829) 5000 c/s (0s +/- <1s)                       / Progress:		79% (6917) 5000 c/s (0s +/- <1s)                       - Progress:		80% (7004) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (7092) 5000 c/s (0s +/- <1s)                       | Progress:		82% (7180) 5000 c/s (0s +/- <1s)                       / Progress:		83% (7267) 5000 c/s (0s +/- <1s)                       - Progress:		84% (7355) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (7442) 5000 c/s (0s +/- <1s)                       | Progress:		86% (7530) 5000 c/s (0s +/- <1s)                       / Progress:		87% (7617) 5000 c/s (0s +/- <1s)                       - Progress:		88% (7705) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (7792) 5000 c/s (0s +/- <1s)                       | Progress:		90% (7880) 5000 c/s (0s +/- <1s)                       / Progress:		91% (7968) 5000 c/s (0s +/- <1s)                       - Progress:		92% (8055) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (8143) 5000 c/s (0s +/- <1s)                       | Progress:		94% (8230) 5000 c/s (0s +/- <1s)                       / Progress:		95% (8318) 5000 c/s (0s +/- <1s)                       - Progress:		96% (8405) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (8493) 5000 c/s (0s +/- <1s)                       | Progress:		98% (8580) 5000 c/s (0s +/- <1s)                       / Progress:		99% (8668) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.021253 seconds.		
 * Result:		(29a,30u,526,2828,1102,3930)
 * Creating:			fold 3
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 3
** Writing FIC database to file
 * File:		train8.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		pima-all-1d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		7199
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(34a,0u,3584,12318,523,12841)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (72) ? c/s  		 | Progress:		2% (144) ? c/s  		 / Progress:		3% (216) ? c/s  		 - Progress:		4% (288) ? c/s  		 \ Progress:		5% (360) ? c/s  		 | Progress:		6% (432) ? c/s  		 / Progress:		7% (504) ? c/s  		 - Progress:		8% (576) ? c/s  		 \ Progress:		9% (648) ? c/s  		 | Progress:		10% (720) ? c/s  		 / Progress:		11% (792) ? c/s  		 - Progress:		12% (864) ? c/s  		 \ Progress:		13% (936) ? c/s  		 | Progress:		14% (1008) ? c/s  		 / Progress:		15% (1080) ? c/s  		 - Progress:		16% (1152) ? c/s  		 \ Progress:		17% (1224) ? c/s  		 | Progress:		18% (1296) ? c/s  		 / Progress:		19% (1368) ? c/s  		 - Progress:		20% (1440) ? c/s  		 \ Progress:		21% (1512) ? c/s  		 | Progress:		22% (1584) ? c/s  		 / Progress:		23% (1656) ? c/s  		 - Progress:		24% (1728) ? c/s  		 \ Progress:		25% (1800) ? c/s  		 | Progress:		26% (1872) ? c/s  		 / Progress:		27% (1944) ? c/s  		 - Progress:		28% (2016) ? c/s  		 \ Progress:		29% (2088) ? c/s  		 | Progress:		30% (2160) ? c/s  		 / Progress:		31% (2232) ? c/s  		 - Progress:		32% (2304) ? c/s  		 \ Progress:		33% (2376) ? c/s  		 | Progress:		34% (2448) ? c/s  		 / Progress:		35% (2520) ? c/s  		 - Progress:		36% (2592) ? c/s  		 \ Progress:		37% (2664) ? c/s  		 | Progress:		38% (2736) ? c/s  		 / Progress:		39% (2808) ? c/s  		 - Progress:		40% (2880) ? c/s  		 \ Progress:		41% (2952) ? c/s  		 | Progress:		42% (3024) ? c/s  		 / Progress:		43% (3096) ? c/s  		 - Progress:		44% (3168) ? c/s  		 \ Progress:		45% (3240) ? c/s  		 | Progress:		46% (3312) ? c/s  		 / Progress:		47% (3384) ? c/s  		 - Progress:		48% (3456) ? c/s  		 \ Progress:		49% (3528) ? c/s  		 | Progress:		50% (3600) ? c/s  		 / Progress:		51% (3672) ? c/s  		 - Progress:		52% (3744) ? c/s  		 \ Progress:		53% (3816) ? c/s  		 | Progress:		54% (3888) ? c/s  		 / Progress:		55% (3960) ? c/s  		 - Progress:		56% (4032) ? c/s  		 \ Progress:		57% (4104) ? c/s  		 | Progress:		58% (4176) ? c/s  		 / Progress:		59% (4248) ? c/s  		 - Progress:		60% (4320) ? c/s  		 \ Progress:		61% (4392) ? c/s  		 | Progress:		62% (4464) ? c/s  		 / Progress:		63% (4536) ? c/s  		 - Progress:		64% (4608) ? c/s  		 \ Progress:		65% (4680) ? c/s  		 | Progress:		66% (4752) ? c/s  		 / Progress:		67% (4824) ? c/s  		 - Progress:		68% (4896) ? c/s  		 \ Progress:		69% (4968) ? c/s  		 \ Progress:		69% (5000) 5000 c/s (0s +/- <1s)                       | Progress:		70% (5040) 5000 c/s (0s +/- <1s)                       / Progress:		71% (5112) 5000 c/s (0s +/- <1s)                       - Progress:		72% (5184) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (5256) 5000 c/s (0s +/- <1s)                       | Progress:		74% (5328) 5000 c/s (0s +/- <1s)                       / Progress:		75% (5400) 5000 c/s (0s +/- <1s)                       - Progress:		76% (5472) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (5544) 5000 c/s (0s +/- <1s)                       | Progress:		78% (5616) 5000 c/s (0s +/- <1s)                       / Progress:		79% (5688) 5000 c/s (0s +/- <1s)                       - Progress:		80% (5760) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (5832) 5000 c/s (0s +/- <1s)                       | Progress:		82% (5904) 5000 c/s (0s +/- <1s)                       / Progress:		83% (5976) 5000 c/s (0s +/- <1s)                       - Progress:		84% (6048) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (6120) 5000 c/s (0s +/- <1s)                       | Progress:		86% (6192) 5000 c/s (0s +/- <1s)                       / Progress:		87% (6264) 5000 c/s (0s +/- <1s)                       - Progress:		88% (6336) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (6408) 5000 c/s (0s +/- <1s)                       | Progress:		90% (6480) 5000 c/s (0s +/- <1s)                       / Progress:		91% (6552) 5000 c/s (0s +/- <1s)                       - Progress:		92% (6624) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (6696) 5000 c/s (0s +/- <1s)                       | Progress:		94% (6768) 5000 c/s (0s +/- <1s)                       / Progress:		95% (6840) 5000 c/s (0s +/- <1s)                       - Progress:		96% (6912) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (6984) 5000 c/s (0s +/- <1s)                       | Progress:		98% (7056) 5000 c/s (0s +/- <1s)                       / Progress:		99% (7128) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.018470 seconds.		
 * Result:		(26a,31u,684,2823,1184,4007)
** Writing FIC database to file
 * File:		train9.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		pima-all-1d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		8787
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(35a,0u,1944,7381,492,7873)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (88) ? c/s  		 | Progress:		2% (176) ? c/s  		 / Progress:		3% (264) ? c/s  		 - Progress:		4% (352) ? c/s  		 \ Progress:		5% (440) ? c/s  		 | Progress:		6% (528) ? c/s  		 / Progress:		7% (616) ? c/s  		 - Progress:		8% (703) ? c/s  		 \ Progress:		9% (791) ? c/s  		 | Progress:		10% (879) ? c/s  		 / Progress:		11% (967) ? c/s  		 - Progress:		12% (1055) ? c/s  		 \ Progress:		13% (1143) ? c/s  		 | Progress:		14% (1231) ? c/s  		 / Progress:		15% (1319) ? c/s  		 - Progress:		16% (1406) ? c/s  		 \ Progress:		17% (1494) ? c/s  		 | Progress:		18% (1582) ? c/s  		 / Progress:		19% (1670) ? c/s  		 - Progress:		20% (1758) ? c/s  		 \ Progress:		21% (1846) ? c/s  		 | Progress:		22% (1934) ? c/s  		 / Progress:		23% (2022) ? c/s  		 - Progress:		24% (2109) ? c/s  		 \ Progress:		25% (2197) ? c/s  		 | Progress:		26% (2285) ? c/s  		 / Progress:		27% (2373) ? c/s  		 - Progress:		28% (2461) ? c/s  		 \ Progress:		29% (2549) ? c/s  		 | Progress:		30% (2637) ? c/s  		 / Progress:		31% (2724) ? c/s  		 - Progress:		32% (2812) ? c/s  		 \ Progress:		33% (2900) ? c/s  		 | Progress:		34% (2988) ? c/s  		 / Progress:		35% (3076) ? c/s  		 - Progress:		36% (3164) ? c/s  		 \ Progress:		37% (3252) ? c/s  		 | Progress:		38% (3340) ? c/s  		 / Progress:		39% (3427) ? c/s  		 - Progress:		40% (3515) ? c/s  		 \ Progress:		41% (3603) ? c/s  		 | Progress:		42% (3691) ? c/s  		 / Progress:		43% (3779) ? c/s  		 - Progress:		44% (3867) ? c/s  		 \ Progress:		45% (3955) ? c/s  		 | Progress:		46% (4043) ? c/s  		 / Progress:		47% (4130) ? c/s  		 - Progress:		48% (4218) ? c/s  		 \ Progress:		49% (4306) ? c/s  		 | Progress:		50% (4394) ? c/s  		 / Progress:		51% (4482) ? c/s  		 - Progress:		52% (4570) ? c/s  		 \ Progress:		53% (4658) ? c/s  		 | Progress:		54% (4745) ? c/s  		 / Progress:		55% (4833) ? c/s  		 - Progress:		56% (4921) ? c/s  		 - Progress:		56% (5000) 5000 c/s (0s +/- <1s)                       \ Progress:		57% (5009) 5000 c/s (0s +/- <1s)                       | Progress:		58% (5097) 5000 c/s (0s +/- <1s)                       / Progress:		59% (5185) 5000 c/s (0s +/- <1s)                       - Progress:		60% (5273) 5000 c/s (0s +/- <1s)                       \ Progress:		61% (5361) 5000 c/s (0s +/- <1s)                       | Progress:		62% (5448) 5000 c/s (0s +/- <1s)                       / Progress:		63% (5536) 5000 c/s (0s +/- <1s)                       - Progress:		64% (5624) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (5712) 5000 c/s (0s +/- <1s)                       | Progress:		66% (5800) 5000 c/s (0s +/- <1s)                       / Progress:		67% (5888) 5000 c/s (0s +/- <1s)                       - Progress:		68% (5976) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (6064) 5000 c/s (0s +/- <1s)                       | Progress:		70% (6151) 5000 c/s (0s +/- <1s)                       / Progress:		71% (6239) 5000 c/s (0s +/- <1s)                       - Progress:		72% (6327) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (6415) 5000 c/s (0s +/- <1s)                       | Progress:		74% (6503) 5000 c/s (0s +/- <1s)                       / Progress:		75% (6591) 5000 c/s (0s +/- <1s)                       - Progress:		76% (6679) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (6766) 5000 c/s (0s +/- <1s)                       | Progress:		78% (6854) 5000 c/s (0s +/- <1s)                       / Progress:		79% (6942) 5000 c/s (0s +/- <1s)                       - Progress:		80% (7030) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (7118) 5000 c/s (0s +/- <1s)                       | Progress:		82% (7206) 5000 c/s (0s +/- <1s)                       / Progress:		83% (7294) 5000 c/s (0s +/- <1s)                       - Progress:		84% (7382) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (7469) 5000 c/s (0s +/- <1s)                       | Progress:		86% (7557) 5000 c/s (0s +/- <1s)                       / Progress:		87% (7645) 5000 c/s (0s +/- <1s)                       - Progress:		88% (7733) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (7821) 5000 c/s (0s +/- <1s)                       | Progress:		90% (7909) 5000 c/s (0s +/- <1s)                       / Progress:		91% (7997) 5000 c/s (0s +/- <1s)                       - Progress:		92% (8085) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (8172) 5000 c/s (0s +/- <1s)                       | Progress:		94% (8260) 5000 c/s (0s +/- <1s)                       / Progress:		95% (8348) 5000 c/s (0s +/- <1s)                       - Progress:		96% (8436) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (8524) 5000 c/s (0s +/- <1s)                       | Progress:		98% (8612) 5000 c/s (0s +/- <1s)                       / Progress:		99% (8700) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.018100 seconds.		
 * Result:		(28a,27u,575,2984,1051,4034)
 * Creating:			fold 4
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 4
** Writing FIC database to file
 * File:		train8.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		pima-all-1d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		7239
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(36a,0u,3560,12256,571,12827)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (73) ? c/s  		 | Progress:		2% (145) ? c/s  		 / Progress:		3% (218) ? c/s  		 - Progress:		4% (290) ? c/s  		 \ Progress:		5% (362) ? c/s  		 | Progress:		6% (435) ? c/s  		 / Progress:		7% (507) ? c/s  		 - Progress:		8% (580) ? c/s  		 \ Progress:		9% (652) ? c/s  		 | Progress:		10% (724) ? c/s  		 / Progress:		11% (797) ? c/s  		 - Progress:		12% (869) ? c/s  		 \ Progress:		13% (942) ? c/s  		 | Progress:		14% (1014) ? c/s  		 / Progress:		15% (1086) ? c/s  		 - Progress:		16% (1159) ? c/s  		 \ Progress:		17% (1231) ? c/s  		 | Progress:		18% (1304) ? c/s  		 / Progress:		19% (1376) ? c/s  		 - Progress:		20% (1448) ? c/s  		 \ Progress:		21% (1521) ? c/s  		 | Progress:		22% (1593) ? c/s  		 / Progress:		23% (1665) ? c/s  		 - Progress:		24% (1738) ? c/s  		 \ Progress:		25% (1810) ? c/s  		 | Progress:		26% (1883) ? c/s  		 / Progress:		27% (1955) ? c/s  		 - Progress:		28% (2027) ? c/s  		 \ Progress:		29% (2100) ? c/s  		 | Progress:		30% (2172) ? c/s  		 / Progress:		31% (2245) ? c/s  		 - Progress:		32% (2317) ? c/s  		 \ Progress:		33% (2389) ? c/s  		 | Progress:		34% (2462) ? c/s  		 / Progress:		35% (2534) ? c/s  		 - Progress:		36% (2607) ? c/s  		 \ Progress:		37% (2679) ? c/s  		 | Progress:		38% (2751) ? c/s  		 / Progress:		39% (2824) ? c/s  		 - Progress:		40% (2896) ? c/s  		 \ Progress:		41% (2968) ? c/s  		 | Progress:		42% (3041) ? c/s  		 / Progress:		43% (3113) ? c/s  		 - Progress:		44% (3186) ? c/s  		 \ Progress:		45% (3258) ? c/s  		 | Progress:		46% (3330) ? c/s  		 / Progress:		47% (3403) ? c/s  		 - Progress:		48% (3475) ? c/s  		 \ Progress:		49% (3548) ? c/s  		 | Progress:		50% (3620) ? c/s  		 / Progress:		51% (3692) ? c/s  		 - Progress:		52% (3765) ? c/s  		 \ Progress:		53% (3837) ? c/s  		 | Progress:		54% (3910) ? c/s  		 / Progress:		55% (3982) ? c/s  		 - Progress:		56% (4054) ? c/s  		 \ Progress:		57% (4127) ? c/s  		 | Progress:		58% (4199) ? c/s  		 / Progress:		59% (4272) ? c/s  		 - Progress:		60% (4344) ? c/s  		 \ Progress:		61% (4416) ? c/s  		 | Progress:		62% (4489) ? c/s  		 / Progress:		63% (4561) ? c/s  		 - Progress:		64% (4633) ? c/s  		 \ Progress:		65% (4706) ? c/s  		 | Progress:		66% (4778) ? c/s  		 / Progress:		67% (4851) ? c/s  		 - Progress:		68% (4923) ? c/s  		 \ Progress:		69% (4995) ? c/s  		 \ Progress:		69% (5000) 5000 c/s (0s +/- <1s)                       | Progress:		70% (5068) 5000 c/s (0s +/- <1s)                       / Progress:		71% (5140) 5000 c/s (0s +/- <1s)                       - Progress:		72% (5213) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (5285) 5000 c/s (0s +/- <1s)                       | Progress:		74% (5357) 5000 c/s (0s +/- <1s)                       / Progress:		75% (5430) 5000 c/s (0s +/- <1s)                       - Progress:		76% (5502) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (5575) 5000 c/s (0s +/- <1s)                       | Progress:		78% (5647) 5000 c/s (0s +/- <1s)                       / Progress:		79% (5719) 5000 c/s (0s +/- <1s)                       - Progress:		80% (5792) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (5864) 5000 c/s (0s +/- <1s)                       | Progress:		82% (5936) 5000 c/s (0s +/- <1s)                       / Progress:		83% (6009) 5000 c/s (0s +/- <1s)                       - Progress:		84% (6081) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (6154) 5000 c/s (0s +/- <1s)                       | Progress:		86% (6226) 5000 c/s (0s +/- <1s)                       / Progress:		87% (6298) 5000 c/s (0s +/- <1s)                       - Progress:		88% (6371) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (6443) 5000 c/s (0s +/- <1s)                       | Progress:		90% (6516) 5000 c/s (0s +/- <1s)                       / Progress:		91% (6588) 5000 c/s (0s +/- <1s)                       - Progress:		92% (6660) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (6733) 5000 c/s (0s +/- <1s)                       | Progress:		94% (6805) 5000 c/s (0s +/- <1s)                       / Progress:		95% (6878) 5000 c/s (0s +/- <1s)                       - Progress:		96% (6950) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (7022) 5000 c/s (0s +/- <1s)                       | Progress:		98% (7095) 5000 c/s (0s +/- <1s)                       / Progress:		99% (7167) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.016648 seconds.		
 * Result:		(20a,41u,609,2365,1477,3842)
** Writing FIC database to file
 * File:		train9.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		pima-all-1d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		8395
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(34a,0u,1968,7427,474,7901)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (84) ? c/s  		 | Progress:		2% (168) ? c/s  		 / Progress:		3% (252) ? c/s  		 - Progress:		4% (336) ? c/s  		 \ Progress:		5% (420) ? c/s  		 | Progress:		6% (504) ? c/s  		 / Progress:		7% (588) ? c/s  		 - Progress:		8% (672) ? c/s  		 \ Progress:		9% (756) ? c/s  		 | Progress:		10% (840) ? c/s  		 / Progress:		11% (924) ? c/s  		 - Progress:		12% (1008) ? c/s  		 \ Progress:		13% (1092) ? c/s  		 | Progress:		14% (1176) ? c/s  		 / Progress:		15% (1260) ? c/s  		 - Progress:		16% (1344) ? c/s  		 \ Progress:		17% (1428) ? c/s  		 | Progress:		18% (1512) ? c/s  		 / Progress:		19% (1596) ? c/s  		 - Progress:		20% (1679) ? c/s  		 \ Progress:		21% (1763) ? c/s  		 | Progress:		22% (1847) ? c/s  		 / Progress:		23% (1931) ? c/s  		 - Progress:		24% (2015) ? c/s  		 \ Progress:		25% (2099) ? c/s  		 | Progress:		26% (2183) ? c/s  		 / Progress:		27% (2267) ? c/s  		 - Progress:		28% (2351) ? c/s  		 \ Progress:		29% (2435) ? c/s  		 | Progress:		30% (2519) ? c/s  		 / Progress:		31% (2603) ? c/s  		 - Progress:		32% (2687) ? c/s  		 \ Progress:		33% (2771) ? c/s  		 | Progress:		34% (2855) ? c/s  		 / Progress:		35% (2939) ? c/s  		 - Progress:		36% (3023) ? c/s  		 \ Progress:		37% (3107) ? c/s  		 | Progress:		38% (3191) ? c/s  		 / Progress:		39% (3275) ? c/s  		 - Progress:		40% (3358) ? c/s  		 \ Progress:		41% (3442) ? c/s  		 | Progress:		42% (3526) ? c/s  		 / Progress:		43% (3610) ? c/s  		 - Progress:		44% (3694) ? c/s  		 \ Progress:		45% (3778) ? c/s  		 | Progress:		46% (3862) ? c/s  		 / Progress:		47% (3946) ? c/s  		 - Progress:		48% (4030) ? c/s  		 \ Progress:		49% (4114) ? c/s  		 | Progress:		50% (4198) ? c/s  		 / Progress:		51% (4282) ? c/s  		 - Progress:		52% (4366) ? c/s  		 \ Progress:		53% (4450) ? c/s  		 | Progress:		54% (4534) ? c/s  		 / Progress:		55% (4618) ? c/s  		 - Progress:		56% (4702) ? c/s  		 \ Progress:		57% (4786) ? c/s  		 | Progress:		58% (4870) ? c/s  		 / Progress:		59% (4954) ? c/s  		 / Progress:		59% (5000) 5000 c/s (0s +/- <1s)                       - Progress:		60% (5037) 5000 c/s (0s +/- <1s)                       \ Progress:		61% (5121) 5000 c/s (0s +/- <1s)                       | Progress:		62% (5205) 5000 c/s (0s +/- <1s)                       / Progress:		63% (5289) 5000 c/s (0s +/- <1s)                       - Progress:		64% (5373) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (5457) 5000 c/s (0s +/- <1s)                       | Progress:		66% (5541) 5000 c/s (0s +/- <1s)                       / Progress:		67% (5625) 5000 c/s (0s +/- <1s)                       - Progress:		68% (5709) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (5793) 5000 c/s (0s +/- <1s)                       | Progress:		70% (5877) 5000 c/s (0s +/- <1s)                       / Progress:		71% (5961) 5000 c/s (0s +/- <1s)                       - Progress:		72% (6045) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (6129) 5000 c/s (0s +/- <1s)                       | Progress:		74% (6213) 5000 c/s (0s +/- <1s)                       / Progress:		75% (6297) 5000 c/s (0s +/- <1s)                       - Progress:		76% (6381) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (6465) 5000 c/s (0s +/- <1s)                       | Progress:		78% (6549) 5000 c/s (0s +/- <1s)                       / Progress:		79% (6633) 5000 c/s (0s +/- <1s)                       - Progress:		80% (6716) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (6800) 5000 c/s (0s +/- <1s)                       | Progress:		82% (6884) 5000 c/s (0s +/- <1s)                       / Progress:		83% (6968) 5000 c/s (0s +/- <1s)                       - Progress:		84% (7052) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (7136) 5000 c/s (0s +/- <1s)                       | Progress:		86% (7220) 5000 c/s (0s +/- <1s)                       / Progress:		87% (7304) 5000 c/s (0s +/- <1s)                       - Progress:		88% (7388) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (7472) 5000 c/s (0s +/- <1s)                       | Progress:		90% (7556) 5000 c/s (0s +/- <1s)                       / Progress:		91% (7640) 5000 c/s (0s +/- <1s)                       - Progress:		92% (7724) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (7808) 5000 c/s (0s +/- <1s)                       | Progress:		94% (7892) 5000 c/s (0s +/- <1s)                       / Progress:		95% (7976) 5000 c/s (0s +/- <1s)                       - Progress:		96% (8060) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (8144) 5000 c/s (0s +/- <1s)                       | Progress:		98% (8228) 5000 c/s (0s +/- <1s)                       / Progress:		99% (8312) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.018324 seconds.		
 * Result:		(25a,31u,531,2778,1118,3896)
 * Creating:			fold 5
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 5
** Writing FIC database to file
 * File:		train8.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		pima-all-1d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		7703
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(36a,0u,3600,12436,565,13001)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (78) ? c/s  		 | Progress:		2% (155) ? c/s  		 / Progress:		3% (232) ? c/s  		 - Progress:		4% (309) ? c/s  		 \ Progress:		5% (386) ? c/s  		 | Progress:		6% (463) ? c/s  		 / Progress:		7% (540) ? c/s  		 - Progress:		8% (617) ? c/s  		 \ Progress:		9% (694) ? c/s  		 | Progress:		10% (771) ? c/s  		 / Progress:		11% (848) ? c/s  		 - Progress:		12% (925) ? c/s  		 \ Progress:		13% (1002) ? c/s  		 | Progress:		14% (1079) ? c/s  		 / Progress:		15% (1156) ? c/s  		 - Progress:		16% (1233) ? c/s  		 \ Progress:		17% (1310) ? c/s  		 | Progress:		18% (1387) ? c/s  		 / Progress:		19% (1464) ? c/s  		 - Progress:		20% (1541) ? c/s  		 \ Progress:		21% (1618) ? c/s  		 | Progress:		22% (1695) ? c/s  		 / Progress:		23% (1772) ? c/s  		 - Progress:		24% (1849) ? c/s  		 \ Progress:		25% (1926) ? c/s  		 | Progress:		26% (2003) ? c/s  		 / Progress:		27% (2080) ? c/s  		 - Progress:		28% (2157) ? c/s  		 \ Progress:		29% (2234) ? c/s  		 | Progress:		30% (2311) ? c/s  		 / Progress:		31% (2388) ? c/s  		 - Progress:		32% (2465) ? c/s  		 \ Progress:		33% (2542) ? c/s  		 | Progress:		34% (2620) ? c/s  		 / Progress:		35% (2697) ? c/s  		 - Progress:		36% (2774) ? c/s  		 \ Progress:		37% (2851) ? c/s  		 | Progress:		38% (2928) ? c/s  		 / Progress:		39% (3005) ? c/s  		 - Progress:		40% (3082) ? c/s  		 \ Progress:		41% (3159) ? c/s  		 | Progress:		42% (3236) ? c/s  		 / Progress:		43% (3313) ? c/s  		 - Progress:		44% (3390) ? c/s  		 \ Progress:		45% (3467) ? c/s  		 | Progress:		46% (3544) ? c/s  		 / Progress:		47% (3621) ? c/s  		 - Progress:		48% (3698) ? c/s  		 \ Progress:		49% (3775) ? c/s  		 | Progress:		50% (3852) ? c/s  		 / Progress:		51% (3929) ? c/s  		 - Progress:		52% (4006) ? c/s  		 \ Progress:		53% (4083) ? c/s  		 | Progress:		54% (4160) ? c/s  		 / Progress:		55% (4237) ? c/s  		 - Progress:		56% (4314) ? c/s  		 \ Progress:		57% (4391) ? c/s  		 | Progress:		58% (4468) ? c/s  		 / Progress:		59% (4545) ? c/s  		 - Progress:		60% (4622) ? c/s  		 \ Progress:		61% (4699) ? c/s  		 | Progress:		62% (4776) ? c/s  		 / Progress:		63% (4853) ? c/s  		 - Progress:		64% (4930) ? c/s  		 - Progress:		64% (5000) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (5007) 5000 c/s (0s +/- <1s)                       | Progress:		66% (5084) 5000 c/s (0s +/- <1s)                       / Progress:		67% (5162) 5000 c/s (0s +/- <1s)                       - Progress:		68% (5239) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (5316) 5000 c/s (0s +/- <1s)                       | Progress:		70% (5393) 5000 c/s (0s +/- <1s)                       / Progress:		71% (5470) 5000 c/s (0s +/- <1s)                       - Progress:		72% (5547) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (5624) 5000 c/s (0s +/- <1s)                       | Progress:		74% (5701) 5000 c/s (0s +/- <1s)                       / Progress:		75% (5778) 5000 c/s (0s +/- <1s)                       - Progress:		76% (5855) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (5932) 5000 c/s (0s +/- <1s)                       | Progress:		78% (6009) 5000 c/s (0s +/- <1s)                       / Progress:		79% (6086) 5000 c/s (0s +/- <1s)                       - Progress:		80% (6163) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (6240) 5000 c/s (0s +/- <1s)                       | Progress:		82% (6317) 5000 c/s (0s +/- <1s)                       / Progress:		83% (6394) 5000 c/s (0s +/- <1s)                       - Progress:		84% (6471) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (6548) 5000 c/s (0s +/- <1s)                       | Progress:		86% (6625) 5000 c/s (0s +/- <1s)                       / Progress:		87% (6702) 5000 c/s (0s +/- <1s)                       - Progress:		88% (6779) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (6856) 5000 c/s (0s +/- <1s)                       | Progress:		90% (6933) 5000 c/s (0s +/- <1s)                       / Progress:		91% (7010) 5000 c/s (0s +/- <1s)                       - Progress:		92% (7087) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (7164) 5000 c/s (0s +/- <1s)                       | Progress:		94% (7241) 5000 c/s (0s +/- <1s)                       / Progress:		95% (7318) 5000 c/s (0s +/- <1s)                       - Progress:		96% (7395) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (7472) 5000 c/s (0s +/- <1s)                       | Progress:		98% (7549) 5000 c/s (0s +/- <1s)                       / Progress:		99% (7626) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.018990 seconds.		
 * Result:		(24a,30u,701,2877,1203,4080)
** Writing FIC database to file
 * File:		train9.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		pima-all-1d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		8711
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(35a,0u,1928,7336,491,7826)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (88) ? c/s  		 | Progress:		2% (175) ? c/s  		 / Progress:		3% (262) ? c/s  		 - Progress:		4% (349) ? c/s  		 \ Progress:		5% (436) ? c/s  		 | Progress:		6% (523) ? c/s  		 / Progress:		7% (610) ? c/s  		 - Progress:		8% (697) ? c/s  		 \ Progress:		9% (784) ? c/s  		 | Progress:		10% (872) ? c/s  		 / Progress:		11% (959) ? c/s  		 - Progress:		12% (1046) ? c/s  		 \ Progress:		13% (1133) ? c/s  		 | Progress:		14% (1220) ? c/s  		 / Progress:		15% (1307) ? c/s  		 - Progress:		16% (1394) ? c/s  		 \ Progress:		17% (1481) ? c/s  		 | Progress:		18% (1568) ? c/s  		 / Progress:		19% (1656) ? c/s  		 - Progress:		20% (1743) ? c/s  		 \ Progress:		21% (1830) ? c/s  		 | Progress:		22% (1917) ? c/s  		 / Progress:		23% (2004) ? c/s  		 - Progress:		24% (2091) ? c/s  		 \ Progress:		25% (2178) ? c/s  		 | Progress:		26% (2265) ? c/s  		 / Progress:		27% (2352) ? c/s  		 - Progress:		28% (2440) ? c/s  		 \ Progress:		29% (2527) ? c/s  		 | Progress:		30% (2614) ? c/s  		 / Progress:		31% (2701) ? c/s  		 - Progress:		32% (2788) ? c/s  		 \ Progress:		33% (2875) ? c/s  		 | Progress:		34% (2962) ? c/s  		 / Progress:		35% (3049) ? c/s  		 - Progress:		36% (3136) ? c/s  		 \ Progress:		37% (3224) ? c/s  		 | Progress:		38% (3311) ? c/s  		 / Progress:		39% (3398) ? c/s  		 - Progress:		40% (3485) ? c/s  		 \ Progress:		41% (3572) ? c/s  		 | Progress:		42% (3659) ? c/s  		 / Progress:		43% (3746) ? c/s  		 - Progress:		44% (3833) ? c/s  		 \ Progress:		45% (3920) ? c/s  		 | Progress:		46% (4008) ? c/s  		 / Progress:		47% (4095) ? c/s  		 - Progress:		48% (4182) ? c/s  		 \ Progress:		49% (4269) ? c/s  		 | Progress:		50% (4356) ? c/s  		 / Progress:		51% (4443) ? c/s  		 - Progress:		52% (4530) ? c/s  		 \ Progress:		53% (4617) ? c/s  		 | Progress:		54% (4704) ? c/s  		 / Progress:		55% (4792) ? c/s  		 - Progress:		56% (4879) ? c/s  		 \ Progress:		57% (4966) ? c/s  		 \ Progress:		57% (5000) 5000 c/s (0s +/- <1s)                       | Progress:		58% (5053) 5000 c/s (0s +/- <1s)                       / Progress:		59% (5140) 5000 c/s (0s +/- <1s)                       - Progress:		60% (5227) 5000 c/s (0s +/- <1s)                       \ Progress:		61% (5314) 5000 c/s (0s +/- <1s)                       | Progress:		62% (5401) 5000 c/s (0s +/- <1s)                       / Progress:		63% (5488) 5000 c/s (0s +/- <1s)                       - Progress:		64% (5576) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (5663) 5000 c/s (0s +/- <1s)                       | Progress:		66% (5750) 5000 c/s (0s +/- <1s)                       / Progress:		67% (5837) 5000 c/s (0s +/- <1s)                       - Progress:		68% (5924) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (6011) 5000 c/s (0s +/- <1s)                       | Progress:		70% (6098) 5000 c/s (0s +/- <1s)                       / Progress:		71% (6185) 5000 c/s (0s +/- <1s)                       - Progress:		72% (6272) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (6360) 5000 c/s (0s +/- <1s)                       | Progress:		74% (6447) 5000 c/s (0s +/- <1s)                       / Progress:		75% (6534) 5000 c/s (0s +/- <1s)                       - Progress:		76% (6621) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (6708) 5000 c/s (0s +/- <1s)                       | Progress:		78% (6795) 5000 c/s (0s +/- <1s)                       / Progress:		79% (6882) 5000 c/s (0s +/- <1s)                       - Progress:		80% (6969) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (7056) 5000 c/s (0s +/- <1s)                       | Progress:		82% (7144) 5000 c/s (0s +/- <1s)                       / Progress:		83% (7231) 5000 c/s (0s +/- <1s)                       - Progress:		84% (7318) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (7405) 5000 c/s (0s +/- <1s)                       | Progress:		86% (7492) 5000 c/s (0s +/- <1s)                       / Progress:		87% (7579) 5000 c/s (0s +/- <1s)                       - Progress:		88% (7666) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (7753) 5000 c/s (0s +/- <1s)                       | Progress:		90% (7840) 5000 c/s (0s +/- <1s)                       / Progress:		91% (7928) 5000 c/s (0s +/- <1s)                       - Progress:		92% (8015) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (8102) 5000 c/s (0s +/- <1s)                       | Progress:		94% (8189) 5000 c/s (0s +/- <1s)                       / Progress:		95% (8276) 5000 c/s (0s +/- <1s)                       - Progress:		96% (8363) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (8450) 5000 c/s (0s +/- <1s)                       | Progress:		98% (8537) 5000 c/s (0s +/- <1s)                       / Progress:		99% (8624) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.018974 seconds.		
 * Result:		(26a,31u,543,2851,1141,3992)
 * Creating:			fold 6
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 6
** Writing FIC database to file
 * File:		train8.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		pima-all-1d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		7435
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(36a,0u,3592,12354,569,12923)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (75) ? c/s  		 | Progress:		2% (149) ? c/s  		 / Progress:		3% (224) ? c/s  		 - Progress:		4% (298) ? c/s  		 \ Progress:		5% (372) ? c/s  		 | Progress:		6% (447) ? c/s  		 / Progress:		7% (521) ? c/s  		 - Progress:		8% (595) ? c/s  		 \ Progress:		9% (670) ? c/s  		 | Progress:		10% (744) ? c/s  		 / Progress:		11% (818) ? c/s  		 - Progress:		12% (893) ? c/s  		 \ Progress:		13% (967) ? c/s  		 | Progress:		14% (1041) ? c/s  		 / Progress:		15% (1116) ? c/s  		 - Progress:		16% (1190) ? c/s  		 \ Progress:		17% (1264) ? c/s  		 | Progress:		18% (1339) ? c/s  		 / Progress:		19% (1413) ? c/s  		 - Progress:		20% (1487) ? c/s  		 \ Progress:		21% (1562) ? c/s  		 | Progress:		22% (1636) ? c/s  		 / Progress:		23% (1711) ? c/s  		 - Progress:		24% (1785) ? c/s  		 \ Progress:		25% (1859) ? c/s  		 | Progress:		26% (1934) ? c/s  		 / Progress:		27% (2008) ? c/s  		 - Progress:		28% (2082) ? c/s  		 \ Progress:		29% (2157) ? c/s  		 | Progress:		30% (2231) ? c/s  		 / Progress:		31% (2305) ? c/s  		 - Progress:		32% (2380) ? c/s  		 \ Progress:		33% (2454) ? c/s  		 | Progress:		34% (2528) ? c/s  		 / Progress:		35% (2603) ? c/s  		 - Progress:		36% (2677) ? c/s  		 \ Progress:		37% (2751) ? c/s  		 | Progress:		38% (2826) ? c/s  		 / Progress:		39% (2900) ? c/s  		 - Progress:		40% (2974) ? c/s  		 \ Progress:		41% (3049) ? c/s  		 | Progress:		42% (3123) ? c/s  		 / Progress:		43% (3198) ? c/s  		 - Progress:		44% (3272) ? c/s  		 \ Progress:		45% (3346) ? c/s  		 | Progress:		46% (3421) ? c/s  		 / Progress:		47% (3495) ? c/s  		 - Progress:		48% (3569) ? c/s  		 \ Progress:		49% (3644) ? c/s  		 | Progress:		50% (3718) ? c/s  		 / Progress:		51% (3792) ? c/s  		 - Progress:		52% (3867) ? c/s  		 \ Progress:		53% (3941) ? c/s  		 | Progress:		54% (4015) ? c/s  		 / Progress:		55% (4090) ? c/s  		 - Progress:		56% (4164) ? c/s  		 \ Progress:		57% (4238) ? c/s  		 | Progress:		58% (4313) ? c/s  		 / Progress:		59% (4387) ? c/s  		 - Progress:		60% (4461) ? c/s  		 \ Progress:		61% (4536) ? c/s  		 | Progress:		62% (4610) ? c/s  		 / Progress:		63% (4685) ? c/s  		 - Progress:		64% (4759) ? c/s  		 \ Progress:		65% (4833) ? c/s  		 | Progress:		66% (4908) ? c/s  		 / Progress:		67% (4982) ? c/s  		 / Progress:		67% (5000) 5000 c/s (0s +/- <1s)                       - Progress:		68% (5056) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (5131) 5000 c/s (0s +/- <1s)                       | Progress:		70% (5205) 5000 c/s (0s +/- <1s)                       / Progress:		71% (5279) 5000 c/s (0s +/- <1s)                       - Progress:		72% (5354) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (5428) 5000 c/s (0s +/- <1s)                       | Progress:		74% (5502) 5000 c/s (0s +/- <1s)                       / Progress:		75% (5577) 5000 c/s (0s +/- <1s)                       - Progress:		76% (5651) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (5725) 5000 c/s (0s +/- <1s)                       | Progress:		78% (5800) 5000 c/s (0s +/- <1s)                       / Progress:		79% (5874) 5000 c/s (0s +/- <1s)                       - Progress:		80% (5948) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (6023) 5000 c/s (0s +/- <1s)                       | Progress:		82% (6097) 5000 c/s (0s +/- <1s)                       / Progress:		83% (6172) 5000 c/s (0s +/- <1s)                       - Progress:		84% (6246) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (6320) 5000 c/s (0s +/- <1s)                       | Progress:		86% (6395) 5000 c/s (0s +/- <1s)                       / Progress:		87% (6469) 5000 c/s (0s +/- <1s)                       - Progress:		88% (6543) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (6618) 5000 c/s (0s +/- <1s)                       | Progress:		90% (6692) 5000 c/s (0s +/- <1s)                       / Progress:		91% (6766) 5000 c/s (0s +/- <1s)                       - Progress:		92% (6841) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (6915) 5000 c/s (0s +/- <1s)                       | Progress:		94% (6989) 5000 c/s (0s +/- <1s)                       / Progress:		95% (7064) 5000 c/s (0s +/- <1s)                       - Progress:		96% (7138) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (7212) 5000 c/s (0s +/- <1s)                       | Progress:		98% (7287) 5000 c/s (0s +/- <1s)                       / Progress:		99% (7361) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.017603 seconds.		
 * Result:		(27a,27u,702,2917,1086,4003)
** Writing FIC database to file
 * File:		train9.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		pima-all-1d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		8487
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(35a,0u,1936,7304,498,7801)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (85) ? c/s  		 | Progress:		2% (170) ? c/s  		 / Progress:		3% (255) ? c/s  		 - Progress:		4% (340) ? c/s  		 \ Progress:		5% (425) ? c/s  		 | Progress:		6% (510) ? c/s  		 / Progress:		7% (595) ? c/s  		 - Progress:		8% (679) ? c/s  		 \ Progress:		9% (764) ? c/s  		 | Progress:		10% (849) ? c/s  		 / Progress:		11% (934) ? c/s  		 - Progress:		12% (1019) ? c/s  		 \ Progress:		13% (1104) ? c/s  		 | Progress:		14% (1189) ? c/s  		 / Progress:		15% (1274) ? c/s  		 - Progress:		16% (1358) ? c/s  		 \ Progress:		17% (1443) ? c/s  		 | Progress:		18% (1528) ? c/s  		 / Progress:		19% (1613) ? c/s  		 - Progress:		20% (1698) ? c/s  		 \ Progress:		21% (1783) ? c/s  		 | Progress:		22% (1868) ? c/s  		 / Progress:		23% (1953) ? c/s  		 - Progress:		24% (2037) ? c/s  		 \ Progress:		25% (2122) ? c/s  		 | Progress:		26% (2207) ? c/s  		 / Progress:		27% (2292) ? c/s  		 - Progress:		28% (2377) ? c/s  		 \ Progress:		29% (2462) ? c/s  		 | Progress:		30% (2547) ? c/s  		 / Progress:		31% (2631) ? c/s  		 - Progress:		32% (2716) ? c/s  		 \ Progress:		33% (2801) ? c/s  		 | Progress:		34% (2886) ? c/s  		 / Progress:		35% (2971) ? c/s  		 - Progress:		36% (3056) ? c/s  		 \ Progress:		37% (3141) ? c/s  		 | Progress:		38% (3226) ? c/s  		 / Progress:		39% (3310) ? c/s  		 - Progress:		40% (3395) ? c/s  		 \ Progress:		41% (3480) ? c/s  		 | Progress:		42% (3565) ? c/s  		 / Progress:		43% (3650) ? c/s  		 - Progress:		44% (3735) ? c/s  		 \ Progress:		45% (3820) ? c/s  		 | Progress:		46% (3905) ? c/s  		 / Progress:		47% (3989) ? c/s  		 - Progress:		48% (4074) ? c/s  		 \ Progress:		49% (4159) ? c/s  		 | Progress:		50% (4244) ? c/s  		 / Progress:		51% (4329) ? c/s  		 - Progress:		52% (4414) ? c/s  		 \ Progress:		53% (4499) ? c/s  		 | Progress:		54% (4583) ? c/s  		 / Progress:		55% (4668) ? c/s  		 - Progress:		56% (4753) ? c/s  		 \ Progress:		57% (4838) ? c/s  		 | Progress:		58% (4923) ? c/s  		 | Progress:		58% (5000) 5000 c/s (0s +/- <1s)                       / Progress:		59% (5008) 5000 c/s (0s +/- <1s)                       - Progress:		60% (5093) 5000 c/s (0s +/- <1s)                       \ Progress:		61% (5178) 5000 c/s (0s +/- <1s)                       | Progress:		62% (5262) 5000 c/s (0s +/- <1s)                       / Progress:		63% (5347) 5000 c/s (0s +/- <1s)                       - Progress:		64% (5432) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (5517) 5000 c/s (0s +/- <1s)                       | Progress:		66% (5602) 5000 c/s (0s +/- <1s)                       / Progress:		67% (5687) 5000 c/s (0s +/- <1s)                       - Progress:		68% (5772) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (5857) 5000 c/s (0s +/- <1s)                       | Progress:		70% (5941) 5000 c/s (0s +/- <1s)                       / Progress:		71% (6026) 5000 c/s (0s +/- <1s)                       - Progress:		72% (6111) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (6196) 5000 c/s (0s +/- <1s)                       | Progress:		74% (6281) 5000 c/s (0s +/- <1s)                       / Progress:		75% (6366) 5000 c/s (0s +/- <1s)                       - Progress:		76% (6451) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (6535) 5000 c/s (0s +/- <1s)                       | Progress:		78% (6620) 5000 c/s (0s +/- <1s)                       / Progress:		79% (6705) 5000 c/s (0s +/- <1s)                       - Progress:		80% (6790) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (6875) 5000 c/s (0s +/- <1s)                       | Progress:		82% (6960) 5000 c/s (0s +/- <1s)                       / Progress:		83% (7045) 5000 c/s (0s +/- <1s)                       - Progress:		84% (7130) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (7214) 5000 c/s (0s +/- <1s)                       | Progress:		86% (7299) 5000 c/s (0s +/- <1s)                       / Progress:		87% (7384) 5000 c/s (0s +/- <1s)                       - Progress:		88% (7469) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (7554) 5000 c/s (0s +/- <1s)                       | Progress:		90% (7639) 5000 c/s (0s +/- <1s)                       / Progress:		91% (7724) 5000 c/s (0s +/- <1s)                       - Progress:		92% (7809) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (7893) 5000 c/s (0s +/- <1s)                       | Progress:		94% (7978) 5000 c/s (0s +/- <1s)                       / Progress:		95% (8063) 5000 c/s (0s +/- <1s)                       - Progress:		96% (8148) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (8233) 5000 c/s (0s +/- <1s)                       | Progress:		98% (8318) 5000 c/s (0s +/- <1s)                       / Progress:		99% (8403) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.017667 seconds.		
 * Result:		(27a,27u,544,2777,1105,3882)
 * Creating:			fold 7
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 7
** Writing FIC database to file
 * File:		train8.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		pima-all-1d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		7567
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(36a,0u,3592,12390,567,12957)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (76) ? c/s  		 | Progress:		2% (152) ? c/s  		 / Progress:		3% (228) ? c/s  		 - Progress:		4% (303) ? c/s  		 \ Progress:		5% (379) ? c/s  		 | Progress:		6% (455) ? c/s  		 / Progress:		7% (530) ? c/s  		 - Progress:		8% (606) ? c/s  		 \ Progress:		9% (682) ? c/s  		 | Progress:		10% (757) ? c/s  		 / Progress:		11% (833) ? c/s  		 - Progress:		12% (909) ? c/s  		 \ Progress:		13% (984) ? c/s  		 | Progress:		14% (1060) ? c/s  		 / Progress:		15% (1136) ? c/s  		 - Progress:		16% (1211) ? c/s  		 \ Progress:		17% (1287) ? c/s  		 | Progress:		18% (1363) ? c/s  		 / Progress:		19% (1438) ? c/s  		 - Progress:		20% (1514) ? c/s  		 \ Progress:		21% (1590) ? c/s  		 | Progress:		22% (1665) ? c/s  		 / Progress:		23% (1741) ? c/s  		 - Progress:		24% (1817) ? c/s  		 \ Progress:		25% (1892) ? c/s  		 | Progress:		26% (1968) ? c/s  		 / Progress:		27% (2044) ? c/s  		 - Progress:		28% (2119) ? c/s  		 \ Progress:		29% (2195) ? c/s  		 | Progress:		30% (2271) ? c/s  		 / Progress:		31% (2346) ? c/s  		 - Progress:		32% (2422) ? c/s  		 \ Progress:		33% (2498) ? c/s  		 | Progress:		34% (2573) ? c/s  		 / Progress:		35% (2649) ? c/s  		 - Progress:		36% (2725) ? c/s  		 \ Progress:		37% (2800) ? c/s  		 | Progress:		38% (2876) ? c/s  		 / Progress:		39% (2952) ? c/s  		 - Progress:		40% (3027) ? c/s  		 \ Progress:		41% (3103) ? c/s  		 | Progress:		42% (3179) ? c/s  		 / Progress:		43% (3254) ? c/s  		 - Progress:		44% (3330) ? c/s  		 \ Progress:		45% (3406) ? c/s  		 | Progress:		46% (3481) ? c/s  		 / Progress:		47% (3557) ? c/s  		 - Progress:		48% (3633) ? c/s  		 \ Progress:		49% (3708) ? c/s  		 | Progress:		50% (3784) ? c/s  		 / Progress:		51% (3860) ? c/s  		 - Progress:		52% (3935) ? c/s  		 \ Progress:		53% (4011) ? c/s  		 | Progress:		54% (4087) ? c/s  		 / Progress:		55% (4162) ? c/s  		 - Progress:		56% (4238) ? c/s  		 \ Progress:		57% (4314) ? c/s  		 | Progress:		58% (4389) ? c/s  		 / Progress:		59% (4465) ? c/s  		 - Progress:		60% (4541) ? c/s  		 \ Progress:		61% (4616) ? c/s  		 | Progress:		62% (4692) ? c/s  		 / Progress:		63% (4768) ? c/s  		 - Progress:		64% (4843) ? c/s  		 \ Progress:		65% (4919) ? c/s  		 | Progress:		66% (4995) ? c/s  		 | Progress:		66% (5000) 5000 c/s (0s +/- <1s)                       / Progress:		67% (5070) 5000 c/s (0s +/- <1s)                       - Progress:		68% (5146) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (5222) 5000 c/s (0s +/- <1s)                       | Progress:		70% (5297) 5000 c/s (0s +/- <1s)                       / Progress:		71% (5373) 5000 c/s (0s +/- <1s)                       - Progress:		72% (5449) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (5524) 5000 c/s (0s +/- <1s)                       | Progress:		74% (5600) 5000 c/s (0s +/- <1s)                       / Progress:		75% (5676) 5000 c/s (0s +/- <1s)                       - Progress:		76% (5751) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (5827) 5000 c/s (0s +/- <1s)                       | Progress:		78% (5903) 5000 c/s (0s +/- <1s)                       / Progress:		79% (5978) 5000 c/s (0s +/- <1s)                       - Progress:		80% (6054) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (6130) 5000 c/s (0s +/- <1s)                       | Progress:		82% (6205) 5000 c/s (0s +/- <1s)                       / Progress:		83% (6281) 5000 c/s (0s +/- <1s)                       - Progress:		84% (6357) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (6432) 5000 c/s (0s +/- <1s)                       | Progress:		86% (6508) 5000 c/s (0s +/- <1s)                       / Progress:		87% (6584) 5000 c/s (0s +/- <1s)                       - Progress:		88% (6659) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (6735) 5000 c/s (0s +/- <1s)                       | Progress:		90% (6811) 5000 c/s (0s +/- <1s)                       / Progress:		91% (6886) 5000 c/s (0s +/- <1s)                       - Progress:		92% (6962) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (7038) 5000 c/s (0s +/- <1s)                       | Progress:		94% (7113) 5000 c/s (0s +/- <1s)                       / Progress:		95% (7189) 5000 c/s (0s +/- <1s)                       - Progress:		96% (7265) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (7340) 5000 c/s (0s +/- <1s)                       | Progress:		98% (7416) 5000 c/s (0s +/- <1s)                       / Progress:		99% (7492) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.019009 seconds.		
 * Result:		(28a,31u,665,2758,1253,4011)
** Writing FIC database to file
 * File:		train9.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		pima-all-1d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		8187
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(35a,0u,1936,7291,497,7788)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (82) ? c/s  		 | Progress:		2% (164) ? c/s  		 / Progress:		3% (246) ? c/s  		 - Progress:		4% (328) ? c/s  		 \ Progress:		5% (410) ? c/s  		 | Progress:		6% (492) ? c/s  		 / Progress:		7% (574) ? c/s  		 - Progress:		8% (655) ? c/s  		 \ Progress:		9% (737) ? c/s  		 | Progress:		10% (819) ? c/s  		 / Progress:		11% (901) ? c/s  		 - Progress:		12% (983) ? c/s  		 \ Progress:		13% (1065) ? c/s  		 | Progress:		14% (1147) ? c/s  		 / Progress:		15% (1229) ? c/s  		 - Progress:		16% (1310) ? c/s  		 \ Progress:		17% (1392) ? c/s  		 | Progress:		18% (1474) ? c/s  		 / Progress:		19% (1556) ? c/s  		 - Progress:		20% (1638) ? c/s  		 \ Progress:		21% (1720) ? c/s  		 | Progress:		22% (1802) ? c/s  		 / Progress:		23% (1884) ? c/s  		 - Progress:		24% (1965) ? c/s  		 \ Progress:		25% (2047) ? c/s  		 | Progress:		26% (2129) ? c/s  		 / Progress:		27% (2211) ? c/s  		 - Progress:		28% (2293) ? c/s  		 \ Progress:		29% (2375) ? c/s  		 | Progress:		30% (2457) ? c/s  		 / Progress:		31% (2538) ? c/s  		 - Progress:		32% (2620) ? c/s  		 \ Progress:		33% (2702) ? c/s  		 | Progress:		34% (2784) ? c/s  		 / Progress:		35% (2866) ? c/s  		 - Progress:		36% (2948) ? c/s  		 \ Progress:		37% (3030) ? c/s  		 | Progress:		38% (3112) ? c/s  		 / Progress:		39% (3193) ? c/s  		 - Progress:		40% (3275) ? c/s  		 \ Progress:		41% (3357) ? c/s  		 | Progress:		42% (3439) ? c/s  		 / Progress:		43% (3521) ? c/s  		 - Progress:		44% (3603) ? c/s  		 \ Progress:		45% (3685) ? c/s  		 | Progress:		46% (3767) ? c/s  		 / Progress:		47% (3848) ? c/s  		 - Progress:		48% (3930) ? c/s  		 \ Progress:		49% (4012) ? c/s  		 | Progress:		50% (4094) ? c/s  		 / Progress:		51% (4176) ? c/s  		 - Progress:		52% (4258) ? c/s  		 \ Progress:		53% (4340) ? c/s  		 | Progress:		54% (4421) ? c/s  		 / Progress:		55% (4503) ? c/s  		 - Progress:		56% (4585) ? c/s  		 \ Progress:		57% (4667) ? c/s  		 | Progress:		58% (4749) ? c/s  		 / Progress:		59% (4831) ? c/s  		 - Progress:		60% (4913) ? c/s  		 \ Progress:		61% (4995) ? c/s  		 \ Progress:		61% (5000) 5000 c/s (0s +/- <1s)                       | Progress:		62% (5076) 5000 c/s (0s +/- <1s)                       / Progress:		63% (5158) 5000 c/s (0s +/- <1s)                       - Progress:		64% (5240) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (5322) 5000 c/s (0s +/- <1s)                       | Progress:		66% (5404) 5000 c/s (0s +/- <1s)                       / Progress:		67% (5486) 5000 c/s (0s +/- <1s)                       - Progress:		68% (5568) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (5650) 5000 c/s (0s +/- <1s)                       | Progress:		70% (5731) 5000 c/s (0s +/- <1s)                       / Progress:		71% (5813) 5000 c/s (0s +/- <1s)                       - Progress:		72% (5895) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (5977) 5000 c/s (0s +/- <1s)                       | Progress:		74% (6059) 5000 c/s (0s +/- <1s)                       / Progress:		75% (6141) 5000 c/s (0s +/- <1s)                       - Progress:		76% (6223) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (6304) 5000 c/s (0s +/- <1s)                       | Progress:		78% (6386) 5000 c/s (0s +/- <1s)                       / Progress:		79% (6468) 5000 c/s (0s +/- <1s)                       - Progress:		80% (6550) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (6632) 5000 c/s (0s +/- <1s)                       | Progress:		82% (6714) 5000 c/s (0s +/- <1s)                       / Progress:		83% (6796) 5000 c/s (0s +/- <1s)                       - Progress:		84% (6878) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (6959) 5000 c/s (0s +/- <1s)                       | Progress:		86% (7041) 5000 c/s (0s +/- <1s)                       / Progress:		87% (7123) 5000 c/s (0s +/- <1s)                       - Progress:		88% (7205) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (7287) 5000 c/s (0s +/- <1s)                       | Progress:		90% (7369) 5000 c/s (0s +/- <1s)                       / Progress:		91% (7451) 5000 c/s (0s +/- <1s)                       - Progress:		92% (7533) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (7614) 5000 c/s (0s +/- <1s)                       | Progress:		94% (7696) 5000 c/s (0s +/- <1s)                       / Progress:		95% (7778) 5000 c/s (0s +/- <1s)                       - Progress:		96% (7860) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (7942) 5000 c/s (0s +/- <1s)                       | Progress:		98% (8024) 5000 c/s (0s +/- <1s)                       / Progress:		99% (8106) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.015702 seconds.		
 * Result:		(28a,28u,535,2746,1102,3848)
 * Creating:			fold 8
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 8
** Writing FIC database to file
 * File:		train8.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		pima-all-1d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		7479
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(36a,0u,3640,12542,567,13109)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (75) ? c/s  		 | Progress:		2% (150) ? c/s  		 / Progress:		3% (225) ? c/s  		 - Progress:		4% (300) ? c/s  		 \ Progress:		5% (374) ? c/s  		 | Progress:		6% (449) ? c/s  		 / Progress:		7% (524) ? c/s  		 - Progress:		8% (599) ? c/s  		 \ Progress:		9% (674) ? c/s  		 | Progress:		10% (748) ? c/s  		 / Progress:		11% (823) ? c/s  		 - Progress:		12% (898) ? c/s  		 \ Progress:		13% (973) ? c/s  		 | Progress:		14% (1048) ? c/s  		 / Progress:		15% (1122) ? c/s  		 - Progress:		16% (1197) ? c/s  		 \ Progress:		17% (1272) ? c/s  		 | Progress:		18% (1347) ? c/s  		 / Progress:		19% (1422) ? c/s  		 - Progress:		20% (1496) ? c/s  		 \ Progress:		21% (1571) ? c/s  		 | Progress:		22% (1646) ? c/s  		 / Progress:		23% (1721) ? c/s  		 - Progress:		24% (1795) ? c/s  		 \ Progress:		25% (1870) ? c/s  		 | Progress:		26% (1945) ? c/s  		 / Progress:		27% (2020) ? c/s  		 - Progress:		28% (2095) ? c/s  		 \ Progress:		29% (2169) ? c/s  		 | Progress:		30% (2244) ? c/s  		 / Progress:		31% (2319) ? c/s  		 - Progress:		32% (2394) ? c/s  		 \ Progress:		33% (2469) ? c/s  		 | Progress:		34% (2543) ? c/s  		 / Progress:		35% (2618) ? c/s  		 - Progress:		36% (2693) ? c/s  		 \ Progress:		37% (2768) ? c/s  		 | Progress:		38% (2843) ? c/s  		 / Progress:		39% (2917) ? c/s  		 - Progress:		40% (2992) ? c/s  		 \ Progress:		41% (3067) ? c/s  		 | Progress:		42% (3142) ? c/s  		 / Progress:		43% (3216) ? c/s  		 - Progress:		44% (3291) ? c/s  		 \ Progress:		45% (3366) ? c/s  		 | Progress:		46% (3441) ? c/s  		 / Progress:		47% (3516) ? c/s  		 - Progress:		48% (3590) ? c/s  		 \ Progress:		49% (3665) ? c/s  		 | Progress:		50% (3740) ? c/s  		 / Progress:		51% (3815) ? c/s  		 - Progress:		52% (3890) ? c/s  		 \ Progress:		53% (3964) ? c/s  		 | Progress:		54% (4039) ? c/s  		 / Progress:		55% (4114) ? c/s  		 - Progress:		56% (4189) ? c/s  		 \ Progress:		57% (4264) ? c/s  		 | Progress:		58% (4338) ? c/s  		 / Progress:		59% (4413) ? c/s  		 - Progress:		60% (4488) ? c/s  		 \ Progress:		61% (4563) ? c/s  		 | Progress:		62% (4637) ? c/s  		 / Progress:		63% (4712) ? c/s  		 - Progress:		64% (4787) ? c/s  		 \ Progress:		65% (4862) ? c/s  		 | Progress:		66% (4937) ? c/s  		 | Progress:		66% (5000) 5000 c/s (0s +/- <1s)                       / Progress:		67% (5011) 5000 c/s (0s +/- <1s)                       - Progress:		68% (5086) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (5161) 5000 c/s (0s +/- <1s)                       | Progress:		70% (5236) 5000 c/s (0s +/- <1s)                       / Progress:		71% (5311) 5000 c/s (0s +/- <1s)                       - Progress:		72% (5385) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (5460) 5000 c/s (0s +/- <1s)                       | Progress:		74% (5535) 5000 c/s (0s +/- <1s)                       / Progress:		75% (5610) 5000 c/s (0s +/- <1s)                       - Progress:		76% (5685) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (5759) 5000 c/s (0s +/- <1s)                       | Progress:		78% (5834) 5000 c/s (0s +/- <1s)                       / Progress:		79% (5909) 5000 c/s (0s +/- <1s)                       - Progress:		80% (5984) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (6058) 5000 c/s (0s +/- <1s)                       | Progress:		82% (6133) 5000 c/s (0s +/- <1s)                       / Progress:		83% (6208) 5000 c/s (0s +/- <1s)                       - Progress:		84% (6283) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (6358) 5000 c/s (0s +/- <1s)                       | Progress:		86% (6432) 5000 c/s (0s +/- <1s)                       / Progress:		87% (6507) 5000 c/s (0s +/- <1s)                       - Progress:		88% (6582) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (6657) 5000 c/s (0s +/- <1s)                       | Progress:		90% (6732) 5000 c/s (0s +/- <1s)                       / Progress:		91% (6806) 5000 c/s (0s +/- <1s)                       - Progress:		92% (6881) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (6956) 5000 c/s (0s +/- <1s)                       | Progress:		94% (7031) 5000 c/s (0s +/- <1s)                       / Progress:		95% (7106) 5000 c/s (0s +/- <1s)                       - Progress:		96% (7180) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (7255) 5000 c/s (0s +/- <1s)                       | Progress:		98% (7330) 5000 c/s (0s +/- <1s)                       / Progress:		99% (7405) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.020131 seconds.		
 * Result:		(24a,38u,653,2668,1416,4084)
** Writing FIC database to file
 * File:		train9.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		pima-all-1d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		8163
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(34a,0u,1888,7117,474,7591)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (82) ? c/s  		 | Progress:		2% (164) ? c/s  		 / Progress:		3% (245) ? c/s  		 - Progress:		4% (327) ? c/s  		 \ Progress:		5% (409) ? c/s  		 | Progress:		6% (490) ? c/s  		 / Progress:		7% (572) ? c/s  		 - Progress:		8% (654) ? c/s  		 \ Progress:		9% (735) ? c/s  		 | Progress:		10% (817) ? c/s  		 / Progress:		11% (898) ? c/s  		 - Progress:		12% (980) ? c/s  		 \ Progress:		13% (1062) ? c/s  		 | Progress:		14% (1143) ? c/s  		 / Progress:		15% (1225) ? c/s  		 - Progress:		16% (1307) ? c/s  		 \ Progress:		17% (1388) ? c/s  		 | Progress:		18% (1470) ? c/s  		 / Progress:		19% (1551) ? c/s  		 - Progress:		20% (1633) ? c/s  		 \ Progress:		21% (1715) ? c/s  		 | Progress:		22% (1796) ? c/s  		 / Progress:		23% (1878) ? c/s  		 - Progress:		24% (1960) ? c/s  		 \ Progress:		25% (2041) ? c/s  		 | Progress:		26% (2123) ? c/s  		 / Progress:		27% (2205) ? c/s  		 - Progress:		28% (2286) ? c/s  		 \ Progress:		29% (2368) ? c/s  		 | Progress:		30% (2449) ? c/s  		 / Progress:		31% (2531) ? c/s  		 - Progress:		32% (2613) ? c/s  		 \ Progress:		33% (2694) ? c/s  		 | Progress:		34% (2776) ? c/s  		 / Progress:		35% (2858) ? c/s  		 - Progress:		36% (2939) ? c/s  		 \ Progress:		37% (3021) ? c/s  		 | Progress:		38% (3102) ? c/s  		 / Progress:		39% (3184) ? c/s  		 - Progress:		40% (3266) ? c/s  		 \ Progress:		41% (3347) ? c/s  		 | Progress:		42% (3429) ? c/s  		 / Progress:		43% (3511) ? c/s  		 - Progress:		44% (3592) ? c/s  		 \ Progress:		45% (3674) ? c/s  		 | Progress:		46% (3755) ? c/s  		 / Progress:		47% (3837) ? c/s  		 - Progress:		48% (3919) ? c/s  		 \ Progress:		49% (4000) ? c/s  		 | Progress:		50% (4082) ? c/s  		 / Progress:		51% (4164) ? c/s  		 - Progress:		52% (4245) ? c/s  		 \ Progress:		53% (4327) ? c/s  		 | Progress:		54% (4409) ? c/s  		 / Progress:		55% (4490) ? c/s  		 - Progress:		56% (4572) ? c/s  		 \ Progress:		57% (4653) ? c/s  		 | Progress:		58% (4735) ? c/s  		 / Progress:		59% (4817) ? c/s  		 - Progress:		60% (4898) ? c/s  		 \ Progress:		61% (4980) ? c/s  		 \ Progress:		61% (5000) 5000 c/s (0s +/- <1s)                       | Progress:		62% (5062) 5000 c/s (0s +/- <1s)                       / Progress:		63% (5143) 5000 c/s (0s +/- <1s)                       - Progress:		64% (5225) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (5306) 5000 c/s (0s +/- <1s)                       | Progress:		66% (5388) 5000 c/s (0s +/- <1s)                       / Progress:		67% (5470) 5000 c/s (0s +/- <1s)                       - Progress:		68% (5551) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (5633) 5000 c/s (0s +/- <1s)                       | Progress:		70% (5715) 5000 c/s (0s +/- <1s)                       / Progress:		71% (5796) 5000 c/s (0s +/- <1s)                       - Progress:		72% (5878) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (5959) 5000 c/s (0s +/- <1s)                       | Progress:		74% (6041) 5000 c/s (0s +/- <1s)                       / Progress:		75% (6123) 5000 c/s (0s +/- <1s)                       - Progress:		76% (6204) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (6286) 5000 c/s (0s +/- <1s)                       | Progress:		78% (6368) 5000 c/s (0s +/- <1s)                       / Progress:		79% (6449) 5000 c/s (0s +/- <1s)                       - Progress:		80% (6531) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (6613) 5000 c/s (0s +/- <1s)                       | Progress:		82% (6694) 5000 c/s (0s +/- <1s)                       / Progress:		83% (6776) 5000 c/s (0s +/- <1s)                       - Progress:		84% (6857) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (6939) 5000 c/s (0s +/- <1s)                       | Progress:		86% (7021) 5000 c/s (0s +/- <1s)                       / Progress:		87% (7102) 5000 c/s (0s +/- <1s)                       - Progress:		88% (7184) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (7266) 5000 c/s (0s +/- <1s)                       | Progress:		90% (7347) 5000 c/s (0s +/- <1s)                       / Progress:		91% (7429) 5000 c/s (0s +/- <1s)                       - Progress:		92% (7510) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (7592) 5000 c/s (0s +/- <1s)                       | Progress:		94% (7674) 5000 c/s (0s +/- <1s)                       / Progress:		95% (7755) 5000 c/s (0s +/- <1s)                       - Progress:		96% (7837) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (7919) 5000 c/s (0s +/- <1s)                       | Progress:		98% (8000) 5000 c/s (0s +/- <1s)                       / Progress:		99% (8082) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.017164 seconds.		
 * Result:		(25a,29u,504,2608,1132,3739)
 * Creating:			fold 9
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 9
** Writing FIC database to file
 * File:		train8.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		pima-all-1d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		7431
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(35a,0u,3584,12348,545,12892)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (75) ? c/s  		 | Progress:		2% (149) ? c/s  		 / Progress:		3% (223) ? c/s  		 - Progress:		4% (298) ? c/s  		 \ Progress:		5% (372) ? c/s  		 | Progress:		6% (446) ? c/s  		 / Progress:		7% (521) ? c/s  		 - Progress:		8% (595) ? c/s  		 \ Progress:		9% (669) ? c/s  		 | Progress:		10% (744) ? c/s  		 / Progress:		11% (818) ? c/s  		 - Progress:		12% (892) ? c/s  		 \ Progress:		13% (967) ? c/s  		 | Progress:		14% (1041) ? c/s  		 / Progress:		15% (1115) ? c/s  		 - Progress:		16% (1189) ? c/s  		 \ Progress:		17% (1264) ? c/s  		 | Progress:		18% (1338) ? c/s  		 / Progress:		19% (1412) ? c/s  		 - Progress:		20% (1487) ? c/s  		 \ Progress:		21% (1561) ? c/s  		 | Progress:		22% (1635) ? c/s  		 / Progress:		23% (1710) ? c/s  		 - Progress:		24% (1784) ? c/s  		 \ Progress:		25% (1858) ? c/s  		 | Progress:		26% (1933) ? c/s  		 / Progress:		27% (2007) ? c/s  		 - Progress:		28% (2081) ? c/s  		 \ Progress:		29% (2155) ? c/s  		 | Progress:		30% (2230) ? c/s  		 / Progress:		31% (2304) ? c/s  		 - Progress:		32% (2378) ? c/s  		 \ Progress:		33% (2453) ? c/s  		 | Progress:		34% (2527) ? c/s  		 / Progress:		35% (2601) ? c/s  		 - Progress:		36% (2676) ? c/s  		 \ Progress:		37% (2750) ? c/s  		 | Progress:		38% (2824) ? c/s  		 / Progress:		39% (2899) ? c/s  		 - Progress:		40% (2973) ? c/s  		 \ Progress:		41% (3047) ? c/s  		 | Progress:		42% (3122) ? c/s  		 / Progress:		43% (3196) ? c/s  		 - Progress:		44% (3270) ? c/s  		 \ Progress:		45% (3344) ? c/s  		 | Progress:		46% (3419) ? c/s  		 / Progress:		47% (3493) ? c/s  		 - Progress:		48% (3567) ? c/s  		 \ Progress:		49% (3642) ? c/s  		 | Progress:		50% (3716) ? c/s  		 / Progress:		51% (3790) ? c/s  		 - Progress:		52% (3865) ? c/s  		 \ Progress:		53% (3939) ? c/s  		 | Progress:		54% (4013) ? c/s  		 / Progress:		55% (4088) ? c/s  		 - Progress:		56% (4162) ? c/s  		 \ Progress:		57% (4236) ? c/s  		 | Progress:		58% (4310) ? c/s  		 / Progress:		59% (4385) ? c/s  		 - Progress:		60% (4459) ? c/s  		 \ Progress:		61% (4533) ? c/s  		 | Progress:		62% (4608) ? c/s  		 / Progress:		63% (4682) ? c/s  		 - Progress:		64% (4756) ? c/s  		 \ Progress:		65% (4831) ? c/s  		 | Progress:		66% (4905) ? c/s  		 / Progress:		67% (4979) ? c/s  		 / Progress:		67% (5000) 5000 c/s (0s +/- <1s)                       - Progress:		68% (5054) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (5128) 5000 c/s (0s +/- <1s)                       | Progress:		70% (5202) 5000 c/s (0s +/- <1s)                       / Progress:		71% (5277) 5000 c/s (0s +/- <1s)                       - Progress:		72% (5351) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (5425) 5000 c/s (0s +/- <1s)                       | Progress:		74% (5499) 5000 c/s (0s +/- <1s)                       / Progress:		75% (5574) 5000 c/s (0s +/- <1s)                       - Progress:		76% (5648) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (5722) 5000 c/s (0s +/- <1s)                       | Progress:		78% (5797) 5000 c/s (0s +/- <1s)                       / Progress:		79% (5871) 5000 c/s (0s +/- <1s)                       - Progress:		80% (5945) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (6020) 5000 c/s (0s +/- <1s)                       | Progress:		82% (6094) 5000 c/s (0s +/- <1s)                       / Progress:		83% (6168) 5000 c/s (0s +/- <1s)                       - Progress:		84% (6243) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (6317) 5000 c/s (0s +/- <1s)                       | Progress:		86% (6391) 5000 c/s (0s +/- <1s)                       / Progress:		87% (6465) 5000 c/s (0s +/- <1s)                       - Progress:		88% (6540) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (6614) 5000 c/s (0s +/- <1s)                       | Progress:		90% (6688) 5000 c/s (0s +/- <1s)                       / Progress:		91% (6763) 5000 c/s (0s +/- <1s)                       - Progress:		92% (6837) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (6911) 5000 c/s (0s +/- <1s)                       | Progress:		94% (6986) 5000 c/s (0s +/- <1s)                       / Progress:		95% (7060) 5000 c/s (0s +/- <1s)                       - Progress:		96% (7134) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (7209) 5000 c/s (0s +/- <1s)                       | Progress:		98% (7283) 5000 c/s (0s +/- <1s)                       / Progress:		99% (7357) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.019986 seconds.		
 * Result:		(25a,35u,658,2686,1298,3984)
** Writing FIC database to file
 * File:		train9.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		pima-all-1d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		8511
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(35a,0u,1944,7354,495,7849)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (86) ? c/s  		 | Progress:		2% (171) ? c/s  		 / Progress:		3% (256) ? c/s  		 - Progress:		4% (341) ? c/s  		 \ Progress:		5% (426) ? c/s  		 | Progress:		6% (511) ? c/s  		 / Progress:		7% (596) ? c/s  		 - Progress:		8% (681) ? c/s  		 \ Progress:		9% (766) ? c/s  		 | Progress:		10% (852) ? c/s  		 / Progress:		11% (937) ? c/s  		 - Progress:		12% (1022) ? c/s  		 \ Progress:		13% (1107) ? c/s  		 | Progress:		14% (1192) ? c/s  		 / Progress:		15% (1277) ? c/s  		 - Progress:		16% (1362) ? c/s  		 \ Progress:		17% (1447) ? c/s  		 | Progress:		18% (1532) ? c/s  		 / Progress:		19% (1618) ? c/s  		 - Progress:		20% (1703) ? c/s  		 \ Progress:		21% (1788) ? c/s  		 | Progress:		22% (1873) ? c/s  		 / Progress:		23% (1958) ? c/s  		 - Progress:		24% (2043) ? c/s  		 \ Progress:		25% (2128) ? c/s  		 | Progress:		26% (2213) ? c/s  		 / Progress:		27% (2298) ? c/s  		 - Progress:		28% (2384) ? c/s  		 \ Progress:		29% (2469) ? c/s  		 | Progress:		30% (2554) ? c/s  		 / Progress:		31% (2639) ? c/s  		 - Progress:		32% (2724) ? c/s  		 \ Progress:		33% (2809) ? c/s  		 | Progress:		34% (2894) ? c/s  		 / Progress:		35% (2979) ? c/s  		 - Progress:		36% (3064) ? c/s  		 \ Progress:		37% (3150) ? c/s  		 | Progress:		38% (3235) ? c/s  		 / Progress:		39% (3320) ? c/s  		 - Progress:		40% (3405) ? c/s  		 \ Progress:		41% (3490) ? c/s  		 | Progress:		42% (3575) ? c/s  		 / Progress:		43% (3660) ? c/s  		 - Progress:		44% (3745) ? c/s  		 \ Progress:		45% (3830) ? c/s  		 | Progress:		46% (3916) ? c/s  		 / Progress:		47% (4001) ? c/s  		 - Progress:		48% (4086) ? c/s  		 \ Progress:		49% (4171) ? c/s  		 | Progress:		50% (4256) ? c/s  		 / Progress:		51% (4341) ? c/s  		 - Progress:		52% (4426) ? c/s  		 \ Progress:		53% (4511) ? c/s  		 | Progress:		54% (4596) ? c/s  		 / Progress:		55% (4682) ? c/s  		 - Progress:		56% (4767) ? c/s  		 \ Progress:		57% (4852) ? c/s  		 | Progress:		58% (4937) ? c/s  		 | Progress:		58% (5000) 5000 c/s (0s +/- <1s)                       / Progress:		59% (5022) 5000 c/s (0s +/- <1s)                       - Progress:		60% (5107) 5000 c/s (0s +/- <1s)                       \ Progress:		61% (5192) 5000 c/s (0s +/- <1s)                       | Progress:		62% (5277) 5000 c/s (0s +/- <1s)                       / Progress:		63% (5362) 5000 c/s (0s +/- <1s)                       - Progress:		64% (5448) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (5533) 5000 c/s (0s +/- <1s)                       | Progress:		66% (5618) 5000 c/s (0s +/- <1s)                       / Progress:		67% (5703) 5000 c/s (0s +/- <1s)                       - Progress:		68% (5788) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (5873) 5000 c/s (0s +/- <1s)                       | Progress:		70% (5958) 5000 c/s (0s +/- <1s)                       / Progress:		71% (6043) 5000 c/s (0s +/- <1s)                       - Progress:		72% (6128) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (6214) 5000 c/s (0s +/- <1s)                       | Progress:		74% (6299) 5000 c/s (0s +/- <1s)                       / Progress:		75% (6384) 5000 c/s (0s +/- <1s)                       - Progress:		76% (6469) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (6554) 5000 c/s (0s +/- <1s)                       | Progress:		78% (6639) 5000 c/s (0s +/- <1s)                       / Progress:		79% (6724) 5000 c/s (0s +/- <1s)                       - Progress:		80% (6809) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (6894) 5000 c/s (0s +/- <1s)                       | Progress:		82% (6980) 5000 c/s (0s +/- <1s)                       / Progress:		83% (7065) 5000 c/s (0s +/- <1s)                       - Progress:		84% (7150) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (7235) 5000 c/s (0s +/- <1s)                       | Progress:		86% (7320) 5000 c/s (0s +/- <1s)                       / Progress:		87% (7405) 5000 c/s (0s +/- <1s)                       - Progress:		88% (7490) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (7575) 5000 c/s (0s +/- <1s)                       | Progress:		90% (7660) 5000 c/s (0s +/- <1s)                       / Progress:		91% (7746) 5000 c/s (0s +/- <1s)                       - Progress:		92% (7831) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (7916) 5000 c/s (0s +/- <1s)                       | Progress:		94% (8001) 5000 c/s (0s +/- <1s)                       / Progress:		95% (8086) 5000 c/s (0s +/- <1s)                       - Progress:		96% (8171) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (8256) 5000 c/s (0s +/- <1s)                       | Progress:		98% (8341) 5000 c/s (0s +/- <1s)                       / Progress:		99% (8426) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.017387 seconds.		
 * Result:		(30a,26u,541,2818,1133,3950)
 * Creating:			fold 10
** Writing FIC database to file
 * File:		test.db
** Finished writing database.

** Writing FIC database to file
 * File:		train.db
** Finished writing database.

 * Compressing:			fold 10
** Writing FIC database to file
 * File:		train8.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		pima-all-1d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		7463
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(36a,0u,3616,12425,570,12995)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (75) ? c/s  		 | Progress:		2% (150) ? c/s  		 / Progress:		3% (224) ? c/s  		 - Progress:		4% (299) ? c/s  		 \ Progress:		5% (374) ? c/s  		 | Progress:		6% (448) ? c/s  		 / Progress:		7% (523) ? c/s  		 - Progress:		8% (598) ? c/s  		 \ Progress:		9% (672) ? c/s  		 | Progress:		10% (747) ? c/s  		 / Progress:		11% (821) ? c/s  		 - Progress:		12% (896) ? c/s  		 \ Progress:		13% (971) ? c/s  		 | Progress:		14% (1045) ? c/s  		 / Progress:		15% (1120) ? c/s  		 - Progress:		16% (1195) ? c/s  		 \ Progress:		17% (1269) ? c/s  		 | Progress:		18% (1344) ? c/s  		 / Progress:		19% (1418) ? c/s  		 - Progress:		20% (1493) ? c/s  		 \ Progress:		21% (1568) ? c/s  		 | Progress:		22% (1642) ? c/s  		 / Progress:		23% (1717) ? c/s  		 - Progress:		24% (1792) ? c/s  		 \ Progress:		25% (1866) ? c/s  		 | Progress:		26% (1941) ? c/s  		 / Progress:		27% (2016) ? c/s  		 - Progress:		28% (2090) ? c/s  		 \ Progress:		29% (2165) ? c/s  		 | Progress:		30% (2239) ? c/s  		 / Progress:		31% (2314) ? c/s  		 - Progress:		32% (2389) ? c/s  		 \ Progress:		33% (2463) ? c/s  		 | Progress:		34% (2538) ? c/s  		 / Progress:		35% (2613) ? c/s  		 - Progress:		36% (2687) ? c/s  		 \ Progress:		37% (2762) ? c/s  		 | Progress:		38% (2836) ? c/s  		 / Progress:		39% (2911) ? c/s  		 - Progress:		40% (2986) ? c/s  		 \ Progress:		41% (3060) ? c/s  		 | Progress:		42% (3135) ? c/s  		 / Progress:		43% (3210) ? c/s  		 - Progress:		44% (3284) ? c/s  		 \ Progress:		45% (3359) ? c/s  		 | Progress:		46% (3433) ? c/s  		 / Progress:		47% (3508) ? c/s  		 - Progress:		48% (3583) ? c/s  		 \ Progress:		49% (3657) ? c/s  		 | Progress:		50% (3732) ? c/s  		 / Progress:		51% (3807) ? c/s  		 - Progress:		52% (3881) ? c/s  		 \ Progress:		53% (3956) ? c/s  		 | Progress:		54% (4031) ? c/s  		 / Progress:		55% (4105) ? c/s  		 - Progress:		56% (4180) ? c/s  		 \ Progress:		57% (4254) ? c/s  		 | Progress:		58% (4329) ? c/s  		 / Progress:		59% (4404) ? c/s  		 - Progress:		60% (4478) ? c/s  		 \ Progress:		61% (4553) ? c/s  		 | Progress:		62% (4628) ? c/s  		 / Progress:		63% (4702) ? c/s  		 - Progress:		64% (4777) ? c/s  		 \ Progress:		65% (4851) ? c/s  		 | Progress:		66% (4926) ? c/s  		 | Progress:		66% (5000) 5000 c/s (0s +/- <1s)                       / Progress:		67% (5001) 5000 c/s (0s +/- <1s)                       - Progress:		68% (5075) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (5150) 5000 c/s (0s +/- <1s)                       | Progress:		70% (5225) 5000 c/s (0s +/- <1s)                       / Progress:		71% (5299) 5000 c/s (0s +/- <1s)                       - Progress:		72% (5374) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (5448) 5000 c/s (0s +/- <1s)                       | Progress:		74% (5523) 5000 c/s (0s +/- <1s)                       / Progress:		75% (5598) 5000 c/s (0s +/- <1s)                       - Progress:		76% (5672) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (5747) 5000 c/s (0s +/- <1s)                       | Progress:		78% (5822) 5000 c/s (0s +/- <1s)                       / Progress:		79% (5896) 5000 c/s (0s +/- <1s)                       - Progress:		80% (5971) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (6046) 5000 c/s (0s +/- <1s)                       | Progress:		82% (6120) 5000 c/s (0s +/- <1s)                       / Progress:		83% (6195) 5000 c/s (0s +/- <1s)                       - Progress:		84% (6269) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (6344) 5000 c/s (0s +/- <1s)                       | Progress:		86% (6419) 5000 c/s (0s +/- <1s)                       / Progress:		87% (6493) 5000 c/s (0s +/- <1s)                       - Progress:		88% (6568) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (6643) 5000 c/s (0s +/- <1s)                       | Progress:		90% (6717) 5000 c/s (0s +/- <1s)                       / Progress:		91% (6792) 5000 c/s (0s +/- <1s)                       - Progress:		92% (6866) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (6941) 5000 c/s (0s +/- <1s)                       | Progress:		94% (7016) 5000 c/s (0s +/- <1s)                       / Progress:		95% (7090) 5000 c/s (0s +/- <1s)                       - Progress:		96% (7165) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (7240) 5000 c/s (0s +/- <1s)                       | Progress:		98% (7314) 5000 c/s (0s +/- <1s)                       / Progress:		99% (7389) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.017817 seconds.		
 * Result:		(26a,32u,652,2631,1310,3941)
** Writing FIC database to file
 * File:		train9.db
** Finished writing database.

** ItemSetCollection ::
** Creating Frequent Item Set Collection.
 * File:		pima-all-1d.bisc.fi
 * Type:		FIMI
 * Has # rows:		no
 * # ItemSets:		8751
 * Sorting sets:	in progress... * Sorting sets:	sorted on support and descending on length
** Finished Creating Frequent Item Set Collection


 * Start:		(34a,0u,1928,7332,468,7800)
 - Progress:		0% (0) ? c/s  		 \ Progress:		1% (88) ? c/s  		 | Progress:		2% (176) ? c/s  		 / Progress:		3% (263) ? c/s  		 - Progress:		4% (351) ? c/s  		 \ Progress:		5% (438) ? c/s  		 | Progress:		6% (526) ? c/s  		 / Progress:		7% (613) ? c/s  		 - Progress:		8% (701) ? c/s  		 \ Progress:		9% (788) ? c/s  		 | Progress:		10% (876) ? c/s  		 / Progress:		11% (963) ? c/s  		 - Progress:		12% (1051) ? c/s  		 \ Progress:		13% (1138) ? c/s  		 | Progress:		14% (1226) ? c/s  		 / Progress:		15% (1313) ? c/s  		 - Progress:		16% (1401) ? c/s  		 \ Progress:		17% (1488) ? c/s  		 | Progress:		18% (1576) ? c/s  		 / Progress:		19% (1663) ? c/s  		 - Progress:		20% (1751) ? c/s  		 \ Progress:		21% (1838) ? c/s  		 | Progress:		22% (1926) ? c/s  		 / Progress:		23% (2013) ? c/s  		 - Progress:		24% (2101) ? c/s  		 \ Progress:		25% (2188) ? c/s  		 | Progress:		26% (2276) ? c/s  		 / Progress:		27% (2363) ? c/s  		 - Progress:		28% (2451) ? c/s  		 \ Progress:		29% (2538) ? c/s  		 | Progress:		30% (2626) ? c/s  		 / Progress:		31% (2713) ? c/s  		 - Progress:		32% (2801) ? c/s  		 \ Progress:		33% (2888) ? c/s  		 | Progress:		34% (2976) ? c/s  		 / Progress:		35% (3063) ? c/s  		 - Progress:		36% (3151) ? c/s  		 \ Progress:		37% (3238) ? c/s  		 | Progress:		38% (3326) ? c/s  		 / Progress:		39% (3413) ? c/s  		 - Progress:		40% (3501) ? c/s  		 \ Progress:		41% (3588) ? c/s  		 | Progress:		42% (3676) ? c/s  		 / Progress:		43% (3763) ? c/s  		 - Progress:		44% (3851) ? c/s  		 \ Progress:		45% (3938) ? c/s  		 | Progress:		46% (4026) ? c/s  		 / Progress:		47% (4113) ? c/s  		 - Progress:		48% (4201) ? c/s  		 \ Progress:		49% (4288) ? c/s  		 | Progress:		50% (4376) ? c/s  		 / Progress:		51% (4464) ? c/s  		 - Progress:		52% (4551) ? c/s  		 \ Progress:		53% (4639) ? c/s  		 | Progress:		54% (4726) ? c/s  		 / Progress:		55% (4814) ? c/s  		 - Progress:		56% (4901) ? c/s  		 \ Progress:		57% (4989) ? c/s  		 \ Progress:		57% (5000) 5000 c/s (0s +/- <1s)                       | Progress:		58% (5076) 5000 c/s (0s +/- <1s)                       / Progress:		59% (5164) 5000 c/s (0s +/- <1s)                       - Progress:		60% (5251) 5000 c/s (0s +/- <1s)                       \ Progress:		61% (5339) 5000 c/s (0s +/- <1s)                       | Progress:		62% (5426) 5000 c/s (0s +/- <1s)                       / Progress:		63% (5514) 5000 c/s (0s +/- <1s)                       - Progress:		64% (5601) 5000 c/s (0s +/- <1s)                       \ Progress:		65% (5689) 5000 c/s (0s +/- <1s)                       | Progress:		66% (5776) 5000 c/s (0s +/- <1s)                       / Progress:		67% (5864) 5000 c/s (0s +/- <1s)                       - Progress:		68% (5951) 5000 c/s (0s +/- <1s)                       \ Progress:		69% (6039) 5000 c/s (0s +/- <1s)                       | Progress:		70% (6126) 5000 c/s (0s +/- <1s)                       / Progress:		71% (6214) 5000 c/s (0s +/- <1s)                       - Progress:		72% (6301) 5000 c/s (0s +/- <1s)                       \ Progress:		73% (6389) 5000 c/s (0s +/- <1s)                       | Progress:		74% (6476) 5000 c/s (0s +/- <1s)                       / Progress:		75% (6564) 5000 c/s (0s +/- <1s)                       - Progress:		76% (6651) 5000 c/s (0s +/- <1s)                       \ Progress:		77% (6739) 5000 c/s (0s +/- <1s)                       | Progress:		78% (6826) 5000 c/s (0s +/- <1s)                       / Progress:		79% (6914) 5000 c/s (0s +/- <1s)                       - Progress:		80% (7001) 5000 c/s (0s +/- <1s)                       \ Progress:		81% (7089) 5000 c/s (0s +/- <1s)                       | Progress:		82% (7176) 5000 c/s (0s +/- <1s)                       / Progress:		83% (7264) 5000 c/s (0s +/- <1s)                       - Progress:		84% (7351) 5000 c/s (0s +/- <1s)                       \ Progress:		85% (7439) 5000 c/s (0s +/- <1s)                       | Progress:		86% (7526) 5000 c/s (0s +/- <1s)                       / Progress:		87% (7614) 5000 c/s (0s +/- <1s)                       - Progress:		88% (7701) 5000 c/s (0s +/- <1s)                       \ Progress:		89% (7789) 5000 c/s (0s +/- <1s)                       | Progress:		90% (7876) 5000 c/s (0s +/- <1s)                       / Progress:		91% (7964) 5000 c/s (0s +/- <1s)                       - Progress:		92% (8051) 5000 c/s (0s +/- <1s)                       \ Progress:		93% (8139) 5000 c/s (0s +/- <1s)                       | Progress:		94% (8226) 5000 c/s (0s +/- <1s)                       / Progress:		95% (8314) 5000 c/s (0s +/- <1s)                       - Progress:		96% (8401) 5000 c/s (0s +/- <1s)                       \ Progress:		97% (8489) 5000 c/s (0s +/- <1s)                       | Progress:		98% (8576) 5000 c/s (0s +/- <1s)                       / Progress:		99% (8664) 5000 c/s (0s +/- <1s)                       * Time:    		Compressing the database took 0.018452 seconds.		
 * Result:		(28a,31u,513,2715,1207,3922)

 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/classify/pima-all-1d-pop-cccp-20210117093833/

Task `classify`, command `classifycompress` finished. This took 1 seconds.

 ---------------------------------- FIC mkIII ---------------------------------

** Processing conf: 'classify.conf'
 * Verbosity:		2
 * Max Mem Usage:	512mb
 * Priority:		Opzij, opzij, opzij!
			Maak plaats, maak plaats, maak plaats!
			Wij hebben ongelovelijke haast!

** Classification ::
 * Processing Fold:	1
Starting classification
 * Classifying ct sup:	1      * Classifying:		done
 * Processing Fold:	2
Starting classification
 * Classifying ct sup:	1      * Classifying:		done
 * Processing Fold:	3
Starting classification
 * Classifying ct sup:	1      * Classifying:		done
 * Processing Fold:	4
Starting classification
 * Classifying ct sup:	1      * Classifying:		done
 * Processing Fold:	5
Starting classification
 * Classifying ct sup:	1      * Classifying:		done
 * Processing Fold:	6
Starting classification
 * Classifying ct sup:	1      * Classifying:		done
 * Processing Fold:	7
Starting classification
 * Classifying ct sup:	1      * Classifying:		done
 * Processing Fold:	8
Starting classification
 * Classifying ct sup:	1      * Classifying:		done
 * Processing Fold:	9
Starting classification
 * Classifying ct sup:	1      * Classifying:		done
 * Processing Fold:	10
Starting classification
 * Classifying ct sup:	1      * Classifying:		done
 * Processing Fold:	1
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	2
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	3
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	4
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	5
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	6
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	7
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	8
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	9
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done
 * Processing Fold:	10
Starting classification
 * Classifying ct %:	100    * Classifying ct %:	99     * Classifying ct %:	98     * Classifying ct %:	97     * Classifying ct %:	96     * Classifying ct %:	95     * Classifying ct %:	94     * Classifying ct %:	93     * Classifying ct %:	92     * Classifying ct %:	91     * Classifying ct %:	90     * Classifying ct %:	89     * Classifying ct %:	88     * Classifying ct %:	87     * Classifying ct %:	86     * Classifying ct %:	85     * Classifying ct %:	84     * Classifying ct %:	83     * Classifying ct %:	82     * Classifying ct %:	81     * Classifying ct %:	80     * Classifying ct %:	79     * Classifying ct %:	78     * Classifying ct %:	77     * Classifying ct %:	76     * Classifying ct %:	75     * Classifying ct %:	74     * Classifying ct %:	73     * Classifying ct %:	72     * Classifying ct %:	71     * Classifying ct %:	70     * Classifying ct %:	69     * Classifying ct %:	68     * Classifying ct %:	67     * Classifying ct %:	66     * Classifying ct %:	65     * Classifying ct %:	64     * Classifying ct %:	63     * Classifying ct %:	62     * Classifying ct %:	61     * Classifying ct %:	60     * Classifying ct %:	59     * Classifying ct %:	58     * Classifying ct %:	57     * Classifying ct %:	56     * Classifying ct %:	55     * Classifying ct %:	54     * Classifying ct %:	53     * Classifying ct %:	52     * Classifying ct %:	51     * Classifying ct %:	50     * Classifying ct %:	49     * Classifying ct %:	48     * Classifying ct %:	47     * Classifying ct %:	46     * Classifying ct %:	45     * Classifying ct %:	44     * Classifying ct %:	43     * Classifying ct %:	42     * Classifying ct %:	41     * Classifying ct %:	40     * Classifying ct %:	39     * Classifying ct %:	38     * Classifying ct %:	37     * Classifying ct %:	36     * Classifying ct %:	35     * Classifying ct %:	34     * Classifying ct %:	33     * Classifying ct %:	32     * Classifying ct %:	31     * Classifying ct %:	30     * Classifying ct %:	29     * Classifying ct %:	28     * Classifying ct %:	27     * Classifying ct %:	26     * Classifying ct %:	25     * Classifying ct %:	24     * Classifying ct %:	23     * Classifying ct %:	22     * Classifying ct %:	21     * Classifying ct %:	20     * Classifying ct %:	19     * Classifying ct %:	18     * Classifying ct %:	17     * Classifying ct %:	16     * Classifying ct %:	15     * Classifying ct %:	14     * Classifying ct %:	13     * Classifying ct %:	12     * Classifying ct %:	11     * Classifying ct %:	10     * Classifying ct %:	9      * Classifying ct %:	8      * Classifying ct %:	7      * Classifying ct %:	6      * Classifying ct %:	5      * Classifying ct %:	4      * Classifying ct %:	3      * Classifying ct %:	2      * Classifying ct %:	1      * Classifying:		done


 * Check results in:	/home/arcchitjain/Documents/Mistle/Output/xps/classify/pima-all-1d-pop-cccp-20210117093833/

Task `classify`, command `classifyanalyse` finished. This took 3 seconds.



Comparing on pima.dat with nb_rows = 768 and minsup = 0.0013020833333333333
Running	: ./Resources/Krimp/bin/krimp	841b5423-cc4a-4dba-ab2c-666a4a73e249_convertdb.conf
Running	: ./Resources/Krimp/bin/krimp	812f6781-7680-40fc-b942-c04bdd7df8c8_analysedb.conf
Running	: ./Resources/Krimp/bin/krimp	da9a0a5c-32c8-4136-9100-25bd730542a8_classifycompress.conf
res_path = /home/arcchitjain/Documents/Mistle/Output/xps/classify/pima-all-1d-pop-cccp-20210117093833
krimp_item_dict = {0: 19, 1: 9, 2: 23, 3: 27, 4: 1, 5: 14, 6: 32, 7: 5, 8: 37, 9: 38, 10: 8, 11: 36, 12: 6, 13: 33, 14: 17, 15: 30, 16: 4, 17: 2, 18: 3, 19: 18, 20: 26, 21: 10, 22: 31, 23: 22, 24: 15, 25: 16, 26: 25, 27: 29, 28: 7, 29: 35, 30: 28, 31: 24, 32: 12, 33: 34, 34: 21, 35: 11, 36: 20, 37: 13}
# of frequent itemsets	: 922
Time of DCI Closed		: 0.17437481880187988
29  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-29, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -4, -33}), frozenset({-28, -24, -20, -15, -10, -6, -3, -33}), frozenset({-30, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -36, -2}), frozenset({-28, -24, -20, -15, -10, -7, -37, -2}), frozenset({-28, -24, -20, -15, -10, -9, -37, -2}), frozenset({-28, -24, -20, -15, -10, -8, -2, -33}), frozenset({-28, -24, -23, -18, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -5, -33}), frozenset({-28, -24, -20, -18, -10, -6, -2, -33}), frozenset({-32, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -19, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -2}), frozenset({-28, -24, -20, -15, -10, -9, -3, -33}), frozenset({-28, -24, -20, -15, -10, -7, -2, -33}), frozenset({-31, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -22, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -17, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -9, -10, -2, -34}), frozenset({-28, -24, -20, -15, -10, -6, -4, -33}), frozenset({-28, -24, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -4}), frozenset({-28, -27, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -16, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -2, -10, -6, -34}), frozenset({-28, -27, -20, -18, -10, -9, -2, -33})}
DL of initial theory	: 6630.453064635775
639	itemsets left after T operation 	: [frozenset({-24, -15, -20, -10})]
459	itemsets left after T operation 	: [frozenset({-28, -10, -2, -33})]
286	itemsets left after T operation 	: [frozenset({-20, -2, -33})]
226	itemsets left after T operation 	: [frozenset({-24, -23, -10, -9, -2})]
130	itemsets left after T operation 	: [frozenset({-24, -20, -10})]
38	itemsets left after T operation 	: [frozenset({-15, -28, -20})]
22	itemsets left after T operation 	: [frozenset({-6, -20, -10, -33})]
12	itemsets left after T operation 	: [frozenset({-24, -23, -2, -10})]
9	itemsets left after V operation 	: [frozenset({-24, -20, -10}), frozenset({-23, 20, -2})]
6	itemsets left after T operation 	: [frozenset({-20, -10})]
2	itemsets left after T operation 	: [frozenset({-2, -33})]
0	itemsets left after T operation 	: [frozenset({-2})]
# of frequent itemsets	: 4
Time of DCI Closed		: 0.14644575119018555
Initial DL				: 36871.42466247525
Final DL				: 3395.0750295674306
Compression (wrt me)	: 0.9079212408892173
Operator Counters		: {'D': 0, 'W': 0, 'V': 1, 'S': 0, 'R': 0, 'T': 11}
Misle Learning Runtime	: 0.41743993759155273

# of frequent itemsets	: 647
Time of DCI Closed		: 0.16625237464904785
29  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-29, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -4, -33}), frozenset({-28, -24, -20, -15, -10, -6, -3, -33}), frozenset({-30, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -36, -2}), frozenset({-28, -24, -20, -15, -10, -7, -37, -2}), frozenset({-28, -24, -20, -15, -10, -9, -37, -2}), frozenset({-28, -24, -20, -15, -10, -8, -2, -33}), frozenset({-28, -24, -23, -18, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -5, -33}), frozenset({-28, -24, -20, -18, -10, -6, -2, -33}), frozenset({-32, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -19, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -2}), frozenset({-28, -24, -20, -15, -10, -9, -3, -33}), frozenset({-28, -24, -20, -15, -10, -7, -2, -33}), frozenset({-31, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -22, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -17, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -9, -10, -2, -34}), frozenset({-28, -24, -20, -15, -10, -6, -4, -33}), frozenset({-28, -24, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -4}), frozenset({-28, -27, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -16, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -2, -10, -6, -34}), frozenset({-28, -27, -20, -18, -10, -9, -2, -33})}
DL of initial theory	: 6630.453064635775
459	itemsets left after T operation 	: [frozenset({-24, -28, -20, -10})]
315	itemsets left after T operation 	: [frozenset({-6, -20, -2, -33})]
172	itemsets left after W operation 	: [frozenset({-28, 38, -10, -2, -33}), frozenset({-15, -22, -6, -24, -38}), frozenset({-15, -38, -9, -24, -22}), frozenset({-24, -8, -38, -21, -18}), frozenset({-26, -9, -38, -20, -17}), frozenset({-9, -24, -23, -38, -18}), frozenset({-15, -27, -9, -23, -38}), frozenset({-27, -9, -38, -20, -18}), frozenset({-15, -9, -24, -38, -21})]
50	itemsets left after W operation 	: [frozenset({-24, -15, -20, 39}), frozenset({-31, -10, -9, -39, -5, -33}), frozenset({-13, -28, -9, -39, -2, -33}), frozenset({-32, -11, -9, -39, -2, -33}), frozenset({-31, -11, -39, -6, -4, -33}), frozenset({-28, -12, -39, -6, -5, -34}), frozenset({-13, -28, -39, -6, -37, -2}), frozenset({-28, -12, -39, -6, -4, -34}), frozenset({-28, -11, -9, -39, -37, -2})]
23	itemsets left after V operation 	: [frozenset({-15, -6, 20, -22, -3, -33}), frozenset({-24, -28, -20, -10})]
# of frequent itemsets	: 93
Time of DCI Closed		: 0.14355945587158203
67	itemsets left after T operation 	: [frozenset({-28, -12, -39, -6, -34})]
54	itemsets left after T operation 	: [frozenset({-39, -28, -2})]
47	itemsets left after T operation 	: [frozenset({-24, -15, -22, -38})]
36	itemsets left after T operation 	: [frozenset({-24, -38, -18})]
30	itemsets left after T operation 	: [frozenset({-39, -11, -33})]
22	itemsets left after V operation 	: [frozenset({-31, -5, -10, -9, 11}), frozenset({-39, -11, -33})]
16	itemsets left after T operation 	: [frozenset({-15, -22})]
15	itemsets left after V operation 	: [frozenset({-6, 2, -12, -34}), frozenset({-39, -28, -2})]
13	itemsets left after V operation 	: [frozenset({-33, 39, 38, -10}), frozenset({-39, -28, -2})]
Initial DL				: 36871.42466247525
Final DL				: 3327.9434367414706
Compression (wrt me)	: 0.9097419351922036
Operator Counters		: {'D': 0, 'W': 2, 'V': 4, 'S': 0, 'R': 0, 'T': 8}
Misle Learning Runtime	: 0.5633025169372559

# of frequent itemsets	: 938
Time of DCI Closed		: 0.17352080345153809
28  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-29, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -4, -33}), frozenset({-28, -24, -20, -15, -10, -6, -3, -33}), frozenset({-30, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -7, -37, -2}), frozenset({-28, -24, -20, -15, -10, -6, -5, -34}), frozenset({-28, -24, -20, -15, -10, -9, -37, -2}), frozenset({-28, -24, -20, -15, -10, -8, -2, -33}), frozenset({-28, -24, -23, -18, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -5, -33}), frozenset({-28, -24, -20, -18, -10, -6, -2, -33}), frozenset({-32, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -2}), frozenset({-28, -24, -20, -15, -10, -9, -3, -33}), frozenset({-28, -24, -20, -15, -10, -7, -2, -33}), frozenset({-31, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -22, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -17, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -9, -10, -2, -34}), frozenset({-28, -24, -20, -15, -10, -6, -4, -33}), frozenset({-28, -24, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -4}), frozenset({-28, -27, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -16, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -2, -10, -6, -34}), frozenset({-28, -27, -20, -18, -10, -9, -2, -33})}
DL of initial theory	: 7167.723186525397
655	itemsets left after T operation 	: [frozenset({-24, -15, -20, -10})]
495	itemsets left after T operation 	: [frozenset({-28, -10, -2, -33})]
325	itemsets left after T operation 	: [frozenset({-20, -2, -33})]
167	itemsets left after W operation 	: [frozenset({-24, -28, -20, 38}), frozenset({-15, -13, -9, -38, -5, -33}), frozenset({-10, -9, -38, -37, -19, -2}), frozenset({-15, -6, -11, -38, -3, -33}), frozenset({-15, -11, -7, -38, -5, -34}), frozenset({-15, -12, -2, -9, -38, -34}), frozenset({-10, -9, -38, -5, -34, -17}), frozenset({-6, -10, -37, -38, -5, -18}), frozenset({-10, -7, -38, -3, -18, -33}), frozenset({-15, -6, -11, -38, -36, -2}), frozenset({-16, -10, -8, -38, -5, -33})]
91	itemsets left after T operation 	: [frozenset({-24, -23, -2, -10})]
54	itemsets left after T operation 	: [frozenset({-28, -27, -20, -10, -6, -5, -33})]
42	itemsets left after V operation 	: [frozenset({-31, -7, -4, -19, -34, 15}), frozenset({-32, -2, -6, -37, -18, 15}), frozenset({-24, -15, -20, -10})]
34	itemsets left after V operation 	: [frozenset({2, -27, -6, -5, -20}), frozenset({-28, -2, -10, -33})]
27	itemsets left after V operation 	: [frozenset({-31, -26, 24, -6, -4, -33}), frozenset({-24, -15, -20, -10})]
20	itemsets left after T operation 	: [frozenset({-15, -9})]
14	itemsets left after T operation 	: [frozenset({-10, -9})]
12	itemsets left after T operation 	: [frozenset({-2, -33})]
11	itemsets left after T operation 	: [frozenset({-6, -2})]
9	itemsets left after V operation 	: [frozenset({-15, 2, -11, -38, -3, -33}), frozenset({2, -10, -37, -38, -5, -18}), frozenset({2, -5, -20, -27}), frozenset({-31, 2, -26, 24, -4, -33}), frozenset({-6, -2})]
8	itemsets left after V operation 	: [frozenset({2, -10, -7, -38, -3, -18}), frozenset({-16, 2, -10, -8, -38, -5}), frozenset({-2, -33}), frozenset({-15, 2, -11, -38, -3}), frozenset({-31, 2, -26, 24, -4})]
6	itemsets left after T operation 	: [frozenset({-2})]
2	itemsets left after T operation 	: [frozenset({-7})]
0	itemsets left after T operation 	: [frozenset({-9})]
# of frequent itemsets	: 18
Time of DCI Closed		: 0.14169931411743164
Initial DL				: 36871.42466247525
Final DL				: 3596.0048425808864
Compression (wrt me)	: 0.9024717684358802
Operator Counters		: {'D': 0, 'W': 1, 'V': 5, 'S': 0, 'R': 0, 'T': 12}
Misle Learning Runtime	: 0.4488663673400879

# of frequent itemsets	: 703
Time of DCI Closed		: 0.16663742065429688
28  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-29, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -4, -33}), frozenset({-28, -24, -20, -15, -10, -6, -3, -33}), frozenset({-30, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -7, -37, -2}), frozenset({-28, -24, -20, -15, -10, -6, -5, -34}), frozenset({-28, -24, -20, -15, -10, -9, -37, -2}), frozenset({-28, -24, -20, -15, -10, -8, -2, -33}), frozenset({-28, -24, -23, -18, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -5, -33}), frozenset({-28, -24, -20, -18, -10, -6, -2, -33}), frozenset({-32, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -2}), frozenset({-28, -24, -20, -15, -10, -9, -3, -33}), frozenset({-28, -24, -20, -15, -10, -7, -2, -33}), frozenset({-31, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -22, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -17, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -9, -10, -2, -34}), frozenset({-28, -24, -20, -15, -10, -6, -4, -33}), frozenset({-28, -24, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -4}), frozenset({-28, -27, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -16, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -2, -10, -6, -34}), frozenset({-28, -27, -20, -18, -10, -9, -2, -33})}
DL of initial theory	: 7167.723186525397
473	itemsets left after T operation 	: [frozenset({-24, -28, -20, -10})]
352	itemsets left after T operation 	: [frozenset({-6, -20, -2, -33})]
227	itemsets left after W operation 	: [frozenset({38, -10, -24, -2, -33}), frozenset({-6, -28, -23, -38, -17}), frozenset({-32, -15, -7, -38, -20}), frozenset({-15, -22, -6, -28, -38}), frozenset({-32, -15, -9, -23, -38}), frozenset({-15, -38, -28, -9, -22}), frozenset({-28, -9, -23, -38, -18}), frozenset({-15, -28, -9, -38, -21}), frozenset({-31, -15, -7, -38, -20})]
114	itemsets left after W operation 	: [frozenset({-24, -15, -20, 39}), frozenset({-31, -10, -9, -39, -5, -33}), frozenset({-32, -10, -39, -6, -37, -4}), frozenset({-13, -28, -9, -39, -2, -33}), frozenset({-31, -11, -39, -6, -4, -33}), frozenset({-28, -12, -39, -6, -5, -34}), frozenset({-13, -28, -39, -6, -37, -2}), frozenset({-28, -12, -39, -6, -4, -34}), frozenset({-28, -11, -9, -39, -37, -2})]
60	itemsets left after W operation 	: [frozenset({-28, -9, 40, -2, -33}), frozenset({-40, -39, -13}), frozenset({-26, -10, -40, -20, -17}), frozenset({-15, -27, -10, -40, -23}), frozenset({-27, -10, -40, -20, -18})]
42	itemsets left after V operation 	: [frozenset({-16, -26, 24, -6, -5, -33}), frozenset({-15, -34, -25, 24, -7, -2}), frozenset({-24, -28, -20, -10})]
24	itemsets left after V operation 	: [frozenset({-15, -6, 20, -22, -3, -33}), frozenset({-24, -28, -20, -10})]
# of frequent itemsets	: 112
Time of DCI Closed		: 0.14954733848571777
80	itemsets left after T operation 	: [frozenset({-28, -12, -39, -6, -34})]
64	itemsets left after T operation 	: [frozenset({-38, -28})]
61	itemsets left after T operation 	: [frozenset({-7, -38, -20, -15})]
51	itemsets left after T operation 	: [frozenset({-39, -37, -28, -2})]
43	itemsets left after T operation 	: [frozenset({-39, -6, -4})]
34	itemsets left after V operation 	: [frozenset({-39, -6, -4}), frozenset({4, -28, -12, -34})]
27	itemsets left after T operation 	: [frozenset({-7, -15})]
Initial DL				: 36871.42466247525
Final DL				: 3780.820007820027
Compression (wrt me)	: 0.8974593457554181
Operator Counters		: {'D': 0, 'W': 3, 'V': 3, 'S': 0, 'R': 0, 'T': 8}
Misle Learning Runtime	: 0.5839223861694336

# of frequent itemsets	: 932
Time of DCI Closed		: 0.18630552291870117
30  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-29, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -4, -33}), frozenset({-28, -24, -20, -15, -10, -6, -3, -33}), frozenset({-30, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -36, -2}), frozenset({-28, -24, -20, -15, -10, -7, -37, -2}), frozenset({-28, -24, -20, -15, -10, -6, -5, -34}), frozenset({-28, -24, -20, -15, -10, -9, -37, -2}), frozenset({-28, -24, -20, -15, -10, -8, -2, -33}), frozenset({-28, -24, -23, -18, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -5, -33}), frozenset({-28, -24, -20, -18, -10, -6, -2, -33}), frozenset({-32, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -19, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -2}), frozenset({-28, -24, -20, -15, -10, -9, -3, -33}), frozenset({-28, -24, -20, -15, -10, -7, -2, -33}), frozenset({-31, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -22, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -17, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -9, -10, -2, -34}), frozenset({-28, -24, -20, -15, -10, -6, -4, -33}), frozenset({-28, -24, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -4}), frozenset({-28, -27, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -16, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -2, -10, -6, -34}), frozenset({-28, -27, -20, -18, -10, -9, -2, -33})}
DL of initial theory	: 6952.816749780637
515	itemsets left after T operation 	: [frozenset({-24, -20, -10})]
346	itemsets left after T operation 	: [frozenset({-28, -20, -2, -33})]
255	itemsets left after T operation 	: [frozenset({-24, -23, -10, -9, -2})]
76	itemsets left after T operation 	: [frozenset({-24, -15, -28})]
42	itemsets left after T operation 	: [frozenset({-28, -27, -20, -10, -6, -5, -33})]
24	itemsets left after V operation 	: [frozenset({-32, -27, -10, -9, 28, -19}), frozenset({-31, -11, -24, -6, 28, -17}), frozenset({-20, -28, -2, -33})]
18	itemsets left after V operation 	: [frozenset({-28, -20, -2, -33}), frozenset({2, -27, -10, -6, -5})]
14	itemsets left after V operation 	: [frozenset({-31, -15, -26, 24, -6, -4, -33}), frozenset({-24, -20, -10})]
12	itemsets left after V operation 	: [frozenset({-13, -9, -25, 24, -36, -20, -3}), frozenset({-24, -15, -28})]
# of frequent itemsets	: 24
Time of DCI Closed		: 0.13777732849121094
Initial DL				: 36871.42466247525
Final DL				: 3458.5528946142526
Compression (wrt me)	: 0.9061996403373562
Operator Counters		: {'D': 0, 'W': 0, 'V': 4, 'S': 0, 'R': 0, 'T': 5}
Misle Learning Runtime	: 0.4494509696960449

# of frequent itemsets	: 687
Time of DCI Closed		: 0.1667032241821289
30  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-29, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -4, -33}), frozenset({-28, -24, -20, -15, -10, -6, -3, -33}), frozenset({-30, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -36, -2}), frozenset({-28, -24, -20, -15, -10, -7, -37, -2}), frozenset({-28, -24, -20, -15, -10, -6, -5, -34}), frozenset({-28, -24, -20, -15, -10, -9, -37, -2}), frozenset({-28, -24, -20, -15, -10, -8, -2, -33}), frozenset({-28, -24, -23, -18, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -5, -33}), frozenset({-28, -24, -20, -18, -10, -6, -2, -33}), frozenset({-32, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -19, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -2}), frozenset({-28, -24, -20, -15, -10, -9, -3, -33}), frozenset({-28, -24, -20, -15, -10, -7, -2, -33}), frozenset({-31, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -22, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -17, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -9, -10, -2, -34}), frozenset({-28, -24, -20, -15, -10, -6, -4, -33}), frozenset({-28, -24, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -4}), frozenset({-28, -27, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -16, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -2, -10, -6, -34}), frozenset({-28, -27, -20, -18, -10, -9, -2, -33})}
DL of initial theory	: 6952.816749780637
459	itemsets left after T operation 	: [frozenset({-24, -28, -20, -10})]
318	itemsets left after W operation 	: [frozenset({38, -10, -24, -2, -33}), frozenset({-31, -15, -6, -38, -20}), frozenset({-15, -28, -9, -38, -21}), frozenset({-31, -15, -7, -38, -20}), frozenset({-15, -6, -29, -38, -20}), frozenset({-6, -28, -23, -38, -17}), frozenset({-32, -15, -7, -38, -20}), frozenset({-31, -6, -38, -20, -19}), frozenset({-15, -22, -6, -28, -38}), frozenset({-32, -15, -6, -38, -20}), frozenset({-15, -30, -6, -38, -20}), frozenset({-28, -8, -38, -21, -18}), frozenset({-31, -6, -38, -20, -18}), frozenset({-32, -15, -9, -23, -38}), frozenset({-15, -38, -28, -9, -22}), frozenset({-28, -9, -23, -38, -18})]
196	itemsets left after W operation 	: [frozenset({39, -6, -20, -2, -33}), frozenset({-15, -28, -11, -24, -39}), frozenset({-31, -26, -10, -39, -17}), frozenset({-28, -10, -25, -39, -17}), frozenset({-15, -28, -27, -11, -39}), frozenset({-31, -15, -11, -24, -39}), frozenset({-15, -28, -10, -25, -39}), frozenset({-30, -27, -10, -39, -19}), frozenset({-15, -14, -28, -24, -39}), frozenset({-16, -28, -26, -10, -39})]
150	itemsets left after W operation 	: [frozenset({40, -15, -6, -20}), frozenset({-32, -10, -40, -24, -37, -4}), frozenset({-31, -11, -40, -24, -4, -33}), frozenset({-28, -12, -40, -24, -5, -34}), frozenset({-28, -12, -40, -24, -4, -34}), frozenset({-40, -31, -38}), frozenset({-40, -38, -29}), frozenset({-32, -38, -40}), frozenset({-40, -38, -30})]
96	itemsets left after W operation 	: [frozenset({-15, -28, 41}), frozenset({-22, -10, -41, -24, -6, -3, -33}), frozenset({-25, -34, -10, -41, -7, -20, -2}), frozenset({-9, -27, -10, -41, -23, -2, -33}), frozenset({-9, -11, -41, -24, -37, -20, -2}), frozenset({-38, -41, -21, -9}), frozenset({-38, -6, -22, -41}), frozenset({-38, -22, -41, -9}), frozenset({-24, -39, -11, -41}), frozenset({-11, -39, -27, -41}), frozenset({-39, -41, -10, -25}), frozenset({-24, -39, -14, -41})]
68	itemsets left after V operation 	: [frozenset({-16, -26, 24, -6, -5, -33}), frozenset({-27, -2, -9, 24, -18, -33}), frozenset({-24, -28, -20, -10})]
24	itemsets left after V operation 	: [frozenset({-31, -15, -9, -5, 28, -33}), frozenset({-24, -20, -28, -10})]
9	itemsets left after T operation 	: [frozenset({-37, -20})]
8	itemsets left after W operation 	: [frozenset({42, -10}), frozenset({38, -42, -24, -2, -33}), frozenset({-39, -41, -42, -25}), frozenset({-24, -28, -20, -42}), frozenset({-31, -26, -42, -39, -17}), frozenset({-28, -42, -25, -39, -17}), frozenset({-30, -27, -42, -39, -19}), frozenset({-16, -28, -26, -42, -39}), frozenset({-22, -42, -41, -24, -6, -3, -33}), frozenset({-41, -34, -42, -25, -7, -20, -2}), frozenset({-41, -27, -42, -9, -23, -2, -33})]
# of frequent itemsets	: 153
Time of DCI Closed		: 0.1555194854736328
110	itemsets left after T operation 	: [frozenset({-28, -24, -12, -40, -34})]
103	itemsets left after T operation 	: [frozenset({-7, -38, -20, -15})]
100	itemsets left after T operation 	: [frozenset({-31, -6, -20, -38})]
94	itemsets left after T operation 	: [frozenset({-40, -38})]
83	itemsets left after T operation 	: [frozenset({-39, -42, -17})]
79	itemsets left after T operation 	: [frozenset({-22, -6, -41})]
73	itemsets left after T operation 	: [frozenset({-41, -42, -25})]
61	itemsets left after T operation 	: [frozenset({-32, -15, -9})]
54	itemsets left after T operation 	: [frozenset({-38, -28, -18})]
49	itemsets left after T operation 	: [frozenset({-24, -31, -11})]
42	itemsets left after T operation 	: [frozenset({-39, -11, -41})]
38	itemsets left after V operation 	: [frozenset({-38, -41, -21, -9}), frozenset({-22, 21})]
34	itemsets left after V operation 	: [frozenset({-23, -6, 18, -17}), frozenset({-38, -28, -18})]
32	itemsets left after V operation 	: [frozenset({-32, -15, -9}), frozenset({32, -31, -5, 28, -33})]
20	itemsets left after T operation 	: [frozenset({-16, -26})]
Initial DL				: 36871.42466247525
Final DL				: 3465.7323608833503
Compression (wrt me)	: 0.9060049240676483
Operator Counters		: {'D': 0, 'W': 5, 'V': 5, 'S': 0, 'R': 0, 'T': 14}
Misle Learning Runtime	: 0.7890148162841797

# of frequent itemsets	: 909
Time of DCI Closed		: 0.17162537574768066
27  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-29, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -3, -33}), frozenset({-30, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -7, -37, -2}), frozenset({-28, -24, -20, -15, -10, -6, -5, -34}), frozenset({-28, -24, -20, -15, -10, -9, -37, -2}), frozenset({-28, -24, -20, -15, -10, -8, -2, -33}), frozenset({-28, -24, -23, -18, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -5, -33}), frozenset({-28, -24, -20, -18, -10, -6, -2, -33}), frozenset({-32, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -19, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -2}), frozenset({-28, -24, -20, -15, -10, -9, -3, -33}), frozenset({-28, -24, -20, -15, -10, -7, -2, -33}), frozenset({-31, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -22, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -17, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -9, -10, -2, -34}), frozenset({-28, -24, -20, -15, -10, -6, -4, -33}), frozenset({-28, -24, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -4}), frozenset({-28, -27, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -16, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -2, -10, -6, -34})}
DL of initial theory	: 6899.08981402406
635	itemsets left after T operation 	: [frozenset({-24, -15, -20, -10})]
466	itemsets left after T operation 	: [frozenset({-28, -10, -2, -33})]
281	itemsets left after T operation 	: [frozenset({-28, -20, -33})]
151	itemsets left after T operation 	: [frozenset({-24, -20, -10})]
65	itemsets left after T operation 	: [frozenset({-24, -15, -28, -2})]
35	itemsets left after T operation 	: [frozenset({-24, -23, -10, -9, -2})]
18	itemsets left after V operation 	: [frozenset({-31, -15, -26, -10, -6, -4, 28}), frozenset({-32, -27, -10, -9, 28, -19, -2}), frozenset({-31, -11, -24, -6, 28, -2, -17}), frozenset({-20, -28, -33})]
13	itemsets left after T operation 	: [frozenset({-10, -2, -9})]
10	itemsets left after V operation 	: [frozenset({9, -28, -33}), frozenset({-9, -2, -10})]
7	itemsets left after T operation 	: [frozenset({-28, -33})]
# of frequent itemsets	: 13
Time of DCI Closed		: 0.13341546058654785
Initial DL				: 36871.42466247525
Final DL				: 3480.6211484521195
Compression (wrt me)	: 0.9056011211849263
Operator Counters		: {'D': 0, 'W': 0, 'V': 2, 'S': 0, 'R': 0, 'T': 8}
Misle Learning Runtime	: 0.40725278854370117

# of frequent itemsets	: 676
Time of DCI Closed		: 0.1680128574371338
27  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-29, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -3, -33}), frozenset({-30, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -7, -37, -2}), frozenset({-28, -24, -20, -15, -10, -6, -5, -34}), frozenset({-28, -24, -20, -15, -10, -9, -37, -2}), frozenset({-28, -24, -20, -15, -10, -8, -2, -33}), frozenset({-28, -24, -23, -18, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -5, -33}), frozenset({-28, -24, -20, -18, -10, -6, -2, -33}), frozenset({-32, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -19, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -2}), frozenset({-28, -24, -20, -15, -10, -9, -3, -33}), frozenset({-28, -24, -20, -15, -10, -7, -2, -33}), frozenset({-31, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -22, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -17, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -9, -10, -2, -34}), frozenset({-28, -24, -20, -15, -10, -6, -4, -33}), frozenset({-28, -24, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -4}), frozenset({-28, -27, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -16, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -2, -10, -6, -34})}
DL of initial theory	: 6899.08981402406
478	itemsets left after T operation 	: [frozenset({-24, -28, -20, -10})]
340	itemsets left after T operation 	: [frozenset({-6, -20, -2, -33})]
216	itemsets left after W operation 	: [frozenset({-28, 38, -10, -2, -33}), frozenset({-6, -24, -23, -38, -17}), frozenset({-15, -22, -6, -24, -38}), frozenset({-24, -8, -38, -21, -18}), frozenset({-15, -38, -9, -24, -22}), frozenset({-26, -9, -38, -20, -17}), frozenset({-9, -24, -23, -38, -18}), frozenset({-15, -27, -9, -23, -38}), frozenset({-27, -9, -38, -20, -18})]
51	itemsets left after W operation 	: [frozenset({-24, -15, -20, 39}), frozenset({-32, -10, -39, -6, -37, -4}), frozenset({-13, -28, -9, -39, -2, -33}), frozenset({-32, -10, -7, -39, -2, -33}), frozenset({-32, -11, -9, -39, -2, -33}), frozenset({-31, -11, -39, -6, -4, -33}), frozenset({-28, -12, -39, -6, -5, -34}), frozenset({-13, -28, -39, -6, -37, -2}), frozenset({-28, -11, -9, -39, -37, -2}), frozenset({-31, -10, -9, -39, -5, -33}), frozenset({-31, -10, -7, -39, -2, -33})]
34	itemsets left after V operation 	: [frozenset({-16, -26, 24, -6, -5, -33}), frozenset({-15, -34, -25, 24, -7, -2}), frozenset({-24, -28, -20, -10})]
# of frequent itemsets	: 115
Time of DCI Closed		: 0.14565467834472656
81	itemsets left after T operation 	: [frozenset({-10, -7, -39, -2, -33})]
72	itemsets left after T operation 	: [frozenset({-24, -15, -22, -38})]
64	itemsets left after T operation 	: [frozenset({-39, -13, -28, -2})]
58	itemsets left after T operation 	: [frozenset({-39, -11, -2, -9})]
50	itemsets left after T operation 	: [frozenset({-39, -6, -4})]
38	itemsets left after T operation 	: [frozenset({-20, -26, -9})]
34	itemsets left after T operation 	: [frozenset({-24, -38, -18})]
29	itemsets left after V operation 	: [frozenset({-20, -26, -9}), frozenset({-38, 26, -27, -18})]
25	itemsets left after V operation 	: [frozenset({4, -28, -12, -5, -34}), frozenset({-39, -6, -4})]
Initial DL				: 36871.42466247525
Final DL				: 3388.9161660741433
Compression (wrt me)	: 0.908088277111703
Operator Counters		: {'D': 0, 'W': 2, 'V': 3, 'S': 0, 'R': 0, 'T': 9}
Misle Learning Runtime	: 0.5614900588989258

# of frequent itemsets	: 947
Time of DCI Closed		: 0.1754910945892334
29  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-29, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -4, -33}), frozenset({-28, -24, -20, -15, -10, -6, -3, -33}), frozenset({-30, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -36, -2}), frozenset({-28, -24, -20, -15, -10, -7, -37, -2}), frozenset({-28, -24, -20, -15, -10, -6, -5, -34}), frozenset({-28, -24, -20, -15, -10, -9, -37, -2}), frozenset({-28, -24, -20, -15, -10, -8, -2, -33}), frozenset({-28, -24, -23, -18, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -5, -33}), frozenset({-28, -24, -20, -18, -10, -6, -2, -33}), frozenset({-32, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -19, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -2}), frozenset({-28, -24, -20, -15, -10, -9, -3, -33}), frozenset({-28, -24, -20, -15, -10, -7, -2, -33}), frozenset({-31, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -22, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -17, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -9, -10, -2, -34}), frozenset({-28, -24, -20, -15, -10, -6, -4, -33}), frozenset({-28, -24, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -2, -33}), frozenset({-28, -27, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -16, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -2, -10, -6, -34}), frozenset({-28, -27, -20, -18, -10, -9, -2, -33})}
DL of initial theory	: 7221.449479535583
675	itemsets left after T operation 	: [frozenset({-24, -15, -20, -10})]
492	itemsets left after T operation 	: [frozenset({-28, -10, -2, -33})]
300	itemsets left after T operation 	: [frozenset({-20, -2, -33})]
148	itemsets left after W operation 	: [frozenset({-24, -28, -20, 38}), frozenset({-15, -13, -9, -38, -5, -33}), frozenset({-10, -9, -38, -37, -19, -2}), frozenset({-15, -6, -11, -38, -3, -33}), frozenset({-15, -11, -7, -38, -5, -34}), frozenset({-15, -12, -2, -9, -38, -34}), frozenset({-6, -10, -37, -38, -5, -18}), frozenset({-10, -7, -38, -3, -18, -33}), frozenset({-15, -6, -11, -38, -36, -2}), frozenset({-16, -10, -8, -38, -5, -33})]
73	itemsets left after T operation 	: [frozenset({-24, -23, -10, -9, -2})]
47	itemsets left after T operation 	: [frozenset({-24, -2, -10})]
20	itemsets left after T operation 	: [frozenset({-10, -33})]
18	itemsets left after V operation 	: [frozenset({-31, -7, -4, -19, -34, 15}), frozenset({-24, -15, -20, -10})]
11	itemsets left after T operation 	: [frozenset({-15, -9})]
4	itemsets left after T operation 	: [frozenset({-33})]
0	itemsets left after T operation 	: [frozenset({-7})]
# of frequent itemsets	: 15
Time of DCI Closed		: 0.13530182838439941
4	itemsets left after V operation 	: [frozenset({-24, -10, -2}), frozenset({-15, 2, -20})]
Initial DL				: 36871.42466247525
Final DL				: 3893.9177337179626
Compression (wrt me)	: 0.8943919913764309
Operator Counters		: {'D': 0, 'W': 1, 'V': 2, 'S': 0, 'R': 0, 'T': 9}
Misle Learning Runtime	: 0.4265561103820801

# of frequent itemsets	: 773
Time of DCI Closed		: 0.17209887504577637
29  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-29, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -4, -33}), frozenset({-28, -24, -20, -15, -10, -6, -3, -33}), frozenset({-30, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -36, -2}), frozenset({-28, -24, -20, -15, -10, -7, -37, -2}), frozenset({-28, -24, -20, -15, -10, -6, -5, -34}), frozenset({-28, -24, -20, -15, -10, -9, -37, -2}), frozenset({-28, -24, -20, -15, -10, -8, -2, -33}), frozenset({-28, -24, -23, -18, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -5, -33}), frozenset({-28, -24, -20, -18, -10, -6, -2, -33}), frozenset({-32, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -19, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -2}), frozenset({-28, -24, -20, -15, -10, -9, -3, -33}), frozenset({-28, -24, -20, -15, -10, -7, -2, -33}), frozenset({-31, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -22, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -17, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -9, -10, -2, -34}), frozenset({-28, -24, -20, -15, -10, -6, -4, -33}), frozenset({-28, -24, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -2, -33}), frozenset({-28, -27, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -16, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -2, -10, -6, -34}), frozenset({-28, -27, -20, -18, -10, -9, -2, -33})}
DL of initial theory	: 7221.449479535583
541	itemsets left after T operation 	: [frozenset({-24, -28, -20, -10})]
399	itemsets left after T operation 	: [frozenset({-6, -20, -2, -33})]
251	itemsets left after W operation 	: [frozenset({38, -10, -24, -2, -33}), frozenset({-6, -28, -23, -38, -17}), frozenset({-32, -15, -7, -38, -20}), frozenset({-15, -22, -6, -28, -38}), frozenset({-28, -8, -38, -21, -18}), frozenset({-32, -15, -9, -23, -38}), frozenset({-15, -38, -28, -9, -22}), frozenset({-28, -9, -23, -38, -18}), frozenset({-15, -28, -9, -38, -21}), frozenset({-31, -15, -7, -38, -20})]
117	itemsets left after W operation 	: [frozenset({-24, -15, -20, 39}), frozenset({-31, -10, -9, -39, -5, -33}), frozenset({-32, -10, -39, -6, -37, -4}), frozenset({-13, -28, -9, -39, -2, -33}), frozenset({-32, -11, -9, -39, -2, -33}), frozenset({-31, -11, -39, -6, -4, -33}), frozenset({-28, -12, -39, -6, -5, -34}), frozenset({-13, -28, -39, -6, -37, -2}), frozenset({-28, -12, -39, -6, -4, -34}), frozenset({-28, -11, -9, -39, -37, -2})]
63	itemsets left after W operation 	: [frozenset({-28, -9, 40, -2, -33}), frozenset({-26, -10, -40, -20, -17}), frozenset({-15, -27, -10, -40, -23}), frozenset({-27, -10, -40, -20, -18}), frozenset({-40, -39, -13})]
43	itemsets left after T operation 	: [frozenset({-6, -28})]
29	itemsets left after V operation 	: [frozenset({-15, -34, -25, 24, -7, -2}), frozenset({-24, -28, -20, -10})]
# of frequent itemsets	: 91
Time of DCI Closed		: 0.15138769149780273
60	itemsets left after T operation 	: [frozenset({-7, -38, -20, -15})]
51	itemsets left after T operation 	: [frozenset({-39, -11, -2, -9})]
49	itemsets left after V operation 	: [frozenset({-15, -38, -28, -9, -22}), frozenset({-21, 22})]
38	itemsets left after T operation 	: [frozenset({-39, -6, -4})]
35	itemsets left after T operation 	: [frozenset({-38, -28, -18})]
26	itemsets left after V operation 	: [frozenset({-15, -22, 18, -9}), frozenset({-38, -28, -18})]
Initial DL				: 36871.42466247525
Final DL				: 3738.2720176978883
Compression (wrt me)	: 0.8986133014409285
Operator Counters		: {'D': 0, 'W': 3, 'V': 3, 'S': 0, 'R': 0, 'T': 7}
Misle Learning Runtime	: 0.5732996463775635

# of frequent itemsets	: 902
Time of DCI Closed		: 0.17291665077209473
25  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-29, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -4, -33}), frozenset({-28, -24, -20, -15, -10, -6, -3, -33}), frozenset({-30, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -36, -2}), frozenset({-28, -24, -20, -15, -10, -7, -37, -2}), frozenset({-28, -24, -20, -15, -10, -6, -5, -34}), frozenset({-28, -24, -20, -15, -10, -9, -37, -2}), frozenset({-28, -24, -20, -15, -10, -8, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -5, -33}), frozenset({-28, -24, -20, -18, -10, -6, -2, -33}), frozenset({-32, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -19, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -2}), frozenset({-28, -24, -20, -15, -10, -7, -2, -33}), frozenset({-31, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -22, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -17, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -9, -10, -2, -34}), frozenset({-28, -24, -20, -15, -10, -6, -4, -33}), frozenset({-28, -24, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -2, -33}), frozenset({-28, -27, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -2, -10, -6, -34})}
DL of initial theory	: 7113.996769074043
630	itemsets left after T operation 	: [frozenset({-24, -15, -20, -10})]
446	itemsets left after T operation 	: [frozenset({-28, -20, -2, -33})]
296	itemsets left after W operation 	: [frozenset({38, -10, -24, -2, -33}), frozenset({-30, -6, -38, -20, -19}), frozenset({-32, -9, -38, -20, -18}), frozenset({-15, -28, -9, -23, -38}), frozenset({-15, -28, -7, -38, -21}), frozenset({-32, -9, -23, -38, -19}), frozenset({-15, -28, -23, -38, -7}), frozenset({-28, -9, -23, -38, -19}), frozenset({-31, -15, -9, -23, -38}), frozenset({-31, -9, -38, -20, -18}), frozenset({-15, -38, -28, -9, -22})]
149	itemsets left after W operation 	: [frozenset({-24, -28, -20, 39}), frozenset({-15, -13, -9, -39, -5, -33}), frozenset({-15, -11, -39, -6, -3, -33}), frozenset({-15, -11, -7, -5, -39, -34}), frozenset({-15, -12, -2, -9, -39, -34}), frozenset({-10, -9, -39, -5, -34, -17}), frozenset({-10, -37, -39, -6, -5, -18}), frozenset({-10, -7, -39, -3, -18, -33}), frozenset({-15, -11, -39, -6, -36, -2}), frozenset({-16, -10, -8, -39, -5, -33})]
105	itemsets left after T operation 	: [frozenset({-28, -24, -23, -10, -2})]
56	itemsets left after T operation 	: [frozenset({-15, -6, -10, -33})]
44	itemsets left after V operation 	: [frozenset({-32, -27, -10, -9, 28, -19}), frozenset({-31, -11, -24, -6, 28, -17}), frozenset({-20, -28, -2, -33})]
39	itemsets left after V operation 	: [frozenset({-39, -3, 10, -11}), frozenset({-15, -6, -10, -33})]
31	itemsets left after V operation 	: [frozenset({-31, -7, -4, -19, -34, 15}), frozenset({-24, -15, -20, -10})]
10	itemsets left after T operation 	: [frozenset({-9})]
0	itemsets left after T operation 	: [frozenset({-7})]
# of frequent itemsets	: 39
Time of DCI Closed		: 0.13951969146728516
22	itemsets left after T operation 	: [frozenset({-39, -5, -10})]
13	itemsets left after T operation 	: [frozenset({-15, -10})]
10	itemsets left after T operation 	: [frozenset({-39, -11})]
Clause Pruned	: frozenset({-28, -24, -23, -10, -2})
Initial DL				: 36871.42466247525
Final DL				: 3434.4313804326994
Compression (wrt me)	: 0.9068538465255456
Operator Counters		: {'D': 0, 'W': 2, 'V': 3, 'S': 0, 'R': 0, 'T': 9}
Misle Learning Runtime	: 0.4682433605194092

# of frequent itemsets	: 702
Time of DCI Closed		: 0.16820073127746582
25  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-29, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -4, -33}), frozenset({-28, -24, -20, -15, -10, -6, -3, -33}), frozenset({-30, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -36, -2}), frozenset({-28, -24, -20, -15, -10, -7, -37, -2}), frozenset({-28, -24, -20, -15, -10, -6, -5, -34}), frozenset({-28, -24, -20, -15, -10, -9, -37, -2}), frozenset({-28, -24, -20, -15, -10, -8, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -5, -33}), frozenset({-28, -24, -20, -18, -10, -6, -2, -33}), frozenset({-32, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -19, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -2}), frozenset({-28, -24, -20, -15, -10, -7, -2, -33}), frozenset({-31, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -22, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -17, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -9, -10, -2, -34}), frozenset({-28, -24, -20, -15, -10, -6, -4, -33}), frozenset({-28, -24, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -2, -33}), frozenset({-28, -27, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -2, -10, -6, -34})}
DL of initial theory	: 7113.996769074043
487	itemsets left after T operation 	: [frozenset({-24, -28, -20, -10})]
351	itemsets left after W operation 	: [frozenset({38, -10, -24, -2, -33}), frozenset({-28, -9, -23, -38, -18}), frozenset({-31, -15, -6, -38, -20}), frozenset({-15, -6, -29, -38, -20}), frozenset({-6, -28, -23, -38, -17}), frozenset({-15, -28, -9, -38, -21}), frozenset({-31, -15, -7, -38, -20}), frozenset({-32, -15, -7, -38, -20}), frozenset({-31, -6, -38, -20, -19}), frozenset({-15, -22, -6, -28, -38}), frozenset({-32, -15, -6, -38, -20}), frozenset({-15, -30, -6, -38, -20}), frozenset({-28, -8, -38, -21, -18}), frozenset({-31, -6, -38, -20, -18}), frozenset({-32, -15, -9, -23, -38}), frozenset({-15, -38, -28, -9, -22})]
261	itemsets left after W operation 	: [frozenset({-28, 39, -6, -20, -2, -33}), frozenset({-24, -15, -39, -11}), frozenset({-24, -39, -11, -18}), frozenset({-39, -17, -10, -25}), frozenset({-15, -11, -39, -27}), frozenset({-15, -39, -10, -25}), frozenset({-24, -15, -14, -39}), frozenset({-16, -39, -26, -10})]
208	itemsets left after W operation 	: [frozenset({40, -15, -6, -20}), frozenset({-32, -10, -40, -24, -37, -4}), frozenset({-31, -11, -40, -24, -4, -33}), frozenset({-28, -12, -40, -24, -5, -34}), frozenset({-13, -28, -40, -24, -37, -2}), frozenset({-28, -12, -40, -24, -4, -34}), frozenset({-40, -31, -38}), frozenset({-40, -38, -29}), frozenset({-32, -38, -40}), frozenset({-40, -38, -30})]
110	itemsets left after W operation 	: [frozenset({41, -20, -2, -33}), frozenset({-31, -26, -41, -10, -6, -17}), frozenset({-15, -13, -28, -9, -41, -24}), frozenset({-32, -15, -9, -11, -41, -24}), frozenset({-30, -27, -10, -41, -6, -19}), frozenset({-9, -28, -26, -41, -10, -17}), frozenset({-41, -6, -28, 39})]
77	itemsets left after W operation 	: [frozenset({-15, 42, -28, -9}), frozenset({-27, -10, -42, -23, -2, -33}), frozenset({-11, -42, -24, -37, -20, -2}), frozenset({-24, -13, -42, -41}), frozenset({-38, -21, -42}), frozenset({-38, -22, -42})]
56	itemsets left after V operation 	: [frozenset({-16, -26, 24, -6, -5, -33}), frozenset({-15, -34, -25, 24, -7, -2}), frozenset({-24, -28, -20, -10})]
27	itemsets left after V operation 	: [frozenset({-31, -15, -9, -5, 28, -33}), frozenset({-24, -20, -28, -10})]
26	itemsets left after V operation 	: [frozenset({-15, -6, 20, -22, -3, -33}), frozenset({-24, -28, -20, -10})]
9	itemsets left after T operation 	: [frozenset({-37, -20})]
8	itemsets left after W operation 	: [frozenset({-15, 43}), frozenset({-31, -43, -7, -38, -20}), frozenset({-32, -43, -7, -38, -20}), frozenset({-43, -2, -25, 24, -7, -34}), frozenset({-38, -22, -28, -43, -6}), frozenset({-31, -43, -9, -5, 28, -33}), frozenset({-6, 20, -43, -22, -3, -33}), frozenset({-32, -43, -9, -23, -38}), frozenset({-24, -43, -39, -11}), frozenset({-43, -39, -27, -11}), frozenset({-39, -43, -10, -25}), frozenset({-24, -39, -14, -43}), frozenset({40, -6, -20, -43}), frozenset({-32, -41, -11, -43, -9, -24}), frozenset({42, -28, -43, -9})]
# of frequent itemsets	: 146
Time of DCI Closed		: 0.1466808319091797
101	itemsets left after T operation 	: [frozenset({-28, -24, -12, -40, -34})]
97	itemsets left after T operation 	: [frozenset({-7, -38, -20, -43})]
89	itemsets left after T operation 	: [frozenset({-41, -10, -26, -17})]
86	itemsets left after T operation 	: [frozenset({-31, -38, -6, -20})]
78	itemsets left after T operation 	: [frozenset({-40, -38})]
74	itemsets left after T operation 	: [frozenset({-39, -10, -25})]
68	itemsets left after T operation 	: [frozenset({-22, -6, -43})]
61	itemsets left after T operation 	: [frozenset({-38, -28, -18})]
54	itemsets left after T operation 	: [frozenset({-32, -43, -9})]
48	itemsets left after T operation 	: [frozenset({-24, -39, -11})]
45	itemsets left after T operation 	: [frozenset({-39, -11})]
40	itemsets left after V operation 	: [frozenset({40, -20, 22}), frozenset({-6, -22, -43})]
38	itemsets left after V operation 	: [frozenset({-39, -10, -25}), frozenset({-16, 25, -26})]
28	itemsets left after T operation 	: [frozenset({-16, -26})]
26	itemsets left after V operation 	: [frozenset({-38, -21, -42}), frozenset({-22, 21})]
0	itemsets left after T operation 	: [frozenset({-25})]
Initial DL				: 36871.42466247525
Final DL				: 3177.732907356975
Compression (wrt me)	: 0.9138158360723442
Operator Counters		: {'D': 0, 'W': 6, 'V': 6, 'S': 0, 'R': 0, 'T': 15}
Misle Learning Runtime	: 0.7829575538635254

# of frequent itemsets	: 867
Time of DCI Closed		: 0.17925214767456055
28  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-29, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -3, -33}), frozenset({-30, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -36, -2}), frozenset({-28, -24, -20, -15, -10, -7, -37, -2}), frozenset({-28, -24, -20, -15, -10, -6, -5, -34}), frozenset({-28, -24, -20, -15, -10, -9, -37, -2}), frozenset({-28, -24, -20, -15, -10, -8, -2, -33}), frozenset({-28, -24, -23, -18, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -5, -33}), frozenset({-28, -24, -20, -18, -10, -6, -2, -33}), frozenset({-32, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -19, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -2}), frozenset({-28, -24, -20, -15, -10, -9, -3, -33}), frozenset({-28, -24, -20, -15, -10, -7, -2, -33}), frozenset({-31, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -22, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -17, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -4, -33}), frozenset({-28, -24, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -4}), frozenset({-28, -27, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -16, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -2, -10, -6, -34}), frozenset({-28, -27, -20, -18, -10, -9, -2, -33})}
DL of initial theory	: 6952.816749780637
614	itemsets left after T operation 	: [frozenset({-24, -15, -20, -10})]
444	itemsets left after T operation 	: [frozenset({-28, -10, -2, -33})]
269	itemsets left after T operation 	: [frozenset({-20, -2, -33})]
142	itemsets left after W operation 	: [frozenset({-24, -28, -20, 38}), frozenset({-15, -13, -9, -38, -5, -33}), frozenset({-10, -9, -38, -37, -19, -2}), frozenset({-15, -6, -11, -38, -3, -33}), frozenset({-15, -11, -7, -38, -5, -34}), frozenset({-15, -12, -2, -9, -38, -34}), frozenset({-10, -9, -38, -5, -34, -17}), frozenset({-6, -10, -37, -38, -5, -18}), frozenset({-15, -6, -11, -38, -36, -2})]
82	itemsets left after T operation 	: [frozenset({-24, -23, -2, -10})]
45	itemsets left after T operation 	: [frozenset({-28, -27, -20, -10, -6, -5, -33})]
33	itemsets left after V operation 	: [frozenset({2, -27, -6, -5, -20}), frozenset({-28, -2, -10, -33})]
29	itemsets left after V operation 	: [frozenset({-31, -26, 24, -6, -4, -33}), frozenset({-24, -15, -20, -10})]
23	itemsets left after V operation 	: [frozenset({-32, 23, -6, -37, -20, -18}), frozenset({-24, -23, -2, -10})]
17	itemsets left after T operation 	: [frozenset({-15, -9})]
11	itemsets left after T operation 	: [frozenset({-10, -9})]
9	itemsets left after T operation 	: [frozenset({-2, -33})]
1	itemsets left after T operation 	: [frozenset({-9})]
0	itemsets left after T operation 	: [frozenset({-18})]
# of frequent itemsets	: 23
Time of DCI Closed		: 0.13563179969787598
8	itemsets left after T operation 	: [frozenset({-15, -38, -11})]
Initial DL				: 36871.42466247525
Final DL				: 3601.6627447482574
Compression (wrt me)	: 0.9023183189226278
Operator Counters		: {'D': 0, 'W': 1, 'V': 3, 'S': 0, 'R': 0, 'T': 11}
Misle Learning Runtime	: 0.44420480728149414

# of frequent itemsets	: 746
Time of DCI Closed		: 0.1823279857635498
28  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-29, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -3, -33}), frozenset({-30, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -36, -2}), frozenset({-28, -24, -20, -15, -10, -7, -37, -2}), frozenset({-28, -24, -20, -15, -10, -6, -5, -34}), frozenset({-28, -24, -20, -15, -10, -9, -37, -2}), frozenset({-28, -24, -20, -15, -10, -8, -2, -33}), frozenset({-28, -24, -23, -18, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -5, -33}), frozenset({-28, -24, -20, -18, -10, -6, -2, -33}), frozenset({-32, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -19, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -2}), frozenset({-28, -24, -20, -15, -10, -9, -3, -33}), frozenset({-28, -24, -20, -15, -10, -7, -2, -33}), frozenset({-31, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -22, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -17, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -4, -33}), frozenset({-28, -24, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -4}), frozenset({-28, -27, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -16, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -2, -10, -6, -34}), frozenset({-28, -27, -20, -18, -10, -9, -2, -33})}
DL of initial theory	: 6952.816749780637
521	itemsets left after T operation 	: [frozenset({-24, -28, -20, -10})]
385	itemsets left after T operation 	: [frozenset({-6, -20, -2, -33})]
234	itemsets left after W operation 	: [frozenset({38, -10, -24, -2, -33}), frozenset({-6, -28, -23, -38, -17}), frozenset({-32, -15, -7, -38, -20}), frozenset({-15, -22, -6, -28, -38}), frozenset({-28, -8, -38, -21, -18}), frozenset({-32, -15, -9, -23, -38}), frozenset({-15, -38, -28, -9, -22}), frozenset({-28, -9, -23, -38, -18}), frozenset({-15, -28, -9, -38, -21}), frozenset({-31, -15, -7, -38, -20})]
116	itemsets left after W operation 	: [frozenset({-24, -15, -20, 39}), frozenset({-32, -10, -39, -6, -37, -4}), frozenset({-13, -28, -9, -39, -2, -33}), frozenset({-32, -11, -9, -39, -2, -33}), frozenset({-31, -11, -39, -6, -4, -33}), frozenset({-28, -12, -39, -6, -5, -34}), frozenset({-13, -28, -39, -6, -37, -2}), frozenset({-28, -12, -39, -6, -4, -34}), frozenset({-28, -11, -9, -39, -37, -2})]
62	itemsets left after W operation 	: [frozenset({-28, -9, 40, -2, -33}), frozenset({-40, -39, -13}), frozenset({-26, -10, -40, -20, -17}), frozenset({-15, -27, -10, -40, -23}), frozenset({-27, -10, -40, -20, -18})]
44	itemsets left after V operation 	: [frozenset({-16, -26, 24, -6, -5, -33}), frozenset({-15, -34, -25, 24, -7, -2}), frozenset({-24, -28, -20, -10})]
22	itemsets left after V operation 	: [frozenset({-15, -6, 20, -22, -3, -33}), frozenset({-24, -28, -20, -10})]
# of frequent itemsets	: 112
Time of DCI Closed		: 0.14720630645751953
79	itemsets left after T operation 	: [frozenset({-28, -12, -39, -6, -34})]
72	itemsets left after T operation 	: [frozenset({-7, -38, -20, -15})]
68	itemsets left after T operation 	: [frozenset({-15, -22, -28, -38})]
60	itemsets left after T operation 	: [frozenset({-39, -11, -2, -9})]
50	itemsets left after T operation 	: [frozenset({-39, -6, -4})]
43	itemsets left after T operation 	: [frozenset({-38, -28, -18})]
29	itemsets left after T operation 	: [frozenset({-15, -22})]
27	itemsets left after V operation 	: [frozenset({-40, -39, -13}), frozenset({-28, 40, -6, -37, -2})]
1	itemsets left after T operation 	: [frozenset({-17})]
Initial DL				: 36871.42466247525
Final DL				: 3338.5910205150303
Compression (wrt me)	: 0.9094531591584315
Operator Counters		: {'D': 0, 'W': 3, 'V': 3, 'S': 0, 'R': 0, 'T': 10}
Misle Learning Runtime	: 0.6284687519073486

# of frequent itemsets	: 848
Time of DCI Closed		: 0.1720287799835205
28  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-28, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -4, -33}), frozenset({-28, -24, -20, -15, -10, -6, -3, -33}), frozenset({-30, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -36, -2}), frozenset({-28, -24, -20, -15, -10, -7, -37, -2}), frozenset({-28, -24, -20, -15, -10, -6, -5, -34}), frozenset({-28, -24, -20, -15, -10, -9, -37, -2}), frozenset({-28, -24, -20, -15, -10, -8, -2, -33}), frozenset({-28, -24, -23, -18, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -5, -33}), frozenset({-28, -24, -20, -18, -10, -6, -2, -33}), frozenset({-32, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -19, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -2}), frozenset({-28, -24, -20, -15, -10, -9, -3, -33}), frozenset({-28, -24, -20, -15, -10, -7, -2, -33}), frozenset({-31, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -22, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -17, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -9, -10, -2, -34}), frozenset({-28, -24, -20, -15, -10, -6, -4, -33}), frozenset({-28, -24, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -4}), frozenset({-28, -24, -20, -16, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -2, -10, -6, -34}), frozenset({-28, -27, -20, -18, -10, -9, -2, -33})}
DL of initial theory	: 6845.36274330214
591	itemsets left after T operation 	: [frozenset({-24, -15, -20, -10})]
417	itemsets left after T operation 	: [frozenset({-28, -20, -2, -33})]
261	itemsets left after W operation 	: [frozenset({38, -10, -24, -2, -33}), frozenset({-16, -30, -6, -38, -20}), frozenset({-31, -9, -38, -20, -18}), frozenset({-31, -15, -9, -23, -38}), frozenset({-15, -28, -9, -23, -38}), frozenset({-32, -9, -23, -38, -19}), frozenset({-30, -6, -38, -20, -19}), frozenset({-15, -38, -28, -9, -22}), frozenset({-28, -9, -23, -38, -18}), frozenset({-15, -28, -23, -38, -7})]
142	itemsets left after W operation 	: [frozenset({-24, -28, -20, 39}), frozenset({-10, -37, -39, -6, -5, -18}), frozenset({-15, -13, -9, -39, -5, -33}), frozenset({-15, -11, -7, -5, -39, -34}), frozenset({-10, -9, -39, -37, -19, -2}), frozenset({-15, -11, -39, -6, -36, -2}), frozenset({-16, -10, -8, -39, -5, -33}), frozenset({-10, -7, -39, -3, -18, -33}), frozenset({-15, -12, -2, -9, -39, -34}), frozenset({-10, -9, -39, -5, -34, -17})]
110	itemsets left after T operation 	: [frozenset({-28, -27, -20, -10, -6, -5, -33})]
73	itemsets left after T operation 	: [frozenset({-28, -24, -23, -10, -9, -2})]
38	itemsets left after W operation 	: [frozenset({40, -10, -33}), frozenset({-15, -28, -26, -40, -6, -21, -2}), frozenset({-31, -15, -26, -40, -6, -20, -4}), frozenset({-24, -2, 38, -40}), frozenset({-16, -40, -8, -5, -39}), frozenset({-40, -7, -39, -3, -18}), frozenset({-28, -27, -40, -6, -5, -20})]
31	itemsets left after V operation 	: [frozenset({-31, -7, -4, -19, -34, 15}), frozenset({-32, -2, -6, -37, -18, 15}), frozenset({-24, -15, -20, -10})]
9	itemsets left after T operation 	: [frozenset({-9})]
4	itemsets left after T operation 	: [frozenset({-7})]
# of frequent itemsets	: 47
Time of DCI Closed		: 0.1528029441833496
29	itemsets left after T operation 	: [frozenset({-38, -30, -6, -20})]
22	itemsets left after T operation 	: [frozenset({-40, -15, -6, -26})]
17	itemsets left after T operation 	: [frozenset({-6, -37, -18})]
Initial DL				: 36871.42466247525
Final DL				: 3355.536097673171
Compression (wrt me)	: 0.9089935870829488
Operator Counters		: {'D': 0, 'W': 3, 'V': 1, 'S': 0, 'R': 0, 'T': 9}
Misle Learning Runtime	: 0.49056410789489746

# of frequent itemsets	: 711
Time of DCI Closed		: 0.1669459342956543
28  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-28, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -4, -33}), frozenset({-28, -24, -20, -15, -10, -6, -3, -33}), frozenset({-30, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -36, -2}), frozenset({-28, -24, -20, -15, -10, -7, -37, -2}), frozenset({-28, -24, -20, -15, -10, -6, -5, -34}), frozenset({-28, -24, -20, -15, -10, -9, -37, -2}), frozenset({-28, -24, -20, -15, -10, -8, -2, -33}), frozenset({-28, -24, -23, -18, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -5, -33}), frozenset({-28, -24, -20, -18, -10, -6, -2, -33}), frozenset({-32, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -19, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -2}), frozenset({-28, -24, -20, -15, -10, -9, -3, -33}), frozenset({-28, -24, -20, -15, -10, -7, -2, -33}), frozenset({-31, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -22, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -17, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -9, -10, -2, -34}), frozenset({-28, -24, -20, -15, -10, -6, -4, -33}), frozenset({-28, -24, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -4}), frozenset({-28, -24, -20, -16, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -2, -10, -6, -34}), frozenset({-28, -27, -20, -18, -10, -9, -2, -33})}
DL of initial theory	: 6845.36274330214
498	itemsets left after T operation 	: [frozenset({-24, -28, -20, -10})]
368	itemsets left after T operation 	: [frozenset({-24, -10, -2, -33})]
232	itemsets left after W operation 	: [frozenset({-28, 38, -20, -2, -33}), frozenset({-15, -6, -11, -24, -38}), frozenset({-6, -11, -24, -38, -18}), frozenset({-6, -10, -25, -38, -17}), frozenset({-15, -13, -9, -24, -38}), frozenset({-15, -6, -27, -11, -38}), frozenset({-15, -6, -10, -25, -38}), frozenset({-15, -14, -6, -24, -38}), frozenset({-9, -26, -10, -38, -17}), frozenset({-16, -6, -26, -10, -38}), frozenset({-27, -10, -9, -38, -18})]
89	itemsets left after W operation 	: [frozenset({-24, -15, -20, 39}), frozenset({-31, -10, -9, -39, -5, -33}), frozenset({-32, -10, -39, -6, -37, -4}), frozenset({-32, -11, -9, -39, -2, -33}), frozenset({-31, -11, -39, -6, -2, -33}), frozenset({-31, -11, -39, -6, -4, -33}), frozenset({-28, -12, -39, -6, -5, -34}), frozenset({-13, -28, -39, -6, -37, -2}), frozenset({-28, -12, -39, -6, -4, -34}), frozenset({-28, -11, -9, -39, -37, -2})]
64	itemsets left after T operation 	: [frozenset({-31, -26, -20, -10, -2})]
47	itemsets left after V operation 	: [frozenset({-16, -26, 24, -6, -5, -33}), frozenset({-15, -34, -25, 24, -7, -2}), frozenset({-24, -28, -20, -10})]
29	itemsets left after V operation 	: [frozenset({-15, -28, -27, -9, 24, -23}), frozenset({-24, -10, -2, -33})]
21	itemsets left after V operation 	: [frozenset({-15, -6, 2, -28, -22, -3}), frozenset({-24, -2, -10, -33})]
# of frequent itemsets	: 119
Time of DCI Closed		: 0.14556002616882324
80	itemsets left after T operation 	: [frozenset({-15, -38, -6})]
57	itemsets left after T operation 	: [frozenset({-39, -6})]
49	itemsets left after T operation 	: [frozenset({-39, -11, -2, -9})]
41	itemsets left after V operation 	: [frozenset({-15, -38, -6}), frozenset({-24, -11, -18, 15}), frozenset({-17, 15, -10, -25}), frozenset({-16, 15, -26, -10})]
31	itemsets left after V operation 	: [frozenset({2, -28, 38, -22, -3}), frozenset({-15, -6, -38})]
1	itemsets left after T operation 	: [frozenset({-25})]
Initial DL				: 36871.42466247525
Final DL				: 3755.3754148498524
Compression (wrt me)	: 0.898149435525561
Operator Counters		: {'D': 0, 'W': 2, 'V': 5, 'S': 0, 'R': 0, 'T': 7}
Misle Learning Runtime	: 0.5393929481506348

# of frequent itemsets	: 912
Time of DCI Closed		: 0.17223811149597168
30  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-29, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -4, -33}), frozenset({-28, -24, -20, -15, -10, -6, -3, -33}), frozenset({-30, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -36, -2}), frozenset({-28, -24, -20, -15, -10, -7, -37, -2}), frozenset({-28, -24, -20, -15, -10, -6, -5, -34}), frozenset({-28, -24, -20, -15, -10, -9, -37, -2}), frozenset({-28, -24, -20, -15, -10, -8, -2, -33}), frozenset({-28, -24, -23, -18, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -5, -33}), frozenset({-28, -24, -20, -18, -10, -6, -2, -33}), frozenset({-32, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -19, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -2}), frozenset({-28, -24, -20, -15, -10, -9, -3, -33}), frozenset({-28, -24, -20, -15, -10, -7, -2, -33}), frozenset({-31, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -22, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -17, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -9, -10, -2, -34}), frozenset({-28, -24, -20, -15, -10, -6, -4, -33}), frozenset({-28, -24, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -4}), frozenset({-28, -27, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -16, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -2, -10, -6, -34}), frozenset({-28, -27, -20, -18, -10, -9, -2, -33})}
DL of initial theory	: 7006.543552779903
513	itemsets left after T operation 	: [frozenset({-24, -20, -10})]
331	itemsets left after T operation 	: [frozenset({-28, -10, -2, -33})]
230	itemsets left after T operation 	: [frozenset({-6, -28, -20, -33})]
163	itemsets left after T operation 	: [frozenset({-24, -23, -10, -9, -2})]
62	itemsets left after W operation 	: [frozenset({-15, -28, 38, -24, -20}), frozenset({-13, -9, -38, -5, -33}), frozenset({-11, -7, -38, -5, -34}), frozenset({-12, -9, -38, -2, -33}), frozenset({-6, -11, -38, -36, -2})]
37	itemsets left after T operation 	: [frozenset({-33, -2, -9})]
25	itemsets left after T operation 	: [frozenset({-24, -23, -2, -10})]
19	itemsets left after V operation 	: [frozenset({-31, -11, -24, 28, -2, -17}), frozenset({-6, -20, -28, -33})]
15	itemsets left after V operation 	: [frozenset({9, -28, -10}), frozenset({-9, -2, -33})]
13	itemsets left after V operation 	: [frozenset({-24, -20, -10}), frozenset({-15, 10, -28, 38})]
10	itemsets left after V operation 	: [frozenset({-24, -20, -10}), frozenset({-23, 20, -2})]
9	itemsets left after V operation 	: [frozenset({2, -38, -13, -5}), frozenset({-33, -2, -9})]
# of frequent itemsets	: 28
Time of DCI Closed		: 0.15132975578308105
13	itemsets left after T operation 	: [frozenset({-38, -5})]
3	itemsets left after T operation 	: [frozenset({-36})]
Initial DL				: 36592.738077447066
Final DL				: 3569.821990315391
Compression (wrt me)	: 0.9024445237533195
Operator Counters		: {'D': 0, 'W': 1, 'V': 5, 'S': 0, 'R': 0, 'T': 8}
Misle Learning Runtime	: 0.4466228485107422

# of frequent itemsets	: 740
Time of DCI Closed		: 0.1681077480316162
30  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-29, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -4, -33}), frozenset({-28, -24, -20, -15, -10, -6, -3, -33}), frozenset({-30, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -36, -2}), frozenset({-28, -24, -20, -15, -10, -7, -37, -2}), frozenset({-28, -24, -20, -15, -10, -6, -5, -34}), frozenset({-28, -24, -20, -15, -10, -9, -37, -2}), frozenset({-28, -24, -20, -15, -10, -8, -2, -33}), frozenset({-28, -24, -23, -18, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -5, -33}), frozenset({-28, -24, -20, -18, -10, -6, -2, -33}), frozenset({-32, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -19, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -2}), frozenset({-28, -24, -20, -15, -10, -9, -3, -33}), frozenset({-28, -24, -20, -15, -10, -7, -2, -33}), frozenset({-31, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -22, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -17, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -9, -10, -2, -34}), frozenset({-28, -24, -20, -15, -10, -6, -4, -33}), frozenset({-28, -24, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -4}), frozenset({-28, -27, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -16, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -2, -10, -6, -34}), frozenset({-28, -27, -20, -18, -10, -9, -2, -33})}
DL of initial theory	: 7006.543552779903
508	itemsets left after T operation 	: [frozenset({-24, -28, -20, -10})]
352	itemsets left after W operation 	: [frozenset({38, -10, -24, -2, -33}), frozenset({-31, -15, -6, -38, -20}), frozenset({-15, -28, -9, -38, -21}), frozenset({-31, -15, -7, -38, -20}), frozenset({-15, -6, -29, -38, -20}), frozenset({-6, -28, -23, -38, -17}), frozenset({-32, -15, -7, -38, -20}), frozenset({-31, -6, -38, -20, -19}), frozenset({-15, -22, -6, -28, -38}), frozenset({-32, -15, -6, -38, -20}), frozenset({-15, -30, -6, -38, -20}), frozenset({-28, -8, -38, -21, -18}), frozenset({-31, -6, -38, -20, -18}), frozenset({-32, -15, -9, -23, -38}), frozenset({-15, -38, -28, -9, -22}), frozenset({-28, -9, -23, -38, -18})]
151	itemsets left after W operation 	: [frozenset({-33, -20, -2, 39}), frozenset({-15, -28, -11, -24, -39, -6}), frozenset({-31, -26, -10, -39, -6, -17}), frozenset({-28, -11, -24, -39, -6, -18}), frozenset({-15, -13, -28, -9, -24, -39}), frozenset({-15, -28, -27, -11, -39, -6}), frozenset({-32, -15, -11, -9, -24, -39}), frozenset({-31, -15, -11, -24, -39, -6}), frozenset({-15, -28, -10, -25, -39, -6}), frozenset({-30, -27, -10, -39, -6, -19}), frozenset({-28, -26, -9, -10, -39, -17}), frozenset({-16, -28, -26, -10, -39, -6}), frozenset({-28, -27, -10, -9, -39, -18})]
117	itemsets left after W operation 	: [frozenset({40, -15, -6, -20}), frozenset({-32, -10, -40, -24, -37, -4}), frozenset({-13, -28, -40, -24, -37, -2}), frozenset({-28, -12, -40, -24, -4, -34}), frozenset({-40, -31, -38}), frozenset({-40, -38, -29}), frozenset({-32, -38, -40}), frozenset({-40, -38, -30})]
68	itemsets left after W operation 	: [frozenset({-15, -28, 41}), frozenset({-22, -10, -41, -24, -6, -3, -33}), frozenset({-25, -34, -10, -41, -7, -20, -2}), frozenset({-9, -27, -10, -41, -23, -2, -33}), frozenset({-9, -11, -41, -24, -37, -20, -2}), frozenset({-38, -41, -21, -9}), frozenset({-38, -6, -22, -41}), frozenset({-38, -22, -41, -9}), frozenset({-11, -41, -24, -39, -6}), frozenset({-13, -9, -41, -24, -39}), frozenset({-27, -11, -41, -39, -6}), frozenset({-41, -10, -25, -39, -6})]
36	itemsets left after V operation 	: [frozenset({-16, -26, 24, -6, -5, -33}), frozenset({-24, -28, -20, -10})]
26	itemsets left after V operation 	: [frozenset({-31, -15, -9, -5, 28, -33}), frozenset({-24, -20, -28, -10})]
12	itemsets left after T operation 	: [frozenset({-37, -20})]
11	itemsets left after W operation 	: [frozenset({-6, 42, -33}), frozenset({-10, -41, -24, -42, -22, -3}), frozenset({-16, -26, -42, 24, -5})]
# of frequent itemsets	: 152
Time of DCI Closed		: 0.14856791496276855
85	itemsets left after W operation 	: [frozenset({-39, -6, 43}), frozenset({-43, -11, -27, -41}), frozenset({-25, -43, -10, -41}), frozenset({-31, -43, -26, -10, -17}), frozenset({-28, -11, -43, -24, -18}), frozenset({-31, -15, -11, -43, -24}), frozenset({-30, -27, -43, -10, -19}), frozenset({-16, -28, -43, -26, -10}), frozenset({-24, -11, -43, -41})]
82	itemsets left after T operation 	: [frozenset({-7, -38, -20, -15})]
80	itemsets left after T operation 	: [frozenset({-31, -38, -6, -20})]
74	itemsets left after T operation 	: [frozenset({-40, -38})]
62	itemsets left after T operation 	: [frozenset({-41, -10, -25})]
60	itemsets left after T operation 	: [frozenset({-38, -22, -41})]
51	itemsets left after T operation 	: [frozenset({-32, -15, -9})]
44	itemsets left after T operation 	: [frozenset({-38, -28, -18})]
34	itemsets left after V operation 	: [frozenset({-23, -6, 18, -17}), frozenset({-38, -28, -18})]
31	itemsets left after V operation 	: [frozenset({32, -31, -5, 28, -33}), frozenset({-32, -15, -9})]
28	itemsets left after T operation 	: [frozenset({-22, -41})]
20	itemsets left after T operation 	: [frozenset({-16, -26})]
1	itemsets left after T operation 	: [frozenset({-17})]
Clause Pruned	: frozenset({-6, 42, -33})
Initial DL				: 36592.738077447066
Final DL				: 3441.528689451327
Compression (wrt me)	: 0.9059505008297694
Operator Counters		: {'D': 0, 'W': 6, 'V': 4, 'S': 0, 'R': 0, 'T': 12}
Misle Learning Runtime	: 0.7495355606079102

# of frequent itemsets	: 978
Time of DCI Closed		: 0.17504096031188965
27  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-29, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -4, -33}), frozenset({-28, -24, -20, -15, -10, -6, -3, -33}), frozenset({-30, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -36, -2}), frozenset({-28, -24, -20, -15, -10, -7, -37, -2}), frozenset({-28, -24, -20, -15, -10, -6, -5, -34}), frozenset({-28, -24, -20, -15, -10, -9, -37, -2}), frozenset({-28, -24, -23, -18, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -5, -33}), frozenset({-28, -24, -20, -18, -10, -6, -2, -33}), frozenset({-32, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -19, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -2}), frozenset({-28, -24, -20, -15, -10, -9, -3, -33}), frozenset({-28, -24, -20, -15, -10, -7, -2, -33}), frozenset({-31, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -17, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -9, -10, -2, -34}), frozenset({-28, -24, -20, -15, -10, -6, -4, -33}), frozenset({-28, -24, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -4}), frozenset({-28, -24, -20, -16, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -2, -10, -6, -34}), frozenset({-28, -27, -20, -18, -10, -9, -2, -33})}
DL of initial theory	: 7275.17565006261
544	itemsets left after T operation 	: [frozenset({-24, -20, -10})]
361	itemsets left after T operation 	: [frozenset({-28, -20, -2, -33})]
258	itemsets left after T operation 	: [frozenset({-24, -23, -10, -9, -2})]
99	itemsets left after T operation 	: [frozenset({-24, -15, -28})]
65	itemsets left after T operation 	: [frozenset({-28, -27, -20, -10, -6, -5, -33})]
35	itemsets left after T operation 	: [frozenset({-26, -15, -10, -6, -33})]
21	itemsets left after V operation 	: [frozenset({-32, -27, -10, -9, 28, -19}), frozenset({-31, -11, -24, -6, 28, -17}), frozenset({-20, -28, -2, -33})]
14	itemsets left after V operation 	: [frozenset({-28, -20, -2, -33}), frozenset({2, -27, -10, -6, -5})]
12	itemsets left after T operation 	: [frozenset({-15, -28})]
9	itemsets left after V operation 	: [frozenset({-24, -20, -10}), frozenset({-23, 20, -2, -9})]
# of frequent itemsets	: 20
Time of DCI Closed		: 0.13872075080871582
8	itemsets left after T operation 	: [frozenset({-27, -10})]
Initial DL				: 36978.07011135439
Final DL				: 3593.5393241794
Compression (wrt me)	: 0.9028197168387114
Operator Counters		: {'D': 0, 'W': 0, 'V': 3, 'S': 0, 'R': 0, 'T': 8}
Misle Learning Runtime	: 0.4284322261810303

# of frequent itemsets	: 706
Time of DCI Closed		: 0.16679859161376953
27  violations of +ve partial assignments found for the learned theory.
Violating Clauses	:{frozenset({-29, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -4, -33}), frozenset({-28, -24, -20, -15, -10, -6, -3, -33}), frozenset({-30, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -36, -2}), frozenset({-28, -24, -20, -15, -10, -7, -37, -2}), frozenset({-28, -24, -20, -15, -10, -6, -5, -34}), frozenset({-28, -24, -20, -15, -10, -9, -37, -2}), frozenset({-28, -24, -23, -18, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -5, -33}), frozenset({-28, -24, -20, -18, -10, -6, -2, -33}), frozenset({-32, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -19, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -2}), frozenset({-28, -24, -20, -15, -10, -9, -3, -33}), frozenset({-28, -24, -20, -15, -10, -7, -2, -33}), frozenset({-31, -24, -20, -15, -10, -6, -2, -33}), frozenset({-28, -24, -20, -17, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -9, -10, -2, -34}), frozenset({-28, -24, -20, -15, -10, -6, -4, -33}), frozenset({-28, -24, -20, -15, -11, -6, -2, -33}), frozenset({-28, -24, -20, -15, -10, -9, -2, -33}), frozenset({-28, -24, -20, -15, -10, -6, -37, -4}), frozenset({-28, -24, -20, -16, -10, -6, -2, -33}), frozenset({-28, -24, -20, -15, -2, -10, -6, -34}), frozenset({-28, -27, -20, -18, -10, -9, -2, -33})}
DL of initial theory	: 7275.17565006261
465	itemsets left after T operation 	: [frozenset({-24, -28, -20, -10})]
330	itemsets left after W operation 	: [frozenset({38, -10, -20, -2, -33}), frozenset({-16, -6, -28, -26, -38}), frozenset({-31, -15, -6, -24, -38}), frozenset({-28, -27, -9, -38, -18}), frozenset({-31, -15, -24, -7, -38}), frozenset({-15, -6, -29, -24, -38}), frozenset({-31, -6, -26, -38, -17}), frozenset({-6, -28, -25, -38, -17}), frozenset({-32, -15, -24, -7, -38}), frozenset({-31, -6, -24, -38, -19}), frozenset({-32, -15, -6, -24, -38}), frozenset({-15, -6, -28, -25, -38}), frozenset({-30, -6, -27, -38, -19}), frozenset({-15, -30, -6, -24, -38}), frozenset({-31, -6, -24, -38, -18}), frozenset({-28, -26, -9, -38, -17})]
196	itemsets left after T operation 	: [frozenset({-24, -28, -2, -33})]
102	itemsets left after T operation 	: [frozenset({-24, -15, -6})]
68	itemsets left after T operation 	: [frozenset({-32, -24, -15, -9, -2, -33})]
50	itemsets left after V operation 	: [frozenset({-16, -26, 24, -6, -5, -33}), frozenset({-15, -34, -25, 24, -7, -2}), frozenset({-24, -28, -20, -10})]
28	itemsets left after V operation 	: [frozenset({-31, -10, -9, 6, -5, -20, -33}), frozenset({-31, -38, -7, 6}), frozenset({-32, -7, -38, 6}), frozenset({-24, -15, -6}), frozenset({-32, 6, -9, -2, -33})]
23	itemsets left after V operation 	: [frozenset({-31, -38, -18, 15}), frozenset({-24, -15, -6}), frozenset({-31, -38, -19, 15})]
13	itemsets left after V operation 	: [frozenset({-24, -15, -6}), frozenset({24, -38, -28, -25})]
# of frequent itemsets	: 69
Time of DCI Closed		: 0.15567445755004883
36	itemsets left after T operation 	: [frozenset({-31, -38})]
30	itemsets left after T operation 	: [frozenset({-16, -6, -26})]
24	itemsets left after T operation 	: [frozenset({-38, -28, -17})]
16	itemsets left after T operation 	: [frozenset({-32, 6})]
12	itemsets left after T operation 	: [frozenset({24, -25})]
Initial DL				: 36978.07011135439
Final DL				: 3441.4425652985815
Compression (wrt me)	: 0.9069328779210178
Operator Counters		: {'D': 0, 'W': 1, 'V': 4, 'S': 0, 'R': 0, 'T': 9}
Misle Learning Runtime	: 0.5147848129272461

Running	: ./Resources/Krimp/bin/krimp	/home/arcchitjain/Documents/Mistle/classify.conf
krimp_accuracy = 0.7109
mistle_fold_accuracy_list = [0.5584415584415584, 0.38961038961038963, 0.3116883116883117, 0.7532467532467533, 0.6623376623376623, 0.6883116883116883, 0.7272727272727273, 0.38961038961038963, 0.7012987012987013, 0.64]
mistle_attempted_list = [77, 77, 77, 77, 77, 77, 77, 77, 77, 75]
weighted sum = 447.0
weighted_mistle_accuracy = 0.58203125
mistle_atempted = 768
mistle_coverage = 1.0
naive_mistle_attempted_list = 0.5821818181818181
Mistle MDL Selections = ['T-', 'T+', 'T+', 'T-', 'T-', 'T-', 'T-', 'T+', 'T-', 'T-']
krimp_time = 4.001887321472168
mistle_time = 10.73206639289856
krimp_accuracy_dict = {'pima.dat': '0.7109'}
mistle_accuracy_dict = {'pima.dat': (0.58203125, 768, 1.0)}
