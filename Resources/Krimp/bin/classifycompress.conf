### Compress for classification configuration file ###

taskClass = classify
# Command
command = classifycompress
# TakeItEasy(tm) -- ( 0 | 1 ) If enabled, process runs with low priority.
takeItEasy = 0

# Full data path; don't forget to end with a (back)slash. Read from datadir.conf if empty.
#dataDir = 

## Input frequent itemset collection to be used as candidates (also determines database)
# Name
iscName = chess_small_copy-closed-200d

## Seed for randomisation of partitioning (set to 0 to use current time as seed)
seed = 0

## Classification
# Class definition (define which items to regard as class labels; multi-class transactions not allowed!)
# (Only required when class definition is not given in the original database; option overrides any definition given there)
classDefinition = 1 2

## Preferred datatype ( uint16 | bai32 | bm128 (default) )
# Refer to compress.conf for more info on this
#datatype = bai32

## Parallel or not
# Set the number of threads that Krimp may use
numThreads = 1 


## ---------- 'Expert' settings :) --------- ##

## Compression settings
# Algorithm name
algo = coverpartial

# Report after every [reportsup] support change in the candidate list
reportSup = 10
# Report at least every reportcnd number of candidates (0 = ignore)
reportCnd = 0

## Pruning
# On-the-fly prune strategy  ( nop = no pruning, pop = post-pruning )
pruneStrategy = pop

## Cross-validation (usually 10-fold CV)
# Number of folds ([2,*] or 1 for training = test)
numFolds = 10

# Perform all code table matching schemes (currently meaning: both absolute && relative CT matching)
allMatchings = 1

## CT matching (only relevant if allMatchings == 0)
# Try to match codetables relative to max.sup (set to 0 to use absolute matching by reportSup)
classifyPercentage = 0

## Storage settings
iscStoreType = bisc
iscChunkType = bisc
